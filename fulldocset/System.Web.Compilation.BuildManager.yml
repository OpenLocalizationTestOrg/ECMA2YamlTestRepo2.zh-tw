### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildManager
  id: BuildManager
  children:
  - System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  - System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  - System.Web.Compilation.BuildManager.BatchCompilationEnabled
  - System.Web.Compilation.BuildManager.CodeAssemblies
  - System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  - System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.BuildManager.GetGlobalAsaxType
  - System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetReferencedAssemblies
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  - System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  - System.Web.Compilation.BuildManager.IsPrecompiledApp
  - System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  - System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  - System.Web.Compilation.BuildManager.TargetFramework
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildManager
  fullName: System.Web.Compilation.BuildManager
  type: Class
  summary: "提供一組方法，以協助管理 ASP.NET 應用程式的編譯。"
  remarks: "BuildManager 類別管理的程序編譯的組件和應用程式的頁面。 它是密封的類別，而且無法被繼承。       BuildManager 包含靜態成員，可以提供已編譯的組件的相關資訊。"
  syntax:
    content: public sealed class BuildManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  id: AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定字串，代表用來協助您判斷是否需要乾淨的組建的組建管理員相依性。"
  remarks: "必須呼叫此方法期間`Application_PreStartInit`階段的應用程式。"
  syntax:
    content: public static void AddCompilationDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "字串，代表相依性。"
  overload: System.Web.Compilation.BuildManager.AddCompilationDependency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependency </code>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫此方法之後<xref uid=&quot;langword_csharp_Application_PreStartInit&quot; name=&quot;Application_PreStartInit&quot; href=&quot;&quot;></xref>階段的應用程式。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  id: AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "將組件加入至應用程式的整組參考的組件。"
  remarks: "呼叫這個方法相當於將組件加入至應用程式層級的 Web.config 檔案。 必須呼叫此方法期間`Application_PreStartInit`階段的應用程式。       <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>方法會傳回一組由組態檔的組件和任何使用這個方法所加入的組件。</xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>       如果嘗試加入已加入的組件，則會忽略重複的項目。       之前，必須呼叫此方法`Application_Start`Global.asax 檔案中的事件，就會發生。"
  syntax:
    content: public static void AddReferencedAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "要加入的組件。"
  overload: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> assembly </code>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空白。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "之前未呼叫此方法<xref uid=&quot;langword_csharp_Application_Start&quot; name=&quot;Application_Start&quot; href=&quot;&quot;> </xref> Global.asax 檔案中的事件時發生。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  id: BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得或設定值，指出是否已啟用批次編譯。"
  remarks: "此屬性可讓您開啟或關閉的批次編譯以程式設計的方式。 它會對應至`batch`屬性`compilation`Web.config 檔案中的項目。 如需詳細資訊，請參閱[compilation 元素 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/7c319582-074a-4d2a-a787-03b9d4541c12)。       這個屬性可以設定只有在`PreApplicationStart`方法。 如需有關`PreApplicationStart`方法，請參閱<xref:System.Web.PreApplicationStartMethodAttribute>.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static Nullable<bool> BatchCompilationEnabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果永遠啟用批次編譯， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果永遠不會啟用批次編譯，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果編譯設定的判定方式從組態檔。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "屬性中未設定<xref uid=&quot;langword_csharp_PreApplicationStart&quot; name=&quot;PreApplicationStart&quot; href=&quot;&quot;></xref>方法。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  id: CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得建立 App_Code 目錄中的組件清單。"
  syntax:
    content: public static System.Collections.IList CodeAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>集合，其中包含從 App_Code 目錄所建立的組件。</xref:System.Collections.IList>"
  overload: System.Web.Compilation.BuildManager.CodeAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  id: CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "建立快取的檔案。"
  remarks: "這個方法和<xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>方法可讓您執行應用程式在部分信任環境中的網域重新啟動時持續發生，快取。</xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> 它會使用 MVC 架構控制器查閱快取結果。       快取資料，您將寫入<xref:System.IO.Stream>這個方法所傳回的物件。</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream CreateCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "要建立的檔案名稱。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>物件新的檔案。</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.CreateCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  id: CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "處理檔案，提供虛擬路徑，並建立執行個體的結果。"
  remarks: "CreateInstanceFromVirtualPath 方法適用於編譯和非編譯網頁。"
  syntax:
    content: public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);
    parameters:
    - id: virtualPath
      type: System.String
      description: "要建立的執行個體的檔案虛擬路徑。"
    - id: requiredBaseType
      type: System.Type
      description: "定義要建立物件的基底型別。"
    return:
      type: System.Object
      description: "<xref:System.Object>，代表已處理的檔案執行個體。</xref:System.Object>"
  overload: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回設定之虛擬路徑，如果路徑是在 ASP.NET 快取中的組建相依性。"
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求的內容。"
    - id: virtualPath
      type: System.String
      description: "設定用來判斷組建相依性的虛擬路徑。"
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref>會儲存在快取中的物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;></xref>無法從快取擷取物件。"
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回設定的虛擬路徑如果路徑位於 ASP.NET 快取，即使內容不是最新的組建相依性。"
  remarks: "如果`ensureIsUpToDate`參數值設定為`true`，GetCachedBuildDependencySet 方法多載的行為類似<xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>方法多載。</xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> 這兩個多載會傳回目前的組建相依性，如果有的話，請設定，否則它們會傳回`null`。       不過，GetCachedBuildDependencySet 方法多載包含選項來傳回任何建置相依性集合，可使用，即使過期的一個。 如果`ensureIsUpToDate`參數值設定為`false`，則方法會傳回任何可用的組建相依性集合。"
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求的內容。"
    - id: virtualPath
      type: System.String
      description: "設定用來判斷組建相依性的虛擬路徑。"
    - id: ensureIsUpToDate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定只有目前的組建相依性集合傳回，或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>可指示應該傳回任何可用的組建相依性集合項目，即使它不是最新。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref>會儲存在快取中的物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;></xref>無法從快取擷取物件。"
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  id: GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "將檔案編譯為使用指定的虛擬路徑的組件。"
  syntax:
    content: public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "若要建置的組件虛擬路徑。"
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>會從指定的虛擬路徑，可能是記憶體或磁碟快取編譯的物件。</xref:System.Reflection.Assembly>"
  overload: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  id: GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯檔案中，提供虛擬路徑，並傳回組建提供者會保存在快取的自訂字串。"
  syntax:
    content: public static string GetCompiledCustomString (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "若要建置的檔案虛擬路徑。"
    return:
      type: System.String
      description: "所傳回的字串<xref:System.Web.Compilation.BuildProvider.GetCustomString*>方法，會快取至磁碟或記憶體。</xref:System.Web.Compilation.BuildProvider.GetCustomString*>"
  overload: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "編譯檔案中，提供虛擬路徑，並傳回編譯的型別。"
  syntax:
    content: public static Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "類型中建立虛擬路徑。"
    return:
      type: System.Type
      description: "<xref:System.Type>物件，代表編譯虛擬路徑產生的型別</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetCompiledType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "編譯的虛擬路徑時，就會發生錯誤。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  id: GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得物件，表示 Global.asax 檔案編譯的型別。"
  remarks: "如果已編譯的 Global.asax 檔案之前，會呼叫這個方法，則會擲回例外狀況。"
  syntax:
    content: public static Type GetGlobalAsaxType ();
    parameters: []
    return:
      type: System.Type
      description: "Global.asax 檔案編譯的型別表示的物件。"
  overload: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試編譯 Global.asax 頁面之前呼叫這個方法。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  id: GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得指定的虛擬路徑的物件 factory。"
  remarks: "這個方法會傳回物件，可讓您藉由編譯的虛擬路徑產生的類型。 它會傳回物件，不論是否已先行編譯網站。"
  syntax:
    content: public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬路徑。"
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>虛擬路徑不存在; 如果擲回錯誤否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果虛擬路徑不存在和`throwIfNotFound`是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.Util.IWebObjectFactory
      description: "物件 factory。"
  overload: System.Web.Compilation.BuildManager.GetObjectFactory*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "虛擬路徑不存在。       -或者-較高層級的例外狀況已存在時呼叫這個方法。       -或者-編譯處理程序建立最上層的檔案時即已呼叫這個方法。       -或-這是先行編譯的應用程式和快取中找不到虛擬路徑。       -或者-偵測到循環參考。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "傳回所有頁面編譯都必須都參考的組件參考的清單。"
  remarks: "從 GetReferencedAssemblies 方法傳回集合中的組件包含在 Web.config 檔案、 從自訂程式碼在 App_Code 目錄中，所建立的組件與其他最上層資料夾中的組件的項目中指定的組件。       .NET Framework 3.5 版中引進 GetReferencedAssemblies。  如需詳細資訊，請參閱[.NET Framework 版本和相依性](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Collections.ICollection GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>組件參考的集合。</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "尋找在最上層組件或在組態中，定義的組件中的型別，並選擇性地在失敗時擲回例外狀況。"
  remarks: "最上層組件參考 Global.asax 檔案中，或 App_GlobalResources、 App_WebReferences、 App_Code 或 App_Browsers 目錄中的檔案。"
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "型別的名稱。"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果擲回例外狀況<xref:System.Type>物件無法產生型別名稱，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表所要求<code> typeName </code>參數。</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "在最上層的組件，或定義在組態中，使用不區分大小寫的搜尋，並選擇性地在失敗時擲回例外狀況的組件中尋找型別。"
  remarks: "最上層組件參考 Global.asax 檔案中，或 App_GlobalResources、 App_WebReferences、 App_Code 或 App_Browsers 目錄中的檔案。"
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "型別的名稱。"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果擲回例外狀況<xref:System.Type>無法產生型別名稱，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Type>"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果`typeName`區分大小寫，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Type
      description: "A<xref:System.Type>物件，代表所要求<code> typeName </code>參數。</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  id: GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "提供指定的虛擬路徑的虛擬路徑相依性的集合。"
  syntax:
    content: public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "用來判斷相依性的虛擬路徑。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，要快取相依性的虛擬路徑的虛擬路徑所表示的檔案集合</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  id: IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得值，指定是否要先行編譯應用程式。"
  syntax:
    content: public static bool IsPrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應用程式是先行編譯。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  id: IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得值，指定是否在應用程式先行編譯為可更新。"
  syntax:
    content: public static bool IsUpdatablePrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應用程式是先行編譯為可更新。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  id: ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "讀取快取的檔案。"
  remarks: "這個方法和<xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>方法可讓您執行應用程式在部分信任環境中的網域重新啟動時持續發生，快取。</xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> 它會使用 MVC 架構控制器查閱快取結果。       若要擷取快取的資料，您讀取<xref:System.IO.Stream>這個方法所傳回的物件。</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream ReadCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "要讀取的檔案名稱。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>檔案物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案不存在。</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.ReadCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.TargetFramework
  id: TargetFramework
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得目前網站的.NET framework 目標版本。"
  remarks: "此屬性支援 ASP.NET 多目標功能，可讓您使用最新版[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]開發會執行與舊版本的.NET framework 的應用程式。 組建提供者可以使用這個屬性，並確定在提供者產生程式碼適用於.NET Framework 目標版本。 例如，您可以產生不同的程式碼取決於是否網站目標[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]或[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]。 如需多目標功能的詳細資訊，請參閱[ASP.NET Web 專案的.NET Framework 多目標](~/add/includes/ajax-current-ext-md.md)。       如果網站沒有 Web.config 檔，ASP.NET 會假設目標 framework 版本為 IIS 應用程式集區下執行的站台相關聯的版本。 檔案系統網站上執行 Visual Studio 中，預設的 framework 版本是最新版[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。       如果網站沒有 Web.config 檔，ASP.NET 會檢查 Web.config 檔案來判斷目標架構。      ## 目標.NET Framework 2.0 的 Web 應用程式為目標的網站[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]好像目標編譯[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]。 在建置程序不會區分[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]和[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]因為其中一個版本為目標時，Web.config 檔案並不表示編譯器版本或目標 framework。 (如[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]，Web.config 檔案指定的編譯器版本，以及[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]，Web.config 檔案中指定的目標 framework。)因此，針對 Web 應用程式目標[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]，這個屬性會傳回指出目標 framework moniker [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]。       這通常不會造成任何問題。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]不會建立參考[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]設為目標的專案中的功能[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]。 例如，[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]不提供 WCF 服務設為目標的專案中的項目範本[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]，因為 WCF 引進[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]和不相容[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]。       如果您打算將網站部署[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]執行階段環境，而且您使用工具以外[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]參考功能只與相容的[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]，而不會產生錯誤或警告可能會建置專案。 不過，應用程式可能會產生錯誤的網站上執行時[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]。"
  syntax:
    content: public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "目前的 Web 站台的.NET framework 目標版本。"
  overload: System.Web.Compilation.BuildManager.TargetFramework*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
- uid: System.Web.Compilation.BuildDependencySet
  parent: System.Web.Compilation
  isExternal: false
  name: BuildDependencySet
  nameWithType: BuildDependencySet
  fullName: System.Web.Compilation.BuildDependencySet
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
- uid: System.Web.Util.IWebObjectFactory
  parent: System.Web.Util
  isExternal: false
  name: IWebObjectFactory
  nameWithType: IWebObjectFactory
  fullName: System.Web.Util.IWebObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
- uid: System.Web.Compilation.BuildManager.TargetFramework
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency
  nameWithType: BuildManager.AddCompilationDependency
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly
  nameWithType: BuildManager.AddReferencedAssembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
- uid: System.Web.Compilation.BuildManager.CodeAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
- uid: System.Web.Compilation.BuildManager.CreateCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile
  nameWithType: BuildManager.CreateCachedFile
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath
  nameWithType: BuildManager.CreateInstanceFromVirtualPath
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet
  nameWithType: BuildManager.GetCachedBuildDependencySet
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly
  nameWithType: BuildManager.GetCompiledAssembly
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString
  nameWithType: BuildManager.GetCompiledCustomString
- uid: System.Web.Compilation.BuildManager.GetCompiledType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: BuildManager.GetCompiledType
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType
  nameWithType: BuildManager.GetGlobalAsaxType
- uid: System.Web.Compilation.BuildManager.GetObjectFactory*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory
  nameWithType: BuildManager.GetObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: BuildManager.GetReferencedAssemblies
- uid: System.Web.Compilation.BuildManager.GetType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType
  nameWithType: BuildManager.GetType
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies
  nameWithType: BuildManager.GetVirtualPathDependencies
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile
  nameWithType: BuildManager.ReadCachedFile
- uid: System.Web.Compilation.BuildManager.TargetFramework*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
