### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "定義控制項或程式庫的儲存和擷取應用程式設定的標準功能。"
  remarks: "通常，將應用程式設定的支援加入應用程式所建立的設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>，然後將特殊屬性加入至這個類別。 和</xref:System.Configuration.ApplicationSettingsBase> 不過，這種方法不會完全封裝控制項的應用程式設定值，讓其容器已防護的詳細資料。 IPersistComponentSettings 介面提供標準的介面，來進行通訊的應用程式設定狀態控制項、 元件或程式庫模組的變更要求的應用程式。 設計階段工具也會取決於這個介面來適當地管理控制項和元件。"
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "讀取控制項的應用程式設定成其對應的屬性和更新控制項的狀態。"
  remarks: "一般情況下，此 LoadComponentSettings 方法會執行兩項基本作業:-它會導致重新整理其應用程式設定屬性值，通常透過呼叫控制項所包含的每個應用程式設定執行個體及其<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      -必要時，它會更新相依於這些重新載入設定屬性的一般屬性。 例如，如果設定類別包含`location`設定屬性，LoadComponentSettings 應該確保控制項的<xref:System.Windows.Forms.Control.Location%2A>屬性會更新以反映此重新載入的設定。</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "重設控制項的應用程式設定屬性，為其預設值。"
  remarks: "ResetComponentSettings 方法的實作通常會呼叫<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>上每個執行個體，其中包含應用程式設定類別的方法。</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "保存控制項的應用程式設定屬性。"
  remarks: "SaveComponentSettings 方法會寫入相關聯的資料存放區中的控制項的應用程式設定屬性的值。 此方法會使用的資料存放區和序列化技術取決於<xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>透過每個設定類別相關聯的設定提供者 您可以使用覆寫的設定提供者選擇<xref:System.Configuration.ISettingsProviderService>介面。</xref:System.Configuration.ISettingsProviderService>      > [!NOTE] > 如果<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>屬性是`true`，控制項應該呼叫 SaveComponentSettings 中自己<xref:System.Windows.Forms.Control.Dispose%2A>方法以便在應用程式結束前自動儲存控制項的設定資料。</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定值，指出控制項是否應自動保存其應用程式設定屬性。"
  remarks: "如果控制項包含組態資料，它通常會保存回應的明確呼叫這項資料<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>方法或有時隱含當控制項的<xref:System.Windows.Forms.Control.Dispose%2A>叫用方法。</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> SaveSettings 屬性會決定在處置是否控制項會自動保存其組態資料。       SaveSettings 的預設值取決於控制項的實作。 控制項的文件應該會指出是否要使用應用程式設定、 哪些資料會保留，以及功能 SaveSettings 屬性的預設值。"
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項應自動保存其檢視狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定控制項的目前執行個體的應用程式設定索引鍵的值。"
  remarks: "若要釐清應用程式設定屬性群組有多個執行個體相同的包裝函式類別時使用 SettingsKey 屬性。 例如，如果控制項包含相關聯的包裝函式類別，然後將多個執行個體相同的控制項放置在相同的應用程式通常會包裝函式類別的多個執行個體。 只有在針對每個執行個體; 不同的組態資料時，則需要設定金鑰例如，動態地定位控制項的位置。       可讓您使用 SettingsKey 套用下列一般規則:-控制項，如同任何類別，可能包含零或多個應用程式設定類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> 每個設定類別包含它自己的<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>屬性，進而協助釐清多個執行個體的該類別。</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      -控制項應該將其每個執行個體資料和共用的資料分成不同的設定類別。      -針對與任何個別執行個體的設定資料，控制項`get`SettingsKey 屬性存取子應該預設為<xref:System.Windows.Forms.Control.Name%2A>的控制項。</xref:System.Windows.Forms.Control.Name%2A> 在大部分情況下名稱中將是控制項的唯一的應用程式。 如果控制項包含共用組態資料`get`應該預設為`null`。      -`set`應該實作這個屬性存取子，以區別包含每個執行個體和共用的設定資料的設定類別。 針對每個包含每個執行個體資料的設定類別`set`應該只傳遞至<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>屬性的設定類別。</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> 針對包含共用的資料，設定類別`set`應該對該設定的類別執行任何動作。"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含控制項的目前執行個體的設定索引鍵。</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
