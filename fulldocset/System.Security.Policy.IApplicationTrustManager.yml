### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "決定是否應該執行的應用程式，以及應該授予的權限集。"
  remarks: "信任管理員必須實作 IApplicationTrustManager 介面。 主機會呼叫<xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>方法，以判斷是否應該執行的應用程式和應用程式應該授與的權限。</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       在[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]和更新版本中，為只有一個信任管理員，可以是 IApplicationTrustManager 介面的自訂實作。 信任管理員預設實作會提示使用者，權限來安裝應用程式，並提高權限授與應用程式的權限。 其他信任管理員實作可能會提供不同的使用者體驗。 例如，實作可能會檢查信任的應用程式，而不提示使用者提供該資訊的企業清單。"
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "決定是否應該執行的應用程式，以及應該授予的權限集。"
  remarks: "DetermineApplicationTrust 方法稱為由主機判斷是否應該執行的應用程式，而且應該授與的權限設定它。 傳回 DetermineApplicationTrust<xref:System.Security.Policy.ApplicationTrust>物件<xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>屬性，其中包含的權限組，代表要授與應用程式的內容中執行每個組件的權限。</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> 授與權限不適用於在全域組件快取中的組件。 <xref:System.Security.Policy.ApplicationTrust>物件也有<xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>信任管理員設定表示是否應該信任應用程式的屬性。</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> 如果信任管理員會指出應用程式可以是受信任，主應用程式啟動應用程式，並授與其組件中提供的權限集<xref:System.Security.Policy.ApplicationTrust>集合。</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "應用程式的啟動內容。"
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "應用程式的信任管理員內容。"
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "物件，其中包含有關應用程式的安全性決策。"
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
