### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.ComputerInfo
  id: ComputerInfo
  children:
  - Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  langs:
  - csharp
  name: ComputerInfo
  nameWithType: ComputerInfo
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo
  type: Class
  summary: "提供屬性，取得電腦的記憶體、 載入的組件、 名稱和作業系統的相關資訊。"
  remarks: "所公開的屬性`My.Computer.Info`在執行階段決定物件傳回從中部署應用程式，電腦相關資訊。 通常，這項資料會在開發電腦上可用的不同。"
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))]

      public class ComputerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Devices.ComputerInfo&quot;></xref>類別。"
  syntax:
    content: public ComputerInfo ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  id: AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的可用實體記憶體總數。"
  remarks: "`My.Computer.Info.AvailablePhysicalMemory`屬性需要 Windows XP、 Windows 2000 Professional、 Windows Server 2003、 Windows 2000 Server 或 Windows Vista。"
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: public ulong AvailablePhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>包含電腦的可用實體記憶體的位元組數目。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "應用程式無法取得記憶體狀態。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  id: AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的可用虛擬位址空間的總量。"
  remarks: "`My.Computer.Info.AvailableVirtualMemory`屬性需要 Windows XP、 Windows 2000 Professional、 Windows Server 2003、 Windows 2000 Server 或 Windows Vista。"
  example:
  - "This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#3](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#3)]"
  syntax:
    content: public ulong AvailableVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>包含電腦可用的虛擬位址空間的位元組數目。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "應用程式無法取得記憶體狀態。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  id: InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得與作業系統一起安裝的目前 UI 文化特性。"
  remarks: "`My.Computer.Info.InstalledUICulture`屬性具有相同的行為<xref:System.Globalization.CultureInfo.InstalledUICulture%2A>屬性。</xref:System.Globalization.CultureInfo.InstalledUICulture%2A>       在當地語系化的作業系統，例如日文 Windows 2000 Professional，這個屬性會傳回作業系統的文化特性。"
  example:
  - "This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.  \n  \n [!code-vb[VbVbalrMyComputer#4](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#4)]"
  syntax:
    content: public System.Globalization.CultureInfo InstalledUICulture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>物件都代表電腦上安裝的 UI 文化特性。</xref:System.Globalization.CultureInfo>"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  id: OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得完整作業系統名稱。"
  remarks: "如果在電腦上安裝 Windows Management Instrumentation (WMI)，這個屬性會傳回作業系統名稱的詳細的資訊。 否則，這個屬性會傳回相同的字串`My.Computer.Info.OSPlatform`屬性，提供小於在可以提供 WMI 的詳細資訊。"
  example:
  - "This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#5](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#5)]"
  syntax:
    content: public string OSFullName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含作業系統名稱。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫程式碼並沒有完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  id: OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的作業系統平台識別項。"
  remarks: "`My.Computer.Info.OSPlatform`屬性會提供類似的功能<xref:System.OperatingSystem.Platform%2A>屬性所傳回的物件<xref:System.Environment.OSVersion%2A>屬性。</xref:System.Environment.OSVersion%2A> </xref:System.OperatingSystem.Platform%2A>"
  example:
  - "This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#6](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#6)]"
  syntax:
    content: public string OSPlatform { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含電腦的作業系統的平台識別項，所選擇的成員名稱<xref href=&quot;System.PlatformID&quot;></xref>列舉型別。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "應用程式無法取得作業系統平台資訊。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  id: OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的作業系統版本。"
  remarks: "`My.Computer.Info.OSVersion`屬性格式化為 「 major.minor.build.revision 」 版本。       `My.Computer.Info.OSVersion`屬性會提供類似的功能<xref:System.OperatingSystem.Version%2A>屬性所傳回的物件<xref:System.Environment.OSVersion%2A>屬性。</xref:System.Environment.OSVersion%2A> </xref:System.OperatingSystem.Version%2A>"
  example:
  - "This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#7](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#7)]"
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含作業系統的目前版本號碼。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "應用程式無法取得作業系統版本資訊。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  id: TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的實體記憶體總數。"
  remarks: "`My.Computer.Info.TotalPhysicalMemory`屬性需要 Windows XP、 Windows 2000 Professional、 Windows Server 2003、 Windows 2000 Server 或 Windows Vista..."
  example:
  - "This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#8](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#8)]"
  syntax:
    content: public ulong TotalPhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>包含電腦的實體記憶體的位元組數目。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "應用程式無法取得記憶體狀態。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  id: TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得電腦的虛擬位址空間總量。"
  remarks: "`My.Computer.Info.TotalVirtualMemory`屬性需要 Windows XP、 Windows 2000 Professional、 Windows Server 2003、 Windows 2000 Server 或 Windows Vista..."
  example:
  - "This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#9](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#9)]"
  syntax:
    content: public ulong TotalVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>包含電腦可用的虛擬位址空間的位元組數目。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "應用程式無法取得記憶體狀態。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ExecutionEngineException
  parent: System
  isExternal: false
  name: ExecutionEngineException
  nameWithType: ExecutionEngineException
  fullName: System.ExecutionEngineException
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo
  nameWithType: ComputerInfo.ComputerInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
