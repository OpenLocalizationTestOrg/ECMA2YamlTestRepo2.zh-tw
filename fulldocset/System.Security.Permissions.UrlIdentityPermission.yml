### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermission
  id: UrlIdentityPermission
  children:
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.UrlIdentityPermission.Copy
  - System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.ToXml
  - System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.Url
  langs:
  - csharp
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission
  fullName: System.Security.Permissions.UrlIdentityPermission
  type: Class
  summary: "定義程式碼來源的 URL 的識別權限。 這個類別無法被繼承。"
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>類別具有指定<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  remarks: "會建立完全限制 (`None`) 或`Unrestricted`權限。      > [!NOTE] > 識別權限不能有 in the.NET Framework 1.0 和 1.1 版，<xref:System.Security.Permissions.PermissionState>權限狀態的值。</xref:System.Security.Permissions.PermissionState> 從.NET Framework 2.0 版開始，識別權限可以有任何權限狀態的值。 這表示在 2.0 和更新版本中，身分識別的權限具有相同的行為，做為實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>介面。</xref:System.Security.Permissions.IUnrestrictedPermission> 也就是身分識別的要求一定會成功，不論的身分識別的組件中，如果組件授與完全信任。       在.NET framework 1.0 和 1.1 版中，身分識別權限的要求是有效的即使是完全受信任的呼叫組件。 也就是說，雖然呼叫組件具有完全信任，但識別權限的要求會失敗組件不符合要求的準則。 從.NET Framework 2.0 版開始，識別權限的要求是如果呼叫的組件具有完全信任的效果不佳。 如此可確保所有的權限，不會識別權限的特殊情況的一致性。"
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/cpp/d852dbe8-5170-4e24-980e-_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/csharp/d852dbe8-5170-4e24-980e-_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/visualbasic/d852dbe8-5170-4e24-980e-_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "其中一個<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>參數不是有效的值<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>類別來表示所描述的 URL 識別<code> site </code>。"
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.  The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.  A demand on the permission causes <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> to be called by the security infrastructure. The demand will fail because of the argument exception, resulting in a <xref:System.Security.SecurityException> being thrown. In this case, the original <xref:System.ArgumentException> exception will not be seen."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/cpp/m-system.security.permis_0_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/csharp/m-system.security.permis_0_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/visualbasic/m-system.security.permis_0_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "URL 或萬用字元運算式。"
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>site</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "長度<code> site </code>參數為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "URL、 目錄或網站部分<code> site </code>參數無效。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "建立並傳回目前權限的相同複本。"
  remarks: "一份權限表示與原始的權限資源相同的存取權。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "一份目前的權限。"
  overload: System.Security.Permissions.UrlIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "重新建構具有指定狀態的 XML 編碼方式的權限。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML 編碼用來重新建構權限。"
  overload: System.Security.Permissions.UrlIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>參數不是有效的權限項目。       -或- <code> esd </code>參數的版本號碼不正確。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "建立並傳回目前權限和指定的權限交集的權限。"
  remarks: "兩個權限交集是描述它們都共同描述的 Url 存取的權限。 只有通過這兩個原始的使用權限的需求會通過交集。 例如，代表 http://www.fourthcoffee.com/process/grind.htm 的存取權限和表示 http://www.fourthcoffee.com/ 的存取權限的交集*表示 http://www.fourthcoffee.com/process/grind.htm 的存取權限。      <xref:System.Security.Permissions.UrlIdentityPermission>支援 set 作業 (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>，Intersect 和<xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) 只有當目前權限是指定權限的物件相等，或當其中一個權限時，使用萬用字元 (&quot;*&quot;)。</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要與目前權限產生交集的權限。 它必須是類型的相同與目前權限。"
    return:
      type: System.Security.IPermission
      description: "代表目前權限與指定權限交集的新權限。 這個新權限是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集是空的。"
  overload: System.Security.Permissions.UrlIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>參數不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>而且不屬於相同的類型與目前權限。       -或者-Url 屬性不是有效的 URL。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "判斷目前權限是否為指定的權限的子集。"
  remarks: "如果目前權限識別所指定的權限全部包含的 URL 存取，目前的權限會是所指定權限的子集。 例如，表示 http://www.fourthcoffee.com/process/grind.htm 的存取權限是表示 http://www.fourthcoffee.com/ 的存取權限的子集*。如果此方法傳回`true`，目前的權限，表示沒有存取受保護的資源比指定的權限。      <xref:System.Security.Permissions.UrlIdentityPermission>支援 set 作業 (IsSubsetOf， <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>，和<xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) 只有當目前的權限等於指定的權限，或當其中一個權限時，使用萬用字元 (&quot;*&quot;)。</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要測試子集關聯性的權限。 此權限必須是類型的相同與目前權限。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前權限是指定的權限的子集否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>參數不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>而且不屬於相同的類型與目前權限。       -或者-Url 屬性不是有效的 URL。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "建立權限和其目前狀態的 XML 編碼方式。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "權限，包括任何狀態資訊的 XML 編碼方式。"
  overload: System.Security.Permissions.UrlIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "建立權限聯集的目前的權限與指定權限。"
  remarks: "聯集的方法呼叫的結果是代表存取的 URL 所表示的目前權限，以及存取的 URL 所表示的指定權限的權限。       <xref:System.Security.Permissions.UrlIdentityPermission>類別支援的 set 作業<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>， <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>，等位) 只有當目前的權限是否等於指定的權限，或是當其中一個權限會使用萬用字元 (&quot;*&quot;)，且其中一個其他的子集。</xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "與目前權限結合的權限。 它必須是類型的相同與目前權限。"
    return:
      type: System.Security.IPermission
      description: "新的權限，表示目前的權限與指定權限的聯集。"
  overload: System.Security.Permissions.UrlIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>參數不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>而且不屬於相同的類型與目前權限。       -或-<xref:System.Security.Permissions.UrlIdentityPermission.Url*>屬性不是有效的 URL。</xref:System.Security.Permissions.UrlIdentityPermission.Url*>       -或-兩個權限不相等，並不是另一個子集。"
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得或設定 URL，代表網際網路程式碼的身分識別。"
  remarks: "被視為完整的 URL，包括通訊協定 (HTTP、 HTTPS、 FTP) 和檔案，例如︰ http://www.fourthcoffee.com/process/grind.htm/。       Url 可以完全相符或者使用萬用字元，在最後的位置，例如︰ http://www.fourthcoffee.com/process/ *。"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "代表網際網路程式碼的識別 URL。"
  overload: System.Security.Permissions.UrlIdentityPermission.Url*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法擷取此 URL，因為它具有模稜兩可的身分識別。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission.UrlIdentityPermission
- uid: System.Security.Permissions.UrlIdentityPermission.Copy*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: UrlIdentityPermission.Copy
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: UrlIdentityPermission.FromXml
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: UrlIdentityPermission.Intersect
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UrlIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: UrlIdentityPermission.ToXml
- uid: System.Security.Permissions.UrlIdentityPermission.Union*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union
  nameWithType: UrlIdentityPermission.Union
- uid: System.Security.Permissions.UrlIdentityPermission.Url*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
