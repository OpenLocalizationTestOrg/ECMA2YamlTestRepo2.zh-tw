### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.XmlDataProvider
  id: XmlDataProvider
  children:
  - System.Windows.Data.XmlDataProvider.#ctor
  - System.Windows.Data.XmlDataProvider.BaseUri
  - System.Windows.Data.XmlDataProvider.BeginQuery
  - System.Windows.Data.XmlDataProvider.Document
  - System.Windows.Data.XmlDataProvider.EndInit
  - System.Windows.Data.XmlDataProvider.IsAsynchronous
  - System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  - System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  - System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  - System.Windows.Data.XmlDataProvider.Source
  - System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  - System.Windows.Data.XmlDataProvider.XmlSerializer
  - System.Windows.Data.XmlDataProvider.XPath
  langs:
  - csharp
  name: XmlDataProvider
  nameWithType: XmlDataProvider
  fullName: System.Windows.Data.XmlDataProvider
  type: Class
  summary: "可讓您宣告式存取[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]資料繫結的資料。"
  remarks: "> [!IMPORTANT]> 中的部分信任沙箱，XmlDataProvider 失敗時沒有指定的資料存取權限。 如需部分信任安全性的詳細資訊，請參閱[WPF 部分信任安全性](~/add/includes/ajax-current-ext-md.md)。       XmlDataProvider 會公開下列方式來存取[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]資料。      -您可以將內嵌內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]使用 XmlDataProvider 類別的資料。      -您可以設定<xref:System.Windows.Data.XmlDataProvider.Source%2A>屬性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料檔案。</xref:System.Uri> </xref:System.Windows.Data.XmlDataProvider.Source%2A>      -您可以設定<xref:System.Windows.Data.XmlDataProvider.Document%2A>為<xref:System.Xml.XmlDocument>。</xref:System.Xml.XmlDocument>屬性</xref:System.Windows.Data.XmlDataProvider.Document%2A>       XmlDataProvider 執行完整的重新整理的所有繫結時<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName>就會發生事件。</xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName> 沒有任何特定節點的最佳化。       <xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=fullName>屬性設定為`true`根據預設，這表示 XmlDataProvider 擷取資料，並產生的集合[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]節點依預設以非同步的方式。</xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.ContentProperty("XmlSerializer")]

      public class XmlDataProvider : System.Windows.Data.DataSourceProvider, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  - System.Windows.Data.DataSourceProvider
  implements:
  - System.Windows.Markup.IUriContext
  inheritedMembers:
  - System.Windows.Data.DataSourceProvider.BeginInit
  - System.Windows.Data.DataSourceProvider.Data
  - System.Windows.Data.DataSourceProvider.DataChanged
  - System.Windows.Data.DataSourceProvider.DeferRefresh
  - System.Windows.Data.DataSourceProvider.Dispatcher
  - System.Windows.Data.DataSourceProvider.Error
  - System.Windows.Data.DataSourceProvider.InitialLoad
  - System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled
  - System.Windows.Data.DataSourceProvider.IsRefreshDeferred
  - System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)
  - System.Windows.Data.DataSourceProvider.PropertyChanged
  - System.Windows.Data.DataSourceProvider.Refresh
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.#ctor
  id: '#ctor'
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlDataProvider()
  nameWithType: XmlDataProvider.XmlDataProvider()
  fullName: System.Windows.Data.XmlDataProvider.XmlDataProvider()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Data.XmlDataProvider&quot;></xref>類別。"
  syntax:
    content: public XmlDataProvider ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.BaseUri
  id: BaseUri
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "這個類型或成員支援[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]基礎結構，不適合直接從您的程式碼使用。"
  syntax:
    content: protected virtual Uri BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基底 URI。"
  overload: System.Windows.Data.XmlDataProvider.BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.BeginQuery
  id: BeginQuery
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: BeginQuery()
  nameWithType: XmlDataProvider.BeginQuery()
  fullName: System.Windows.Data.XmlDataProvider.BeginQuery()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "準備載入中的其中一個內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]或外部[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]檔案產生的集合[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]節點。"
  remarks: "執行時立即或在背景執行緒，根據值<xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A>屬性。</xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A>       會呼叫這個方法<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>的基底類別和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>方法</xref:System.Windows.Data.DataSourceProvider.Refresh%2A></xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>"
  syntax:
    content: protected override void BeginQuery ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.BeginQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.Document
  id: Document
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: Document
  nameWithType: XmlDataProvider.Document
  fullName: System.Windows.Data.XmlDataProvider.Document
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定<xref href=&quot;System.Xml.XmlDocument&quot;></xref>来作為繫結來源。"
  remarks: "<xref:System.Windows.Data.XmlDataProvider>會公開下列方式來存取[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]資料。</xref:System.Windows.Data.XmlDataProvider>      -您可以將內嵌內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料使用<xref:System.Windows.Data.XmlDataProvider>類別。</xref:System.Windows.Data.XmlDataProvider>      -您可以設定<xref:System.Windows.Data.XmlDataProvider.Source%2A>屬性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料檔案。</xref:System.Uri> </xref:System.Windows.Data.XmlDataProvider.Source%2A>      -您可以將此屬性設定為<xref:System.Xml.XmlDocument>.</xref:System.Xml.XmlDocument>       <xref:System.Windows.Data.XmlDataProvider>當上執行完整的重新整理的所有繫結<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName>就會發生事件。</xref:System.Xml.XmlDocument.NodeChanged?displayProperty=fullName></xref:System.Windows.Data.XmlDataProvider> 沒有任何特定節點的最佳化。       如果<xref:System.Windows.Data.XmlDataProvider.Source%2A>屬性是設定，則任何內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]丟棄的資料。</xref:System.Windows.Data.XmlDataProvider.Source%2A> 如果設定文件屬性，則<xref:System.Windows.Data.XmlDataProvider.Source%2A>清除屬性和任何內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]丟棄的資料。</xref:System.Windows.Data.XmlDataProvider.Source%2A>       設定下列屬性會以隱含方式會造成這<xref:System.Windows.Data.XmlDataProvider>重新整理的物件︰ <xref:System.Windows.Data.XmlDataProvider.Source%2A>，文件， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref>来作為繫結來源。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.EndInit
  id: EndInit
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: EndInit()
  nameWithType: XmlDataProvider.EndInit()
  fullName: System.Windows.Data.XmlDataProvider.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出已完成此項目的初始設定。這會導致<> *> 如果沒有其他<> *> 未完成。"
  syntax:
    content: protected override void EndInit ();
    parameters: []
  overload: System.Windows.Data.XmlDataProvider.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous
  id: IsAsynchronous
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
  fullName: System.Windows.Data.XmlDataProvider.IsAsynchronous
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定值，表示是否節點集合建立將會在背景工作執行緒或作用中的內容中執行。"
  syntax:
    content: public bool IsAsynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行背景工作執行緒; 的節點集合建立工作否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.IsAsynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: XmlDataProvider.ShouldSerializeSource()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.XmlDataProvider.Source*>屬性必須永續性。</xref:System.Windows.Data.XmlDataProvider.Source*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.XmlDataProvider.Source%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.XmlDataProvider.Source%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.XmlDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  id: ShouldSerializeXmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeXmlSerializer()
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.XmlDataProvider.XmlSerializer*>屬性必須永續性。</xref:System.Windows.Data.XmlDataProvider.XmlSerializer*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.XmlDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeXmlSerializer ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  id: ShouldSerializeXPath
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: ShouldSerializeXPath()
  nameWithType: XmlDataProvider.ShouldSerializeXPath()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.XmlDataProvider.XPath*>屬性必須永續性。</xref:System.Windows.Data.XmlDataProvider.XPath*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.XmlDataProvider.XPath%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.XmlDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.XmlDataProvider>.</xref:System.Windows.Data.XmlDataProvider></xref:System.Windows.Data.XmlDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeXPath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.Source
  id: Source
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: Source
  nameWithType: XmlDataProvider.Source
  fullName: System.Windows.Data.XmlDataProvider.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定<xref:System.Uri>的[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]来作為繫結來源的資料檔案。</xref:System.Uri>"
  remarks: "<xref:System.Windows.Data.XmlDataProvider>會公開下列方式來存取[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]資料。</xref:System.Windows.Data.XmlDataProvider>      -您可以將內嵌內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料使用<xref:System.Windows.Data.XmlDataProvider>類別。</xref:System.Windows.Data.XmlDataProvider>      -您可以將此屬性設定為<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料檔案。</xref:System.Uri>      -您可以設定<xref:System.Windows.Data.XmlDataProvider.Document%2A>為<xref:System.Xml.XmlDocument>。</xref:System.Xml.XmlDocument>屬性</xref:System.Windows.Data.XmlDataProvider.Document%2A>       如果來源屬性是設定，則任何內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]丟棄的資料。 如果<xref:System.Windows.Data.XmlDataProvider.Document%2A>屬性會設定，然後清除屬性的來源，而任何內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]丟棄的資料。</xref:System.Windows.Data.XmlDataProvider.Document%2A>       設定下列屬性會以隱含方式會造成這<xref:System.Windows.Data.XmlDataProvider>重新整理的物件︰ 來源、 <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  example:
  - "In some applications, embedding the [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] inline within the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page can be inconvenient because the exact content of the data must be known at compile time. Therefore, you can obtain the data from an external [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] file, as in the following example.  \n  \n [!code-xml[XMLDataSource2#XmlFileExample](~/add/codesnippet/xaml/XmlDataSource2/Window1.xaml#xmlfileexample)]  \n  \n If the [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] data resides in a remote [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] file, you define access to the data by assigning an appropriate [!INCLUDE[TLA2#tla_url](~/add/includes/tla2sharptla-url-md.md)] to the Source attribute as follows:  \n  \n```  \n<XmlDataProvider x:Key=\"BookData\" Source=\"http://MyUrl\" XPath=\"Books\"/>  \n```"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]来作為繫結來源的資料檔案。</xref:System.Uri> 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "此成員支援[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]基礎結構，不適合直接從您的程式碼使用。"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基底 URI。"
  overload: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  id: XmlNamespaceManager
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
  fullName: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定<xref:System.Xml.XmlNamespaceManager>用來執行<xref:System.Windows.Data.XmlDataProvider.XPath*>查詢。</xref:System.Windows.Data.XmlDataProvider.XPath*> </xref:System.Xml.XmlNamespaceManager>"
  remarks: "設定下列屬性會以隱含方式會造成這<xref:System.Windows.Data.XmlDataProvider>重新整理的物件: <xref:System.Windows.Data.XmlDataProvider.Source%2A> <xref:System.Windows.Data.XmlDataProvider.Document%2A>、 XmlNamespaceManager 和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。</xref:System.Windows.Data.XmlDataProvider.XPath%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlAttributeUsage_XmlNamespaceManager&quot;></a># # XAML 屬性使用方式```   <object XmlNamespaceManager=&quot;mappingCollection&quot;/>   ``` <a name=&quot;xamlValues_XmlNamespaceManager&quot;> </a> # # XAML 值*mappingCollection* <xref:System.Windows.Data.XmlNamespaceMappingCollection>.</xref:System.Windows.Data.XmlNamespaceMappingCollection>       若要指將<xref:System.Windows.Data.XmlNamespaceMappingCollection>，使用[標記延伸和 WPF XAML](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Data.XmlNamespaceMappingCollection>"
  example:
  - "The following example demonstrates how to use this property.  \n  \n [!code-xml[XmlnsBind#XmlNamespaceMapping](~/add/codesnippet/xaml/p-system.windows.data.xm_1_1.xaml)]\n [!code-xml[XmlnsBind#XmlNamespaceMapping](~/add/codesnippet/xaml/p-system.windows.data.xm_1_1.xaml)]"
  syntax:
    content: public System.Xml.XmlNamespaceManager XmlNamespaceManager { get; set; }
    return:
      type: System.Xml.XmlNamespaceManager
      description: "<xref:System.Xml.XmlNamespaceManager>用來執行<xref:System.Windows.Data.XmlDataProvider.XPath*>查詢。</xref:System.Windows.Data.XmlDataProvider.XPath*> </xref:System.Xml.XmlNamespaceManager> 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.XmlDataProvider.XmlNamespaceManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer
  id: XmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
  fullName: System.Windows.Data.XmlDataProvider.XmlSerializer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得內嵌[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]內容。"
  remarks: "這個屬性可由剖析器來編譯的內嵌常值內容[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]資料島。      <a name=&quot;xamlPropertyElementUsage_XmlSerializer&quot;></a># # XAML 屬性項目用法```   <XmlDataProvider>     <XmlDataProvider.XmlSerializer>       <x:XData>          <elementDataRoot>             <elementData/>          <elementDataRoot>       </x:XData>     </XmlDataProvider.XmlSerializer>   </XmlDataProvider>   --or--   <XmlDataProvider>       <x:XData>          <elementDataRoot>             <elementData/>          <elementDataRoot>       </x:XData>   </XmlDataProvider>   ``` <a name=&quot;xamlValues_XmlSerializer&quot;> </a> # # XAML 值*elementDataRoot*所需。       括住的資料島的單一根項目。 如果沒有單一的根目錄，`x:XData`做為資料來源無效。       *elementData*選擇性。 代表您資料的 XML。 項目資料可包含任意數目的項目，其他項目，依此類推，受限於一般的規則的 XML 中可包含巢狀項目。"
  syntax:
    content: public System.Xml.Serialization.IXmlSerializable XmlSerializer { get; }
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "內嵌的[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]內容。"
  overload: System.Windows.Data.XmlDataProvider.XmlSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.XmlDataProvider.XPath
  id: XPath
  parent: System.Windows.Data.XmlDataProvider
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataProvider.XPath
  fullName: System.Windows.Data.XmlDataProvider.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定<xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;></xref>用來產生資料集合的查詢。"
  remarks: "<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>方法會處理`XPath`運算式從<xref:System.Windows.Data.Binding.XPath%2A>屬性。</xref:System.Windows.Data.Binding.XPath%2A> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`不支援函式。 如`XPath`運算式的詳細資訊，請參閱<xref:System.Xml.XmlNode.SelectNodes%2A>文件集和範例 > 一節中提供一些範例。</xref:System.Xml.XmlNode.SelectNodes%2A>       設定下列屬性會以隱含方式會造成這<xref:System.Windows.Data.XmlDataProvider>重新整理的物件︰ <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和 XPath。</xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A> </xref:System.Windows.Data.XmlDataProvider.Document%2A> </xref:System.Windows.Data.XmlDataProvider.Source%2A> </xref:System.Windows.Data.XmlDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref>用來產生資料集合的查詢。 預設為空字串。"
  overload: System.Windows.Data.XmlDataProvider.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.DataSourceProvider
  isExternal: false
  name: System.Windows.Data.DataSourceProvider
- uid: System.Windows.Data.XmlDataProvider.#ctor
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlDataProvider()
  nameWithType: XmlDataProvider.XmlDataProvider()
  fullName: System.Windows.Data.XmlDataProvider.XmlDataProvider()
- uid: System.Windows.Data.XmlDataProvider.BaseUri
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.BaseUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Data.XmlDataProvider.BeginQuery
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BeginQuery()
  nameWithType: XmlDataProvider.BeginQuery()
  fullName: System.Windows.Data.XmlDataProvider.BeginQuery()
- uid: System.Windows.Data.XmlDataProvider.Document
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Document
  nameWithType: XmlDataProvider.Document
  fullName: System.Windows.Data.XmlDataProvider.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Windows.Data.XmlDataProvider.EndInit
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: EndInit()
  nameWithType: XmlDataProvider.EndInit()
  fullName: System.Windows.Data.XmlDataProvider.EndInit()
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
  fullName: System.Windows.Data.XmlDataProvider.IsAsynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: XmlDataProvider.ShouldSerializeSource()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeSource()
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXmlSerializer()
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer()
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXPath()
  nameWithType: XmlDataProvider.ShouldSerializeXPath()
  fullName: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath()
- uid: System.Windows.Data.XmlDataProvider.Source
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Source
  nameWithType: XmlDataProvider.Source
  fullName: System.Windows.Data.XmlDataProvider.Source
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.Data.XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
  fullName: System.Windows.Data.XmlDataProvider.XmlNamespaceManager
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
  fullName: System.Windows.Data.XmlDataProvider.XmlSerializer
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Windows.Data.XmlDataProvider.XPath
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XPath
  nameWithType: XmlDataProvider.XPath
  fullName: System.Windows.Data.XmlDataProvider.XPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.XmlDataProvider.#ctor*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlDataProvider
  nameWithType: XmlDataProvider.XmlDataProvider
- uid: System.Windows.Data.XmlDataProvider.BaseUri*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BaseUri
  nameWithType: XmlDataProvider.BaseUri
- uid: System.Windows.Data.XmlDataProvider.BeginQuery*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: BeginQuery
  nameWithType: XmlDataProvider.BeginQuery
- uid: System.Windows.Data.XmlDataProvider.Document*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Document
  nameWithType: XmlDataProvider.Document
- uid: System.Windows.Data.XmlDataProvider.EndInit*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: EndInit
  nameWithType: XmlDataProvider.EndInit
- uid: System.Windows.Data.XmlDataProvider.IsAsynchronous*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: XmlDataProvider.IsAsynchronous
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeSource*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: XmlDataProvider.ShouldSerializeSource
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXmlSerializer
  nameWithType: XmlDataProvider.ShouldSerializeXmlSerializer
- uid: System.Windows.Data.XmlDataProvider.ShouldSerializeXPath*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: ShouldSerializeXPath
  nameWithType: XmlDataProvider.ShouldSerializeXPath
- uid: System.Windows.Data.XmlDataProvider.Source*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: Source
  nameWithType: XmlDataProvider.Source
- uid: System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: XmlDataProvider.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.Data.XmlDataProvider.XmlNamespaceManager*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlDataProvider.XmlNamespaceManager
- uid: System.Windows.Data.XmlDataProvider.XmlSerializer*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XmlSerializer
  nameWithType: XmlDataProvider.XmlSerializer
- uid: System.Windows.Data.XmlDataProvider.XPath*
  parent: System.Windows.Data.XmlDataProvider
  isExternal: false
  name: XPath
  nameWithType: XmlDataProvider.XPath
