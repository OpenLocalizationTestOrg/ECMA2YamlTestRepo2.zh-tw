### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidator
  id: XmlSchemaValidator
  children:
  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaValidator.EndValidation
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  - System.Xml.Schema.XmlSchemaValidator.Initialize
  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.SourceUri
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  - System.Xml.Schema.XmlSchemaValidator.XmlResolver
  langs:
  - csharp
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator
  fullName: System.Xml.Schema.XmlSchemaValidator
  type: Class
  summary: "表示 XML 結構描述定義語言 (XSD) 結構描述驗證引擎。 XmlSchemaValidator 類別無法被繼承。"
  remarks: "> [!IMPORTANT]>-請勿使用結構描述從未知或未受信任的來源或位置。 如此一來，將危害您的程式碼的安全性。   >-（包括內嵌結構描述） 的 XML 結構描述是本質上容易遭到阻絕服務攻擊。不接受其在受信任的案例。   >-結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。 請小心不要公開給未受信任的呼叫端的這項資訊。       XmlSchemaValidator 類別提供有效率的高效能機制來驗證 XML 結構描述的 XML 資料以發送為基礎的方式。 比方說，XmlSchemaValidator 類別可讓您以 XML infoset 就地驗證而不需要將其序列化為 XML 文件，然後重新剖析使用驗證的 XML 讀取器的文件。 XmlSchemaValidator 類別也可用來建立驗證引擎，透過自訂的 XML 資料來源，或做為建置驗證 XML 寫入的方式。       如需 XmlSchemaValidator 類別的詳細資訊，請參閱[XmlSchemaValidator 推入型驗證](~/add/includes/ajax-current-ext-md.md)主題。      > [!IMPORTANT] ><xref:System.Xml.Schema.XmlSchemaValidationFlags>和<xref:System.Xml.Schema.XmlSchemaValidationFlags>XmlSchemaValidator 物件的旗標未設定的驗證是預設值。</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> 此外， <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>XmlSchemaValidator 物件的屬性是`null`預設。</xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 如此一來，外部結構描述中參考包含，import 或 redefine 項目不會解決預設值。"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>類別。"
  remarks: "以下是使用 XmlSchemaValidator 建構函式時要考慮的重要注意事項。      -內容<xref:System.Xml.Schema.XmlSchemaSet>參數複製到內部<xref:System.Xml.Schema.XmlSchemaSet>物件時<xref:System.Xml.Schema.XmlSchemaValidationFlags>或<xref:System.Xml.Schema.XmlSchemaValidationFlags>設定驗證選項。</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> 如此一來，變更為輸入<xref:System.Xml.Schema.XmlSchemaSet>物件驗證期間不會影響驗證的結果。</xref:System.Xml.Schema.XmlSchemaSet>      -如果<xref:System.Xml.Schema.XmlSchemaSet>未編譯指定的參數，其<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法呼叫。</xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -<xref:System.Xml.IXmlNamespaceResolver>參數，請務必特別驗證`xs:QName`型別。</xref:System.Xml.IXmlNamespaceResolver> <xref:System.Xml.Schema.XmlSchemaValidator>類別不會複製的範圍內命名空間中的<xref:System.Xml.IXmlNamespaceResolver>物件，但改為保留的參考它。</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.Schema.XmlSchemaValidator> 這可讓新的命名空間加入至<xref:System.Xml.IXmlNamespaceResolver>驗證程序期間的物件。</xref:System.Xml.IXmlNamespaceResolver>      > [!IMPORTANT] ><xref:System.Xml.Schema.XmlSchemaValidationFlags>和<xref:System.Xml.Schema.XmlSchemaValidationFlags>驗證旗標<xref:System.Xml.Schema.XmlSchemaValidator>物件不是集合是預設值。</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> 此外，<xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>屬性<xref:System.Xml.Schema.XmlSchemaValidator>物件是`null`預設。</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 如此一來，外部結構描述中參考包含，import 或 redefine 項目不會解決預設值。"
  example:
  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.
  syntax:
    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>物件，其中包含為原子化字串的元素和屬性名稱。</xref:System.Xml.XmlNameTable>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>物件，其中包含用於驗證的 XML 結構描述定義語言 (XSD) 結構描述。"
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>用於解析驗證期間遇到的命名空間的物件。</xref:System.Xml.IXmlNamespaceResolver>"
    - id: validationFlags
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaValidationFlags&quot;> </xref>值，指定結構描述驗證選項。"
  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個指定的參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "編譯結構描述中的時發生錯誤<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>參數。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  id: AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "將 XML 結構描述定義語言 (XSD) 結構描述加入至用來進行驗證的結構描述集合。"
  remarks: "以下是使用 AddSchema 方法時要考慮的重要注意事項。      -AddSchema 方法可用來模擬遇到內嵌 XML 結構描述驗證 XML 文件中的效果。      -目標命名空間<xref:System.Xml.Schema.XmlSchema>參數不相符的任何元素或屬性已遇到<xref:System.Xml.Schema.XmlSchemaValidator>物件。</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchema>      -如果<xref:System.Xml.Schema.XmlSchemaValidationFlags>未設定驗證選項，則 AddSchema 方法沒有作用。</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>要加入至用來進行驗證的結構描述集合物件。</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>指定參數<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "目標命名空間<xref:System.Xml.Schema.XmlSchema>參數與相符的任何元素或屬性已遇到<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件。</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "<xref:System.Xml.Schema.XmlSchema>參數無效。</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  id: EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "結束驗證，並檢查整個 XML 文件的識別條件約束。"
  remarks: "EndValidation 方法結束驗證，並檢查整個 XML 文件的識別條件約束，如果<xref:System.Xml.Schema.XmlSchemaValidationFlags>設定驗證選項。</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void EndValidation ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "XML 文件中找不到識別條件約束錯誤。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  id: GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "傳回目前的項目內容的預期的屬性。"
  remarks: "以下是使用 GetExpectedAttributes 方法時要考慮的重要注意事項。      -如果 GetExpectedAttributes 方法之後，立即呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>方法，可能會顯示為 XML 文件中的所有屬性會都傳回。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>      -如果在一或多個呼叫後呼叫 GetExpectedAttributes 方法<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>方法，這個方法會傳回尚未尚未驗證目前元素的屬性。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaAttribute[]
      description: "陣列<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>物件或沒有預期的屬性則為空白陣列。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  id: GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "傳回目前的項目內容中的預期的物件。"
  remarks: "可以 GetExpectedParticles 方法所傳回的有效物件是的執行個體<xref:System.Xml.Schema.XmlSchemaElement>和<xref:System.Xml.Schema.XmlSchemaAny>類別。</xref:System.Xml.Schema.XmlSchemaAny> </xref:System.Xml.Schema.XmlSchemaElement>       當內容模型的複合器為`xs:sequence`，傳回的下一個物件的順序。 如果內容模型的複合器`xs:all`或`xs:choice`，則會傳回所有目前的項目內容中的有效物件。       例如，在 XML 結構描述定義語言 (XSD) 結構描述及 XML 文件之後，在驗證之後`book`項目，`book`項目是目前的項目內容。 GetExpectedParticles 方法會傳回陣列，其中包含單一<xref:System.Xml.Schema.XmlSchemaElement>物件，代表`title`項目。</xref:System.Xml.Schema.XmlSchemaElement> 當驗證內容是`title`項目，GetExpectedParticles 方法會傳回空陣列。 如果之後呼叫 GetExpectedParticles 方法`title`之前已驗證的項目`description`已驗證的項目，它會傳回陣列，其中包含單一<xref:System.Xml.Schema.XmlSchemaElement>物件，代表`description`項目。</xref:System.Xml.Schema.XmlSchemaElement> 如果之後呼叫 GetExpectedParticles 方法`description`項目已通過驗證，則它會傳回陣列，其中包含單一<xref:System.Xml.Schema.XmlSchemaAny>物件，代表萬用字元。</xref:System.Xml.Schema.XmlSchemaAny>      ```vb#   Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, &quot;schema.xsd&quot;)   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;schema.xsd&quot;);   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```該範例使用下列 XML 做為輸入。       `<xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>`       `<xs:element name=&quot;book&quot;>`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=&quot;title&quot; type=&quot;xs:string&quot; />`       `<xs:element name=&quot;description&quot; type=&quot;xs:string&quot; />`       `<xs:any processContents =&quot;lax&quot;/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`該範例使用下列 XSD 結構描述做為輸入。       `<book>`       `<title>My Book</title>`       `<description>My Book&quot;s Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaParticle[]
      description: "陣列<xref href=&quot;System.Xml.Schema.XmlSchemaParticle&quot;></xref>物件或有未預期的物件則為空白陣列。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證預設屬性的識別條件約束，並於其中填入<xref href=&quot;System.Collections.ArrayList&quot;></xref>指定與<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>有尚未先前驗證使用的預設值的任何屬性的物件<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>元素內容中的方法。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  remarks: "驗證目前項目使用的所有屬性之後，必須呼叫 GetUnspecifiedDefaultAttributes 方法<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>方法。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> GetUnspecifiedDefaultAttributes 方法應該用來判斷預設屬性是要插入至要驗證的 XML 文件。"
  syntax:
    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);
    parameters:
    - id: defaultAttributes
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>填入<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>尚未在元素內容中的驗證期間發生的任何屬性的物件。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  id: Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的狀態<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件。"
  remarks: "Initialize 方法才會有效建構之後立即呼叫<xref:System.Xml.Schema.XmlSchemaValidator>物件或呼叫至<xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>。</xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> </xref:System.Xml.Schema.XmlSchemaValidator>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<> *> 方法適用於建構之後立即<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件或呼叫後<> *> 只。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  id: Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的狀態<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件使用<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref>指定進行部分驗證。"
  remarks: "Initialize 方法採用<xref:System.Xml.Schema.XmlSchemaObject>如參數初始化<xref:System.Xml.Schema.XmlSchemaValidator>其開始狀態，以進行部分驗證的物件。</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaObject>"
  example:
  - "In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, \"schema.xsd\")  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n  \nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\"orderNumber\")))  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(\"123\")  \nvalidator.ValidateEndElement(Nothing)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, \"schema.xsd\");  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n  \nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\"orderNumber\")]);  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(\"123\");  \nvalidator.ValidateEndElement(null);  \n```  \n  \n The example takes the following XML schema as input.  \n  \n `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`  \n  \n `<xs:element name=\"orderNumber\" type=\"xs:int\" />`  \n  \n `</xs:schema>`"
  syntax:
    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);
    parameters:
    - id: partialValidationType
      type: System.Xml.Schema.XmlSchemaObject
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>， <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref>，或<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>用來初始化的驗證內容物件<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>進行部分驗證的物件。"
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<> *> 方法適用於建構之後立即<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件或呼叫後<> *> 只。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> parameter is not an <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>, or <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref>參數不可為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  id: LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定要驗證之 XML 節點的行號資訊。"
  remarks: "-   行資訊由任何報告<xref:System.Xml.Schema.XmlSchemaValidationException>驗證程序期間擲回。</xref:System.Xml.Schema.XmlSchemaValidationException>      -預設<xref:System.Xml.IXmlLineInfo>物件傳回的屬性會傳回 0 代表 LineInfoProvider<xref:System.Xml.IXmlLineInfo.LineNumber%2A>和<xref:System.Xml.IXmlLineInfo.LinePosition%2A>屬性。</xref:System.Xml.IXmlLineInfo.LinePosition%2A> </xref:System.Xml.IXmlLineInfo.LineNumber%2A> </xref:System.Xml.IXmlLineInfo>"
  syntax:
    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }
    return:
      type: System.Xml.IXmlLineInfo
      description: "<xref:System.Xml.IXmlLineInfo>物件。</xref:System.Xml.IXmlLineInfo>"
  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "略過目前項目內容的驗證，並準備<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件以驗證父項目的內容中的內容。"
  remarks: "以下是使用 SkipToEndElement 方法時要考慮的重要注意事項。      -SkipToEndElement 方法略過目前項目內容的驗證，並準備<xref:System.Xml.Schema.XmlSchemaValidator>物件以驗證父項目的內容中的內容; 它相當於略過目前項目的所有子系的驗證，然後再呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>方法。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> </xref:System.Xml.Schema.XmlSchemaValidator>      -如果已成功略過目前項目內容，<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定）<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      > [!NOTE] > 略過的內容會報告任何驗證錯誤。"
  syntax:
    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>其屬性已設定，如果已成功略過目前項目內容的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SkipToEndElement 方法不正確的順序呼叫。 例如，在呼叫 SkipToEndElement 之後呼叫 SkipToEndElement。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定正在驗證之 XML 節點的來源 URI。"
  remarks: "-   URI 所報告任何來源<xref:System.Xml.Schema.XmlSchemaValidationException>驗證程序期間擲回。</xref:System.Xml.Schema.XmlSchemaValidationException>      -如果未設定 SourceUri 屬性，XML 文件的檔案名稱是<xref:System.String.Empty>驗證錯誤訊息中。</xref:System.String.Empty>"
  syntax:
    content: public Uri SourceUri { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>物件，代表要驗證的 XML 節點的來源 URI，預設值為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Uri>"
  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證的屬性名稱、 命名空間 URI 和目前的項目內容中的值。"
  remarks: "以下是使用 ValidateAttribute 方法時要考慮的重要注意事項。      -<xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>驗證目前項目使用的所有屬性之後，必須呼叫方法<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>方法。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -如果<xref:System.Xml.Schema.XmlSchemaAttribute>物件傳遞給<xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>方法，ValidateAttribute 方法會驗證對屬性<xref:System.Xml.Schema.XmlSchemaAttribute>物件。</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -如果在目前的項目內容中，成功驗證屬性<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "要驗證之屬性的本機名稱。"
    - id: namespaceUri
      type: System.String
      description: "命名空間 URI 之屬性的驗證。"
    - id: attributeValue
      type: System.String
      description: "要驗證之屬性的值。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的屬性設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "已驗證之屬性的值。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "屬性目前的項目內容中無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如，呼叫<> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>之後"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個指定的參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證的屬性名稱、 命名空間 URI 和目前的項目內容中的值。"
  remarks: "以下是使用 ValidateAttribute 方法時要考慮的重要注意事項。      -<xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>驗證目前項目使用的所有屬性之後，必須呼叫方法<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>方法。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -如果<xref:System.Xml.Schema.XmlSchemaAttribute>物件傳遞給<xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>方法，ValidateAttribute 方法會驗證對屬性<xref:System.Xml.Schema.XmlSchemaAttribute>物件。</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -如果在目前的項目內容中，成功驗證屬性<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "要驗證之屬性的本機名稱。"
    - id: namespaceUri
      type: System.String
      description: "命名空間 URI 之屬性的驗證。"
    - id: attributeValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>用於傳遞屬性的值為 Common Language Runtime (CLR) 型別與 XML 結構描述定義語言 (XSD) 類型的屬性。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的屬性設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "已驗證之屬性的值。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "屬性目前的項目內容中無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如，呼叫<> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>之後"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個指定的參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證目前內容中的元素。"
  remarks: "以下是使用 ValidateElement 方法時要考慮的重要注意事項。      -如果在目前內容中，已成功驗證項目名稱<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -如果是無效的項目名稱或其任何屬性目前的內容，<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>，否則為<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "要驗證之項目的本機名稱。"
    - id: namespaceUri
      type: System.String
      description: "命名空間驗證項目的 URI。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的項目名稱設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "無法在目前內容中無效的項目名稱。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如， <> </> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證與目前內容中的元素`xsi:Type`， `xsi:Nil`， `xsi:SchemaLocation`，和`xsi:NoNamespaceSchemaLocation`屬性指定的值。"
  remarks: "以下是使用 ValidateElement 方法時要考慮的重要注意事項。      -如果在目前內容中，已成功驗證項目名稱<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -如果項目名稱或其任何屬性不適用於目前的內容，<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>，否則為<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>      -如果<xref:System.Xml.Schema.XmlSchemaValidationFlags>值並未當做參數傳遞<xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A>建構函式，`xsi:SchemaLocation`和`xsi:NoNamespaceSchemaLocation`屬性值會被忽略。</xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> </xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);
    parameters:
    - id: localName
      type: System.String
      description: "要驗證之項目的本機名稱。"
    - id: namespaceUri
      type: System.String
      description: "命名空間驗證項目的 URI。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的項目名稱設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: xsiType
      type: System.String
      description: "`xsi:Type`屬性值的項目。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: xsiNil
      type: System.String
      description: "`xsi:Nil`屬性值的項目。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: xsiSchemaLocation
      type: System.String
      description: "`xsi:SchemaLocation`屬性值的項目。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: xsiNoNamespaceSchemaLocation
      type: System.String
      description: "`xsi:NoNamespaceSchemaLocation`屬性值的項目。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "無法在目前內容中無效的項目名稱。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如， <> </> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證項目的文字內容是否有效，根據其資料類型，具有簡單內容的項目，驗證目前項目的內容是否完整項目具有複雜內容。"
  remarks: "以下是使用 ValidateEndElement 方法時要考慮的重要注意事項。      -若為具有簡單內容的項目，方法會驗證項目的文字內容根據其資料類型有效，且傳回的已剖析 ValidateEndElement 具類型值。 項目的文字內容被取自<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>先前呼叫的結果      -若為具有複雜內容元素，ValidateEndElement 方法會驗證目前項目的內容是否完整。      -如果項目都有預設值，從 ValidateEndElement 方法傳回的值會是項目的預設值。      -如果<xref:System.Xml.Schema.XmlSchemaValidator>物件以建構<xref:System.Xml.Schema.XmlSchemaValidationFlags>值做為參數，識別條件約束規則 （如果有的話），套用至項目 ValidateEndElement 方法會檢查。</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -如果在目前內容中，已成功驗證元素<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的項目設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "如果元素具有簡單內容之已剖析的輸入項目的文字值。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "在元素內容不正確。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如，如果<> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>之後呼叫方法"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "確認指定的項目文字內容是否根據其資料類型有效。"
  remarks: "> [!IMPORTANT]> 如果您要針對驗證`xs:key`， `xs:keyref`，或`xs:unique`識別條件約束，請勿使用 ValidateEndElement 方法多載。 請改為呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>方法並將它傳遞項目的值。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 然後呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>方法多載會採用<xref:System.Xml.Schema.XmlSchemaInfo>做為引數，來檢查項目的文字內容是否根據其資料類型有效。</xref:System.Xml.Schema.XmlSchemaInfo> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>       以下是使用 ValidateEndElement 方法時要考慮的重要注意事項。      -若為具有簡單內容的項目，方法會驗證項目的文字內容根據其資料類型有效，且傳回的已剖析 ValidateEndElement 具類型值。 從具型別做為參數傳遞的內容取得項目的文字內容。      假設呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>方法可能先前已，<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -如果項目具有複雜內容<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException>      -如果<xref:System.Xml.Schema.XmlSchemaValidator>物件以建構<xref:System.Xml.Schema.XmlSchemaValidationFlags>值做為參數，識別條件約束規則 （如果有的話），套用至項目 ValidateEndElement 方法會檢查。</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -如果在目前內容中，已成功驗證元素<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定） <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>， <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>，和<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性會設定與驗證的結果。</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證的文字內容的項目設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: typedValue
      type: System.Object
      description: "輸入的文字內容的項目。"
    return:
      type: System.Object
      description: "已剖析的輸入項目的簡單內容。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "項目的文字內容無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 不正確的順序呼叫方法 (例如，如果<> *> 方法呼叫之後呼叫<> *>)，呼叫<> *> 方法所做之前，或在元素具有複雜的內容。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "輸入的文字內容參數不可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證是否所有必要的屬性項目內容中均已存在，並準備<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>来驗證子內容項目的物件。"
  remarks: "以下是使用 ValidateEndOfAttributes 方法時要考慮的重要注意事項。      -<xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>方法一律會呼叫之前 ValidateEndOfAttributes。</xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -ValidateEndOfAttributes 必須呼叫方法之前的項目內容的驗證。      -如果項目內容中的所有必要的屬性不存在，<xref:System.Xml.Schema.XmlSchemaInfo>物件的 （如果已指定）<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]"
  syntax:
    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>成功驗證所有必要的屬性項目內容中有設定其屬性的物件。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "找不到一或多個目前的項目內容中的必要屬性。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ValidateEndOfAttributes 方法不正確的順序呼叫。 例如，在呼叫<xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>之後呼叫 ValidateEndOfAttributes"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個指定的參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  id: ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證是否文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定允許在目前的項目內容中，並累積文件驗證目前元素具有簡單內容。"
  remarks: "以下是使用 ValidateText 方法時要考慮的重要注意事項。      -如果元素具有簡單內容，文字`string`指定串連 ValidateText 方法，直到每次呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>方法呼叫。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 當<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>呼叫方法時，會驗證所有文字。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -如果項目具有複雜內容時，就會不發生任何文字串連。"
  syntax:
    content: public void ValidateText (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>來驗證目前元素內容中。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定目前的項目內容中不允許。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如， <> </> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>參數不可為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  id: ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證所傳回的文字是否<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;></xref>允許在目前的項目內容中，指定的物件，並累積文件驗證目前元素具有簡單內容。"
  remarks: "以下是使用 ValidateText 方法時要考慮的重要注意事項。      -如果元素具有簡單內容，文字`string`指定串連 ValidateText 方法，直到每次呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>方法呼叫。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 當<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>呼叫方法時，會驗證所有文字。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -如果項目具有複雜內容時，就會不發生任何文字串連。"
  syntax:
    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>用來將文字值傳遞做為 Common Language Runtime (CLR) 類型與屬性的 XML 結構描述定義語言 (XSD) 類型相容。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定目前的項目內容中不允許。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如， <> </> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>參數不可為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  id: ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證中的空間是否白色<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定允許在目前的項目內容中，並且累積空白字元以進行驗證，如果在目前元素具有簡單內容。"
  syntax:
    content: public void ValidateWhitespace (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "泛空白字元<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>來驗證目前元素內容中。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "目前的項目內容中不允許空白字元。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如，如果<> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "驗證是否所傳回的泛空白字元<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;></xref>指定物件允許在目前的項目內容中，並且累積空白字元以進行驗證，如果在目前元素具有簡單內容。"
  syntax:
    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>用來傳遞為 Common Language Runtime (CLR) 類型的泛空白字元值與屬性的 XML 結構描述定義語言 (XSD) 類型相容。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "目前的項目內容中不允許空白字元。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 方法不會以正確的順序呼叫。例如，如果<> *> 呼叫<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>之後呼叫方法"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref>結構描述驗證警告及結構描述驗證期間發生的錯誤。"
  remarks: "如果沒有<xref:System.Xml.Schema.ValidationEventHandler>指定，則<xref:System.Xml.Schema.XmlSchemaValidationException>會擲回的所有結構描述驗證錯誤<xref:System.Xml.Schema.XmlSeverityType>的<xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType>值</xref:System.Xml.Schema.XmlSeverityType></xref:System.Xml.Schema.XmlSchemaValidationException></xref:System.Xml.Schema.ValidationEventHandler> <xref:System.Xml.Schema.XmlSchemaValidationException>不會擲回的驗證警告<xref:System.Xml.Schema.XmlSeverityType>的<xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType>值</xref:System.Xml.Schema.XmlSeverityType></xref:System.Xml.Schema.XmlSchemaValidationException>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  id: ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定驗證事件的傳送者物件形式傳送的物件。"
  remarks: ''
  example:
  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.
  syntax:
    content: public object ValidationEventSender { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>; 這是預設<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>物件。</xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "設定<xref href=&quot;System.Xml.XmlResolver&quot;></xref>物件用來解析`xs:import`和`xs:include`項目，如同`xsi:schemaLocation`和`xsi:noNamespaceSchemaLocation`屬性。"
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>物件，則為預設值是<xref href=&quot;System.Xml.XmlUrlResolver&quot;></xref>物件。"
  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
- uid: System.Xml.Schema.XmlSchemaAttribute[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaAttribute
    name: XmlSchemaAttribute
    nameWithType: XmlSchemaAttribute
    fullName: XmlSchemaAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
- uid: System.Xml.Schema.XmlSchemaParticle[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaParticle
    name: XmlSchemaParticle
    nameWithType: XmlSchemaParticle
    fullName: XmlSchemaParticle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: true
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInfo
  nameWithType: XmlSchemaInfo
  fullName: System.Xml.Schema.XmlSchemaInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlValueGetter
  parent: System.Xml.Schema
  isExternal: false
  name: XmlValueGetter
  nameWithType: XmlValueGetter
  fullName: System.Xml.Schema.XmlValueGetter
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator.XmlSchemaValidator
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema
  nameWithType: XmlSchemaValidator.AddSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation
  nameWithType: XmlSchemaValidator.EndValidation
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes
  nameWithType: XmlSchemaValidator.GetExpectedAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles
  nameWithType: XmlSchemaValidator.GetExpectedParticles
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize
  nameWithType: XmlSchemaValidator.Initialize
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement
  nameWithType: XmlSchemaValidator.SkipToEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute
  nameWithType: XmlSchemaValidator.ValidateAttribute
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement
  nameWithType: XmlSchemaValidator.ValidateElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement
  nameWithType: XmlSchemaValidator.ValidateEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText
  nameWithType: XmlSchemaValidator.ValidateText
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace
  nameWithType: XmlSchemaValidator.ValidateWhitespace
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
