### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  id: WindowsFormsApplicationBase
  children:
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  langs:
  - csharp
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  type: Class
  summary: "提供屬性、 方法和目前的應用程式的相關事件。"
  remarks: "所公開的屬性`My.Application`物件只與目前的應用程式或 DLL 相關聯的傳回資料。 任何系統層級資訊可以修改為`My.Application`。       `My.Application`物件組成下列類別:-<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>提供適用於所有專案的成員。</xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>      -WindowsFormsApplicationBase 提供可用在 Windows Form 應用程式中的成員。      -<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>提供主控台應用程式中可用的成員。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>"
  example:
  - "This example uses a loop to iterate through the application's open forms, selects the forms that can be accessed directly by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. For information about how to access the open forms, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`."
  syntax:
    content: 'public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;></xref>類別。"
  syntax:
    content: public WindowsFormsApplicationBase ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  id: '#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;></xref>與指定的驗證模式的類別。"
  remarks: "如果`authenticationMode`參數是<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>列舉值，則這個建構函式會嘗試設定目前的執行緒<xref:System.Threading.Thread.CurrentPrincipal%2A>屬性<xref:System.Security.Principal.WindowsPrincipal>目前的使用者。</xref:System.Security.Principal.WindowsPrincipal> </xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>       如果`authenticationMode`參數是<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>列舉值，則這個建構函式會保留目前的執行緒<xref:System.Threading.Thread.CurrentPrincipal%2A>屬性保持不變。</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>"
  syntax:
    content: public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);
    parameters:
    - id: authenticationMode
      type: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&quot;></xref>. 指定應用程式的驗證模式。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  id: ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得<xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref>目前執行緒的 Windows Forms 應用程式的物件。"
  remarks: "這是進階的成員;它不會出現在 IntelliSense 中除非您按一下**所有** 索引標籤。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  syntax:
    content: public System.Windows.Forms.ApplicationContext ApplicationContext { get; }
    return:
      type: System.Windows.Forms.ApplicationContext
      description: "這個屬性會傳回<xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref>目前執行緒的物件。 該物件包含有關執行緒的內容資訊。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  id: DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "處理目前在訊息佇列中的所有 Windows 訊息。"
  remarks: "`My.Application.DoEvents`方法可讓您的應用程式來處理您的程式碼執行時所引發的其他事件。 `My.Application.DoEvents`方法具有相同的行為<xref:System.Windows.Forms.Application.DoEvents%2A>方法。</xref:System.Windows.Forms.Application.DoEvents%2A>       當您執行的 Windows Form 應用程式時，它會建立新的表單，然後等候處理的事件。 每次表單處理事件，例如按一下按鈕，它會處理與該事件相關聯的所有程式碼。 在佇列中等候所有其他事件。 當您的程式碼處理事件時，您的應用程式沒有回應。 例如，視窗不會重新繪製如果拖曳至另一個視窗頂端。       如果您呼叫`My.Application.DoEvents`程式碼，在您的應用程式可以處理其他事件。 例如，如果您的程式碼將資料加入至<xref:System.Windows.Forms.ListBox>在迴圈中，並在它會呼叫的迴圈的每個步驟之後`My.Application.DoEvents`，透過它拖曳至另一個視窗時，會重新繪製您的表單</xref:System.Windows.Forms.ListBox> 如果您移除`My.Application.DoEvents`從程式碼中，您的表單將不重新繪製按鈕的 click 事件處理常式完成之前執行。       一般而言，您可以使用這個方法來處理訊息迴圈中。      > [!NOTE] >`My.Application.DoEvents`方法不會處理事件中完全相同的方式與表單。 使用多執行緒進行直接處理事件的形式。 如需詳細資訊，請參閱[多執行緒應用程式](~/add/includes/ajax-current-ext-md.md)。      > [!CAUTION] > 處理使用者介面 (UI) 事件的方法如果呼叫`My.Application.DoEvents`方法，此方法可能是重新輸入之前完成。 這可能是因為`My.Application.DoEvents`方法處理 Windows 訊息和 Windows 訊息可以引發事件。       下表列出的工作，包含範例`My.Application.DoEvents`方法。      |||  |-|-|  |若要 |請參閱 |  |讓表單 ui 輸入忙碌時回應 |[逐步解說︰ 處理事件](~/add/includes/ajax-current-ext-md.md)|     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example uses the `My.Application.DoEvents` method to allow the UI for `TextBox1` to update.  \n  \n [!code-vb[VbVbalrMyApplication#6](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#6)]  \n  \n This code should be in a form that has a `TextBox1` component with a `Text` property."
  syntax:
    content: public void DoEvents ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  id: EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "決定此應用程式會使用 Windows XP 樣式的視窗、 控制項和等等。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法會使用這個屬性，以判斷是否要呼叫<xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.</xref:System.Windows.Forms.Application.EnableVisualStyles%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected bool EnableVisualStyles { get; set; }
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>值，指出此應用程式是否將使用 XP Windows 樣式的視窗、 控制項和等等。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  id: HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "隱藏應用程式的啟動顯示畫面。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>類別會建立另一個執行緒上的啟動顯示畫面。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> 這個方法封送處理至正確的執行緒呼叫。       完成主要表單時，會呼叫這個方法載入。"
  syntax:
    content: protected void HideSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  id: IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "判斷此應用程式是否為單一執行個體的應用程式。"
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>方法使用這個屬性來判斷此應用程式是否為單一執行個體的應用程式。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>"
  syntax:
    content: protected bool IsSingleInstance { get; set; }
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>值，指出此應用程式是否為單一執行個體的應用程式。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  id: MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得或設定此應用程式的主要表單。"
  remarks: "使用`MainForm`屬性來取得或設定<xref:System.Windows.Forms.Form>Visual Basic 應用程式啟動/關機模型用做應用程式的主要表單的物件。</xref:System.Windows.Forms.Form>       此屬性支援[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式啟動/關機模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       應用程式關閉時，不會保存此屬性的變更。 若要永久變更，主要表單，您必須變更中的設定**專案設計工具**。"
  syntax:
    content: protected System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "取得或設定此應用程式的主要表單。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  id: MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "決定時間 （毫秒），啟動顯示畫面會顯示的最小長度。"
  remarks: "`My.Application.MinimumSplashScreenDisplayTime`屬性可讓您指定您想要顯示的應用程式的啟動顯示畫面時間的最小長度。 如果主要表單完成初始設定的較少的時間比這個屬性所指定的內容，啟動顯示畫面會一直要求的時間為止，此時會顯示主要表單的數量。 如果您的應用程式需要較長的時間啟動，啟動顯示畫面已關閉，一旦主要表單變為作用中。       當您使用 專案設計工具的應用程式加入啟動顯示畫面時，它會設定`My.Application.MinimumSplashScreenDisplayTime`屬性為 2000，讓兩秒的最小的顯示時間。       此屬性支援[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       您應該設定`My.Application.MinimumSplashScreenDisplayTime`屬性會覆寫方法中的<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>或<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> 覆寫方法的程式碼<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>類別應該輸入在 ApplicationEvents.vb 檔案中，預設為隱藏。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||  |-|  |若要存取程式碼編輯器視窗，覆寫成員 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br />     如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example demonstrates how to set the `My.Application.MinimumSplashScreenDisplayTime` property by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> property.  \n  \n [!code-vb[VbVbalrMyApplication#51](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#51)]  \n  \n This example requires that the project have a splash screen.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public int MinimumSplashScreenDisplayTime { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 時間 （毫秒），啟動顯示畫面會顯示最小長度。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "網路的可用性變更時發生。"
  remarks: "應用程式引發`NetworkAvailabilityChanged`事件每次變更網路的可用性。 您可以使用<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>屬性`e`參數，以取得新的網路連線狀態。</xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 若要取得的網路連線的目前狀態，請使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>屬性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>       與其他使用者介面事件的應用程式的主執行緒上，會引發這個事件。 這可讓事件處理常式，以直接存取應用程式的 UI。 不過，如果應用程式忙碌處理另一個使用者介面事件時都會引發這個事件，此事件無法處理直到完成其他事件處理常式，或呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>       <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>事件提供相同的功能，因為此事件但為適用於所有應用程式類型。</xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>       程式碼`NetworkAvailabilityChanged`事件處理常式會儲存在 ApplicationEvents.vb 檔案中，預設為隱藏。      ||  |-|  |若要存取的應用程式事件的程式碼編輯器視窗 |  |&1;。  在中選取專案**方案總管 中。** 按一下**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br />     如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |     > [!NOTE] > 許多網路集線器會提供網路連線，即使較大的網路連線中斷的中樞。 因此，對於有線連線，此事件表示變更電腦與中心之間的連線。      > [!NOTE] > `NetworkAvailabilityChanged` Windows 95 及 Windows 98 上執行時，或由非系統管理員在 Windows 2000 上執行時，由應用程式不引發事件。 如果您的應用程式可能會執行這些作業系統上，使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>屬性來檢查網路可用性。</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example calls the `SetConnectionStatus` method of the default `Form1` class when the network availability changes.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section.  \n  \n The project should have a form named `Form1`. It should have a method named `SetConnectionStatus` that takes a `Boolean` parameter.  \n  \n [!code-vb[VbVbalrMyApplication#9](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#9)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  id: OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "在衍生類別中覆寫，可讓設計工具發出設定啟動顯示畫面和主要表單的程式碼。"
  remarks: "根據預設，這個方法沒有任何作用。 不過，當您選取主表單中的應用程式[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**專案設計工具**，設計工具會覆寫此方法時，設定方法<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>主要表單的新執行個體的屬性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>       這個方法會呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>"
  syntax:
    content: protected virtual void OnCreateMainForm ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  id: OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "當在衍生類別中覆寫時，可讓設計工具發出初始化啟動顯示畫面的程式碼。"
  remarks: "根據預設，這個方法沒有任何作用。 如果您選取應用程式啟動顯示畫面[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**專案設計工具**，設計工具覆寫 OnCreateSplashScreen 方法設定的方法與<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>啟動顯示畫面表單的新執行個體的屬性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>       這個方法會呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected virtual void OnCreateSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  id: OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "設定視覺化樣式、 文字顯示樣式和目前的主體，主應用程式的執行緒 （如果應用程式使用 Windows 驗證），並初始化啟動顯示畫面中，如果已定義。"
  remarks: "根據預設，這個方法會設定視覺化樣式、 文字顯示樣式和目前的主體，主應用程式的執行緒 （如果應用程式使用 Windows 驗證），並呼叫`ShowSplashScreen`如果既未`/nosplash`也`-nosplash`做為命令列引數。       這個方法會呼叫下列方法:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>"
  syntax:
    content: protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection<string> commandLineArgs);
    parameters:
    - id: commandLineArgs
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;的<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>，包含命令列引數為目前的應用程式的字串。"
    return:
      type: System.Boolean
      description: "A<xref:System.Boolean>指出應用程式啟動時應該繼續執行。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  id: OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "主應用程式時即可開始執行初始設定完成之後提供的起點。"
  remarks: "根據預設之前它進入 Windows Form 訊息迴圈中，, 這個方法會呼叫`OnCreateMainForm`（要建立應用程式的主要表單） 和`HideSplashScreen`（若要關閉啟動顯示畫面） 方法:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> 提供方法，讓設計工具發出初始化主要表單的程式碼。           根據預設，這個方法沒有任何作用。 不過，當您選取主表單中的應用程式[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]**專案設計工具**，設計工具會覆寫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>方法設定的方法與<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>主要表單的新執行個體的屬性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A> 如果應用程式具有定義的啟動顯示畫面，而其為開啟，這個方法會關閉在啟動顯示畫面。           根據預設，這個方法會關閉在啟動顯示畫面。"
  syntax:
    content: protected virtual void OnRun ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  id: OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "當在衍生類別中覆寫時，允許應用程式關閉時執行的程式碼。"
  remarks: "此方法不會執行主應用程式中發生未處理例外狀況。       根據預設，這個方法會引發<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>"
  syntax:
    content: protected virtual void OnShutdown ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  id: OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "當在衍生類別中覆寫時，允許應用程式啟動時執行的程式碼。"
  remarks: "根據預設，這個方法會引發<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 此事件處理常式可以設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>事件引數的屬性。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 如果<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>是`True`，這個方法會傳回`False`取消應用程式啟動。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 否則，這個方法會傳回`True`。"
  syntax:
    content: protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupEventArgs&quot;></xref>. 包含應用程式的命令列引數，並指出是否應取消應用程式啟動。"
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>指出是否應用程式應該繼續啟動。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  id: OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "在衍生類別中覆寫，可讓後續的執行個體的單一執行個體的應用程式啟動時執行的程式碼。"
  remarks: "根據預設，這個方法會引發<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> 此事件處理常式可以設定<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>事件引數的屬性。</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 如果<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>是`True`，方法會啟動主要表單。</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> 否則，主要表單會處於目前狀態。"
  syntax:
    content: protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs&quot;></xref>. 包含命令列引數，後續的應用程式執行個體，並指出第一個應用程式執行個體是否應移到結束的例外狀況處理常式時前景。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  id: OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "當在衍生類別中覆寫時，允許應用程式中發生未處理的例外狀況時執行的程式碼。"
  remarks: "根據預設，這個方法會引發<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException>只要偵錯工具未附加，而且使用者正在處理的事件`UnhandledException`事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> 此事件處理常式可以設定<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>屬性。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 如果<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>是`False`，或如果未處理的事件，應用程式結束時傳回的例外狀況處理常式。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 否則，控制應用程式會傳回至 Windows Form 訊息迴圈。"
  syntax:
    content: protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);
    parameters:
    - id: e
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs&quot;></xref>."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>，指出是否<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&quot;></xref>引發事件。</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  id: OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得集合中的應用程式的所有開啟表單。"
  remarks: "`My.Application.OpenForms`屬性會取得之應用程式的所有開啟表單的集合。 行為等同於<xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>屬性。</xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>      > [!NOTE] >`My.Application.OpenForms`屬性會傳回所有開啟表單中，不論哪一個執行緒的開啟它們。 您應該檢查<xref:System.Windows.Forms.Control.InvokeRequired%2A>屬性的每個表單之前存取它; 否則它可能會擲回<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Windows.Forms.Control.InvokeRequired%2A>      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example loops over the application's open forms, selects the ones directly accessible by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example loops over the application's open forms and displays their titles in a <xref:System.Windows.Forms.ListBox> control.  \n  \n [!code-vb[VbVbalrMyApplication#11](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#11)]"
  syntax:
    content: public System.Windows.Forms.FormCollection OpenForms { get; }
    return:
      type: System.Windows.Forms.FormCollection
      description: "A <xref href=&quot;System.Windows.Forms.FormCollection&quot;> </xref>物件，其中包含的所有應用程式的開啟表單。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  id: Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "設定並啟動 Visual Basic 應用程式模型。"
  remarks: "`My.Application.Run`方法提供的支援[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式模型。 這個方法應該呼叫只會從應用程式的`Sub Main`。 根據預設，`Sub Main`的 Windows Form 應用程式會呼叫這個方法。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  syntax:
    content: public void Run (string[] commandLine);
    parameters:
    - id: commandLine
      type: System.String[]
      description: "類型陣列<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。 從命令列<xref uid=&quot;langword_csharp_Sub Main&quot; name=&quot;Sub Main&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  id: SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "決定是否應用程式在結束時儲存使用者設定。"
  remarks: "`SaveMySettingsOnExit`屬性可讓使用者變更應用程式在執行階段所儲存的設定。 您可以使用，以明確地儲存設定變更<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法`My.Settings`物件。</xref:System.Configuration.ApplicationSettingsBase.Save%2A> 如需有關變更並儲存設定的詳細資訊，請參閱[應用程式屬性](~/add/includes/ajax-current-ext-md.md)。       應用程式關閉時，不會保存此屬性的變更。 若要變更`SaveMySettingsOnExit`屬性永久，您必須變更設定中的**專案設計工具**: | |  |-|  |若要變更 專案設計工具中的設定 |  |&1;。  在中選取專案**方案總管 中**。 按一下**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.選取**在關閉儲存 My.Settings**。 |     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example has two parts.  \n  \n-   The `InitializeSaveMySettingsOnExit` subroutine, which initializes the checked state of a <xref:System.Windows.Forms.CheckBox> control to the current value of the `SaveMySettingsOnExit` property.  \n  \n-   The `SaveMySettingsOnExit_CheckedChanged` subroutine, which handles changes to a <xref:System.Windows.Forms.CheckBox> control to update the `My.Application.SaveMySettingsOnExit` property.  \n  \n [!code-vb[VbVbalrMyApplication#12](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#12)]  \n  \n For this example to work, your application must have a <xref:System.Windows.Forms.CheckBox> control named `SaveMySettingsOnExit`."
  syntax:
    content: public bool SaveMySettingsOnExit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>指出應用程式儲存使用者設定，在結束。 否則，不會隱含地儲存設定。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  id: ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "決定應用程式是否有定義，啟動顯示畫面中，若是如此，顯示。"
  remarks: "根據預設，這個方法會呼叫`OnCreateSplashScreen`執行緒安全的方式。       ShowSplashScreen 方法包含的程式碼會顯示啟動顯示畫面上的最小的所指定的毫秒數<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>屬性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> 若要使用這項功能，您必須設定`My.Application.MinimumSplashScreenDisplayTime`ShowSplashScreen 會覆寫方法中的屬性或<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>方法，或新增到您的應用程式使用的啟動顯示畫面**專案設計工具**。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>       這個方法會呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected void ShowSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  id: Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "應用程式關閉時發生。"
  remarks: "應用程式引發`Shutdown`結束前的事件。 這可讓您控制如何在應用程式關閉其資源。 此事件是屬於[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       程式碼`Shutdown`事件處理常式會儲存在 ApplicationEvents.vb 檔案中，預設為隱藏。      ||  |-|  |若要存取的應用程式事件的程式碼編輯器視窗 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br />     如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example logs messages when the application shuts down.  \n  \n [!code-vb[VbVbalrMyApplication#13](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#13)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [How to: Log Messages When the Application Starts or Shuts Down](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  id: ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "判斷應用程式的主要表單關閉時，會發生什麼事。"
  remarks: "<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>方法會檢查這個屬性來判斷是否應用程式應該關閉時，主要表單關閉時，或是如果另一個開啟表單應該升級為新的主要表單的值。</xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: protected Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.ShutdownMode&quot;> </xref>列舉值，指出應用程式應該怎麼主要表單關閉時。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  id: SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得或設定此應用程式啟動顯示畫面。"
  remarks: "`My.Application.SplashScreen`屬性可讓您取得或設定<xref:System.Windows.Forms.Form>應用程式當做啟動顯示畫面使用的物件、 應用程式正在啟動時，會顯示第一個圖形形式。</xref:System.Windows.Forms.Form>       此屬性支援 Visual Basic 應用程式模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       應用程式關閉時，不會保存此屬性的變更。 若要永久變更啟動顯示畫面，您必須變更中的設定**專案設計工具**。      ## 專案類型的可用性 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have a property named `Status` that updates its user interface.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Forms.Form SplashScreen { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>應用程式當做啟動顯示畫面使用的物件。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "相同的值指派給這個屬性與<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>屬性。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  id: Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "應用程式啟動時，就會發生。"
  remarks: "一般 （非單一的執行個體） 應用程式引發`Startup`每次啟動的事件。 單一執行個體的應用程式引發`Startup`事件時啟動僅如果應用程式尚未使用中; 否則便會產生`StartupNextInstance`事件。 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>       此事件是屬於[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       您可以使用<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`e`參數來控制應用程式的啟動表單的載入。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 當<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性設定為`True`，啟動表單不會啟動。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 在此情況下，您的程式碼應該呼叫替代啟動程式碼路徑。       您可以使用<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>屬性`e`參數或<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>屬性來存取應用程式的命令列引數。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> </xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>       程式碼`Startup`事件處理常式會儲存在 ApplicationEvents.vb 檔案中，預設為隱藏。      ||  |-|  |若要存取的應用程式事件的程式碼編輯器視窗 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br /><br /> 如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have property named `Status` that updates its user interface.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  id: StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "發生於嘗試啟動單一執行個體的應用程式和應用程式已在使用中。"
  remarks: "單一執行個體的應用程式時，引發 StartupNextInstance 事件您嘗試重新啟動應用程式時已在使用中。 當單一執行個體的應用程式第一次啟動時，會引發<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>事件。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>       此事件是屬於[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]應用程式模型。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       與其他使用者介面事件的應用程式的主執行緒上，會引發這個事件。 這可讓應用程式的使用者介面直接存取此事件處理常式。 不過，如果應用程式忙碌處理另一個使用者介面事件時都會引發這個事件，此事件無法處理直到完成其他事件處理常式，或呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>      > [!NOTE] >`StartupNextInstance`只能在單一執行個體的應用程式中引發事件。 若要啟用您的應用程式的單一執行個體行為，您必須檢查**讓單一執行個體的應用程式**專案設計工具中的核取方塊。      ||  |-|  |若要建立應用程式的單一執行個體 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.選取**讓單一執行個體的應用程式**核取方塊。 |      您必須使用<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>屬性`e`參數來存取後續嘗試啟動單一執行個體的應用程式的引數。</xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>屬性會提供用來啟動單一執行個體的應用程式的第一個執行個體的引數。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>       StartupNextInstance 事件處理常式的程式碼會儲存在 ApplicationEvents.vb 檔案中，預設為隱藏。      ||  |-|  |若要存取的應用程式事件的程式碼編輯器視窗 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br />     如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |      下表列出包含工作的範例`My.Application.StartupNextInstance`事件。      |||  |-|-|  |若要 |請參閱 |  |檢查第一個應用程式執行個體的命令列引數 |<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |[是] |  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>"
  example:
  - "This example uses the `e` parameter of the StartupNextInstance event handler to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#15](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#15)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  id: UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "發生於應用程式遇到未處理的例外狀況。"
  remarks: "應用程式引發`UnhandledException`時遇到未處理的例外狀況的事件。 此事件是在 Visual Basic 應用程式模型的一部分。 如需詳細資訊，請參閱[Visual Basic 應用程式模型概觀](~/add/includes/ajax-current-ext-md.md)。       您可以使用<xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>屬性`e`存取導致此事件的未處理例外狀況的參數。</xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>       您可以使用<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>屬性`e`參數來控制是否在應用程式結束。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 根據預設，<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>是`True`。</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> 因此，在應用程式結束後完成`UnhandledException`事件處理常式。 您可以將值設定為`False`中`UnhandledException`事件處理常式，以保留應用程式執行，並讓它回到等候狀態。       程式碼`UnhandledException`事件處理常式會儲存在 ApplicationEvents.vb 檔案中，預設為隱藏。      ||  |-|  |若要存取的應用程式事件的程式碼編輯器視窗 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。 |      如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > Visual Basic 編譯器會防止建立無法引發此事件，以啟用偵錯工具來處理未處理的例外狀況偵錯的應用程式。 這表示，如果您要測試您的應用程式藉由執行在 Visual Studio 整合式開發環境偵錯工具中，您`UnhandledException`將不會呼叫事件處理常式。 如需建置應用程式進行偵錯的詳細資訊，請參閱[/debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。      ## 下表列出包含工作的範例工作`My.Application.UnhandledException`事件。      |||  |-|-|  |若要 |請參閱 |  |記錄未處理的例外狀況 |[How to︰ 記錄例外狀況](~/add/includes/ajax-current-ext-md.md)|     # # 可用性專案類型 | | |  |-|-|  |專案類型 |可用 |  |Windows Form 應用程式 |**Yes**|  |類別庫 |否 |  |主控台應用程式 |否 |  |Windows Form 控制項程式庫 |否 |  |Web 控制項程式庫 |否 |  |Windows 服務 |否 |  |網站 |否 |"
  example:
  - "This example uses the `My.Application.UnhandledException` event to log any unhandled exceptions.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the procedure found in this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md).  \n  \n Because the `UnhandledException` event is not raised when a debugger is attached to the application, you have to run this example outside the Visual Studio Integrated Development Environment.  \n  \n [!code-vb[VbVbalrMyApplication#17](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#17)]"
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  id: UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "在衍生類別中覆寫，則這個屬性允許指定應用程式的表單的預設文字轉譯引擎的設計工具。"
  remarks: "根據預設，這個屬性會傳回`False`表示轉譯引擎的 GDI 文字[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]用於應用程式的表單。 不過，您可以覆寫此屬性以傳回`True`並指定應用程式的表單使用 GDI + 文字轉譯引擎，使用 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中。       這個屬性由呼叫<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>建構函式。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>       覆寫方法的程式碼<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>類別應該輸入在 ApplicationEvents.vb 檔案中，預設為隱藏。</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||  |-|  |若要存取程式碼編輯器視窗，覆寫成員 |  |&1;。  在選取的專案**方案總管] 中**，按一下 [**屬性**上**專案**功能表。<br />2.按一下**應用程式** 索引標籤。<br />3.按一下**檢視應用程式事件** 按鈕以開啟程式碼編輯器。<br />     如需詳細資訊，請參閱[應用程式] 頁面上，[專案設計工具 (Visual Basic)](~/add/includes/ajax-current-ext-md.md)。 |"
  example:
  - "This example demonstrates how to set the GDI+ text rendering engine as the application's default rendering engine by overriding the UseCompatibleTextRendering property.  \n  \n```  \nProtected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  \n    Get  \n        ' Use the GDI+ text rendering engine.  \n        Return True  \n    End Get  \nEnd Property  \n```  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: protected static bool UseCompatibleTextRendering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. 值為<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>指出應用程式應該使用的預設文字轉譯引擎[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]。 值為<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>表示應用程式應該使用 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中的文字轉換引擎。"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
- uid: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: AuthenticationMode
  nameWithType: AuthenticationMode
  fullName: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext
  parent: System.Windows.Forms
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventArgs
  nameWithType: StartupEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventArgs
  nameWithType: StartupNextInstanceEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventArgs
  nameWithType: UnhandledExceptionEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
- uid: System.Windows.Forms.FormCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FormCollection
  nameWithType: FormCollection
  fullName: System.Windows.Forms.FormCollection
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownEventHandler
  nameWithType: ShutdownEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownMode
  nameWithType: ShutdownMode
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventHandler
  nameWithType: StartupEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventHandler
  nameWithType: StartupNextInstanceEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventHandler
  nameWithType: UnhandledExceptionEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents
  nameWithType: WindowsFormsApplicationBase.DoEvents
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize
  nameWithType: WindowsFormsApplicationBase.OnInitialize
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun
  nameWithType: WindowsFormsApplicationBase.OnRun
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown
  nameWithType: WindowsFormsApplicationBase.OnShutdown
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup
  nameWithType: WindowsFormsApplicationBase.OnStartup
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run
  nameWithType: WindowsFormsApplicationBase.Run
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
