### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  langs:
  - csharp
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  summary: "代表 zip 封存中的壓縮的檔。"
  remarks: "Zip 封存包含的項目，針對每個壓縮檔。 ZipArchiveEntry 類別可讓您檢查的項目時，內容和開啟或刪除的項目。 當您開啟某個項目時，您可以修改壓縮的檔案寫入該壓縮的檔案資料流。       管理的 zip 封存和其檔案項目方法分散到三個類別︰ <xref:System.IO.Compression.ZipFile>，<xref:System.IO.Compression.ZipArchive>和 ZipArchiveEntry。</xref:System.IO.Compression.ZipArchive> </xref:System.IO.Compression.ZipFile>      |若要...|使用...|  |---------|----------|  |建立 zip 封存的目錄 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |目錄的 zip 封存的內容解壓縮 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |將新檔案加入至現有的 zip 封存 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |擷取 zip 封存中的檔案 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |擷取所有 zip 封存中的檔案 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |若要開啟 zip 封存中所包含的個別檔案資料流 |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |從 zip 封存中刪除的檔案 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      如果您參考`System.IO.Compression.FileSystem`組件在您的專案，您可以存取 ZipArchiveEntry 類別的兩種擴充方法</xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> 這些方法都是<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>和<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>，可讓您解壓縮檔案的項目內容。</xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> `System.IO.Compression.FileSystem`組件不提供[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]。 在[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]應用程式，您可以使用解壓縮的封存內容<xref:System.IO.Compression.DeflateStream>或<xref:System.IO.Compression.GZipStream>，或者您可以使用[!INCLUDE[wrt](~/add/includes/wrt-md.md)]類型[壓縮](http://go.microsoft.com/fwlink/p/?LinkId=246357)和[解壓縮程式](http://go.microsoft.com/fwlink/?LinkId=246358)來壓縮和解壓縮檔案。</xref:System.IO.Compression.GZipStream> </xref:System.IO.Compression.DeflateStream>"
  example:
  - "The first example shows how to create a new entry in a zip archive and write to it.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_1.vb)]  \n  \n The second example shows how to use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> extension method. You must reference the `System.IO.Compression.FileSystem` assembly in your project for the code to execute.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._4_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_2.vb)]"
  syntax:
    content: public class ZipArchiveEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得項目所屬的 zip 封存。"
  syntax:
    content: public System.IO.Compression.ZipArchive Archive { get; }
    return:
      type: System.IO.Compression.ZipArchive
      description: "項目所屬的 zip 封存或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>若已刪除的項目。"
  overload: System.IO.Compression.ZipArchiveEntry.Archive*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得 zip 封存中的項目壓縮的大小。"
  remarks: "無法擷取這個屬性，當模式設定為<xref:System.IO.Compression.ZipArchiveMode>，或將模式設為<xref:System.IO.Compression.ZipArchiveMode>，並且已經開啟的項目。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries in a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and CompressedLength properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._2_1.vb)]"
  syntax:
    content: public long CompressedLength { get; }
    return:
      type: System.Int64
      description: "Zip 封存中的項目壓縮的大小。"
  overload: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "屬性的值不可以使用，因為已修改的項目。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "從 zip 封存中刪除項目。"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.IO.Compression.ZipArchiveEntry.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "項目已經開啟為讀取或寫入。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "除了模式開啟 zip 封存，這個項目的已<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "這個項目的 zip 封存已經過處置。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得 zip 封存中的項目相對路徑。"
  remarks: "The FullName property contains the relative path, including the subdirectory hierarchy, of an entry in a zip archive. (In contrast, the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property contains only the name of the entry and does not include the subdirectory hierarchy.) For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property. The first entry will also have `NewEntry.txt` in the FullName property, but the second entry will have `AddedFolder\\\\NewEntry.txt` in the FullName property.  \n  \n You can specify any string as the path of an entry, including strings that specify invalid and absolute paths. Therefore, the FullName property might contain a value that is not correctly formatted. An invalid or absolute path might result in an exception when you extract the contents of the zip archive."
  example:
  - "The following example shows how to iterate through the contents of a .zip file, and extract files that contain the .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._0_1.vb)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Zip 封存中項目的相對路徑。"
  overload: System.IO.Compression.ZipArchiveEntry.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得或設定的上次變更 zip 封存中的項目的。"
  remarks: "當您建立新的項目從現有的檔案呼叫<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，包含 LastWriteTime 屬性的項目會自動設為上次修改檔案。</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 當您建立新的項目以程式設計方式透過呼叫<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法，包含 LastWriteTime 屬性的項目會自動設定的執行時間。</xref:System.IO.Compression.ZipArchive.CreateEntry%2A> 如果您修改的項目，您必須明確設定包含 LastWriteTime 屬性，如果您想要以反映最新變更的時間值。       當您設定此屬性，<xref:System.DateTimeOffset>值會轉換成特定 zip 封存的時間戳記格式。</xref:System.DateTimeOffset> 此格式支援的兩秒的解析度。 最早的允許的值是 1980 年 1 月 1 日 0:00:00 （午夜）。 最新的允許的值為 2107 年 12 月 31 日 23:59:58 （一個第二個之前午夜）。 如果上次寫入時間的值不是有效的屬性會傳回預設值是 1980 年 1 月 1 日 0:00:00 （午夜）。"
  example:
  - "The following example shows how to open an entry in a zip archive, modify it, and set the LastWriteTime property to the current time.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/p-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/p-system.io.compression._3_1.vb)]"
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    return:
      type: System.DateTimeOffset
      description: "上次變更 zip 封存中的項目。"
  overload: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "嘗試設定此屬性無法在 zip 封存項目，所以<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>模式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>.  \n  \n \\- or -  \n  \n The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> and the entry has been opened."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "嘗試設定此屬性的值，可能是早於 1980 年 1 月 1 日 0:00:00 （午夜） 或晚於 2107 年 12 月 31 日 23:59:58 （一個第二個之前午夜）。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得 zip 封存中的項目未壓縮的大小。"
  remarks: "無法擷取這個屬性，當模式設定為<xref:System.IO.Compression.ZipArchiveMode>，或將模式設為<xref:System.IO.Compression.ZipArchiveMode>，並且已經開啟的項目。</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries from a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the Length and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._1_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "Zip 封存中的項目未壓縮的大小。"
  overload: System.IO.Compression.ZipArchiveEntry.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "屬性的值不可以使用，因為已修改的項目。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得 zip 封存中的檔案名稱的項目。"
  remarks: "Name 屬性包含的部分<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>最後一個目錄分隔符號字元後面接著的屬性 (\\\\)，而且不包含子目錄階層。</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> 例如，如果您在 zip 封存中建立兩個項目使用<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，並提供`NewEntry.txt`做為第一個項目名稱和`AddedFolder\\ ewEntry.txt`針對第二個項目，會有兩個項目`NewEntry.txt`Name 屬性中。</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 第一個項目也會有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性，但是第二個項目會造成`AddedFolder\\ ewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性。</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> </xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>"
  example:
  - "The following example shows how to retrieve entries from a zip archive and evaluate the properties of the entries. It uses the Name property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._4_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Zip 封存中的項目檔案名稱。"
  overload: System.IO.Compression.ZipArchiveEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "從 zip 封存中開啟項目。"
  remarks: "您可以使用這個方法來存取資料流的 zip 封存中的項目。 擷取後的資料流，您可以讀取或寫入資料流。 當您撰寫資料流時，項目所做的修改會出現在 zip 封存。"
  example:
  - "The following example shows how to create a new entry, open it with the Open method, and write to the stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._0_1.vb)]"
  syntax:
    content: public System.IO.Stream Open ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "表示項目內容的資料流。"
  overload: System.IO.Compression.ZipArchiveEntry.Open*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "項目已經在目前開啟以供寫入。       -或者-從封存中刪除項目。       -或-以開啟此項目的封存<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>模式，以及此項目已經被寫入。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "項目是從封存遺漏或已損毀且無法讀取。       -或者-已經使用不支援的壓縮方法壓縮項目。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "這個項目的 zip 封存已經過處置。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "擷取 zip 封存中項目的相對路徑。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "項目，也就是值的相對路徑儲存在<xref:System.IO.Compression.ZipArchiveEntry.FullName*>屬性。</xref:System.IO.Compression.ZipArchiveEntry.FullName*>"
  overload: System.IO.Compression.ZipArchiveEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.IO.Compression.ZipArchiveEntry.Length
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
- uid: System.IO.Compression.ZipArchiveEntry.Archive*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
- uid: System.IO.Compression.ZipArchiveEntry.Delete*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete
  nameWithType: ZipArchiveEntry.Delete
- uid: System.IO.Compression.ZipArchiveEntry.FullName*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
- uid: System.IO.Compression.ZipArchiveEntry.Length*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open
  nameWithType: ZipArchiveEntry.Open
- uid: System.IO.Compression.ZipArchiveEntry.ToString*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString
  nameWithType: ZipArchiveEntry.ToString
