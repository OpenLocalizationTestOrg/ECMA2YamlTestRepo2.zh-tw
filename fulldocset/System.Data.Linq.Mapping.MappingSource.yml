### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MappingSource
  id: MappingSource
  children:
  - System.Data.Linq.Mapping.MappingSource.#ctor
  - System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)
  - System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)
  langs:
  - csharp
  name: MappingSource
  nameWithType: MappingSource
  fullName: System.Data.Linq.Mapping.MappingSource
  type: Class
  summary: "表示對應資訊的來源。"
  remarks: "MappingSource 類別用於將 CLR 物件對應至基礎資料來源中的實體。"
  syntax:
    content: public abstract class MappingSource
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MappingSource.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MappingSource
  langs:
  - csharp
  name: MappingSource()
  nameWithType: MappingSource.MappingSource()
  fullName: System.Data.Linq.Mapping.MappingSource.MappingSource()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Linq.Mapping.MappingSource&quot;></xref>類別。"
  syntax:
    content: protected MappingSource ();
    parameters: []
  overload: System.Data.Linq.Mapping.MappingSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)
  id: CreateModel(System.Type)
  parent: System.Data.Linq.Mapping.MappingSource
  langs:
  - csharp
  name: CreateModel(Type)
  nameWithType: MappingSource.CreateModel(Type)
  fullName: System.Data.Linq.Mapping.MappingSource.CreateModel(Type)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "建立新的對應模型。"
  syntax:
    content: protected abstract System.Data.Linq.Mapping.MetaModel CreateModel (Type dataContextType);
    parameters:
    - id: dataContextType
      type: System.Type
      description: "型別<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>作為基礎的對應。"
    return:
      type: System.Data.Linq.Mapping.MetaModel
      description: "建立的中繼模型要比對目前對應配置。"
  overload: System.Data.Linq.Mapping.MappingSource.CreateModel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)
  id: GetModel(System.Type)
  parent: System.Data.Linq.Mapping.MappingSource
  langs:
  - csharp
  name: GetModel(Type)
  nameWithType: MappingSource.GetModel(Type)
  fullName: System.Data.Linq.Mapping.MappingSource.GetModel(Type)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "傳回的對應模型。"
  syntax:
    content: public System.Data.Linq.Mapping.MetaModel GetModel (Type dataContextType);
    parameters:
    - id: dataContextType
      type: System.Type
      description: "型別<xref href=&quot;System.Data.Linq.DataContext&quot;></xref>来傳回的模型。"
    return:
      type: System.Data.Linq.Mapping.MetaModel
      description: "這個對應來源與相關聯的對應模型。"
  overload: System.Data.Linq.Mapping.MappingSource.GetModel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MappingSource.#ctor
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: MappingSource()
  nameWithType: MappingSource.MappingSource()
  fullName: System.Data.Linq.Mapping.MappingSource.MappingSource()
- uid: System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: CreateModel(Type)
  nameWithType: MappingSource.CreateModel(Type)
  fullName: System.Data.Linq.Mapping.MappingSource.CreateModel(Type)
- uid: System.Data.Linq.Mapping.MetaModel
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Data.Linq.Mapping.MetaModel
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: GetModel(Type)
  nameWithType: MappingSource.GetModel(Type)
  fullName: System.Data.Linq.Mapping.MappingSource.GetModel(Type)
- uid: System.Data.Linq.Mapping.MappingSource.#ctor*
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: MappingSource
  nameWithType: MappingSource.MappingSource
- uid: System.Data.Linq.Mapping.MappingSource.CreateModel*
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: CreateModel
  nameWithType: MappingSource.CreateModel
- uid: System.Data.Linq.Mapping.MappingSource.GetModel*
  parent: System.Data.Linq.Mapping.MappingSource
  isExternal: false
  name: GetModel
  nameWithType: MappingSource.GetModel
