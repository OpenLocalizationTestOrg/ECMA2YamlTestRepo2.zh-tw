### YamlMime:ManagedReference
items:
- uid: System.Globalization.DaylightTime
  id: DaylightTime
  children:
  - System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  - System.Globalization.DaylightTime.Delta
  - System.Globalization.DaylightTime.End
  - System.Globalization.DaylightTime.Start
  langs:
  - csharp
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
  type: Class
  summary: "定義日光節約時間週期。"
  remarks: "日光節約時間是一段期間時鐘進階，通常一小時，以利用擴充日光節約時間的年份。 在期限結束時，時鐘設回標準時間。      > [!WARNING] > 所傳回的 DaylightTime 物件<xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName>方法能夠辨識只有時區調整規則目前生效，且會忽略任何先前的調整規則系統具有資訊。</xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName> 相反地，它適用於目前的調整規則回溯的時間期間，當它可能尚未生效。 若要擷取特定時區的所有已知的調整規則的相關資訊，請使用<xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>方法。</xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DaylightTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.DateTime,System.TimeSpan)'
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新執行個體<xref href=&quot;System.Globalization.DaylightTime&quot;></xref>類別指定的開始、 結束和時間的差異資訊。"
  remarks: "`start`參數的值就會變成<xref:System.Globalization.DaylightTime.Start%2A>新物件的屬性。</xref:System.Globalization.DaylightTime.Start%2A> `end`參數的值就會變成<xref:System.Globalization.DaylightTime.End%2A>新物件的屬性。</xref:System.Globalization.DaylightTime.End%2A> `delta`參數的值就會變成<xref:System.Globalization.DaylightTime.Delta%2A>新物件的屬性。</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DaylightTime (DateTime start, DateTime end, TimeSpan delta);
    parameters:
    - id: start
      type: System.DateTime
      description: "表示的日期和時間，日光節約時間的開始時的物件。 值必須是以本地時間。"
    - id: end
      type: System.DateTime
      description: "表示的日期和時間，日光節約時間結束時的物件。 值必須是以本地時間。"
    - id: delta
      type: System.TimeSpan
      description: "物件，代表標準時間到日光節約時間，以刻度為單位的差異。"
  overload: System.Globalization.DaylightTime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Delta
  id: Delta
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得時間間隔，表示標準時間日光節約時間的差異。"
  remarks: "這個屬性會對應至<xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName>屬性。</xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName> 一般而言，<xref:System.TimeZoneInfo>類別是更精確的有關時區調整比來源<xref:System.TimeZone>和<xref:System.Globalization.DaylightTime>類別。</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       如果屬性值是正數，日光節約時間開始，這個屬性所指定的時間長度被進階時鐘時間。 日光節約時間結束時，時鐘時間會設定回由這個屬性所指定的時間長度。 如果屬性值為負數，時鐘時間是在日光節約時間的開始重新設定，以及進階結尾。"
  syntax:
    content: public TimeSpan Delta { get; }
    return:
      type: System.TimeSpan
      description: "時間間隔，代表標準時間日光節約時間之間的差異。"
  overload: System.Globalization.DaylightTime.Delta*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.End
  id: End
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得代表日期和時間日光節約週期結束的物件。"
  remarks: "這個屬性會對應至<xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName>屬性。</xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName> 一般而言，<xref:System.TimeZoneInfo>類別是更精確的有關時區調整比來源<xref:System.TimeZone>和<xref:System.Globalization.DaylightTime>類別。</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       日光節約期間結束時，時鐘時間設回標準時間。"
  syntax:
    content: public DateTime End { get; }
    return:
      type: System.DateTime
      description: "物件代表的日期和時間日光節約週期結束的時間。 值是以本地時間。"
  overload: System.Globalization.DaylightTime.End*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Start
  id: Start
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得表示的日期和時間，日光節約週期開始時的物件。"
  remarks: "這個屬性會對應至<xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName>屬性。</xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName> 一般而言，<xref:System.TimeZoneInfo>類別是更精確的有關時區調整比來源<xref:System.TimeZone>和<xref:System.Globalization.DaylightTime>類別。</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       日光節約週期開始時，所定義的刻度數目進階的時鐘時間<xref:System.Globalization.DaylightTime.Delta%2A>屬性，以利用擴充日光節約時間。</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DateTime Start { get; }
    return:
      type: System.DateTime
      description: "表示的日期和時間，日光節約週期開始時的物件。 值是以本地時間。"
  overload: System.Globalization.DaylightTime.Start*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Globalization.DaylightTime.Delta
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
- uid: System.Globalization.DaylightTime.Start
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
- uid: System.Globalization.DaylightTime.#ctor*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime.DaylightTime
- uid: System.Globalization.DaylightTime.Delta*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
- uid: System.Globalization.DaylightTime.Start*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
