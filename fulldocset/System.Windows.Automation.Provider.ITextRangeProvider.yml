### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  id: ITextRangeProvider
  children:
  - System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.Clone
  - System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  - System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  - System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  - System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  - System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.Select
  langs:
  - csharp
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
  type: Interface
  summary: "公開方法與屬性，以實作的文字容器中支援使用者介面自動化用戶端存取的一段連續文字<xref href=&quot;System.Windows.Automation.Provider.ITextProvider&quot;> </xref>。"
  remarks: "在必須支援的 UI 自動化提供者上實作<xref:System.Windows.Automation.TextPattern>控制項模式。</xref:System.Windows.Automation.TextPattern>       A<xref:System.Windows.Automation.Text.TextPatternRange>的插入點、 的子集或所有中的文字可以代表<xref:System.Windows.Automation.TextPattern>容器。</xref:System.Windows.Automation.TextPattern> </xref:System.Windows.Automation.Text.TextPatternRange>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ITextRangeProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  id: AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "加入至支援多個文字容器中反白顯示的文字集合，斷續選取。"
  remarks: "文字插入點移動至新的選取範圍的區域。       提供變質文字範圍移動插入點。"
  syntax:
    content: public void AddToSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "如果文字提供者不支援多次斷續選取 (也就是<xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>的值必須<xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>)。</xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  id: Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回新<xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;></xref>等於原始<xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;></xref>且繼承其所有屬性。"
  remarks: "新的範圍可以從原始獨立操作。"
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "新的文字範圍。 Null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>中[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) 絕對不會傳回。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  id: Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回值，指出是否範圍 ( <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref>端點<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>端點) 的文字範圍是與另一個文字範圍相同。"
  syntax:
    content: public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);
    parameters:
    - id: range
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "要比較的文字範圍"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個文字範圍的跨幅相同的。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果要比較的範圍不是來自相同文字提供者。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回值，這個值會指定兩個文字範圍是否具有相同的端點。"
  syntax:
    content: public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref>或<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>呼叫端的端點。"
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "比較目標範圍。"
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref>或<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>端點的目標。"
    return:
      type: System.Int32
      description: "如果呼叫端的端點更早出現在文字中比目標端點，傳回負數的值。       如果呼叫端的端點是在與目標端點位於相同位置，則傳回零。       如果呼叫端的端點在文字中比目標端點更晚出現，則傳回正值。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果<code> targetRange </code>是從不同的文字提供者。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  id: ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "將文字範圍擴展至指定的文字單元。"
  remarks: "如果範圍中的指定單位的精確數量則保持不變。       沒有一系列的步驟會在幕後順序<xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>方法才能成功執行。</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點，可讓<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點變成多餘。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> 這個步驟是必要情況下，文字範圍跨越`unit`界限; 例如，&quot;{The U} RL [http://www.microsoft.com](http://www.microsoft.com)內嵌在文字&quot;其中&quot;{&quot;和&quot;}&quot;是文字範圍端點。      2.  產生的範圍向後移<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>要求開頭`unit`界限。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  將範圍移往前或往後在<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>所要求的數目`unit`界限。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  範圍到時會展開，從變質範圍狀態移動<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>依一個要求的端點`unit`界限。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![由 Move & expandtoenclosingunit 進行的範圍調整](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;由移動 & expandtoenclosingunit 進行的範圍調整&quot;)如何針對 move （） 和 expandtoenclosingunit （） 調整文字範圍的範例 > [!NOTE] > 這些步驟是必要的因為它是很常見的螢幕助讀員讀取完整單字、 句子或整個段落插入點或任何虛擬的游標位置。       Expandtoenclosingunit 進行尊重隱藏和顯示文字。       Expandtoenclosingunit 進行會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       如下所示的順序，從最大、 最小單位。      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "文字單元。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  id: FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回具有指定的屬性值的文字範圍子集。"
  remarks: "在隱藏與顯示的文字之間沒有差異。"
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);
    parameters:
    - id: attribute
      type: System.Int32
      description: "要搜尋的屬性。"
    - id: value
      type: System.Object
      description: "要搜尋的屬性值。 此值必須符合指定之屬性的型別。"
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該傳回最後一個出現的文字範圍，而不是第一個;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "文字範圍具有相符屬性和屬性值。否則為 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>中[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  id: FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回包含指定的文字的文字範圍子集。"
  remarks: "在隱藏與顯示的文字之間沒有差異。"
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);
    parameters:
    - id: text
      type: System.String
      description: "要搜尋的文字字串。"
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該傳回最後一個出現的文字範圍，而不是第一個;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該忽略大小寫。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "符合指定之文字; 文字範圍否則為 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>中[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  id: GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "文字範圍，擷取指定之屬性的值。"
  remarks: "在隱藏與顯示的文字之間沒有差異。"
  syntax:
    content: public object GetAttributeValue (int attribute);
    parameters:
    - id: attribute
      type: System.Int32
      description: "文字屬性。"
    return:
      type: System.Object
      description: "擷取物件，代表指定之屬性的值。 例如，`GetAttributeValue(TextPattern.FontNameAttribute)`會傳回表示文字範圍時的字型名稱的字串`GetAttributeValue(TextPattern.IsItalicAttribute)`會傳回型別<xref:System.Boolean>.</xref:System.Boolean>值       傳回<xref href=&quot;System.Windows.Automation.TextPattern.MixedAttributeValue&quot;></xref>如果文字範圍內的指定屬性的值而有所不同。       傳回<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>如果提供者或控制項不支援指定的屬性。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果指定的屬性不是有效的。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  id: GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "擷取每一個完整或部分可見的文字範圍中的文字行構成的週框的集合。"
  syntax:
    content: public double[] GetBoundingRectangles ();
    parameters: []
    return:
      type: System.Double[]
      description: "文字的文字範圍中的每一個完整或部分行構成的週框陣列。       變質範圍的空陣列。       已將其放在完全螢幕之外、 螢幕座標的文字範圍的空陣列捲動到檢視，或被重疊的視窗遮蔽。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  id: GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "擷取文字範圍內所有內嵌物件的集合。"
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]
      description: "落在範圍內的子物件的集合。 子系與文字範圍重疊，但不完全圍住，則也會包含在集合中。       如果沒有子物件會傳回空集合。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  id: GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "傳回圍住文字範圍的最內層控制項。"
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "封入控制項通常提供文字範圍的文字提供者。 不過，如果文字提供者支援子項目，例如表格或超連結，然後封入項目可能是文字提供者的子系。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  id: GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "擷取範圍的純文字。"
  remarks: "GetText 尊重隱藏和顯示文字。       如果`maxLength`大於的長度是呼叫端的文字範圍內，傳回的字串會是個文字範圍的純文字。       GetText 不會影響順序文字流向; 中的端點它一定會傳回邏輯文字流程順序中的文字範圍的開始和結束端點之間的文字。"
  syntax:
    content: public string GetText (int maxLength);
    parameters:
    - id: maxLength
      type: System.Int32
      description: "要傳回之字串的長度上限。 使用`-1`如果需要無限制。"
    return:
      type: System.String
      description: "純文字的文字範圍內，可能以截斷方式在指定<code> maxLength </code>。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "如果<code> maxLength </code>小於-1。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  id: Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "將文字範圍的文字單元數移動。"
  remarks: "需周遊文字範圍的內容時，一系列的步驟會在幕後移動方法，才能成功執行的順序。      1.  文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點，可讓<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點變成多餘。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> 這個步驟是必要情況下，文字範圍跨越`unit`界限; 例如，&quot;{The U} RL [http://www.microsoft.com](http://www.microsoft.com)內嵌在文字&quot;其中&quot;{&quot;和&quot;}&quot;是文字範圍端點。      2.  產生的範圍向後移<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>要求開頭`unit`界限。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  將範圍移往前或往後在<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>所要求的數目`unit`界限。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  範圍到時會展開，從變質範圍狀態移動<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>依一個要求的端點`unit`界限。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![由 Move & expandtoenclosingunit 進行的範圍調整](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;由移動 & expandtoenclosingunit 進行的範圍調整&quot;)如何針對 move （） 和 expandtoenclosingunit （） 的文字內容 （或內部文字） 的文字容器和內嵌的物件，例如超連結或表格儲存格，調整文字範圍的範例會公開為單一連續的文字資料流中的控制項檢閱和內容檢閱[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]樹狀; 物件界限會被忽略。       ![合併的內嵌物件的文字範圍。](~/add/media/uia-textpattern-embeddedobjecttextranges.png &quot;合併內嵌物件的文字範圍。&quot;)   具有內嵌的物件及其範圍的文字資料流範例跨越移動方面此時隱藏和顯示文字。       移動會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       如下所示的順序，從最大、 最小單位。      - <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>-<xref:System.Windows.Automation.Text.TextUnit>文字不會改變以任何方式，只是文字範圍擴展的不同部分文字。</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int Move (System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "文字單元界限。"
    - id: count
      type: System.Int32
      description: "要移動的文字單元數。       正值會將移動的文字範圍向前，負值會將文字範圍向後，0 沒有作用。"
    return:
      type: System.Int32
      description: "實際移動的單位數。 這可能會小於要求的數目如果新的文字範圍端點大於或小於比<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>端點。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "將文字範圍的一個端點移至第二個文字範圍指定的端點。"
  remarks: "如果移動端點置於相同的文字範圍的另一個端點則導致變質範圍，以及確保端點的正確順序也，移動其他端點 (也就是<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>一定會小於或等於<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>)。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "要移動的端點。"
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "另一個範圍是從相同的文字提供者。"
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "另一個範圍上的端點。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  id: MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "一個端點移動的文字範圍的文件範圍內的文字單元數。"
  remarks: "需周遊文字範圍的內容時，一系列的步驟會在幕後順序<xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>方法才能成功執行。</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點，可讓<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>端點變成多餘。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> 這個步驟是必要情況下，文字範圍跨越`unit`界限; 例如，&quot;{The U} RL [http://www.microsoft.com](http://www.microsoft.com)內嵌在文字&quot;其中&quot;{&quot;和&quot;}&quot;是文字範圍端點。      2.  產生的範圍向後移<xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>要求開頭`unit`界限。</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  範圍到時會展開，從變質範圍狀態移動<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>依一個要求的端點`unit`界限。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![由 Move & expandtoenclosingunit 進行的範圍調整](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;由移動 & expandtoenclosingunit 進行的範圍調整&quot;)如何針對 move （） 和 expandtoenclosingunit （) MoveEndpointByUnit 調整文字範圍的範例會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       如下所示的順序，從最大、 最小單位。      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "要移動的端點。"
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "移動的文字單元。"
    - id: count
      type: System.Int32
      description: "要移動的單位數目。 正值會向前移動的點。 負值會向後移動。 值為 0 沒有任何作用。"
    return:
      type: System.Int32
      description: "實際移動的單位數，這可以小於要求如果移動端點會碰到的開頭或結尾的文件。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  id: RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "移除反白顯示的一段文字，對應至呼叫端的<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>和<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>端點，從支援多次的文字容器中反白顯示的文字集合斷續選取。"
  remarks: "移除反白顯示的區域，將文字插入點。       提供變質文字範圍，將會移動插入點。"
  syntax:
    content: public void RemoveFromSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "如果文字提供者不支援多次斷續選取 (比方說，<xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>的值必須<xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>)。</xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "導致文字控制項垂直捲動，直到看到檢視區中的文字範圍為止。"
  remarks: "ScrollIntoView 尊重隱藏和顯示文字。       如果隱藏的文字範圍，文字控制項將捲動隱藏的文字檢視區中有一個錨點。"
  syntax:
    content: public void ScrollIntoView (bool alignToTop);
    parameters:
    - id: alignToTop
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該捲動文字控制項，讓文字範圍與檢視區; 頂端齊<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果應該與檢視區的底端齊。"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  id: Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "對應至文字範圍的文字控制項中的文字會反白顯示<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>和<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;></xref>端點。"
  remarks: "如果提供變質文字範圍，文字插入點會移至<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>個文字範圍端點。</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "文字控制項不支援文字選取範圍時，就會發生。"
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Text.TextPatternRangeEndpoint
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextPatternRangeEndpoint
  nameWithType: TextPatternRangeEndpoint
  fullName: System.Windows.Automation.Text.TextPatternRangeEndpoint
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
- uid: System.Windows.Automation.Text.TextUnit
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextUnit
  nameWithType: TextUnit
  fullName: System.Windows.Automation.Text.TextUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  spec.csharp:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: IRawElementProviderSimple[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection
  nameWithType: ITextRangeProvider.AddToSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone
  nameWithType: ITextRangeProvider.Clone
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare
  nameWithType: ITextRangeProvider.Compare
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints
  nameWithType: ITextRangeProvider.CompareEndpoints
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute
  nameWithType: ITextRangeProvider.FindAttribute
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText
  nameWithType: ITextRangeProvider.FindText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue
  nameWithType: ITextRangeProvider.GetAttributeValue
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles
  nameWithType: ITextRangeProvider.GetBoundingRectangles
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren
  nameWithType: ITextRangeProvider.GetChildren
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement
  nameWithType: ITextRangeProvider.GetEnclosingElement
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText
  nameWithType: ITextRangeProvider.GetText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move
  nameWithType: ITextRangeProvider.Move
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange
  nameWithType: ITextRangeProvider.MoveEndpointByRange
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit
  nameWithType: ITextRangeProvider.MoveEndpointByUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection
  nameWithType: ITextRangeProvider.RemoveFromSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView
  nameWithType: ITextRangeProvider.ScrollIntoView
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select
  nameWithType: ITextRangeProvider.Select
