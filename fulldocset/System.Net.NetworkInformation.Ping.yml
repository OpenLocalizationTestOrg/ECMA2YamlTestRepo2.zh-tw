### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "可讓應用程式判斷遠端電腦透過網路是否可存取。"
  remarks: "應用程式使用 Ping 類別來偵測是否連線到遠端電腦。       網路拓撲，可以判斷 Ping 是否可以成功連線的遠端主機。 目前狀態和 proxy、 網路位址轉譯 (NAT) 設備或防火牆的設定可以防止 Ping 成功。 成功 Ping 只表示遠端主機可以透過連上網路。不保證高階服務 （例如 Web 伺服器） 上的遠端主機存在。       這個類別會提供類似 Ping.exe 命令列工具的功能。 <xref:System.Net.NetworkInformation.Ping.Send%2A>和<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法從該電腦將網際網路控制訊息通訊協定 (ICMP) 回應要求訊息傳送到遠端電腦並等候 ICMP 回應回覆訊息。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> ICMP 訊息的詳細說明，請參閱 RFC 792，可在[http://www.ietf.org](http://www.ietf.org/)。       下列類型下面將詳細說明，及可搭配 Ping 類別。      |**型別名稱**|**描述**|  |-------------------|---------------------|  |<xref:System.Net.NetworkInformation.IPStatus>|定義狀態代碼，描述 ICMP 回應要求訊息的結果。 |  |<xref:System.Net.NetworkInformation.PingOptions>|可讓您設定或擷取設定，以控制多少次要求封包轉送 (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>)，以及它是否可分散 (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> )。 |  |<xref:System.Net.NetworkInformation.PingReply>|包含結果的 ICMP 回應要求。 |  |<xref:System.Net.NetworkInformation.PingException>|無法復原的錯誤發生時擲回。 |  |<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|包含與<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫完成或取消時所引發的<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件相關聯的資料。 |  |<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|提供<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫完成或取消時叫用的回呼方法的委派。 |      <xref:System.Net.NetworkInformation.Ping.Send%2A>和<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會傳回在回覆<xref:System.Net.NetworkInformation.PingReply>物件。</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>  </xref:System.Net.NetworkInformation.Ping.PingCompleted></xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>屬性會傳回<xref:System.Net.NetworkInformation.IPStatus>值，指出要求的結果。</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       當傳送要求，您必須指定遠端電腦。 您可以藉由提供主機名稱的字串，以字串格式的 IP 位址或<xref:System.Net.IPAddress>物件。</xref:System.Net.IPAddress>       您也可以指定任何下列類型的資訊:-伴隨著要求的資料。 指定`buffer`可讓您深入了解特定大小的封包傳入及傳出遠端主機和網路路徑的最大傳輸單位所需的時間量。 (請參閱<xref:System.Net.NetworkInformation.Ping.Send%2A>或<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>多載會採用`buffer`參數。)     -是否可以分散 ICMP 回應封包在傳輸過程中。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (請參閱<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性和<xref:System.Net.NetworkInformation.Ping.Send%2A>或<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>多載採用`options`參數。)     -多少次路由的節點，例如路由器或閘道，可以轉送封包到達目的地電腦或已被丟棄。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (請參閱<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>和<xref:System.Net.NetworkInformation.Ping.Send%2A>或<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>多載會採用`options`參數。)     的必須在其中接收回覆時間限制。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (請參閱<xref:System.Net.NetworkInformation.Ping.Send%2A>或<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>多載會採用`timeout`參數。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       Ping 類別會提供同步和非同步傳送要求的方法。 如果您的應用程式應該封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A> 如果您的應用程式應該不會封鎖，請使用非同步<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>自己從執行緒集區自動配置的執行緒中執行。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>指定方法呼叫的委派<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       您無法使用相同的執行個體的 Ping 類別來產生多個同時 ICMP 回應要求。 <xref:System.Net.NetworkInformation.Ping.Send%2A><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫正在進行或呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>多次之前所有先前的呼叫已完成的原因有<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時</xref:System.Net.NetworkInformation.Ping.Send%2A>呼叫"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "初始化的新執行個體<xref href=&quot;System.Net.NetworkInformation.Ping&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Net.NetworkInformation.Ping&quot;></xref>物件，並選擇性處置 managed 資源。"
  remarks: "這個方法會呼叫公用`Dispose()`方法和<xref:System.ComponentModel.Component.Finalize%2A>方法。</xref:System.ComponentModel.Component.Finalize%2A> 公用`Dispose()`方法會叫用與受保護的 Dispose 方法`disposing`參數設定為`true`。 <xref:System.ComponentModel.Component.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.ComponentModel.Component.Finalize%2A>       當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Net.NetworkInformation.Ping>物件參考。</xref:System.Net.NetworkInformation.Ping> 這個方法會叫用`Dispose()`每個參考物件的方法。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 資源。"
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "引發<xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;></xref>事件。"
  remarks: "類別繼承自<xref:System.Net.NetworkInformation.Ping>類別可以覆寫此方法以執行其他工作，例如記錄中包含的資料`e`參數。</xref:System.Net.NetworkInformation.Ping>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPingCompleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref>物件，其中包含事件資料。"
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "發生於將網際網路控制訊息通訊協定 (ICMP) 回應訊息傳送和接收對應的 ICMP 回應回覆訊息的非同步作業完成或取消。"
  remarks: "應用程式以取得資訊的完成狀態和呼叫其中一個所收集的資料使用 PingCompleted 事件<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>提供呼叫的委派上一頁的方法時叫用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發這個事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息具有指定的電腦<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress>"
  remarks: "這個方法會傳送至所指定的主機`address`32 <xref:System.Byte>ICMP 回應訊息使用的資料緩衝區。</xref:System.Byte> 方法會等候&5; 秒的 ICMP 回應回覆訊息。 如果沒有在該時間、 則方法會傳回和<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingReply.Status%2A>接收回覆       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件，提供資訊 ICMP 回應回覆訊息，如果其中一個已收到，或如果已不收到任何訊息，說明失敗的原因。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息至指定的電腦，並接收對應的 ICMP 回應回覆訊息從該電腦。"
  remarks: "這個方法會傳送 32 <xref:System.Byte>ICMP 回應訊息使用的資料緩衝區。</xref:System.Byte> 方法會等候&5; 秒的 ICMP 回應回覆訊息。 如果沒有在該時間、 則方法會傳回和<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingReply.Status%2A>接收回覆       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件可在資訊 ICMP 回應回覆訊息，如果其中一個已收到，或提供失敗的原因有不收到任何訊息。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到具有指定的電腦<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個方法可讓您指定作業的逾時值。"
  remarks: "如果 ICMP 回應回覆訊息中指定的時間內未收到`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       封包或封包片段在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件，提供 ICMP 回應回覆訊息的相關資訊，如果其中一個已收到，或如果已不收到任何訊息會提供失敗的原因。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息至指定的電腦，並接收對應的 ICMP 回應回覆訊息從該電腦。 這個方法可讓您指定作業的逾時值。"
  remarks: "如果 ICMP 回應回覆訊息中指定的時間內未收到`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件，提供 ICMP 回應回覆訊息的相關資訊，如果其中一個已收到，或如果已不收到任何訊息會提供失敗的原因。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到具有指定的電腦<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定作業的逾時值。"
  remarks: "如果 ICMP 回應回覆訊息中指定的時間內未收到`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       封包或封包片段在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件可在資訊 ICMP 回應回覆訊息，如果其中一個已收到，或提供失敗的原因有不收到任何訊息。 方法會傳回<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;></xref>如果封包超過最大傳輸單位 (MTU)。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -<code>buffer</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或<code>buffer</code>大小大於 65500 位元組。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到指定的電腦，並接收對應的 ICMP 回應回覆訊息從該電腦。 這個多載可讓您指定作業的逾時值。"
  remarks: "如果 ICMP 回應回覆訊息中指定的時間內未收到`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       封包或封包片段在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.Send%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件，提供 ICMP 回應回覆訊息的相關資訊，如果其中一個已收到，或如果已不收到任何訊息會提供失敗的原因。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。       -<code>buffer</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或<code>buffer</code>大小大於 65500 位元組。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到具有指定的電腦<xref:System.Net.IPAddress>並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定的操作和控制片段逾時值和 ICMP 回應訊息的封包的存留時間值。"
  remarks: "如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性來指定 ICMP 回應訊息可以轉送到其目的地之前最大次數。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件可在資訊 ICMP 回應回覆訊息，如果其中一個已收到，或提供失敗的原因有不收到任何訊息。 方法會傳回<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;></xref>如果封包超過最大傳輸單位 (MTU)。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -<code>buffer</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或<code>buffer</code>大小大於 65500 位元組。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到指定的電腦，並接收對應的 ICMP 回應回覆訊息從該電腦。 這個多載可讓您指定的操作和控制片段逾時值和 ICMP 封包的存留時間值。"
  remarks: "如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性來指定 ICMP 回應訊息可以轉送到其目的地之前最大次數。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>物件，提供 ICMP 回應回覆訊息的相關資訊，如果其中一個已收到，或如果已不收到任何訊息會提供失敗的原因。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為零長度字串。       -<code>buffer</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，或<code>buffer</code>大小大於 65500 位元組。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息具有指定的電腦，以非同步方式<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress>"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時不會封鎖您的應用程式的方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每次呼叫此方法會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 若要指定時，會呼叫的方法<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件，您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派之前呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler></xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > 等候回覆時應該要封鎖您的應用程式，如果使用其中一種<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       這個方法會傳送 32 <xref:System.Byte>ICMP 回應訊息使用的資料緩衝區。</xref:System.Byte> 方法會等候&5; 秒的 ICMP 回應回覆訊息。 如果沒有在該時間、 則方法會傳回和<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingReply.Status%2A>接收回覆       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       封包或封包片段在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>方法正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "以非同步方式，請嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息至指定的電腦，並從該電腦接收對應的 ICMP 回應回覆訊息。"
  remarks: "SendAsync 方法以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。 當您的應用程式應該不會封鎖呼叫 SendAsync 方法。 每次呼叫此方法會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 若要指定時，會呼叫的方法<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件，您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派之前呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler></xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > 等候回覆時應該要封鎖您的應用程式，如果使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       這個方法會傳送 32 <xref:System.Byte>ICMP 回應訊息使用的資料緩衝區。</xref:System.Byte> 方法會等候&5; 秒的 ICMP 回應回覆訊息。 如果沒有收到回覆，則方法會傳回與時間的<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       封包或封包片段在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SendAsync 方法的呼叫正在進行中。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>無法解析為有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息具有指定的電腦，以非同步方式<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定作業的逾時值。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時不會封鎖您的應用程式的方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>來指定時，會呼叫此方法的委派<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       如果您的應用程式應該封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>方法正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "以非同步方式，請嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息至指定的電腦，並從該電腦接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定作業的逾時值。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時不會封鎖您的應用程式的方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>來指定時，會呼叫此方法的委派<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       如果您的應用程式應該封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>無法解析為有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到具有指定的電腦，以非同步方式<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定作業的逾時值。"
  remarks: "這個方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時不會封鎖您的應用程式的方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 若要指定時，會呼叫的方法<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件，您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派之前呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler></xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > 如果您的應用程式封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "以非同步方式，請嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到指定的電腦，並從該電腦接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定作業的逾時值。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>時不會封鎖您的應用程式的方法。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>來指定時，會呼叫此方法的委派<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       如果您的應用程式應該封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       這個多載會使用預設設定封包片段和封包轉送。 包含 ICMP 回應訊息的封包可以被分割在傳輸過程中如果的總封包大小超過最大的封包大小可以傳輸的其中一個本機和遠端電腦之間的路由節點。 若要避免分散程度，使用其中一種<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，取得`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性`true`。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 當<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 封包或封包片段 （如果片段） 在被捨棄之前，可以透過路由節點轉送 128 次。 若要變更此設定，請使用<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>採用多載`options`參數，以及組<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性設為所需的值。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>無法解析為有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到具有指定的電腦，以非同步方式<xref:System.Net.IPAddress>，並從該電腦接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定的操作和控制片段逾時值和 ICMP 回應訊息的封包的存留時間值。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法時必須不會封鎖您的應用程式。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>來指定時，會呼叫此方法的委派<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       如果您的應用程式封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性來指定 ICMP 回應訊息可以轉送到其目的地之前最大次數。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>可識別 ICMP 回應訊息的目的地電腦。</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "以非同步方式，請嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區到指定的電腦，並從該電腦接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定的操作和控制片段逾時值和 ICMP 封包的存留時間值。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會以非同步方式傳送回應訊息，並完成作業 （成功或失敗），您的應用程式傳回的狀態。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法時必須不會封鎖您的應用程式。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 每個呼叫會執行不同的執行緒自動配置在執行緒集區中。 當非同步作業完成時，會引發<xref:System.Net.NetworkInformation.Ping.PingCompleted>事件。</xref:System.Net.NetworkInformation.Ping.PingCompleted> 應用程式使用<xref:System.Net.NetworkInformation.PingCompletedEventHandler>來指定時，會呼叫此方法的委派<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>引發事件。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> 您必須加入<xref:System.Net.NetworkInformation.PingCompletedEventHandler>委派給呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前的事件</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委派的方法會接收<xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件，其中包含<xref:System.Net.NetworkInformation.PingReply>物件，描述結果的<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>物件會繼承<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 此屬性包含`userToken`物件傳遞至<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼叫。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       如果您的應用程式應該封鎖等候回覆時，使用<xref:System.Net.NetworkInformation.Ping.Send%2A>方法; 這些方法是同步。</xref:System.Net.NetworkInformation.Ping.Send%2A>       如果所指定的時間內未接收 ICMP 回應回覆訊息`timeout`參數、 ICMP echo 會失敗，且<xref:System.Net.NetworkInformation.PingReply.Status%2A>屬性設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > 指定非常小的數字的時`timeout`，接收 Ping 回覆即使`timeout`經過毫秒為單位。       如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性是`true`和的總封包大小超過最大的封包大小可由本機和遠端電腦之間的路由節點的其中一個傳輸，ICMP 回應要求會失敗。</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性來指定 ICMP 回應訊息可以轉送到其目的地之前最大次數。</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 如果封包轉送指定的次數之後不會到達其目的地，捨棄封包，而且 ICMP 回應要求會失敗。 當發生這種情況，<xref:System.Net.NetworkInformation.PingReply.Status%2A>會設定為<xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A<xref:System.String>可識別 ICMP 回應訊息的目的地電腦。</xref:System.String> 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: buffer
      type: System.Byte[]
      description: "<xref:System.Int32>值，指定最大毫秒數 （在傳送回應訊息） 之後等候 ICMP 回應回覆訊息。</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    - id: userToken
      type: System.Object
      description: "物件，傳遞至非同步作業完成時叫用的方法。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或為空字串 (&quot;&quot;)。       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 是 IPv6 位址，並在本機電腦執行舊版作業系統比 Windows 2000。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>無法解析為有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "取消所有暫止的非同步要求來傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息，並接收對應的 ICMP 回應回覆訊息。"
  remarks: "呼叫此方法以終止任何呼叫<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>，尚未完成。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "具有指定的電腦傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區<xref:System.Net.IPAddress>，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress>"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "識別 ICMP 回應訊息的目的地電腦的 IP 位址。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息，使用指定的資料緩衝到指定的電腦，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 回應訊息的目的地電腦。 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "具有指定的電腦傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區<xref:System.Net.IPAddress>，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定作業的逾時值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "識別 ICMP 回應訊息的目的地電腦的 IP 位址。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息，使用指定的資料緩衝到指定的電腦，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定作業的逾時值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 回應訊息的目的地電腦。 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "具有指定的電腦傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區<xref:System.Net.IPAddress>，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定的作業以及用於傳送和接收緩衝區的逾時值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "識別 ICMP 回應訊息的目的地電腦的 IP 位址。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息，使用指定的資料緩衝到指定的電腦，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定的作業以及用於傳送和接收緩衝區的逾時值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 回應訊息的目的地電腦。 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "具有指定的電腦傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息與指定的資料緩衝區<xref:System.Net.IPAddress>，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。</xref:System.Net.IPAddress> 這個多載可讓您指定逾時值的操作，用於傳送和接收緩衝區，並控制分散和 ICMP 回應訊息的封包的存留時間值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "識別 ICMP 回應訊息的目的地電腦的 IP 位址。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>正在進行中。</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "傳送或接收 ICMP 訊息時，擲回例外狀況。 請參閱內部例外狀況完全擲回的例外狀況。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 不是有效的 IP 位址。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "大小<code> buffer </code>超過 65500 位元組。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "傳送網際網路控制訊息通訊協定 (ICMP) 回應訊息，使用指定的資料緩衝到指定的電腦，並從該電腦，以非同步作業接收對應的 ICMP 回應回覆訊息。 這個多載可讓您指定逾時值的操作，用於傳送和接收緩衝區，並控制分散和 ICMP 回應訊息的封包的存留時間值。"
  remarks: "這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task%601>> 已傳送 ICMP 封包，並在收到回應之後，物件會完成。</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 回應訊息的目的地電腦。 指定此參數的值可以是主機名稱或 IP 位址的字串表示。"
    - id: timeout
      type: System.Int32
      description: "最大 （在傳送回應訊息） 之後的毫秒數等候 ICMP 回應回覆訊息。"
    - id: buffer
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送 ICMP 回應訊息和 ICMP 回應回覆訊息中傳回資料。</xref:System.Byte> 陣列不能包含超過 65500 位元組。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>用來控制片段和 ICMP 回應訊息的封包的存留時間值的物件。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "傳回&lt;xref:System.Threading.Tasks.Task%601&gt;。       工作物件，表示非同步作業。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
