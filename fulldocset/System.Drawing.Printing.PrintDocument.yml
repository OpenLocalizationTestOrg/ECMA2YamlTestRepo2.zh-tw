### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrintDocument
  id: PrintDocument
  children:
  - System.Drawing.Printing.PrintDocument.#ctor
  - System.Drawing.Printing.PrintDocument.BeginPrint
  - System.Drawing.Printing.PrintDocument.DefaultPageSettings
  - System.Drawing.Printing.PrintDocument.DocumentName
  - System.Drawing.Printing.PrintDocument.EndPrint
  - System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  - System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  - System.Drawing.Printing.PrintDocument.OriginAtMargins
  - System.Drawing.Printing.PrintDocument.Print
  - System.Drawing.Printing.PrintDocument.PrintController
  - System.Drawing.Printing.PrintDocument.PrinterSettings
  - System.Drawing.Printing.PrintDocument.PrintPage
  - System.Drawing.Printing.PrintDocument.QueryPageSettings
  - System.Drawing.Printing.PrintDocument.ToString
  langs:
  - csharp
  name: PrintDocument
  nameWithType: PrintDocument
  fullName: System.Drawing.Printing.PrintDocument
  type: Class
  summary: "定義可重複使用物件，從 Windows Forms 應用程式列印時，將輸出傳送至印表機。"
  remarks: "一般而言，建立 PrintDocument 類別的執行個體，設定屬性，例如<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>和<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>，並呼叫<xref:System.Drawing.Printing.PrintDocument.Print%2A>開始列印程序的方法。</xref:System.Drawing.Printing.PrintDocument.Print%2A> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> </xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> 處理<xref:System.Drawing.Printing.PrintDocument.PrintPage>您在其中指定要列印，請使用<xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics><xref:System.Drawing.Printing.PrintPageEventArgs>.</xref:System.Drawing.Printing.PrintPageEventArgs>屬性</xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>的輸出事件</xref:System.Drawing.Printing.PrintDocument.PrintPage>       如需從 Windows Form 應用程式的列印功能的詳細資訊，請參閱[Windows Form 列印支援](~/add/includes/ajax-current-ext-md.md)。 如果您想要從 Windows Presentation Foundation 應用程式列印，請參閱<xref:System.Printing>命名空間。</xref:System.Printing>"
  example:
  - "The following code example prints the file named C:\\My Documents\\MyFile.txt on the default printer. To run the example, create a new Windows Forms project and paste the example code into the form, replacing the file contents. For C#, you will need to delete the Form1.Designer.cs file. Also, change the path to the file you want to print.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_5_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_5_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PrintPage")]

      [System.ComponentModel.DefaultProperty("DocumentName")]

      [System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")]

      public class PrintDocument : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.Printing.PrintDocument&quot;></xref>類別。"
  remarks: "預設建構函式會初始化所有的欄位，根據預設印表機。 一般而言之後建立新, <xref:System.Drawing.Printing.PrintDocument>，設定會影響到輸出的印表機和頁面設定<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>和<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>屬性，分別。</xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> </xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> </xref:System.Drawing.Printing.PrintDocument>"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_1_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_1_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_1_1.cs)]"
  syntax:
    content: public PrintDocument ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  id: BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "發生時<xref:System.Drawing.Printing.PrintDocument.Print*>呼叫方法，以及文件列印的第一頁之前。</xref:System.Drawing.Printing.PrintDocument.Print*>"
  remarks: "通常，您會處理 BeginPrint 事件初始化字型、 檔案資料流及其他列印程序期間使用的資源。       若要將事件與事件處理常式產生關聯，將加入的執行個體<xref:System.Drawing.Printing.PrintEventHandler>事件委派。</xref:System.Drawing.Printing.PrintEventHandler> 每當發生事件時，會呼叫事件處理常式。 如需處理事件的委派的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler BeginPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定使用的所有頁面的預設值為要列印的頁面設定。"
  remarks: "您可以指定數個透過 DefaultPageSettings 屬性的預設頁面設定。 例如，<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>屬性會指定是否在 色彩列印頁面<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>屬性會指定橫向或縱向方向，而<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>屬性指定的頁面邊界。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>       若要指定網頁的網頁為基礎的設定，請處理<xref:System.Drawing.Printing.PrintDocument.PrintPage>或<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件及修改<xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A>引數包含在<xref:System.Drawing.Printing.PrintPageEventArgs>或<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>分別。</xref:System.Drawing.Printing.QueryPageSettingsEventArgs> </xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> </xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> </xref:System.Drawing.Printing.PrintDocument.PrintPage>      > [!NOTE] > 開始列印之後，透過 DefaultPageSettings 屬性頁設定的變更將不會影響列印的頁面。"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document. The example makes three assumptions: that a variable named `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_16_1.cs)]\n [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_16_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_16_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>指定文件的預設頁面設定。"
  overload: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  id: DocumentName
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定要列印文件時顯示 （例如，在列印狀態對話方塊中或印表機佇列） 的文件名稱。"
  remarks: "文件名稱屬性不會指定要列印檔案。 相反地，您可以指定列印處理輸出<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> 如需範例，請參閱<xref:System.Drawing.Printing.PrintDocument>類別概觀。</xref:System.Drawing.Printing.PrintDocument>"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it, and sets the DocumentName to a user-friendly name. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_24_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_24_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_24_1.vb)]"
  syntax:
    content: public string DocumentName { get; set; }
    return:
      type: System.String
      description: "要列印文件時顯示的文件名稱。 預設為 「 文件 」。"
  overload: System.Drawing.Printing.PrintDocument.DocumentName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  id: EndPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "發生於列印文件的最後一頁。"
  remarks: "通常，您會處理 EndPrint 事件來釋放字型、 檔案資料流和其他類似字型在列印程序期間使用的資源。       您表示有沒有更多的頁面，藉由設定列印<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>屬性`false`中<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> </xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> 如果列印處理序已取消，或列印程序期間發生例外狀況，也會發生 EndPrint 事件。       若要將事件與事件處理常式產生關聯，將加入的執行個體<xref:System.Drawing.Printing.PrintEventHandler>事件委派。</xref:System.Drawing.Printing.PrintEventHandler> 每當發生事件時，會呼叫事件處理常式。 如需處理事件的委派的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler EndPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引發<xref href=&quot;System.Drawing.Printing.PrintDocument.BeginPrint&quot;></xref>事件。 之後呼叫<xref:System.Drawing.Printing.PrintDocument.Print*>呼叫方法，以及文件列印的第一頁之前。</xref:System.Drawing.Printing.PrintDocument.Print*>"
  remarks: "OnBeginPrint 方法可讓衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。       當在衍生的類別呼叫 OnBeginPrint 方法時，便會產生<xref:System.Drawing.Printing.PrintDocument.BeginPrint>叫用委派事件處理常式的事件。</xref:System.Drawing.Printing.PrintDocument.BeginPrint> 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引發<xref href=&quot;System.Drawing.Printing.PrintDocument.EndPrint&quot;></xref>事件。 它會呼叫文件的最後一頁已列印時。"
  remarks: "OnEndPrint 方法可讓衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。 如果列印處理序已取消，或列印程序期間發生例外狀況，也稱為 OnEndPrint 方法。       當在衍生的類別呼叫 OnEndPrint 方法時，便會產生<xref:System.Drawing.Printing.PrintDocument.EndPrint>叫用委派事件處理常式的事件。</xref:System.Drawing.Printing.PrintDocument.EndPrint> 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Drawing.Printing.PrintDocument.OnEndPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  id: OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引發<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。 在頁面列印之前呼叫它。"
  remarks: "OnPrintPage 方法可讓衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。       當在衍生的類別呼叫 OnPrintPage 方法時，便會產生<xref:System.Drawing.Printing.PrintDocument.PrintPage>叫用委派事件處理常式的事件。</xref:System.Drawing.Printing.PrintDocument.PrintPage> 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintPageEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintPageEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Drawing.Printing.PrintDocument.OnPrintPage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  id: OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "引發<xref href=&quot;System.Drawing.Printing.PrintDocument.QueryPageSettings&quot;></xref>事件。 它會呼叫每一個前面<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。"
  remarks: "OnQueryPageSettings 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。       當在衍生的類別呼叫 OnQueryPageSettings 方法時，便會產生<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>叫用委派事件處理常式的事件。</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.QueryPageSettingsEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.QueryPageSettingsEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  id: OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定值，指出與頁面相關聯的圖形物件位置是否正好在使用者指定的邊界內部，或在頁面可列印區域的左上角。"
  remarks: "計算可列印的區域必須知道紙張、 頁面的邊界的實體大小和位置<xref:System.Drawing.Graphics>原點的物件。</xref:System.Drawing.Graphics> OriginAtMargins 時`true`、<xref:System.Drawing.Graphics>物件位置列入考量<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>屬性值與可列印的頁面區域。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Graphics> OriginAtMargins 時`false`，用於決定位置的頁面可列印區域<xref:System.Drawing.Graphics>物件來源，<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>值會被忽略。</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> </xref:System.Drawing.Graphics>       比方說，如果是 OriginAtMargins `true`，和<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>每一邊設定為 1 英吋<xref:System.Drawing.Graphics>物件中包含<xref:System.Drawing.Printing.PrintPageEventArgs>從左邊和頁面頂端的位置 1 英吋。</xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> 如果頁面可列印區域.25 英吋每一邊，而 OriginAtMargins `false`、<xref:System.Drawing.Graphics>物件是位於的.25 英吋，從左邊和頁面的頂端。</xref:System.Drawing.Graphics>      > [!NOTE] > 頁面可列印區域印表機而有所不同，而且不保證是對稱。"
  syntax:
    content: public bool OriginAtMargins { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果圖形原點開始邊界。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果圖形原點位於左上角的可列印的頁面。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.Print
  id: Print
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "啟動文件的列印程序。"
  remarks: "指定的輸出，以處理來列印<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件也可以使用<xref:System.Drawing.Graphics>包含在<xref:System.Drawing.Printing.PrintPageEventArgs>.</xref:System.Drawing.Printing.PrintPageEventArgs> </xref:System.Drawing.Graphics> </xref:System.Drawing.Printing.PrintDocument.PrintPage>       使用<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>屬性來指定哪些印表機的列印文件。</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>       列印方法列印文件，而不需要使用列印對話方塊。 使用<xref:System.Windows.Forms.PrintDialog>當您想要提供使用者選擇列印設定的能力。</xref:System.Windows.Forms.PrintDialog>      > [!NOTE] > 文件的列印在列印期間擲回例外狀況，不會處理 Print 方法，如果已中止。"
  example:
  - "The following code example prints the file that is specified through the command line to the default printer.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public void Print ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.Print*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "印表機中名為&lt;xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName&gt;屬性不存在。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintController
  id: PrintController
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定指引列印程序的列印控制程式。"
  remarks: "列印控制程式指引列印程序幾種方式的內容。 例如，若要列印文件，您需要將它轉換成<xref:System.Drawing.Graphics>物件。</xref:System.Drawing.Graphics> A<xref:System.Drawing.Printing.PrintController>指定要繪製圖形影像預覽列印或實際列印文件的印表機上的何處。</xref:System.Drawing.Printing.PrintController> 列印的控制站也可以指定是否要立即列印文件，或先等待指定的間隔。"
  example:
  - "The following code example requires that you have created an instance of the <xref:System.Drawing.Printing.PrintDocument> class that is named `myPrintDocument`. The example creates a new instance of the <xref:System.Drawing.Printing.PrintController> class, assigns it to the PrintController property of `myPrintDocument`, and prints the document.  \n  \n Use the <xref:System.Drawing.Printing> and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_6_1.cs)]\n [!code-vb[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_6_1.vb)]\n [!code-cpp[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_6_1.cpp)]"
  syntax:
    content: public System.Drawing.Printing.PrintController PrintController { get; set; }
    return:
      type: System.Drawing.Printing.PrintController
      description: "<xref href=&quot;System.Drawing.Printing.PrintController&quot;> </xref> ，指引列印程序。 預設值是的新執行個體<xref href=&quot;System.Windows.Forms.PrintControllerWithStatusDialog&quot;></xref>類別。"
  overload: System.Drawing.Printing.PrintDocument.PrintController*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  id: PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得或設定的印表機上列印的文件。"
  remarks: "您可以指定透過 PrinterSettings 屬性的幾個印表機設定。 例如，使用的<xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>屬性，以指定您想要列印的份數，<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>將印表機使用，並<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>以指定您想要列印的頁面範圍的屬性</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>指定的屬性</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a document on the specified printer. The example makes three assumptions: that a variable names `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_2_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }
    return:
      type: System.Drawing.Printing.PrinterSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>指定位置和方式列印文件。 預設值是<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>且其屬性都設定為其預設值。"
  overload: System.Drawing.Printing.PrintDocument.PrinterSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  id: PrintPage
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "發生於需要目前頁面的列印輸出。"
  remarks: "指定要列印的輸出，請使用<xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Printing.PrintPageEventArgs>.</xref:System.Drawing.Printing.PrintPageEventArgs>屬性</xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> 例如，若要指定要列印的文字行，繪製文字使用<xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>方法。</xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>       除了指定輸出，您可以指出是否有其他頁面，以設定列印<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>屬性`true`。</xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> 預設值是`false`，表示已沒有更多的頁面列印。 您也可以透過修改個別的頁面設定<xref:System.Drawing.Printing.PageSettings>且可以取消列印工作，藉由設定<xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName>屬性`true`。</xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName> </xref:System.Drawing.Printing.PageSettings> 若要列印的文件使用不同頁面設定每一頁，處理<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件。</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>       若要將事件與事件處理常式產生關聯，將加入的執行個體<xref:System.Drawing.Printing.PrintPageEventHandler>事件委派。</xref:System.Drawing.Printing.PrintPageEventHandler> 每當發生事件時，會呼叫事件處理常式。 如需處理事件的委派的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates handling the PrintPage event.  \n  \n For another example, see [How to: Print a Multi-Page Text File in Windows Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/e-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/e-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/e-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public event System.Drawing.Printing.PrintPageEventHandler PrintPage;
    return:
      type: System.Drawing.Printing.PrintPageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  id: QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "每個前方緊接<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>事件。"
  remarks: "很可能要列印的文件使用不同頁面設定每一頁。 您可以設定頁面設定所修改的個別屬性<xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName>屬性或屬性設定為<xref:System.Drawing.Printing.PageSettings>.</xref:System.Drawing.Printing.PageSettings> </xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName> 所做的變更<xref:System.Drawing.Printing.PageSettings>影響只有目前頁面上，不在文件的預設頁面的設定。</xref:System.Drawing.Printing.PageSettings> 也可以藉由設定取消列印工作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true` <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>。</xref:System.Drawing.Printing.QueryPageSettingsEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       若要將事件與事件處理常式產生關聯，將加入的執行個體<xref:System.Drawing.Printing.QueryPageSettingsEventHandler>事件委派。</xref:System.Drawing.Printing.QueryPageSettingsEventHandler> 每當發生事件時，會呼叫事件處理常式。 如需處理事件的委派的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and QueryPageSettings events are handled. The `currentPageNumber` variable is incremented after every page is printed in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, which is not shown.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/e-system.drawing.printin_1_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/e-system.drawing.printin_1_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/e-system.drawing.printin_1_1.vb)]"
  syntax:
    content: public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;
    return:
      type: System.Drawing.Printing.QueryPageSettingsEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.ToString
  id: ToString
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "提供列印文件，以字串形式的相關資訊。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串。"
  overload: System.Drawing.Printing.PrintDocument.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.Drawing.Printing.PrintDocument.#ctor
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
- uid: System.Drawing.Printing.PrintEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventHandler
  nameWithType: PrintEventHandler
  fullName: System.Drawing.Printing.PrintEventHandler
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventArgs
  nameWithType: PrintEventArgs
  fullName: System.Drawing.Printing.PrintEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
- uid: System.Drawing.Printing.PrintPageEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventArgs
  nameWithType: PrintPageEventArgs
  fullName: System.Drawing.Printing.PrintPageEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
- uid: System.Drawing.Printing.QueryPageSettingsEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventArgs
  nameWithType: QueryPageSettingsEventArgs
  fullName: System.Drawing.Printing.QueryPageSettingsEventArgs
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrintDocument.Print
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
- uid: System.Drawing.Printing.PrintDocument.PrintController
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintController
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintController
  nameWithType: PrintController
  fullName: System.Drawing.Printing.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
- uid: System.Drawing.Printing.PrintPageEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventHandler
  nameWithType: PrintPageEventHandler
  fullName: System.Drawing.Printing.PrintPageEventHandler
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
- uid: System.Drawing.Printing.QueryPageSettingsEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventHandler
  nameWithType: QueryPageSettingsEventHandler
  fullName: System.Drawing.Printing.QueryPageSettingsEventHandler
- uid: System.Drawing.Printing.PrintDocument.ToString
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
- uid: System.Drawing.Printing.PrintDocument.#ctor*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument
  nameWithType: PrintDocument.PrintDocument
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint
  nameWithType: PrintDocument.OnBeginPrint
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint
  nameWithType: PrintDocument.OnEndPrint
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage
  nameWithType: PrintDocument.OnPrintPage
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings
  nameWithType: PrintDocument.OnQueryPageSettings
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
- uid: System.Drawing.Printing.PrintDocument.Print*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print
  nameWithType: PrintDocument.Print
- uid: System.Drawing.Printing.PrintDocument.PrintController*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.ToString*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString
  nameWithType: PrintDocument.ToString
