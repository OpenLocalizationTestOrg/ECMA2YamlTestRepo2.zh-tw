### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrust
  id: ApplicationTrust
  children:
  - System.Security.Policy.ApplicationTrust.#ctor
  - System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  - System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  - System.Security.Policy.ApplicationTrust.ApplicationIdentity
  - System.Security.Policy.ApplicationTrust.Clone
  - System.Security.Policy.ApplicationTrust.DefaultGrantSet
  - System.Security.Policy.ApplicationTrust.ExtraInfo
  - System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  - System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  - System.Security.Policy.ApplicationTrust.Persist
  - System.Security.Policy.ApplicationTrust.ToXml
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
  type: Class
  summary: "封裝應用程式的安全性決策。 這個類別無法被繼承。"
  remarks: "ApplicationTrust 物件由信任管理員<xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>方法。</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrust : System.Security.Policy.EvidenceBase, System.Security.ISecurityEncodable
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.ISecurityEncodable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor
  id: '#ctor'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>類別。"
  remarks: "這個建構函式會建立空<xref:System.Security.Policy.ApplicationTrust>物件。</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public ApplicationTrust ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>類別<xref href=&quot;System.ApplicationIdentity&quot;> </xref>。"
  remarks: "應用程式識別包含應用程式的完整名稱和其程式碼基底的位置。"
  syntax:
    content: public ApplicationTrust (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>可唯一識別應用程式。"
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  id: '#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>類別使用集合的完全信任組件與所提供的授權集。"
  remarks: '`fullTrustAssemblies`識別中的強式名稱組件<xref:System.AppDomain>所要授與完全信任。</xref:System.AppDomain> 這個建構函式會呼叫<xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName>方法來建立<xref:System.AppDomain>，將會當做沙箱。</xref:System.AppDomain> </xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> 如需在沙箱中執行的應用程式的詳細資訊，請參閱[如何︰ 執行部分信任程式碼在沙箱中](~/add/includes/ajax-current-ext-md.md)。'
  syntax:
    content: public ApplicationTrust (System.Security.PermissionSet defaultGrantSet, System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName> fullTrustAssemblies);
    parameters:
    - id: defaultGrantSet
      type: System.Security.PermissionSet
      description: "預設權限集授與給不需要特定的所有組件授與。"
    - id: fullTrustAssemblies
      type: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
      description: "代表組件應該被視為完全信任的應用程式定義域中的強式名稱的陣列。"
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fullTrustAssemblies</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fullTrustAssemblies</code>包含組件沒有<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得或設定應用程式信任物件的應用程式識別。"
  remarks: "ApplicationIdentity 屬性可唯一識別啟動新的網域中的資訊清單為基礎的應用程式。"
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>應用程式的信任物件。"
  overload: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.ApplicationIdentity&quot;></xref>無法設定，因為它的值為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Clone
  id: Clone
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "建立新的物件是目前的執行個體的完整複本。"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "此應用程式的信任物件的複本。"
  overload: System.Security.Policy.ApplicationTrust.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  id: DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得或設定定義預設授權集的原則陳述式。"
  remarks: "DefaultGrantSet 屬性表示應用程式授與的權限。       <xref:System.Security.Policy.PolicyStatement>代表預設授與使用初始化<xref:System.Security.PermissionSet>與選擇性屬性。</xref:System.Security.PermissionSet> </xref:System.Security.Policy.PolicyStatement>"
  syntax:
    content: public System.Security.Policy.PolicyStatement DefaultGrantSet { get; set; }
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>描述預設會授與。"
  overload: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  id: ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得或設定應用程式的額外的安全性資訊。"
  syntax:
    content: public object ExtraInfo { get; set; }
    return:
      type: System.Object
      description: "物件，包含應用程式的其他安全性資訊。"
  overload: System.Security.Policy.ApplicationTrust.ExtraInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "重新建構<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>物件具有指定狀態的 XML 編碼方式。"
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>和<xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>方法實作進行<xref:System.Security.Policy.ApplicationTrust>物件安全性原則，請使用 XML encodable。</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>"
  syntax:
    content: public void FromXml (System.Security.SecurityElement element);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "XML 編碼方式，用來重新建構<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>物件。"
  overload: System.Security.Policy.ApplicationTrust.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "所使用的 XML 編碼<code> element </code>無效。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得這個應用程式信任的完全信任組件清單。"
  remarks: "清單會識別要授與完全信任中的組件<xref:System.AppDomain>與此相關聯<xref:System.Security.Policy.ApplicationTrust>執行個體。</xref:System.Security.Policy.ApplicationTrust> </xref:System.AppDomain> 組件是以其強式名稱識別。"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Policy.StrongName> FullTrustAssemblies { get; }
    return:
      type: System.Collections.Generic.IList{System.Security.Policy.StrongName}
      description: "完全信任組件清單。"
  overload: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  id: IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得或設定值，指出是否有必要的權限授與應用程式，而且受信任而得以執行。"
  remarks: "信任管理員會將 IsApplicationTrustedToRun 屬性設定為`true`執行核准的應用程式。"
  syntax:
    content: public bool IsApplicationTrustedToRun { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應用程式是受信任而得以執行。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Persist
  id: Persist
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得或設定值，指出是否要保存應用程式信任資訊。"
  remarks: "Persist 屬性時`true`，應用程式信任資訊會儲存至 ClickOnce 應用程式存放區。"
  syntax:
    content: public bool Persist { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果保存在應用程式信任資訊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.ApplicationTrust.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ToXml
  id: ToXml
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "建立的 XML 編碼方式<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>物件和其目前狀態。"
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>和<xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>方法實作進行<xref:System.Security.Policy.ApplicationTrust>物件安全性原則，請使用 XML encodable。</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "安全性物件，包含所有狀態資訊的 XML 編碼方式。"
  overload: System.Security.Policy.ApplicationTrust.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.ApplicationTrust.#ctor
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<StrongName>
  nameWithType: IEnumerable<StrongName>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
- uid: System.Collections.Generic.IList{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<StrongName>
  nameWithType: IList<StrongName>
  fullName: System.Collections.Generic.IList<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrust.Persist
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
- uid: System.Security.Policy.ApplicationTrust.#ctor*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone
  nameWithType: ApplicationTrust.Clone
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
- uid: System.Security.Policy.ApplicationTrust.FromXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml
  nameWithType: ApplicationTrust.FromXml
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Security.Policy.ApplicationTrust.Persist*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml
  nameWithType: ApplicationTrust.ToXml
