### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.NameReferenceConverter
  id: NameReferenceConverter
  children:
  - System.Windows.Markup.NameReferenceConverter.#ctor
  - System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter
  fullName: System.Windows.Markup.NameReferenceConverter
  type: Class
  summary: "提供型別轉換，將轉換的物件具有該名稱的物件參考的字串名稱，或物件圖形中傳回的物件名稱。"
  remarks: "這個類別會提供類型轉換器包裝函式約兩個服務。       <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A>實作會使用<xref:System.Xaml.IXamlNameResolver>服務內容，以在 XAML 中依名稱執行物件的解析度從。</xref:System.Xaml.IXamlNameResolver> </xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> 這是相關的 XAML 讀取器和在.NET Framework XAML 服務 XAML 寫入器實作的一部分。 這個轉換子的適當的函式需要<xref:System.Xaml.IXamlNameResolver>服務是可從服務內容。</xref:System.Xaml.IXamlNameResolver>       <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A>實作會使用<xref:System.Xaml.IXamlNameProvider>服務無法儲存/序列化期間執行名稱解析的參考物件的內容。</xref:System.Xaml.IXamlNameProvider> </xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> 這是相關的讀取器和寫入器實作和其內容的一部分。 這個轉換子的適當的函式需要有基礎<xref:System.Xaml.IXamlNameProvider>可用的服務。</xref:System.Xaml.IXamlNameProvider>       此類型轉換子實作為慣用<xref:System.ComponentModel.TypeConverter>基底類型，因為其範圍不是離散的轉換類型。</xref:System.ComponentModel.TypeConverter> 它可以可能會將任何物件與參考名稱，只要該物件無法在 XAML 中，指派給它的名稱，且支援的內容具有必要的服務，以傳回結果。       一般服務支援的一部分，System.Xaml 基底實作<xref:System.Xaml.XamlObjectWriter>和<xref:System.Xaml.XamlXmlWriter>提供<xref:System.Xaml.IXamlNameProvider>和<xref:System.Xaml.IXamlNameResolver>服務以供 NameReferenceConverter。</xref:System.Xaml.IXamlNameResolver> </xref:System.Xaml.IXamlNameProvider> </xref:System.Xaml.XamlXmlWriter> </xref:System.Xaml.XamlObjectWriter> 使用這些服務的名稱基礎`x:Name`或<xref:System.Windows.Markup.RuntimeNamePropertyAttribute>屬性別名屬性。</xref:System.Windows.Markup.RuntimeNamePropertyAttribute>"
  syntax:
    content: 'public class NameReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.NameReferenceConverter&quot;></xref>類別。"
  syntax:
    content: public NameReferenceConverter ();
    parameters: []
  overload: System.Windows.Markup.NameReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "傳回這個轉換子是否可以轉換成另一個物件的一種類型的物件。"
  remarks: "這項實作只能處理`sourceType`的<xref:System.String>。</xref:System.String> 其他類型都會傳回`false`。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>代表您想要從轉換的類型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個轉換子可以執行轉換，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "傳回值，指出轉換器是否可以轉換成指定的目的地類型的物件。"
  remarks: "A`destinationType`參考<xref:System.String>傳回型別`true`; 所有其他`destinationType`值傳回`false`。</xref:System.String>       如果此方法會傳回 false`context`是`null`，或如果<xref:System.Xaml.IXamlNameProvider>無法以從服務取得`context`。</xref:System.Xaml.IXamlNameProvider>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: destinationType
      type: System.Type
      description: "要轉換的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果轉換子可以執行轉換，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "將所提供的物件轉換成另一個物件，使用指定的內容和文化特性資訊。"
  remarks: "只有<xref:System.String>輸入提供轉換結果。</xref:System.String>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "要轉換的參考名稱字串。"
    return:
      type: System.Object
      description: "傳回的物件，這是潛在的型別對應相關的備份組件中，並且可以在 XAML 中宣告 XAML 名稱參考任何物件。"
  overload: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>value</code>null 字串或空字串。       - <xref href=&quot;System.Xaml.IXamlNameResolver&quot;> </xref>服務已遺失或無效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "將物件轉換成指定的類型。 這被為了傳回物件圖形中的 XAML 物件的參考名稱。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "要擷取的參考名稱的物件。"
    - id: destinationType
      type: System.Type
      description: "要傳回的類型。 您應該一律參考<xref:System.String>型別。</xref:System.String>"
    return:
      type: System.Object
      description: "輸入的參考名稱<code> value </code>物件。"
  overload: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xaml.IXamlNameProvider&quot;></xref>服務已遺失或無效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.NameReferenceConverter.#ctor*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter.NameReferenceConverter
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: NameReferenceConverter.CanConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: NameReferenceConverter.CanConvertTo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: NameReferenceConverter.ConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: NameReferenceConverter.ConvertTo
