### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeName
  id: XamlTypeName
  children:
  - System.Xaml.Schema.XamlTypeName.#ctor
  - System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  - System.Xaml.Schema.XamlTypeName.Name
  - System.Xaml.Schema.XamlTypeName.Namespace
  - System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ToString
  - System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  - System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  - System.Xaml.Schema.XamlTypeName.TypeArguments
  langs:
  - csharp
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
  type: Class
  summary: "提供方法來指定 XAML 型別名稱和命名空間。"
  remarks: "<xref:System.Xaml.XamlType>而 XamlTypeName 則是多個提供不同的方式指定該類型的資料結構，是在 XAML 類型系統中，型別資訊類別。</xref:System.Xaml.XamlType> XamlTypeName 也提供靜態 helper 方法來產生 XamlTypeName 解析 XAML 命名空間中的現有類型識別項。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")]

      public class XamlTypeName
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>類別。"
  syntax:
    content: public XamlTypeName ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>類別，根據現有<xref href=&quot;System.Xaml.XamlType&quot;> </xref>。"
  syntax:
    content: public XamlTypeName (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "現有<xref href=&quot;System.Xaml.XamlType&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>類別，根據名稱和命名空間的字串。"
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "包含名稱的 XAML 命名空間。"
    - id: name
      type: System.String
      description: "若要建立型別名稱<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>的。"
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>類別，根據名稱和命名空間的字串，以及陣列的型別引數。"
  remarks: "這是您要指定泛型型別和型別引數，該類型時所要使用的簽章。"
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName> typeArguments);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML 命名空間包含`name`。"
    - id: name
      type: System.String
      description: "若要建立型別名稱<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>的。"
    - id: typeArguments
      type: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
      description: "型別引數，其中每一個都必須是陣列<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Name
  id: Name
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得用來建構這個名稱<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  remarks: "如果<xref:System.Xaml.XamlType>用來建構這個<xref:System.Xaml.Schema.XamlTypeName>名稱的值為<xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlTypeName> </xref:System.Xaml.XamlType>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "型別的名稱。"
  overload: System.Xaml.Schema.XamlTypeName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  id: Namespace
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得用來建構這個 XAML 命名空間識別項<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  remarks: "如果<xref:System.Xaml.XamlType>已用來建構這個<xref:System.Xaml.Schema.XamlTypeName>，命名空間的值是`xamlType.GetXamlNamespaces()[0]`。</xref:System.Xaml.Schema.XamlTypeName> </xref:System.Xaml.XamlType>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "XAML 命名空間識別項。"
  overload: System.Xaml.Schema.XamlTypeName.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  id: Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值根據型別名稱和可以解析為命名空間的標記前置詞的物件。"
  syntax:
    content: public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeName
      type: System.String
      description: "若要建立的型別名稱<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值。"
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "實作的物件或服務提供者<xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>。"
    return:
      type: System.Xaml.Schema.XamlTypeName
      description: "建立<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "無法剖析字串。"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  id: ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值根據可以指定多個型別名稱的字串，並可以解決到命名空間的標記前置詞的物件。"
  remarks: "以下是巢狀的類型名稱或多個型別名稱剖析這個方法所啟用的 quasi BNF:```   NestedTypeName = Name | Name &quot;+&quot; NestedTypeName   TypeName = NestedTypeName | NestedTypeName ‘[]’   XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs   TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’   XamlTypeNameList = XamlTypeName XamlTypeNameList1   XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList   ```"
  syntax:
    content: public static System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeNameList
      type: System.String
      description: "字串，包含多個型別。 請參閱 < 備註 >。"
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "實作的物件或服務提供者<xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>。"
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "建立<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.ParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "無法剖析字串。"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString
  id: ToString
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "將這個值，轉換<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>為其相等字串表示。"
  remarks: "此簽章就相當於呼叫<xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>，並傳遞`null`如`prefixLookup`。</xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29> s"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "這樣的相等字串表示<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> 。"
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "將這個值，轉換<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>為其相等字串表示，這可用於標記語法中之型別的物件項目使用方式。"
  syntax:
    content: public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "前置詞查閱的服務參考。"
    return:
      type: System.String
      description: "帶有前置詞的使用方式的字串。"
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<>*> for this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - <> </> *> 不正確。       -或-無法查詢前置詞。"
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "將這個值，轉換<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>為其相等字串表示，這可用於標記語法在多種類型的物件項目使用方式。"
  syntax:
    content: public static string ToString (System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: typeNameList
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "型別的清單。"
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "前置詞查閱的服務參考。"
    return:
      type: System.String
      description: "所有類型的串連的字串結果。"
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>prefixLookup</code>or <code>typeNameList</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  id: TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值根據型別名稱和可以解析為命名空間的標記前置詞的物件。"
  syntax:
    content: public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);
    parameters:
    - id: typeName
      type: System.String
      description: "若要建立的型別名稱<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值。"
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "實作的物件或服務提供者<xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>。"
    - id: result
      type: System.Xaml.Schema.XamlTypeName
      description: "Out 參數，其中包含建立<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>如果傳回值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果剖析成功和<code> result </code>包含有用的值，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.TryParse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  id: TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "提供<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>值根據可以指定多個型別名稱的字串，並可以解決到命名空間的標記前置詞的物件。"
  syntax:
    content: public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> result);
    parameters:
    - id: typeNameList
      type: System.String
      description: "字串，包含多個型別。 請參閱 < 備註 >。"
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "實作的物件或服務提供者<xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>。"
    - id: result
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Out 參數，其中包含建立<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>如果傳回值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果剖析成功和<code> result </code>包含有用的值，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.Schema.XamlTypeName.TryParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  id: TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "取得用來建構這個型別引數<xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>。"
  remarks: "如果<xref:System.Xaml.XamlType>用來建構這個<xref:System.Xaml.Schema.XamlTypeName>、 <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A>組成的 TypeArguments 值</xref:System.Xaml.Schema.XamlTypeName></xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "型別引數，如果有的話。 可能是 null。"
  overload: System.Xaml.Schema.XamlTypeName.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
- uid: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlTypeName>
  nameWithType: IEnumerable<XamlTypeName>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.Name
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
- uid: System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.IXamlNamespaceResolver
  parent: System.Xaml
  isExternal: false
  name: IXamlNamespaceResolver
  nameWithType: IXamlNamespaceResolver
  fullName: System.Xaml.IXamlNamespaceResolver
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
- uid: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlTypeName>
  nameWithType: IList<XamlTypeName>
  fullName: System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.ToString
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
- uid: System.Xaml.INamespacePrefixLookup
  parent: System.Xaml
  isExternal: false
  name: INamespacePrefixLookup
  nameWithType: INamespacePrefixLookup
  fullName: System.Xaml.INamespacePrefixLookup
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
- uid: System.Xaml.Schema.XamlTypeName.#ctor*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName.XamlTypeName
- uid: System.Xaml.Schema.XamlTypeName.Name*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse
  nameWithType: XamlTypeName.Parse
- uid: System.Xaml.Schema.XamlTypeName.ParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList
  nameWithType: XamlTypeName.ParseList
- uid: System.Xaml.Schema.XamlTypeName.ToString*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString
  nameWithType: XamlTypeName.ToString
- uid: System.Xaml.Schema.XamlTypeName.TryParse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse
  nameWithType: XamlTypeName.TryParse
- uid: System.Xaml.Schema.XamlTypeName.TryParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList
  nameWithType: XamlTypeName.TryParseList
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
