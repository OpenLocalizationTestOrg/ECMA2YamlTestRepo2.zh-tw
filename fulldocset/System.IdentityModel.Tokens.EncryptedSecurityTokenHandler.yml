### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  id: EncryptedSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: EncryptedSecurityTokenHandler
  nameWithType: EncryptedSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  type: Class
  summary: "加密的安全性權杖的權杖處理常式。 處理類型的權杖<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>。"
  remarks: "序列化和還原序列化的權杖處理常式<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>物件從`<xenc:EncryptedData>`項目和<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>物件從`<xenc:EncryptedKey>`XML 加密語法和處理規格 (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210) 中所定義的項目。</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> </xref:System.IdentityModel.Tokens.EncryptedSecurityToken>"
  syntax:
    content: 'public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: EncryptedSecurityTokenHandler()
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityTokenHandler&quot;></xref>類別。"
  syntax:
    content: public EncryptedSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出是否指向目前的 XML 項目<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;></xref>可還原序列化的項目<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref>由這個執行個體。"
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 讀取器位於開始項目。 讀取器不應該讓前進。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML 讀取器位於<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;></xref>區段 3.5.1 (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210;) 的 XML 加密語法和處理規格中定義的項目否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出是否將讀取器所指<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;></xref>項目。"
  remarks: "當它傳回時，不會移動讀取器`false`。"
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "讀取器定位在安全性權杖 (<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;> </xref>項目。)"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果讀取器位於<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;></xref>項目，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得值，指出此處理常式是否提供語彙基元的序列化功能。"
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此處理常式可以序列化語彙基元。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得由目前的執行個體的語彙基元的類型識別碼的 Uri。"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "根據預設，會傳回單一陣列<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>因為沒有相關聯的特定語彙基元的類型識別碼的字串<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;></xref>型別。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得或設定<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> ，將會用來序列化和還原序列化金鑰識別碼，從<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;></xref>項目。"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "權杖序列化程式將會用來讀取和寫入索引鍵的索引鍵的識別項。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "嘗試將屬性設定為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，就會發生。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取<xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;></xref>從 XML 資料流。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML 讀取器位於<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;></xref>項目做為 &quot;http://www.w3.org/TR/2002/REC-xmlenc-core-20021210&quot; 中定義; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "型別的金鑰識別碼子句<xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>reader</code>不位在<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;></xref>項目。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "讀取加密的安全性權杖。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "要從其中讀取的語彙基元讀取器。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "安全性權杖的型別<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有任何設定的服務權杖解析程式。 (任一&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt;屬性或&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName&gt;參考的語彙基元處理常式組態屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 服務語彙基元解析程式，才能取得金鑰來解密。       -或- <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;></xref>透過參考<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>屬性是找不到<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;></xref>可以讀取解密的 XML，並傳回<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>找不到的內部指向的 XML 讀取器。       -or-       The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> is not a <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;></xref>."
  - type: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
    commentId: T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
    description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>找到的內部 XML 無法解析的設定的服務權杖解析程式來<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得由目前的執行個體的語彙基元的類型。"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "目前的執行個體所處理的語彙基元的類型。 The default is <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref><xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "寫入使用 XML 寫入器已加密的安全性權杖。"
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "要加密的權杖寫入至 XML 寫入器。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "加密的安全性權杖中，必須是執行個體<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>不是指派為<xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "&lt;Xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt;屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 這是必要屬性以取得加密金鑰。       -所傳回的語彙基元處理常式集合<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>屬性找不到<xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;></xref>可以寫入<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>傳回&lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName&gt;屬性。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "&lt;Xref:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey%2A?displayProperty=fullName&gt;屬性不是指派為<xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptedTokenDecryptionFailedException
  nameWithType: EncryptedTokenDecryptionFailedException
  fullName: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: EncryptedSecurityTokenHandler()
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: EncryptedSecurityTokenHandler
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: EncryptedSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: EncryptedSecurityTokenHandler.WriteToken
