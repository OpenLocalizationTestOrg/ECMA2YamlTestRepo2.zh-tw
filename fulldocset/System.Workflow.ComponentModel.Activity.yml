### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Activity
  id: Activity
  children:
  - System.Workflow.ComponentModel.Activity.#ctor
  - System.Workflow.ComponentModel.Activity.#ctor(System.String)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
  type: Class
  summary: "表示工作流程的基本建置組塊。 活動是所有活動的基底類別。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]活動是工作流程的基本建置組塊。 活動定義一組屬性和事件，例如任何類別，以及定義活動的執行階段行為的執行邏輯。 一組的其他元件可以與活動相關聯。 這些包括但不限於驗證程式、 程式碼產生器、 自訂序列化程式和設計工具。       所有活動都共用一組常用的活動的基底類別上定義的屬性。  每個活動可以延伸這個類別來宣告本身的其他屬性根據自己的需求。  因為活動衍生自<xref:System.Workflow.ComponentModel.DependencyObject>，屬性會定義為標準 CLR 屬性和相依性屬性。</xref:System.Workflow.ComponentModel.DependencyObject>       活動的執行邏輯，可滿足任何活動與工作流程執行階段之間不存在的合約。 您必須文件中的功能的意義上，任何活動的執行邏輯，以便對於使用活動的工作流程開發人員知道其行為。 執行邏輯本身會隱藏的工作流程開發人員將活動包含在工作流程中，因為執行邏輯是強制存在於工作流程執行階段與活動之間的合約的一部分。"
  example:
  - "This example defines an activity whose purpose is to send an email. The activity defines one property, `Subject`, that uses a dependency property in its implementation. Other properties can be defined in a similar way. The `Execute` method is overridden to provide the logic for sending the email. For a complete example, see the [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n```c#  \npublic class SendEmail : Activity  \n{  \n    public static readonly DependencyProperty SubjectProperty =  \n        DependencyProperty.Register(\"Subject\", typeof(string), typeof(SendEmail));  \n  \n    public string Subject  \n    {  \n        get { return base.GetValue(SubjectProperty) as string; }  \n        set { base.SetValue(SubjectProperty, value); }  \n    }  \n  \n    // Define other properties...  \n  \n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \n    {  \n        // Logic to send the e-mail goes here...  \n        return ActivityExecutionStatus.Closed;  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Component")]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Allow)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), "Design.Resources.Activity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))]

      [System.Workflow.ComponentModel.Serialization.RuntimeNameProperty("Name")]

      public class Activity : System.Workflow.ComponentModel.DependencyObject
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code shows how to create activities and add them as children to a composite activity.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public Activity ();
    parameters: []
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>類別，初始化<xref:System.Workflow.ComponentModel.Activity.Name*>.</xref:System.Workflow.ComponentModel.Activity.Name*>時"
  syntax:
    content: public Activity (string name);
    parameters:
    - id: name
      type: System.String
      description: "與這個執行個體相關聯的名稱。 名稱必須符合在工作流程專案中，所使用的程式設計語言的變數命名慣例，而且必須是唯一的工作流程中。"
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  id: ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>表示<xref:System.Guid>的<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>相關聯<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.Guid>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "若要取消目前正在執行的活動執行的工作流程執行階段呼叫。"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> ，其中包含要取消的執行個體。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "判斷活動停留在取消狀態或轉換為已關閉狀態的作業結束時的狀態。"
  overload: System.Workflow.ComponentModel.Activity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Canceling
  id: Canceling
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取消執行活動時發生。"
  remarks: "引發事件會透過委派事件處理常式叫用。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       <xref:System.Workflow.ComponentModel.Activity.Cancel%2A>方法也允許衍生的類別處理事件，而不用附加委派。</xref:System.Workflow.ComponentModel.Activity.Cancel%2A> 這是處理衍生類別中的事件的慣用的技巧。  [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]處理事件，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Canceling;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  id: CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "代表<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>目標<xref href=&quot;System.Workflow.ComponentModel.Activity.Canceling&quot;></xref>事件。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Clone
  id: Clone
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "建立的深層複本<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "使用<xref:System.IO.MemoryStream>複製活動，並建立新的活動從還原序列化該特定<xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream> </xref:System.IO.MemoryStream>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity Clone ();
    parameters: []
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "深層複本<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Closed
  id: Closed
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "發生時<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>才完成執行。"
  remarks: "引發事件會透過委派事件處理常式叫用。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       封閉式的方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Closed;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  id: ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "代表<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>目標<xref href=&quot;System.Workflow.ComponentModel.Activity.Closed&quot;></xref>事件。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Compensating
  id: Compensating
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "上執行補償方法時，就會發生<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "引發事件會透過委派事件處理常式叫用。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       Compensating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Compensating;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  id: CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "代表<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>目標<xref href=&quot;System.Workflow.ComponentModel.Activity.Compensating&quot;></xref>事件。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Description
  id: Description
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得或設定的使用者定義描述<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "這個屬性為中繼屬性，這表示它無法在執行階段變更。 屬性的執行個體建立在執行階段，因此該屬性必須設定為常值，在設計階段之後，中繼屬性不會變更。"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "文字描述<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Enabled
  id: Enabled
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得或設定值，指出這個執行個體是否已啟用以便執行和驗證。"
  remarks: "如果`false`，所有子活動是此值都會視為`false`它們也。       這個屬性為中繼屬性，這表示它無法在執行階段變更。 屬性的執行個體建立在執行階段，因此該屬性必須設定為常值，在設計階段之後，中繼屬性不會變更。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果啟用以便執行和驗證<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>否則。"
  overload: System.Workflow.ComponentModel.Activity.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "工作流程執行階段呼叫以執行活動。"
  remarks: "<xref:System.Workflow.ComponentModel.ActivityExecutionContext>用來取得目前執行的活動和工作流程的相關資訊，以及用於從執行階段環境取得服務。</xref:System.Workflow.ComponentModel.ActivityExecutionContext>       執行會同步發生，將控制權傳回給呼叫端，當活動完成或達到中繼狀態。"
  example:
  - "The following code example shows an implementation of the `Execute` method. In this example, an Outlook e-mail message is constructed and sent. This example is from the Outlook Workflow Wizard SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Outlook Workflow Wizard Sample](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \n  \n [!code-cs[WF_Samples#98](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#98)]\n [!code-vb[WF_Samples#98](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#98)]"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>關聯這<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>和執行。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref>執行工作，可判斷活動停留在執行的狀態，或轉換為已關閉狀態。"
  overload: System.Workflow.ComponentModel.Activity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Executing
  id: Executing
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "發生時<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>執行。"
  remarks: "引發事件會透過委派事件處理常式叫用。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       執行方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Executing;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  id: ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "代表<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>目標<xref href=&quot;System.Workflow.ComponentModel.Activity.Executing&quot;></xref>事件，則會執行活動時發生。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  id: ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;></xref>的最後嘗試来執行這個執行個體。"
  remarks: "執行工作流程執行個體時，這個屬性才有用。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionResult
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;> </xref>的最後嘗試来執行這個執行個體。"
  overload: System.Workflow.ComponentModel.Activity.ExecutionResult*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  id: ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得目前<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>這個執行個體。"
  remarks: "執行工作流程執行個體時，這個屬性才有用。"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "目前<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>這個執行個體。"
  overload: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Faulting
  id: Faulting
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "發生於執行個體執行期間引發例外狀況。"
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]處理事件，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Faulting;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  id: FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>表示<xref href=&quot;System.Workflow.ComponentModel.Activity.Faulting&quot;></xref>事件。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  id: GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "傳回的執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從執行工作流程內的這個執行個體的根活動下的所有活動集，則要求其名稱。"
  remarks: "呼叫`GetActivityByName`從自訂活動的建構函式不支援，而且可以有非預期的結果。"
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "名稱<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>搜尋。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從這個執行個體的根活動下執行的所有活動集，則要求其名稱。"
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  id: GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "傳回的執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從根之下的所有活動集，則要求其名稱<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>這個執行個體，如果第二個參數是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>目前在<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二個參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  remarks: "傳回的執行個體<xref:System.Workflow.ComponentModel.Activity>從根之下的所有活動集，則要求其名稱<xref:System.Workflow.ComponentModel.Activity>這個執行個體，如果第二個參數是`false`目前在<xref:System.Workflow.ComponentModel.Activity>如果第二個參數是`true`。</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>       呼叫`GetActivityByName`從自訂活動的建構函式不支援，而且可以有非預期的結果。"
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "名稱<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>搜尋。"
    - id: withinThisActivityOnly
      type: System.Boolean
      description: "值，指出是否要限制只搜尋這個執行個體中包含的活動。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從根之下的所有活動集，則要求其名稱<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>這個執行個體，如果第二個參數是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>目前在<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>如果第二個參數是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "這個執行個體的執行內容中引發例外狀況時呼叫。"
  remarks: "預設方法嘗試呼叫<xref:System.Workflow.ComponentModel.Activity.Cancel%2A>方法，並傳回這個嘗試的結果。</xref:System.Workflow.ComponentModel.Activity.Cancel%2A>"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>這個執行個體。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>造成此錯誤。</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> ，這樣會產生從嘗試取消這個執行個體。"
  overload: System.Workflow.ComponentModel.Activity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "工作流程執行階段呼叫以初始化新的工作流程執行個體在建構期間的活動。 在動態建構期間呼叫這個方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>。"
  syntax:
    content: protected virtual void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供初始化服務。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing &quot; name=&quot;Nothing &quot; href=&quot;&quot;></xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  id: Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (EventHandler<T> handler, T e) where T : EventArgs;'
    parameters:
    - id: handler
      type: System.EventHandler{T}
      description: "即將加入。"
    - id: e
      type: T
      description: "即將加入。"
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  id: Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (System.Workflow.ComponentModel.IActivityEventListener<T> eventListener, T e) where T : EventArgs;'
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener`1
      description: "即將加入。"
    - id: e
      type: T
      description: "即將加入。"
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  id: IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得有關活動是否執行中的預設資訊<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>工作流程執行個體。"
  syntax:
    content: public bool IsDynamicActivity { get; }
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果活動在執行中的預設<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>工作流程執行個體，否則傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "載入的執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從<xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>從中載入。</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>擁有已還原序列化內容<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從<xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "載入的執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從<xref:System.IO.Stream>使用自訂<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>進行還原序列化作業。</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "目標<xref:System.IO.Stream>在載入作業。</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>擁有已還原序列化內容<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref>用來從<xref:System.IO.Stream>.</xref:System.IO.Stream>讀取"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "執行個體<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>從<xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Name
  id: Name
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得或設定這個執行個體的名稱。 此名稱必須符合工作流程專案中所使用的程式設計語言的變數命名慣例。"
  remarks: "這個預設值為空字串。       這個屬性為中繼屬性，這表示它無法在執行階段變更。 屬性的執行個體建立在執行階段，因此該屬性必須設定為常值，在設計階段之後，中繼屬性不會變更。"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and set the value for Name.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "這個執行個體的名稱。"
  overload: System.Workflow.ComponentModel.Activity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  id: OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流程執行階段呼叫，每當<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>載入。 例如，在建立期間會呼叫這個方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>以及每次<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>從永續性儲存體載入工作流程執行個體時具體化。"
  syntax:
    content: protected virtual void OnActivityExecutionContextLoad (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服務。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  id: OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "由工作流程執行階段呼叫，每當<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>卸載。 例如，在完成的期間會呼叫這個方法<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>以及每次<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;></xref>時會卸載工作流程執行個體已保存。"
  syntax:
    content: protected virtual void OnActivityExecutionContextUnload (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服務。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "做為活動轉換為已關閉狀態的一部分，工作流程執行階段呼叫。"
  remarks: "這個方法提供一項活動，可以清除在其執行期間利用的資源。"
  syntax:
    content: protected virtual void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服務。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Parent
  id: Parent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得<xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;> </xref> ，其中包含這<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  remarks: "傳回 null 參考 (`Nothing`在 Visual Basic 中) 如果<xref:System.Workflow.ComponentModel.Activity>是工作流程或根<xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public System.Workflow.ComponentModel.CompositeActivity Parent { get; }
    return:
      type: System.Workflow.ComponentModel.CompositeActivity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>也就是此父系<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。"
  overload: System.Workflow.ComponentModel.Activity.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  id: QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得活動的限定的名稱。 完整的活動名稱永遠是在工作流程執行個體中唯一的。"
  remarks: "限定的名稱是包含此執行個體附加至前方的自訂活動的名稱取代這個執行個體的名稱。"
  syntax:
    content: public string QualifiedName { get; }
    return:
      type: System.String
      description: "執行個體的限定的名稱。"
  overload: System.Workflow.ComponentModel.Activity.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  id: RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "引發<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>指定相依性屬性相關聯。"
  remarks: ''
  example:
  - "The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.  \n  \n This code example is part of the Send E-mail Activity sample and is from the SendEmailActivity.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669)  \n  \n [!code-cs[WF_Samples#233](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#233)]\n [!code-vb[WF_Samples#233](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#233)]"
  syntax:
    content: protected void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>與此相關聯<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。"
    - id: sender
      type: System.Object
      description: "<xref:System.Object>來源<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。</xref:System.Object>"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>聯<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>。</xref:System.EventArgs>"
  overload: System.Workflow.ComponentModel.Activity.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  id: RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void RaiseGenericEvent<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;'
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
    - id: sender
      type: System.Object
      description: "即將加入。"
    - id: e
      type: T
      description: "即將加入。"
  overload: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "註冊指定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>狀態變更事件。"
  syntax:
    content: public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>註冊。"
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "實作此註冊的事件接聽程式介面的物件。"
  overload: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>不是下列其中一項:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "寫入<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>至<xref:System.IO.Stream>做為保存。</xref:System.IO.Stream>"
  syntax:
    content: public void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>用於儲存<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>。</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  id: Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "寫入<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>至<xref:System.IO.Stream>使用自訂的持續性<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>提供序列化。</xref:System.IO.Stream>"
  remarks: "Windows Workflow Foundation 不支援 soap 格式器。"
  syntax:
    content: public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "目標<xref:System.IO.Stream>的儲存作業。</xref:System.IO.Stream>"
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "二進位或自訂<xref href=&quot;System.Runtime.Serialization.IFormatter&quot;></xref>序列化。"
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "這個執行個體處於設計模式。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  id: StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "發生時<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;></xref>的執行<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>變更。"
  remarks: "引發事件會透過委派事件處理常式叫用。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       StatusChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。      > [!NOTE] > 當活動 （活動 A） 訂閱不同活動 (活動 B)`StatusChanged`事件，`Activity`屬性相關聯的<xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>指訂閱 (活動 B) 的活動和相關聯`Sender`物件會參考訂閱者的活動 （活動 A） 的執行內容。</xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  id: StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "代表<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>目標<xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChanged&quot;></xref>事件。"
  remarks: "您透過解決對應的相依性屬性的間接存取每一個公用屬性及這個型別的事件。 這個相依性屬性是名為的公用靜態欄位`XProperty`或`XEvent`，其中 X 是對應的屬性。       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ToString
  id: ToString
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "提供代表這個執行個體的字串。"
  remarks: "傳回的字串是組合<xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>和<xref:System.Type.FullName%2A>的這個執行個體的型別。</xref:System.Type.FullName%2A> </xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "這個執行個體。"
  overload: System.Workflow.ComponentModel.Activity.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  id: TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "通知執行階段追蹤基礎結構的暫止的追蹤資訊。"
  remarks: ''
  example:
  - "The following example shows a call to the `TrackData` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#118](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#118)]\n [!code-vb[WF_Samples#118](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#118)]"
  syntax:
    content: protected void TrackData (object userData);
    parameters:
    - id: userData
      type: System.Object
      description: "<xref:System.Object>包含追蹤資訊。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  id: TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "通知執行階段追蹤基礎結構的暫止的追蹤資訊。"
  syntax:
    content: protected void TrackData (string userDataKey, object userData);
    parameters:
    - id: userDataKey
      type: System.String
      description: "已變更之使用者資料索引鍵。"
    - id: userData
      type: System.Object
      description: "<xref:System.Object>包含追蹤資訊。</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  id: Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "當在衍生類別中覆寫時，取消初始化服務提供者所提供的活動。"
  remarks: "這個方法提供一項活動，可以清除初始化期間配置的資源。       取消初始化活動執行個體保證不會執行任何時呼叫。 不會實作的活動<xref:System.Workflow.ComponentModel.ICompensatableActivity>，立即在活動關閉後，或如果活動從未執行時，工作流程完成時，發生這種的情況。</xref:System.Workflow.ComponentModel.ICompensatableActivity> 如<xref:System.Workflow.ComponentModel.ICompensatableActivity>活動，這就會發生補償或工作流程完成時。</xref:System.Workflow.ComponentModel.ICompensatableActivity>"
  syntax:
    content: protected virtual void Uninitialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>提供服務。</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Uninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取消註冊指定<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>狀態變更事件。"
  syntax:
    content: public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>取消註冊。"
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "實作此註冊的事件接聽程式介面的物件。"
  overload: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>不是下列其中一項:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  id: WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "取得<xref:System.Guid>執行個體相關聯。</xref:System.Guid>"
  syntax:
    content: protected Guid WorkflowInstanceId { get; }
    return:
      type: System.Guid
      description: "<xref:System.Guid>執行個體相關聯。</xref:System.Guid>"
  overload: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: System.Workflow.ComponentModel.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.Activity.#ctor
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.Activity.Canceling
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityExecutionStatusChangedEventArgs>
  nameWithType: EventHandler<ActivityExecutionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
- uid: System.Workflow.ComponentModel.Activity.Clone
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.Activity.Closed
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
- uid: System.Workflow.ComponentModel.Activity.Compensating
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
- uid: System.Workflow.ComponentModel.Activity.Description
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.Activity.Executing
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.ActivityExecutionResult
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionResult
  nameWithType: ActivityExecutionResult
  fullName: System.Workflow.ComponentModel.ActivityExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.Faulting
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
- uid: System.EventHandler{T}
  parent: System
  isExternal: true
  name: EventHandler<T>
  nameWithType: EventHandler<T>
  fullName: System.EventHandler<T>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
- uid: System.Workflow.ComponentModel.IActivityEventListener`1
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<T>
  nameWithType: IActivityEventListener<T>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
- uid: System.Runtime.Serialization.IFormatter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatter
  nameWithType: IFormatter
  fullName: System.Runtime.Serialization.IFormatter
- uid: System.Workflow.ComponentModel.Activity.Name
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.Parent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
- uid: System.Workflow.ComponentModel.CompositeActivity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
- uid: System.Workflow.ComponentModel.Activity.ToString
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.ComponentModel.Activity.#ctor*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.Workflow.ComponentModel.Activity.Cancel*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel
  nameWithType: Activity.Cancel
- uid: System.Workflow.ComponentModel.Activity.Clone*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone
  nameWithType: Activity.Clone
- uid: System.Workflow.ComponentModel.Activity.Description*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
- uid: System.Workflow.ComponentModel.Activity.Execute*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute
  nameWithType: Activity.Execute
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName
  nameWithType: Activity.GetActivityByName
- uid: System.Workflow.ComponentModel.Activity.HandleFault*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault
  nameWithType: Activity.HandleFault
- uid: System.Workflow.ComponentModel.Activity.Initialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize
  nameWithType: Activity.Initialize
- uid: System.Workflow.ComponentModel.Activity.Invoke<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke<T>
  nameWithType: Activity.Invoke<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load
  nameWithType: Activity.Load
- uid: System.Workflow.ComponentModel.Activity.Name*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad
  nameWithType: Activity.OnActivityExecutionContextLoad
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload
  nameWithType: Activity.OnActivityExecutionContextUnload
- uid: System.Workflow.ComponentModel.Activity.OnClosed*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed
  nameWithType: Activity.OnClosed
- uid: System.Workflow.ComponentModel.Activity.Parent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
- uid: System.Workflow.ComponentModel.Activity.QualifiedName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent
  nameWithType: Activity.RaiseEvent
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent<T>
  nameWithType: Activity.RaiseGenericEvent<T>
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange
  nameWithType: Activity.RegisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.Save*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save
  nameWithType: Activity.Save
- uid: System.Workflow.ComponentModel.Activity.ToString*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString
  nameWithType: Activity.ToString
- uid: System.Workflow.ComponentModel.Activity.TrackData*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData
  nameWithType: Activity.TrackData
- uid: System.Workflow.ComponentModel.Activity.Uninitialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize
  nameWithType: Activity.Uninitialize
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange
  nameWithType: Activity.UnregisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
