### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.UndoEngine
  id: UndoEngine
  children:
  - System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  - System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.Dispose
  - System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  - System.ComponentModel.Design.UndoEngine.Enabled
  - System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  - System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  - System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.Undoing
  - System.ComponentModel.Design.UndoEngine.UndoInProgress
  - System.ComponentModel.Design.UndoEngine.Undone
  langs:
  - csharp
  name: UndoEngine
  nameWithType: UndoEngine
  fullName: System.ComponentModel.Design.UndoEngine
  type: Class
  summary: "在設計階段指定泛型復原/取消復原功能。"
  remarks: "UndoEngine 抽象類別提供設計階段復原功能的預設實作。 復原單位代表單一可復原工作的單位。 此單位加入至堆疊，使用者可以接著堆疊查核行程復原每個動作。 復原單位通常被設計來切換，這表示呼叫復原兩次傳回為開始狀態的應用程式。       UndoEngine 類別採用在設計工具中執行的物件的下列特性:-所有相關物件可以保存在某些格式的設計工具載入器。      -所有物件的屬性變更時，便會都引發屬性變更通知。      -<xref:System.ComponentModel.Design.IDesignerHost>提供可用來製作跨越多個較小的動作復原動作的交易的概念。</xref:System.ComponentModel.Design.IDesignerHost>       使用這些功能，UndoEngine 可以製作任何自動需要的復原單位。      > [!NOTE] > 並直接變更屬性值。 UndoEngine 類別會要求您使用適當<xref:System.ComponentModel.TypeDescriptor>來變更屬性值。</xref:System.ComponentModel.TypeDescriptor>       為了建立變更通知 UndoEngine 監視復原單位，而且本身的單位組成序列化的物件的狀態。 下表顯示建立 UndoEngine 時必須提供的服務。      |服務 |描述 |  |-------------|-----------------|  |<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|儲存元件的屬性和物件的值之前和之後有所變更時。 |  |<xref:System.ComponentModel.Design.IComponentChangeService>|通知復原引擎的元件所做的變更。 |  |<xref:System.ComponentModel.Design.IDesignerHost>|用來追蹤交易。 |     > [!NOTE] > 因為 UndoEngine 類別需要<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>和<xref:System.ComponentModel.Design.IComponentChangeService>，它是只能在設計階段可用。</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> </xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>       復原引擎追蹤交易，並建立包含異動的單一復原單位。 如此一來，復原引擎可以控制可復原動作的持續時間。 此外，因為交易可以命名，所以取消復原動作會繼承其名稱從目前的交易。 如果沒有交易可，而且報告了變更，復原引擎會建立復原變更 （例如，「 變更屬性 &quot;Text&quot; 」） 的型別名稱。"
  syntax:
    content: 'public abstract class UndoEngine : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;></xref>類別。"
  remarks: "<xref:System.ComponentModel.Design.UndoEngine>需要從數個服務`provider`參數才能發揮作用。</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected UndoEngine (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "父服務提供者。"
  overload: System.ComponentModel.Design.UndoEngine.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "找不到所需的服務。 請參閱<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;></xref>的所需的服務。 如果您已移除這項服務，請確定您提供替代。"
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "即將加入。"
  overload: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  id: CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "建立新的<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>。</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>"
  remarks: "CreateUndoUnit 方法的預設實作只會傳回新的<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>。</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>       根據預設，<xref:System.ComponentModel.Design.UndoEngine>不進行任何處理`primary`參數，但某些實作中的復原，例如那些牽涉到 COM`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`設計模式中，可能需要識別主要單位和其子系之間的差異。</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);
    parameters:
    - id: name
      type: System.String
      description: "若要建立的單位名稱。"
    - id: primary
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立一系列的巢狀單位; 中的第一個<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以建立後續的巢狀的單位。"
    return:
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "新<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>具有指定名稱。</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>"
  overload: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "即將加入。"
  overload: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "所使用的資源全部釋出<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;></xref>並選擇性釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "啟用或停用<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;></xref>已啟用，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.UndoEngine.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  id: GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得所要求的服務。"
  syntax:
    content: protected object GetRequiredService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要擷取的服務類型。"
    return:
      type: System.Object
      description: "所要求的服務，如果找到。"
  overload: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>serviceType</code>為必要項，但找不到。 如果您已移除這項服務，請確定您提供替代。"
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得所要求的服務。"
  syntax:
    content: protected object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要擷取的服務類型。"
    return:
      type: System.Object
      description: "所要求的服務，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到所要求的服務。"
  overload: System.ComponentModel.Design.UndoEngine.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  id: OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "引發<xref href=&quot;System.ComponentModel.Design.UndoEngine.Undoing&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnUndoing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndoing*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  id: OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "引發<xref href=&quot;System.ComponentModel.Design.UndoEngine.Undone&quot;></xref>事件。"
  syntax:
    content: protected virtual void OnUndone (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  id: Undoing
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "執行復原動作前發生。"
  syntax:
    content: public event EventHandler Undoing;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  id: UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "指出是否正在進行中復原動作。"
  syntax:
    content: public bool UndoInProgress { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果復原動作正在進行中，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undone
  id: Undone
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "執行復原動作之後立即發生。"
  remarks: "一律引發復原的事件，即使擲回例外狀況。"
  syntax:
    content: public event EventHandler Undone;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.UndoUnit
  parent: System.ComponentModel.Design
  isExternal: false
  name: UndoEngine+UndoUnit
  nameWithType: UndoEngine+UndoUnit
  fullName: System.ComponentModel.Design.UndoEngine+UndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
- uid: System.ComponentModel.Design.UndoEngine.Undone
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
- uid: System.ComponentModel.Design.UndoEngine.#ctor*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine
  nameWithType: UndoEngine.UndoEngine
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit
  nameWithType: UndoEngine.AddUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit
  nameWithType: UndoEngine.CreateUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit
  nameWithType: UndoEngine.DiscardUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.Dispose*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose
  nameWithType: UndoEngine.Dispose
- uid: System.ComponentModel.Design.UndoEngine.Enabled*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService
  nameWithType: UndoEngine.GetRequiredService
- uid: System.ComponentModel.Design.UndoEngine.GetService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService
  nameWithType: UndoEngine.GetService
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing
  nameWithType: UndoEngine.OnUndoing
- uid: System.ComponentModel.Design.UndoEngine.OnUndone*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone
  nameWithType: UndoEngine.OnUndone
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
