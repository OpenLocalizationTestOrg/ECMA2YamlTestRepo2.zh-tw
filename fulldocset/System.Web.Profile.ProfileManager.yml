### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileManager
  id: ProfileManager
  children:
  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  - System.Web.Profile.ProfileManager.ApplicationName
  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileManager.Enabled
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.Provider
  - System.Web.Profile.ProfileManager.Providers
  langs:
  - csharp
  name: ProfileManager
  nameWithType: ProfileManager
  fullName: System.Web.Profile.ProfileManager
  type: Class
  summary: "管理使用者設定檔資料和設定。"
  remarks: "ASP.NET 設定檔用來儲存和擷取資料來源，例如資料庫中的使用者設定。 使用<xref:System.Web.HttpContext.Profile%2A>目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>屬性</xref:System.Web.HttpContext.Profile%2A>來存取使用者設定檔 使用設定檔提供者管理設定檔資訊和屬性值。       ProfileManager 類別用來管理設定檔設定、 搜尋的使用者設定檔，以及刪除不再使用的使用者設定檔。 ProfileManager 類別提供靜態方法和屬性，可以藉由參考 ProfileManager 類別，在應用程式程式碼中的存取。 如需範例，請參閱本主題中的範例 > 一節和主題中的其他範例 ProfileManager 類別的成員。       根據預設，已停用所有 ASP.NET 應用程式的使用者設定檔。 若要啟用的使用者設定檔，設定`enabled`屬性為 true，如下列範例所示的組態項目。      ```   <configuration>     <system.web>       <profile enabled=&quot;true&quot; />     </system.web>   </configuration>   ```如需使用者設定檔的詳細資訊，請參閱[ASP.NET 設定檔屬性概觀](~/add/includes/ajax-current-ext-md.md)。       設定檔提供者用來儲存及擷取使用者設定檔中的屬性。 .NET Framework 包含<xref:System.Web.Profile.SqlProfileProvider>類別，以 SQL Server 資料庫中儲存使用者設定檔屬性。</xref:System.Web.Profile.SqlProfileProvider> A<xref:System.Web.Profile.SqlProfileProvider>名為執行個體`AspNetSqlProvider`做為預設設定檔提供者的電腦組態中指定。</xref:System.Web.Profile.SqlProfileProvider> `AspNetSqlProvider`連接至本機 Web 伺服器上的 SQL Server 資料庫的執行個體。 您可以指定<xref:System.Web.Profile.SqlProfileProvider>，以連接至另一個 SQL Server 預設設定檔提供者所使用的組態項目和`defaultProvider`的組態項目，如下列範例所示的屬性。</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public static class ProfileManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "以程式設計方式新增設定檔屬性。"
  remarks: "這個方法在功能上等於新增屬性至`profile`組態檔區段。 若要呼叫這個方法，以新增設定檔內容，您必須在以標記的方法進行呼叫<xref:System.Web.PreApplicationStartMethodAttribute>屬性。</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);
    parameters:
    - id: property
      type: System.Web.Configuration.ProfilePropertySettings
      description: "要加入的屬性設定。"
  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得或設定用來儲存及擷取設定檔資訊的應用程式的名稱。"
  remarks: "<xref:System.Web.Profile.ProfileManager>ApplicationName 屬性使用不同的應用程式與關聯的設定檔資訊。</xref:System.Web.Profile.ProfileManager> 這可讓多個應用程式使用相同的資料庫來儲存使用者資訊而不重複的使用者之間發生衝突。 多個 ASP.NET 應用程式可以使用相同的使用者資料庫中 ApplicationName 屬性指定相同的值。 ApplicationName 屬性可以透過程式設計的方式，設定或它可以是以宣告方式設定 Web 應用程式組態檔中使用`applicationName`屬性。       如果未指定值`applicationName`屬性為 Web 應用程式組態檔中，則會使用.NET Framework 隨附的設定檔提供者<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>ASP.NET 應用程式的屬性值。</xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> 對於非 ASP.NET 應用程式，預設值是<xref:System.Diagnostics.ProcessModule.ModuleName%2A>屬性值，不含副檔名。</xref:System.Diagnostics.ProcessModule.ModuleName%2A>       ApplicationName 屬性會公開<xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>屬性的預設設定檔提供者。</xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，它們可能設定為使用不同的應用程式名稱。 若要存取預設提供者以外的設定檔提供者的應用程式名稱，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性和存取<xref:System.Configuration.SettingsProvider.ApplicationName%2A>直接在提供者的屬性。</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>      > [!CAUTION] > 因為所有由提供服務的要求會使用單一預設設定檔提供者執行個體<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定 ApplicationName 屬性值。</xref:System.Web.HttpApplication> ApplicationName 屬性不是執行緒安全的多個寫入時，並將變更 ApplicationName 屬性值會導致非預期的行為，應用程式的多個使用者。 建議您避免撰寫程式碼，讓使用者設定 ApplicationName 屬性，除非您需要它。 ApplicationName 屬性設定，可能需要的應用程式的範例是管理多個應用程式的設定檔資料的系統管理應用程式。 這類應用程式應該在單一使用者應用程式並不是 Web 應用程式。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n  <add name=\"SqlProvider\"  \n    type=\"System.Web.Profile.SqlProfileProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "用來儲存及擷取設定檔資訊的應用程式名稱。"
  overload: System.Web.Profile.ProfileManager.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  id: AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得值，指出是否將在 ASP.NET 網頁的執行結束時自動儲存使用者設定檔。"
  remarks: "AutomaticSaveEnabled 屬性會指出是否啟用應用程式的自動儲存使用者設定檔。 如果已啟用自動儲存，<xref:System.Web.Profile.ProfileModule>物件引發<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件並呼叫<xref:System.Web.Profile.ProfileBase.Save%2A>方法期間<xref:System.Web.HttpApplication.EndRequest>事件結尾的 ASP.NET 網頁的執行。</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.Profile.ProfileBase.Save%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> </xref:System.Web.Profile.ProfileModule>       使用設定 AutomaticSaveEnabled 屬性`automaticSaveEnabled`ASP.NET 應用程式的 Web.config 檔案中項目的屬性。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \n  \n```  \n<profile enabled=\"true\"  \n  automaticSaveEnabled=\"true\"  \n  defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool AutomaticSaveEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者設定檔將會自動儲存的 ASP.NET 網頁; 執行的結尾否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "嘗試取得 AutomaticSaveEnabled 屬性值沒有至少<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "刪除使用者設定檔資料的上次活動日期和時間發生的指定的日期和時間之前。"
  remarks: "DeleteInactiveProfiles 方法用來從指定的應用程式的資料來源中移除未使用的設定檔資料`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 任何設定檔的搜尋的設定檔與<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>，就會發生在或之前指定`userInactiveSinceDate`會刪除參數值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       DeleteInactiveProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會刪除其他資料來源中的設定檔資訊。 若要刪除非使用中預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]"
  syntax:
    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或這兩種類型的設定檔會刪除。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>可識別哪些使用者設定檔會被視為非使用中。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "刪除資料來源的設定檔數目。"
  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  id: DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "從資料來源中刪除指定的使用者名稱的設定檔。"
  remarks: "DeleteProfile 方法會刪除所有的設定檔資訊和指定的使用者設定檔屬性`username`指定<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>資料來源       DeleteProfile 方法呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>方法來執行刪除作業的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，不會刪除它們。 若要刪除預設的提供者以外的設定檔提供者所管理的設定檔屬性，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteProfile (string username);
    parameters:
    - id: username
      type: System.String
      description: "要刪除設定檔的使用者名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到，刪除; 使用者設定檔否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.DeleteProfile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>為空字串 (&quot;&quot;)，或包含逗號。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "刪除設定檔屬性和使用者名稱的資訊提供的清單。"
  remarks: "DeleteProfiles 方法會從指定的應用程式的資料來源刪除所有設定檔資訊和指定的設定檔屬性<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>屬性。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 若要刪除的設定檔的清單已指定為使用者名稱的字串陣列。 如果設定檔內容及資訊存在於資料來源中的使用者名稱`usernames`參數，就會刪除它們。       傳回的值可能不同於指定之陣列的長度`usernames`。 這表示指定的陣列中的設定檔的某些`usernames`已經從資料存放區刪除。       DeleteProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，不會刪除它們。 若要刪除預設的提供者以外的設定檔提供者所管理的設定檔屬性，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "要刪除的設定檔的使用者名稱的字串陣列。"
    return:
      type: System.Int32
      description: "刪除資料來源的設定檔數目。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\") or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "刪除設定檔屬性和資訊從資料來源的設定檔提供的清單。"
  remarks: "DeleteProfiles 方法會從指定的應用程式的資料來源刪除所有設定檔資訊和指定的設定檔屬性<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>屬性。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 使用指定的設定檔，以刪除清單<xref:System.Web.Profile.ProfileInfoCollection>傳遞做為`profiles`參數。</xref:System.Web.Profile.ProfileInfoCollection> A<xref:System.Web.Profile.ProfileInfoCollection>可從傳回<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>， <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>， <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>，和<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法。</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>       請注意傳回的值可能會有所不同<xref:System.Web.Profile.ProfileInfoCollection.Count%2A>。 提供<xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfoCollection>值</xref:System.Web.Profile.ProfileInfoCollection.Count%2A> 這表示在指定的設定檔的某些<xref:System.Web.Profile.ProfileInfoCollection>已經從資料存放區刪除。</xref:System.Web.Profile.ProfileInfoCollection>       DeleteProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，不會刪除它們。 若要刪除預設的提供者以外的設定檔提供者所管理的設定檔屬性，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> ，其中包含要刪除的設定檔的設定檔資訊。"
    return:
      type: System.Int32
      description: "刪除資料來源的設定檔數目。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\"\") or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Enabled
  id: Enabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得值，指出是否啟用應用程式的使用者設定檔。"
  remarks: "使用者設定檔已啟用應用程式使用`enabled`組態項目的屬性。"
  example:
  - "The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用的使用者設定檔。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Profile.ProfileManager.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取所有設定檔中上次活動日期發生在或之前指定的日期和時間和設定檔的使用者名稱符合指定的名稱的設定檔資訊。"
  remarks: "FindInactiveProfilesByUserName 方法用來擷取指定的應用程式的所有未使用的使用者設定檔的設定檔資訊`applicationName`組態檔中的屬性。 這個方法只會擷取的設定檔的使用者名稱符合所提供的設定檔`usernameToMatch`參數值。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 任何設定檔的搜尋的設定檔與<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>，就會發生在或之前指定`userInactiveSinceDate`傳回參數的值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       您可以擷取這項資訊使用的多載的資料頁面中<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>採用其他方法`pageIndex`和`pageSize`參數。</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>      > [!NOTE] > 設定檔提供者可能支援在中的使用萬用字元`usernameToMatch`參數。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>類別支援在中的使用萬用字元`usernameToMatch`參數。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       FindInactiveProfilesByUserName 方法呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找非使用中預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>可識別哪些使用者設定檔會被視為非使用中。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含非使用中的使用者名稱符合所提供的設定檔的使用者設定檔資訊<code> usernameToMatch </code>參數。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>為空字串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取設定檔中指定日期當天或之前，發生上次活動日期和時間和設定檔的使用者名稱符合指定的名稱的資料頁面中的設定檔資訊。"
  remarks: "FindInactiveProfilesByUserName 方法用來擷取指定的應用程式的未使用的使用者設定檔的設定檔資訊`applicationName`組態檔中的屬性。 這個方法只會擷取使用者名稱符合所提供的設定檔`usernameToMatch`參數值。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 搜尋的設定任何的檔設定檔會傳回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>，就會發生在或之前指定`userInactiveSinceDate`參數值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       FindInactiveProfilesByUserName 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Profile.ProfileInfo>物件中傳回<xref:System.Web.Profile.ProfileInfoCollection>集合。</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex`參數識別要傳回的結果的分頁，則為 0 識別的第一頁。 `totalRecords`參數是`out`參數設為非作用中的使用者設定檔所設定的總數`applicationName`根據`authenticationOption`和`userInactiveSinceDate`參數。 比方說，如果有設定 13 使用者`applicationName`，和`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Profile.ProfileInfoCollection>傳回包含第 6 到第十個非使用中的設定檔。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`參數會設定為 13。       請注意，您的設定檔提供者可能支援在中的使用萬用字元`usernameToMatch`參數。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>類別支援在中的使用萬用字元`usernameToMatch`參數。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       FindInactiveProfilesByUserName 方法呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找非使用中預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>值，指定是否匿名、 驗證，或傳回這兩種類型的設定檔。"
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>可識別哪些使用者設定檔會被視為非使用中。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "這個方法傳回時，包含可識別設定檔的總數的整數。 這個參數未初始化便傳遞。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含非使用中的設定檔位置的使用者名稱符合所提供的使用者設定檔資訊<code> usernameToMatch </code>參數。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取設定檔中的使用者名稱符合指定之名稱的所有設定檔資訊。"
  remarks: "FindProfilesByUserName 方法傳回的所有設定檔資訊的使用者名稱符合所提供清單`usernameToMatch`所設定的參數值<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>屬性值。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。       您可以擷取使用的多載的資料頁面中的使用者設定檔的設定檔資訊<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>採用其他方法`pageIndex`和`pageSize`參數。</xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>       請注意，您的設定檔提供者可能支援在中的使用萬用字元`usernameToMatch`參數。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>類別支援在中的使用萬用字元`usernameToMatch`參數。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       FindProfilesByUserName 方法呼叫<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含其中的使用者名稱符合所提供的設定檔的使用者設定檔資訊<code> usernameToMatch </code>參數。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>為空字串 (&quot;&quot;)。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取的設定檔中的使用者名稱符合指定之名稱的資料頁面中的設定檔資訊。"
  remarks: "<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法會傳回設定檔的使用者名稱符合所提供的設定檔資訊清單`usernameToMatch`參數值的設定<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。       請注意，您的設定檔提供者可能支援在中的使用萬用字元`usernameToMatch`參數。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>類別支援在中的使用萬用字元`usernameToMatch`參數。</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       FindProfilesByUserName 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別要在<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection>傳回的<xref:System.Web.Profile.ProfileInfo>物件</xref:System.Web.Profile.ProfileInfo>數目上限 `pageIndex`參數會識別哪一頁的結果，傳回; 零識別的第一頁。 `totalRecords`參數是`out`參數設為指定的應用程式的非作用中的使用者設定檔的總數`applicationName`屬性在組態檔中，根據所提供`authenticationOption`。 比方說，如果有設定 13 使用者`applicationName`，和`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Profile.ProfileInfoCollection>傳回包含第 6 到第十個設定檔。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`參數會設定為 13。       <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: usernameToMatch
      type: System.String
      description: "要搜尋的使用者名稱。"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "這個方法傳回時，包含可識別設定檔的總數的整數。 這個參數未初始化便傳遞。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含其中的使用者名稱符合所提供的設定檔的使用者設定檔資訊<code> usernameToMatch </code>參數。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取所有使用者設定檔資料，設定檔的上次活動日期發生在或之前的指定的日期和時間。"
  remarks: "GetAllInactiveProfiles 方法用來擷取所指定的應用程式的所有未使用的使用者設定檔的資料來源的設定檔資訊`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 搜尋的設定任何的檔設定檔會傳回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>，就會發生在或之前指定`userInactiveSinceDate`參數值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       您可以擷取使用的多載的資料頁面中的非作用中的使用者設定檔的設定檔資訊<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>採用其他方法`pageIndex`和`pageSize`參數。</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>       GetAllInactiveProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找未使用的預設提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>可識別哪些使用者設定檔會被視為非使用中。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含非使用中的設定檔的相關使用者設定檔資訊。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取頁<xref href=&quot;System.Web.Profile.ProfileInfo&quot;></xref>上次活動日期發生在或之前的指定的日期和時間的使用者設定檔的物件。"
  remarks: "GetAllInactiveProfiles 方法用來擷取指定的應用程式的未使用的使用者設定檔的資料來源的設定檔資訊`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 搜尋的設定任何的檔設定檔會傳回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>發生此情況之前指定`userInactiveSinceDate`參數值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       GetAllInactiveProfiles 所傳回的結果都會受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別要在<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection>傳回的<xref:System.Web.Profile.ProfileInfo>物件</xref:System.Web.Profile.ProfileInfo>數目上限 `pageIndex`參數會識別哪一頁的結果，傳回; 零識別的第一頁。 `totalRecords`參數是`out`參數設為非作用中的使用者設定檔所設定的總數`applicationName`根據`authenticationOption`和`userInactiveSinceDate`參數。 例如，如果沒有設定 13 使用者`applicationName`，和`pageIndex`值是具有`pageSize`5，<xref:System.Web.Profile.ProfileInfoCollection>傳回包含第 6 到第十個非使用中的設定檔。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`參數會設定為 13。       GetAllInactiveProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>可識別哪些使用者設定檔會被視為非使用中。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "這個方法傳回時，包含可識別設定檔的總數的整數。 這個參數未初始化便傳遞。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含非使用中的設定檔的相關使用者設定檔資訊。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取使用者設定檔資料的資料來源中的設定檔。"
  remarks: "GetAllProfiles 方法用來擷取指定的應用程式的資料來源的設定檔資訊`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。       您可以擷取的頁面<xref:System.Web.Profile.ProfileInfo>物件使用的多載的使用者設定檔<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>採用其他方法`pageIndex`和`pageSize`參數。</xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfo>       GetAllProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName`.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含所有資料來源中的設定檔的使用者設定檔資訊。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "擷取使用者設定檔資料的頁面。"
  remarks: "GetAllProfiles 方法用來擷取指定的應用程式的資料來源的設定檔資訊`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。       所傳回的結果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>受到`pageIndex`和`pageSize`參數。</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> `pageSize`參數識別要在<xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection>傳回的<xref:System.Web.Profile.ProfileInfo>物件</xref:System.Web.Profile.ProfileInfo>數目上限 `pageIndex`參數會識別哪一頁的結果，傳回; 零識別的第一頁。 `totalRecords`參數是`out`參數設為非作用中的使用者設定檔所設定的總數`applicationName`，根據提供`authenticationOption`。 例如，如果沒有設定 13 使用者`applicationName`，和`pageIndex`值是具有`pageSize`5，<xref:System.Web.Profile.ProfileInfoCollection>傳回包含第 6 到第十個設定檔。</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords`參數會設定為 13。       GetAllProfiles 方法呼叫<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>方法的預設設定檔提供者。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 使用指定的預設設定檔提供者`defaultProvider`組態項目的屬性。 如果使用者設定檔包含非預設的提供者設定檔提供者所管理的屬性，將不會搜尋其他設定檔提供者的資料來源。 若要尋找預設的提供者以外的設定檔提供者所管理的設定檔，取得使用的設定檔提供者的參考<xref:System.Web.Profile.ProfileManager.Providers%2A>屬性並呼叫<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>方法直接在提供者。</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: pageIndex
      type: System.Int32
      description: "要傳回的結果頁面的索引。 `pageIndex`以零為起始。"
    - id: pageSize
      type: System.Int32
      description: "要傳回的結果頁面大小。"
    - id: totalRecords
      type: System.Int32
      description: "這個方法傳回時，包含可識別設定檔的總數的整數。 這個參數未初始化便傳遞。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>包含所有資料來源中的設定檔的使用者設定檔資訊。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "指定日期當天或之前，請取得上次活動日期發生的設定檔數目。"
  remarks: "GetNumberOfInactiveProfiles 方法用來從指定的應用程式的資料來源擷取的未使用的使用者設定檔的所有計數`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。 搜尋的設定檔中，所有設定檔會計算有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>，就會發生在或之前指定`userInactiveSinceDate`參數值。</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>"
  example:
  - "The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>識別哪些使用者設定檔會被視為非使用中的物件。</xref:System.DateTime> 如果<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>的使用者設定檔或之前這個日期和時間，就會發生在設定檔會被視為非使用中。</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "發生在指定的日期和時間之前的上次活動日期的資料來源中的設定檔數目。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得資料來源中的設定檔的數目。"
  remarks: "GetNumberOfProfiles 方法用來從指定的應用程式的資料來源中擷取所有使用者設定檔的計數`applicationName`組態檔中的屬性。 使用`authenticationOption`參數來指定您是否只有匿名設定檔，只會驗證設定檔或要搜尋的所有設定檔。"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "其中一個<xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref>列舉值，指定是否為匿名，經過驗證，或傳回這兩種類型的設定檔。"
    return:
      type: System.Int32
      description: "資料來源中的設定檔數目。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Provider
  id: Provider
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得應用程式的預設設定檔提供者的參考。"
  remarks: "提供者屬性可讓您直接參考應用程式的預設設定檔提供者。 這通常用來存取的設定檔提供者不是<xref:System.Web.Profile.ProfileProvider>抽象的基底類別</xref:System.Web.Profile.ProfileProvider>的一部分的自訂成員"
  example:
  - "The following code example lists properties of the default profile provider.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProvider Provider { get; }
    return:
      type: System.Web.Profile.ProfileProvider
      description: "應用程式的預設設定檔提供者。"
  overload: System.Web.Profile.ProfileManager.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "嘗試取得提供者的屬性值，而不會至少<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Providers
  id: Providers
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得 ASP.NET 應用程式設定檔提供者的集合。"
  remarks: "提供者屬性會參考所有啟用的應用程式的設定檔提供者，包括提供者加入電腦組態和所有的 Web.config 檔案中新增提供者。 您可以控制哪一個設定檔提供者可供使用的項目區段的組態檔中的應用程式。 例如，下列 Web.config 檔案中移除父組態檔中指定的設定檔提供者，並將<xref:System.Web.Profile.SqlProfileProvider>與應用程式的設定檔提供者執行個體。</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile enabled=&quot;true&quot; defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```在指定的區段時，您必須指定預設提供者藉由設定`defaultProvider`屬性。 如果您未在 Web.config 檔案中指定區段，會使用電腦組態中的值和<xref:System.Web.Profile.SqlProfileProvider>做為預設提供者建立名為 Languagekeyword>aspnetsqlprovider< 執行個體。</xref:System.Web.Profile.SqlProfileProvider>       您可以取得提供者從提供者集合的強型別的參考索引的設定檔提供者名稱，並將它轉型為所需的型別。"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }
    return:
      type: System.Web.Profile.ProfileProviderCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileProviderCollection&quot;> </xref>的 ASP.NET 應用程式設定的設定檔提供者。"
  overload: System.Web.Profile.ProfileManager.Providers*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "嘗試取得提供者的屬性值，而不會至少<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
- uid: System.Web.Configuration.ProfilePropertySettings
  parent: System.Web.Configuration
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
- uid: System.Web.Profile.ProfileManager.ApplicationName
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileManager.Enabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.Provider
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.Profile.ProfileManager.Providers
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
- uid: System.Web.Profile.ProfileProviderCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProviderCollection
  nameWithType: ProfileProviderCollection
  fullName: System.Web.Profile.ProfileProviderCollection
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty
  nameWithType: ProfileManager.AddDynamicProfileProperty
- uid: System.Web.Profile.ProfileManager.ApplicationName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileManager.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileManager.DeleteProfile*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile
  nameWithType: ProfileManager.DeleteProfile
- uid: System.Web.Profile.ProfileManager.DeleteProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileManager.DeleteProfiles
- uid: System.Web.Profile.ProfileManager.Enabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileManager.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileManager.FindProfilesByUserName
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileManager.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetAllProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileManager.GetAllProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles
  nameWithType: ProfileManager.GetNumberOfProfiles
- uid: System.Web.Profile.ProfileManager.Provider*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
- uid: System.Web.Profile.ProfileManager.Providers*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
