### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "指定是否<xref:System.Net.Sockets.Socket>將維持連接狀態之後呼叫<> *> 或<> *> 方法，它會持續的時間長度，如果連接傳送的資料會保留。</xref:System.Net.Sockets.Socket>"
  remarks: "可能仍有資料可用的傳出的網路緩衝區中應用程式呼叫之後<xref:System.Net.Sockets.Socket>或<xref:System.Net.Sockets.TcpClient>方法。</xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket> 如果您想要指定的時間<xref:System.Net.Sockets.Socket>會嘗試關閉後傳送未傳送的資料，請建立具有 LingerOption`enable`參數設定為`true`，而`seconds`參數設定為所需的時間量。</xref:System.Net.Sockets.Socket> `seconds`參數用來指出您想要的時間長度<xref:System.Net.Sockets.Socket>來維持連線逾時之前。</xref:System.Net.Sockets.Socket> 如果您不想<xref:System.Net.Sockets.Socket>保持連線的任何長度的時間結束後，建立 LingerOption 執行個體與`enable`參數設定為`true`和`seconds`參數設定為零。</xref:System.Net.Sockets.Socket> 在此情況下，<xref:System.Net.Sockets.Socket>會立即關閉，而未傳送的資料將會遺失。</xref:System.Net.Sockets.Socket> 一旦建立之後，傳遞至 LingerOption<xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>方法。</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> 如果您正在傳送及接收資料與<xref:System.Net.Sockets.TcpClient>，然後在中設定 LingerOption 執行個體<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>屬性。</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient>       IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為，如<xref:System.Net.Sockets.Socket>時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定以及<xref:System.Net.Sockets.TcpClient>時<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性未設定。</xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.Socket>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Sockets.LingerOption&quot;></xref>類別。"
  remarks: "可能仍有資料可用的傳出的網路緩衝區中關閉<xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>之後 使用`enable`參數來指定您是否想要<xref:System.Net.Sockets.Socket>繼續呼叫 close 方法之後，傳輸未傳送的資料。</xref:System.Net.Sockets.Socket> 使用`seconds`參數，以指定您想要的時間長度<xref:System.Net.Sockets.Socket>嘗試傳送逾時之前的未傳送的資料。</xref:System.Net.Sockets.Socket> 如果您指定`true`如`enable`參數以 0 代表`seconds`參數，<xref:System.Net.Sockets.Socket>將嘗試傳送資料，直到傳出的網路緩衝區中沒有資料的左邊。</xref:System.Net.Sockets.Socket> 如果您指定`false`如`enable`參數，<xref:System.Net.Sockets.Socket>會立即關閉，而未傳送的資料將會遺失。</xref:System.Net.Sockets.Socket>       下表描述的行為上<xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>和<xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>方法為基礎的可能值`enable`和`seconds`T:System.Net.Sockets.LingerOption 執行個體時建立並設定的參數<xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>或<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>屬性。</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>      |`enable`|`seconds`|行為 |  |--------------|---------------|--------------|  |`false` （停用），預設值 |不適用，在逾時 （預設值）。 |嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。 |  |`true` （啟用） |非零的逾時 |嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。 |  |`true` （啟用） |零逾時。 |會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。 |      IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。</xref:System.Net.Sockets.Socket.LingerState%2A>       當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>維持連線之後&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;方法是呼叫，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: seconds
      type: System.Int32
      description: "要保留的秒數之後連接&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;方法呼叫。"
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "取得或設定值，這個值，指出是否要在之後 linger<xref:System.Net.Sockets.Socket>已關閉。</xref:System.Net.Sockets.Socket>"
  remarks: "您可以使用 [啟用] 屬性來判斷是否<xref:System.Net.Sockets.Socket>結束後將 linger。</xref:System.Net.Sockets.Socket> 變更此值可`true`或`false`，並將變更傳遞<xref:System.Net.Sockets.LingerOption>至<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一組<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>property.to 停用或啟用延遲。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       下表描述的 Enabled 屬性的可能值的行為和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>      |`enable`|`seconds`|行為 |  |--------------|---------------|--------------|  |`false` （停用），預設值 |不適用，在逾時 （預設值）。 |嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。 |  |`true` （啟用） |非零的逾時 |嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。 |  |`true` （啟用） |零逾時。 |會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。 |      IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。</xref:System.Net.Sockets.Socket.LingerState%2A>       當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Net.Sockets.Socket>之後應該 linger &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;呼叫，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Net.Sockets.Socket>"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "取得或設定要維持連接狀態之後呼叫的時間量&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;方法，如果要傳送的資料會保留。"
  remarks: "使用此值，如果您想要判斷如何長關閉<xref:System.Net.Sockets.Socket>將會嘗試傳輸逾時前未傳送的資料。</xref:System.Net.Sockets.Socket> 您也可以設定此值到所需的逾時期間，以秒為單位。       如果<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性是`true`，並且 LingerTime 設定為 0，<xref:System.Net.Sockets.Socket>就會捨棄任何暫止傳送傳出的網路緩衝區中的資料。</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.LingerOption.Enabled%2A> 如果您變更此值時，您必須傳遞改變<xref:System.Net.Sockets.LingerOption>執行個體<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一組<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       下表描述的可能值的行為<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性和 LingerTime 屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.Enabled%2A>      |`enable`|`seconds`|行為 |  |--------------|---------------|--------------|  |`false` （停用），預設值 |不適用，在逾時 （預設值）。 |嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。 |  |`true` （啟用） |非零的逾時 |嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。 |  |`true` （啟用） |零逾時。 |會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。 |      IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。</xref:System.Net.Sockets.Socket.LingerState%2A>       當 LingerTime 屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。</xref:System.Net.Sockets.Socket.LingerState%2A>"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "時間 （秒），來維持連接狀態之後呼叫的數量&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;。"
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
