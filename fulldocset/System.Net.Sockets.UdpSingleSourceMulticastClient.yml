### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "用戶端接收器來自單一來源，也稱為來源特定多點傳送 (SSM) 的多點傳送流量。"
  remarks: "必須知道的多點傳送的群組位址和寄件者來源位址。       除了來自特定寄件者接收多點傳送的資料，UdpSingleSourceMulticastClient 用戶端也可以傳送單點傳播資料傳回給寄件者。       若要從多個來源，或來源不事先知道接收多點傳送，請改為使用 UdpSingleSourceMulticastClient 類別。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "建立新<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> UDP 用戶端，可以訂閱群組位址，並從單一來源接收資料包。"
  remarks: "與群組位址和連接埠，UdpSingleSourceMulticastClient 建構函式產生關聯的 UDP 多點傳送的通訊端，但不會繫結或否則使用通訊端。       `groupAddress`參數可能是 IPv6 或 IPv4 多點傳送位址。 不過的位址系列`sourceAddress`和`groupAddress`參數必須相同。       `localPort`參數必須指定小於 1024 的連接埠。"
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "此訂閱的收件者寄件者來源位址。"
    - id: groupAddress
      type: System.Net.IPAddress
      description: "此收件者要訂閱多點傳送的群組位址。"
    - id: localPort
      type: System.Int32
      description: "本機連接埠繫結到此收件者。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>和<code>groupAddress</code>必須是相同的位址系列。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>為 null 參考 (在 Visual Basic 中 Nothing)。       -或-<code>groupAddress</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>小於 0-或-<code>localPort</code>大於 65,535。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>小於 1024"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "繫結通訊端，並開始聯結作業到多點傳送的群組，以允許從單一來源位址接收資料包。"
  remarks: "BeginJoinGroup 方法繫結的本機連接埠將 UDP 多點傳送的通訊端，而且聯結多點傳送的群組，以允許從單一來源位址接收資料包。 中指定多點傳送的群組位址、 單一來源位址和本機連接埠繫結至<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>建構函式。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       中指定的方法`callback`加入多點傳送的群組作業完成時，會叫用參數。       如果需要執行階段，BeginJoinGroup 方法也會執行原則檢查，確認允許用戶端存取多點傳送的群組。 如果不允許存取，<xref:System.Net.Sockets.SocketException>就會擲回與<xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError></xref:System.Net.Sockets.SocketException>用戶端。"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "在作業完成時叫用的回呼方法。"
    - id: state
      type: System.Object
      description: "要傳遞給選擇性狀態資訊`callback`這項作業的方法。"
    return:
      type: System.IAsyncResult
      description: "傳回<xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>參考這項作業。</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "多點傳送的群組已經加入或聯結作業正在進行中。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "當您嘗試存取通訊端時，就會發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "開始從已加入多點傳送群組接收封包的作業，並將封包已從指定的寄件者送達群組時，會叫用指定的回呼。"
  remarks: "BeginReceiveFromSource 方法開始從單一傳送者的聯結多點傳送群組接收 UDP 封包的作業。 中指定本機連接埠、 多點傳送的群組和寄件者來源位址<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>建構函式。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 多點傳送的用戶端必須也完成聯結多點傳送群組。       中指定的方法`callback`收到封包時，會叫用參數。       很可能發生通訊端失敗的狀況，如果接收作業失敗，以同步方式，雖然這是不常見 udp。 如果發生通訊端失敗，<xref:System.Net.Sockets.SocketException>就會擲回。</xref:System.Net.Sockets.SocketException> 收到的錯誤指定成員的身分<xref:System.Net.Sockets.SocketError>列舉型別。</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "要儲存已接收的資料緩衝區。"
    - id: offset
      type: System.Int32
      description: "以位元組為單位，從開頭的位移，`buffer`儲存資料的位置。"
    - id: count
      type: System.Int32
      description: "接收並儲存在位元組的數目上限`buffer`。"
    - id: callback
      type: System.AsyncCallback
      description: "要在作業完成時叫用的回呼方法。"
    - id: state
      type: System.Object
      description: "要傳遞給選擇性狀態資訊`callback`這項作業的方法。"
    return:
      type: System.IAsyncResult
      description: "傳回<xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>參考這項作業。</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小於 0-<code>offset</code>大於的長度<code>buffer</code>。       -<code>count</code>小於 0-<code>offset</code>加上計數大於的長度<code>buffer</code>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "嘗試存取接收通訊端時發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "開始將單點傳播封包傳送至先前指定的來源的作業。"
  remarks: "BeginSendToSource 方法開始作業，將 UDP 封包傳送至先前指定的來源。       某些通訊協定會使用此資訊來流量控制，品質的服務統計資料或復原訊息一起傳遞。       中指定的方法`callback`已傳送封包時，會叫用參數。       用戶端必須已經完成聯結多點傳送群組。       如果在指定目的地連接埠`remotePort`參數是不超過 1024，<xref:System.Net.Sockets.SocketException>會擲回<xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       很可能發生通訊端失敗的狀況，如果傳送作業失敗，以同步方式，雖然這是不常見 udp。 如果發生通訊端失敗，<xref:System.Net.Sockets.SocketException>就會擲回。</xref:System.Net.Sockets.SocketException> 收到的錯誤指定成員的身分<xref:System.Net.Sockets.SocketError>列舉型別。</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "包含要傳送之資料的緩衝區。"
    - id: offset
      type: System.Int32
      description: "以位元組為單位，從開頭的位移，`buffer`讀取要傳送的資料。"
    - id: count
      type: System.Int32
      description: "若要從傳送的位元組數目`buffer`。"
    - id: remotePort
      type: System.Int32
      description: "遠端連接埠是傳送封包。 所指定的遠端位址&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;建構函式。"
    - id: callback
      type: System.AsyncCallback
      description: "要在作業完成時叫用的回呼方法。"
    - id: state
      type: System.Object
      description: "要傳遞給選擇性狀態資訊`callback`這項作業的方法。"
    return:
      type: System.IAsyncResult
      description: "傳回<xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>參考這項作業。</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>小於 0-<code>offset</code>大於的長度<code>buffer</code>。       -<code>count</code>小於 0-<code>offset</code>加上計數大於的長度<code>buffer</code>。       -或-<code>remotePort</code>小於 0 或大於 65,535。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "當您嘗試存取通訊端時，就會發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "離開多點傳送的群組，而且目前的執行個體所使用的資源全部釋出<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;></xref>類別和基礎<xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>"
  remarks: "當您完成使用<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient>呼叫 Dispose Dispose 方法會使<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>中無法使用的狀態。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>讓記憶體回收行程可以回收記憶體的<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>所佔用。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       在發行您的最後一個參考至<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient>前，務必呼叫 Dispose 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>物件的<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "完成非同步加入群組作業，以便多點傳送群組。"
  remarks: "EndJoinGroup 方法完成的非同步通訊端與聯結多點傳送群組作業繫結。       如果需要執行階段，EndJoinGroup 方法也會執行原則檢查，確認允許用戶端存取多點傳送的群組。 如果不允許存取，<xref:System.Net.Sockets.SocketException>就會擲回與<xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError></xref:System.Net.Sockets.SocketException>用戶端。       如果執行 加入群組作業中，通訊端失敗<xref:System.Net.Sockets.SocketException>就會擲回。</xref:System.Net.Sockets.SocketException> 收到的錯誤指定成員的身分<xref:System.Net.Sockets.SocketError>列舉型別。</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同步加入作業的結果。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "當您嘗試存取通訊端時，就會發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "完成從聯結多點傳送群組接收封包的非同步作業，並提供接收到的資訊。"
  remarks: "EndReceiveFromSource 方法完成非同步作業以多點傳送群組中的單一來源接收的封包。       如果同時執行接收作業中，通訊端失敗<xref:System.Net.Sockets.SocketException>就會擲回。</xref:System.Net.Sockets.SocketException> 收到的錯誤指定成員的身分<xref:System.Net.Sockets.SocketError>列舉型別。</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "結果的非同步接收作業。"
    - id: sourcePort
      type: System.Int32
      description: "封包在收到來自來源端點。"
    return:
      type: System.Int32
      description: "傳回<xref:System.Int32>.</xref:System.Int32>       中所儲存之訊息的長度，以位元組為單位， <code> buffer </code>參數傳遞至<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>方法。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "當您嘗試存取通訊端時，就會發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "完成傳送單點傳播封包至單一來源的作業。"
  remarks: "EndSendToSource 方法完成非同步作業以將封包傳送到先前指定的單一來源。       如果同時執行接收作業中，通訊端失敗<xref:System.Net.Sockets.SocketException>就會擲回。</xref:System.Net.Sockets.SocketException> 收到的錯誤指定成員的身分<xref:System.Net.Sockets.SocketError>列舉型別。</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "表示非同步傳送作業的結果。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>為 null 參考 (在 Visual Basic 中 Nothing)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "當您嘗試存取通訊端時，就會發生錯誤。 請參閱 < 備註 > 一節，如需詳細資訊。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得或設定大小，以位元組為單位的接收緩衝區<xref:System.Net.Sockets.Socket>上多點傳送的接收作業所使用的<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;></xref>執行個體。</xref:System.Net.Sockets.Socket>"
  remarks: "`ReceiveBufferSize`屬性會取得或設定大小，以位元組為單位的接收緩衝區的基礎<xref:System.Net.Sockets.Socket>上多點傳送的接收作業所使用的<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>執行個體。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> 具體來說，`ReceiveBufferSize`屬性會控制與堆疊使用的封包到達，但應用程式尚未呼叫時之緩衝區的大小<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>方法。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 如果這個緩衝區填滿，而且封包保留應用程式會呼叫之前進入<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>和<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>會卸除舊的封包的方法。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 應用程式將無法接收舊的封包，並呼叫時，會收到較新的封包<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>方法。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       在 Windows 上接收緩衝區的預設大小為 8,192。"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "傳回<xref:System.Int32>.</xref:System.Int32>       以位元組為單位，接收緩衝區的大小。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的緩衝區大小小於 0。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得或設定大小，以位元組為單位的傳送緩衝區<xref:System.Net.Sockets.Socket>上多點傳送的傳送作業所使用的<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;></xref>執行個體。</xref:System.Net.Sockets.Socket>"
  remarks: "SendBufferSize 屬性取得或設定大小，以位元組為單位的傳送緩衝區基礎<xref:System.Net.Sockets.Socket>上多點傳送的傳送作業所使用的<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>執行個體。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       在 Mac OS X 上，SendBufferSize 屬性會控制多少位元組有可能在網路堆疊傳送等候緩衝區額外的呼叫之前<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>方法開始失敗。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Mac OS X 上的應用程式可能需要顧慮這個屬性如果他們傳送大量的 UDP 封包在短時間範圍內。       在 Windows 中，呼叫<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>方法會將較長的時間呼叫的回呼 SendBufferSize 屬性的值而定，如果傳送緩衝區已滿。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> SendBufferSize 屬性只會控制 「 傳送作業完成之前是否使用者的緩衝區會保持鎖定實體記憶體中。       在 Windows 上的傳送緩衝區的預設大小為 8,192。"
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "傳回<xref:System.Int32>.</xref:System.Int32>       以位元組為單位傳送緩衝區大小。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的緩衝區大小小於 0。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "尚未聯結多點傳送的群組。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>已經過處置。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
