### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaDatatype
  id: XmlSchemaDatatype
  children:
  - System.Xml.Schema.XmlSchemaDatatype.#ctor
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  - System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  - System.Xml.Schema.XmlSchemaDatatype.TypeCode
  - System.Xml.Schema.XmlSchemaDatatype.ValueType
  - System.Xml.Schema.XmlSchemaDatatype.Variety
  langs:
  - csharp
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
  type: Class
  summary: "XmlSchemaDatatype 類別是對應到 Common Language Runtime (CLR) 類型的 XML 結構描述定義語言 (XSD) 類型的抽象類別。"
  remarks: ''
  example:
  - "The following example shows use of the XmlSchemaDatatype class.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_39_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_39_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_39_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_39_2.xsd)]"
  syntax:
    content: public abstract class XmlSchemaDatatype
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>類別。"
  remarks: "在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。"
  syntax:
    content: protected XmlSchemaDatatype ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  id: ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "將指定的值，其型別有效的 XML 結構描述類型的 Common Language Runtime (CLR) 表示法的其中一個由<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>，指定的 CLR 型別。"
  remarks: "如需有關型別支援<xref:System.Xml?displayProperty=fullName>類別與轉換 XML 資料類型，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)主題。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType);
    parameters:
    - id: value
      type: System.Object
      description: "輸入的值轉換成指定型別。"
    - id: targetType
      type: System.Type
      description: "要轉換的輸入的值的目標類型。"
    return:
      type: System.Object
      description: "已轉換的輸入的值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>或<xref:System.Type>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "所代表的類型<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>不支援從指定的型別指定值的類型轉換。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  id: ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "將指定的值，其型別有效的 XML 結構描述類型的 Common Language Runtime (CLR) 表示法的其中一個由<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>，指定使用的 CLR 型別<xref:System.Xml.IXmlNamespaceResolver>如果<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> xs: qname 類型衍生自它代表</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "如需有關型別支援<xref:System.Xml?displayProperty=fullName>類別與轉換 XML 資料類型，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)主題。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: value
      type: System.Object
      description: "輸入的值轉換成指定型別。"
    - id: targetType
      type: System.Type
      description: "要轉換的輸入的值的目標類型。"
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>用來解析命名空間前置詞。</xref:System.Xml.IXmlNamespaceResolver> 這只有在時如果<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>代表從中衍生的 xs: qname 類型。"
    return:
      type: System.Object
      description: "已轉換的輸入的值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>或<xref:System.Type>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "所代表的類型<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>不支援從指定的型別指定值的類型轉換。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  id: IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "IsDerivedFrom 方法一律會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  syntax:
    content: public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);
    parameters:
    - id: datatype
      type: System.Xml.Schema.XmlSchemaDatatype
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>."
    return:
      type: System.Boolean
      description: "一律傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  id: ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "當在衍生類別中覆寫時，會驗證<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定針對內建或使用者定義的簡單類型。"
  remarks: "ParseValue 方法會驗證`string`指定針對內建或使用者定義的簡單類型。 例如，如果此<xref:System.Xml.Schema.XmlSchemaDatatype>代表類型 xs: date，則執行個體<xref:System.DateTime>傳回。</xref:System.DateTime> </xref:System.Xml.Schema.XmlSchemaDatatype>       以下是 ParseValue 方法的驗證程序期間執行的步驟。      1.  轉換為指定的值`string`到其對應 Common Language Runtime (CLR) 類型。      2.  請確認此值沒有違反任何簡單類型所定義的 facet。       轉換的值則傳回做為<xref:System.Object>，而且可以安全地轉換成所傳回的類型<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>屬性。</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> </xref:System.Object>       當<xref:System.Xml.Schema.XmlSchemaDatatype>物件都代表清單類型、 輸入`string`值會轉換成一或多個物件的清單。</xref:System.Xml.Schema.XmlSchemaDatatype> 當<xref:System.Xml.Schema.XmlSchemaDatatype>物件表示清單型別，嘗試將輸入的值剖析為聯集成員型別。</xref:System.Xml.Schema.XmlSchemaDatatype> 如果剖析嘗試失敗，則轉換會嘗試使用下一個聯集成員直到剖析成功，或沒有其他成員類型剖析。 如果剖析成功，則會擲回例外狀況。"
  example:
  - "The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the ParseValue method.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/b4af643f-b5cd-41ee-8b57-_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/b4af643f-b5cd-41ee-8b57-_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/b4af643f-b5cd-41ee-8b57-_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/b4af643f-b5cd-41ee-8b57-_2.xsd)]"
  syntax:
    content: public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>簡單類型對其進行驗證。"
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>用於不可部分完成剖析時<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>物件代表 xs: ncname 類型。</xref:System.Xml.XmlNameTable>"
    - id: nsmgr
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>剖析期間要使用的物件<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>物件都代表 xs: qname 類型。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "<xref:System.Object>，要傳回的型別可以安全地轉換<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*>屬性。</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*> </xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "輸入的值不是有效的執行個體，此 W3C XML 結構描述類型。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "要剖析的值不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  id: TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "當在衍生類別中覆寫時，取得的型別<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定 World Wide Web Consortium (W3C) xml 1.0 規格。"
  remarks: "可讓`string`必須讀取為特定 XML 類型，例如 CDATA 區段類型。       下表顯示的語彙基元的類型。      |XmlTokenizedType |描述 |  |----------------------|-----------------|  |`CDATA`|CDATA 類型 |  |`ID`| 識別碼類型 |  |`IDREF`|IDREF 類型 |  |`IDREFS`|IDREFS 類型 |  |`ENTITY`|實體類型 |  |`ENTITIES`|實體類型 |  |`NMTOKEN`|NMTOKEN 類型 |  |`NMTOKENS`|NMTOKENS 型別 |  |`NOTATION`|NOTATION 類型 |  |`ENUMERATION`|列舉型別 |  |`QName`|QName 類型 |  |`NCName`|NCName 類型 |  |`None`|沒有類型 |"
  syntax:
    content: public abstract System.Xml.XmlTokenizedType TokenizedType { get; }
    return:
      type: System.Xml.XmlTokenizedType
      description: "An <xref href=&quot;System.Xml.XmlTokenizedType&quot;></xref> value for the <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  id: TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref>簡單類型值。"
  remarks: "W3C XML 結構描述清單類型，例如 xs: entities、 xs: nmtokens 和 xs: idrefs 未表示的<xref:System.Xml.Schema.XmlTypeCode>列舉型別。</xref:System.Xml.Schema.XmlTypeCode> 相反地，就會表示<xref:System.Xml.Schema.XmlTypeCode>xs:ENTITY 值、 xs 和 xs: idref 類型<xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>屬性的<xref:System.Xml.Schema.XmlSchemaDatatype>物件設定至<xref:System.Xml.Schema.XmlSchemaDatatypeVariety>。</xref:System.Xml.Schema.XmlSchemaDatatypeVariety> </xref:System.Xml.Schema.XmlSchemaDatatype> </xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> </xref:System.Xml.Schema.XmlTypeCode>      > [!NOTE] > Xs:anySimpleType 和 xs: anytype 的類型不由<xref:System.Xml.Schema.XmlTypeCode>列舉型別。</xref:System.Xml.Schema.XmlTypeCode> 這些顯示在<xref:System.Xml.Schema.XmlSchemaDatatype>物件<xref:System.Xml.Schema.XmlTypeCode>其值是<xref:System.Xml.Schema.XmlTypeCode>如 xs:anySimpleType 或<xref:System.Xml.Schema.XmlTypeCode>如 xs: anytype。</xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlSchemaDatatype>"
  example:
  - For an example of the TypeCode property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }
    return:
      type: System.Xml.Schema.XmlTypeCode
      description: "<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref>簡單類型值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "當在衍生類別中覆寫時，取得 Common Language Runtime (CLR) 類型的項目。"
  remarks: "ValueType 屬性取得的 CLR 類型的項目。 例如，類型的元素`xs:int`會有的 ValueType<xref:System.Int32>預設。</xref:System.Int32> 不過，ValueType 可能是任何一個可以對應到有效型別`xs:int`，例如<xref:System.Int16>或<xref:System.Double>.</xref:System.Double> </xref:System.Int16>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  example:
  - For an example of the ValueType property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public abstract Type ValueType { get; }
    return:
      type: System.Type
      description: "Common Language Runtime (CLR) 類型的項目。"
  overload: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  id: Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;></xref>簡單類型值。"
  syntax:
    content: public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDatatypeVariety
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref>簡單類型值。"
  overload: System.Xml.Schema.XmlSchemaDatatype.Variety*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaDatatype
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
- uid: System.Xml.XmlTokenizedType
  parent: System.Xml
  isExternal: false
  name: XmlTokenizedType
  nameWithType: XmlTokenizedType
  fullName: System.Xml.XmlTokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlTypeCode
  parent: System.Xml.Schema
  isExternal: false
  name: XmlTypeCode
  nameWithType: XmlTypeCode
  fullName: System.Xml.Schema.XmlTypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
- uid: System.Xml.Schema.XmlSchemaDatatypeVariety
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatypeVariety
  nameWithType: XmlSchemaDatatypeVariety
  fullName: System.Xml.Schema.XmlSchemaDatatypeVariety
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType
  nameWithType: XmlSchemaDatatype.ChangeType
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom
  nameWithType: XmlSchemaDatatype.IsDerivedFrom
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue
  nameWithType: XmlSchemaDatatype.ParseValue
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
