### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProvider
  id: SettingsProvider
  children:
  - System.Configuration.SettingsProvider.#ctor
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
  type: Class
  summary: "做為基底類別衍生應用程式設定架構中的自訂設定提供者。"
  remarks: "設定提供者會定義儲存在應用程式設定架構所使用的組態資料的機制。 .NET Framework 包含單一的預設設定提供者， <xref:System.Configuration.LocalFileSettingsProvider>，它會儲存到本機檔案系統的組態資料。</xref:System.Configuration.LocalFileSettingsProvider> 不過，您可以藉由衍生自抽象 SettingsProvider 類別建立另一個儲存機制。 包裝函式類別所使用的提供者取決於裝飾<xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>包裝函式類別 如果這個屬性未提供，預設值， <xref:System.Configuration.LocalFileSettingsProvider>，會使用。</xref:System.Configuration.LocalFileSettingsProvider>       當您建立自訂的設定提供者，最小值時，您必須提供這個類別的實作三種方法: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>、<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>和<xref:System.Configuration.SettingsProvider.ApplicationName%2A>。</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> </xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>       用戶端應用程式，您可以加入更多的標準化的功能的自訂提供者也實作<xref:System.Configuration.IApplicationSettingsProvider>介面。</xref:System.Configuration.IApplicationSettingsProvider> 這個介面會反映方法中找到<xref:System.Configuration.ApplicationSettingsBase>類別，主要是讓 版本管理支援。</xref:System.Configuration.ApplicationSettingsBase>       一般而言，您應該設計為單一執行個體，以避免儲存體資源爭用的設定提供者。 提供者也應該是安全執行緒，因為它們可以同時呼叫從單一應用程式網域中的多個包裝函式執行個體或不同網域中的多個應用程式。       最小值，設定提供者必須辨識三個屬性 —<xref:System.Configuration.ApplicationScopedSettingAttribute>， <xref:System.Configuration.UserScopedSettingAttribute>，和<xref:System.Configuration.DefaultSettingValueAttribute>。</xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> 可以套用至應用程式設定屬性的完整清單，請參閱[應用程式設定屬性](~/add/includes/ajax-current-ext-md.md)。 自訂設定提供者應可解決套用以下列方式設定內容屬性︰ 1。  如果提供者可以滿足屬性所隱含的要求，顯然它應如此做。      2.  如果提供者無法滿足要求，它應該以無訊息模式忽略它。      3.  如果兩個或多個屬性衝突。例如，使用這兩個<xref:System.Configuration.ApplicationScopedSettingAttribute>和<xref:System.Configuration.UserScopedSettingAttribute>提供者應該擲回<xref:System.Configuration.ConfigurationException>.</xref:System.Configuration.ConfigurationException> ;</xref:System.Configuration.UserScopedSettingAttribute></xref:System.Configuration.ApplicationScopedSettingAttribute>正在裝飾的屬性"
  syntax:
    content: 'public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的執行個體<xref href=&quot;System.Configuration.SettingsProvider&quot;></xref>類別。"
  remarks: "這是這個預設受保護建構函式的這個抽象類別。 在衍生的自訂設定提供者不需要提供明確的建構函式，因為<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法通常會執行所有的初始化。</xref:System.Configuration.Provider.ProviderBase.Initialize%2A>       用戶端程式碼通常未直接執行個體化設定提供者。相反地，您使用下列程序來尋找特定的設定屬性的設定提供者︰ 1。  呼叫此<xref:System.ComponentModel.Component.GetService%2A>方法在目前<xref:System.ComponentModel.Component>或<xref:System.ComponentModel.ISite>傳回目前<xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService>的參考</xref:System.ComponentModel.ISite></xref:System.ComponentModel.Component></xref:System.ComponentModel.Component.GetService%2A>      2.  呼叫<xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>方法<xref:System.Configuration.ISettingsProviderService>傳回設定提供者的第一個步驟中所擷取。</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>"
  syntax:
    content: protected SettingsProvider ();
    parameters: []
  overload: System.Configuration.SettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定目前執行的應用程式的名稱。"
  remarks: "ApplicationName 和<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性有助於釐清同樣的具名的設定不同的應用程式的屬性。</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含應用程式的簡短的名稱，不包含完整路徑或副檔名，例如， `SimpleAppSettings`。</xref:System.String>"
  overload: System.Configuration.SettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "傳回集合的設定為指定的應用程式執行個體和設定屬性群組的屬性值。"
  remarks: "必須實作 GetPropertyValues 方法，以處理特殊的設定、 標記與那些<xref:System.Configuration.SpecialSettingAttribute>，以及協調應用程式和使用者設定。</xref:System.Configuration.SpecialSettingAttribute>"
  syntax:
    content: public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用。"
    - id: collection
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含要擷取其值的設定屬性群組。"
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>包含指定的設定屬性群組的值。"
  overload: System.Configuration.SettingsProvider.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "設定指定之群組的屬性設定的值。"
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，呼叫以保存所有其設定屬性的值。</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase> 這個方法會列舉所有的設定提供者及其設定的屬性相關聯，並針對每個呼叫 SetPropertyValues 方法<xref:System.Configuration.SettingsProvider>執行實際的序列化作業。</xref:System.Configuration.SettingsProvider>       SetPropertyValues 方法應該實作的安全性考量事項:-只有完全受信任的程式碼應該可以更新應用程式設定。 更新使用者應用程式設定，應該允許部分信任的程式碼。 不受信任的程式碼通常不允許更新應用程式設定。      使用量配額應該視為來保護資源的攻擊，由部分信任的應用程式。"
  syntax:
    content: public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: collection
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>代表要設定的屬性設定的群組。"
  overload: System.Configuration.SettingsProvider.SetPropertyValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProvider.#ctor
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
- uid: System.Configuration.SettingsProvider.ApplicationName
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.SettingsProvider.#ctor*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider.SettingsProvider
- uid: System.Configuration.SettingsProvider.ApplicationName*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
- uid: System.Configuration.SettingsProvider.GetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SettingsProvider.GetPropertyValues
- uid: System.Configuration.SettingsProvider.SetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SettingsProvider.SetPropertyValues
