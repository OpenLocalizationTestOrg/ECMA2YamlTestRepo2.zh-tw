### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.GridView
  id: GridView
  children:
  - System.Web.UI.WebControls.GridView.#ctor
  - System.Web.UI.WebControls.GridView.AllowCustomPaging
  - System.Web.UI.WebControls.GridView.AllowPaging
  - System.Web.UI.WebControls.GridView.AllowSorting
  - System.Web.UI.WebControls.GridView.AlternatingRowStyle
  - System.Web.UI.WebControls.GridView.AutoGenerateColumns
  - System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  - System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  - System.Web.UI.WebControls.GridView.BackImageUrl
  - System.Web.UI.WebControls.GridView.BottomPagerRow
  - System.Web.UI.WebControls.GridView.Caption
  - System.Web.UI.WebControls.GridView.CaptionAlign
  - System.Web.UI.WebControls.GridView.CellPadding
  - System.Web.UI.WebControls.GridView.CellSpacing
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.Columns
  - System.Web.UI.WebControls.GridView.ColumnsGenerator
  - System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateChildTable
  - System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateControlStyle
  - System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.GridView.DataBind
  - System.Web.UI.WebControls.GridView.DataKeyNames
  - System.Web.UI.WebControls.GridView.DataKeys
  - System.Web.UI.WebControls.GridView.DeleteMethod
  - System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  - System.Web.UI.WebControls.GridView.EditIndex
  - System.Web.UI.WebControls.GridView.EditRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataTemplate
  - System.Web.UI.WebControls.GridView.EmptyDataText
  - System.Web.UI.WebControls.GridView.EnableModelValidation
  - System.Web.UI.WebControls.GridView.EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  - System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.GridView.FooterRow
  - System.Web.UI.WebControls.GridView.FooterStyle
  - System.Web.UI.WebControls.GridView.GetCallbackResult
  - System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.GridLines
  - System.Web.UI.WebControls.GridView.HeaderRow
  - System.Web.UI.WebControls.GridView.HeaderStyle
  - System.Web.UI.WebControls.GridView.HorizontalAlign
  - System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  - System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  - System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  - System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  - System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  - System.Web.UI.WebControls.GridView.PageCount
  - System.Web.UI.WebControls.GridView.PageIndex
  - System.Web.UI.WebControls.GridView.PageIndexChanged
  - System.Web.UI.WebControls.GridView.PageIndexChanging
  - System.Web.UI.WebControls.GridView.PagerSettings
  - System.Web.UI.WebControls.GridView.PagerStyle
  - System.Web.UI.WebControls.GridView.PagerTemplate
  - System.Web.UI.WebControls.GridView.PageSize
  - System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  - System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.GridView.RowCancelingEdit
  - System.Web.UI.WebControls.GridView.RowCommand
  - System.Web.UI.WebControls.GridView.RowCreated
  - System.Web.UI.WebControls.GridView.RowDataBound
  - System.Web.UI.WebControls.GridView.RowDeleted
  - System.Web.UI.WebControls.GridView.RowDeleting
  - System.Web.UI.WebControls.GridView.RowEditing
  - System.Web.UI.WebControls.GridView.RowHeaderColumn
  - System.Web.UI.WebControls.GridView.Rows
  - System.Web.UI.WebControls.GridView.RowStyle
  - System.Web.UI.WebControls.GridView.RowUpdated
  - System.Web.UI.WebControls.GridView.RowUpdating
  - System.Web.UI.WebControls.GridView.SaveControlState
  - System.Web.UI.WebControls.GridView.SaveViewState
  - System.Web.UI.WebControls.GridView.SelectedDataKey
  - System.Web.UI.WebControls.GridView.SelectedIndex
  - System.Web.UI.WebControls.GridView.SelectedIndexChanged
  - System.Web.UI.WebControls.GridView.SelectedIndexChanging
  - System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  - System.Web.UI.WebControls.GridView.SelectedRow
  - System.Web.UI.WebControls.GridView.SelectedRowStyle
  - System.Web.UI.WebControls.GridView.SelectedValue
  - System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.GridView.ShowFooter
  - System.Web.UI.WebControls.GridView.ShowHeader
  - System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  - System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  - System.Web.UI.WebControls.GridView.SortDirection
  - System.Web.UI.WebControls.GridView.Sorted
  - System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortExpression
  - System.Web.UI.WebControls.GridView.Sorting
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.GridView.TagKey
  - System.Web.UI.WebControls.GridView.TopPagerRow
  - System.Web.UI.WebControls.GridView.TrackViewState
  - System.Web.UI.WebControls.GridView.UpdateMethod
  - System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  - System.Web.UI.WebControls.GridView.UseAccessibleHeader
  - System.Web.UI.WebControls.GridView.VirtualItemCount
  langs:
  - csharp
  name: GridView
  nameWithType: GridView
  fullName: System.Web.UI.WebControls.GridView
  type: Class
  summary: "顯示的資料表，其中每個資料行表示的欄位，而每個資料列都代表記錄中的資料來源的值。 GridView 控制項可讓您選取、 排序和編輯這些項目。"
  remarks: "本主題內容:-[簡介](#introduction)      -   [資料行欄位](#column_fields)      -   [繫結至資料](#binding_to_data)      -   [資料作業](#data_operations)      -   [自訂使用者介面](#customizing_the_user_interface)      -   [事件](#events)      -   [協助工具](#accessibility)      -   [宣告式語法](#declarative_syntax)<a name=&quot;introduction&quot;> </a> # # 簡介 GridView 控制項用來顯示資料表中的資料來源的值。       每個資料行代表一個欄位，而每個資料列都代表一筆記錄。 GridView 控制項支援下列功能:-繫結至資料來源控制項，例如<xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource>      -內建的排序功能。      -內建更新及刪除功能。      -內建的分頁功能。      -內建的資料列選取功能。      -以程式設計方式存取 GridView 物件模型，來動態設定屬性，處理事件，等等。      -多個索引鍵欄位。      的超連結資料行多個資料欄位。      透過佈景主題和樣式的可自訂外觀。      -若要深入了解可在 ASP.NET 中的其他資料繫結控制項，請參閱[資料繫結的 Web 伺服器控制項](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 如果您已熟悉<xref:System.Web.UI.WebControls.DataGrid>從.NET Framework 1.0 版中，控制項是後續 GridView 控制項<xref:System.Web.UI.WebControls.DataGrid>控制項。</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid>      <a name=&quot;column_fields&quot;></a># # 資料行欄位在 GridView 控制項由每個資料行<xref:System.Web.UI.WebControls.DataControlField>物件。</xref:System.Web.UI.WebControls.DataControlField> 根據預設，<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性設定為`true`，它會建立<xref:System.Web.UI.WebControls.AutoGeneratedField>資料來源中的每個欄位的物件。</xref:System.Web.UI.WebControls.AutoGeneratedField> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 接著會將每個欄位轉譯為每個欄位會出現在資料來源的順序的 GridView 控制項中的資料行。       您也可以手動可以控制哪個資料行，藉由設定欄位會出現在 GridView 控制項<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性`false`然後定義您自己的資料行欄位集合。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 不同的資料行欄位的類型決定控制項中的資料行的行為。 下表列出可用的不同的資料行欄位型別。      |資料行欄位類型 |描述 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|顯示資料來源中欄位的值。</xref:System.Web.UI.WebControls.BoundField> 這是預設資料行的 GridView 控制項類型。 |  |<xref:System.Web.UI.WebControls.ButtonField>|在 GridView 控制項中顯示命令按鈕的每個項目。</xref:System.Web.UI.WebControls.ButtonField> 這可讓您建立的資料行的自訂按鈕控制項，例如 [新增] 或 [移除] 按鈕。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|GridView 控制項中顯示每個項目的核取方塊。</xref:System.Web.UI.WebControls.CheckBoxField> 這個資料行的欄位型別通常用於顯示具有布林值的欄位。 |  |<xref:System.Web.UI.WebControls.CommandField>|顯示預先定義的命令按鈕可執行選取、 編輯或刪除作業。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|顯示為超連結資料來源中欄位的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 這個資料行的欄位型別可讓您將第二個欄位繫結至超連結的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|在 GridView 控制項中顯示每個項目的影像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|根據指定的範本 GridView 控制項中顯示每個項目的使用者定義的內容。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField> 這個資料行的欄位型別可讓您建立自訂的資料行的欄位。 |      若要以宣告方式定義資料行的欄位集合，請先加入開啟和關閉`<Columns>`開頭和結尾標記的 GridView 控制項之間的標記。 接下來，列出您想要包含在開頭和結尾之間的資料行欄位`<Columns>`標記。 指定的資料行加入<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合的順序列出。</xref:System.Web.UI.WebControls.GridView.Columns%2A> <xref:System.Web.UI.WebControls.GridView.Columns%2A>集合會儲存所有資料行欄位控制項中，並可讓您以程式設計方式管理 GridView 控制項中的資料行欄位。</xref:System.Web.UI.WebControls.GridView.Columns%2A>       明確宣告的資料行欄位可顯示與自動產生的資料行欄位一起使用。 同時使用時，明確宣告資料行欄位會首先呈現，後面接著的自動產生的資料行欄位。      > [!NOTE] > 自動產生的資料行欄位不會加入至<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A>      <a name=&quot;binding_to_data&quot;></a># # 繫結至資料的 GridView 控制項可以繫結至資料來源控制項 (例如<xref:System.Web.UI.WebControls.SqlDataSource>控制項或<xref:System.Web.UI.WebControls.ObjectDataSource>控制項) 或任何資料來源集合中實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，例如<xref:System.Data.DataView?displayProperty=fullName>， <xref:System.Collections.ArrayList?displayProperty=fullName>， <xref:System.Collections.Generic.List%601?displayProperty=fullName>，或其他集合型別。</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用下列方法之一將 GridView 控制項繫結至適當的資料來源類型:-將繫結至資料來源控制項，將設定<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>GridView 控制項的屬性<xref:System.Web.UI.Control.ID%2A>資料來源控制項的值。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> GridView 控制項自動繫結至指定的資料來源控制項，並可使用的資料來源控制項的功能，才能執行排序、 更新、 刪除和分頁。 這是慣用的方法繫結至資料。      -將繫結至資料來源實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，以程式設計方式設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性的 GridView 控制項至資料來源，然後呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 使用此方法時，GridView 控制項不提供內建排序、 update、 delete 和分頁功能。 您需要提供此功能使用適當的事件。       如需資料繫結的詳細資訊，請參閱[ASP.NET 資料存取內容對應](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)。      > [!NOTE] > 這個控制項可以用來顯示使用者輸入，其中可能包含惡意用戶端指令碼。 請檢查從用戶端可執行的指令碼、 SQL 陳述式，或其他程式碼傳送之後，顯示應用程式中的任何資訊。 可能的話，強烈建議，值經過 HTML 編碼，才能讓它們顯示在這個控制項 (<xref:System.Web.UI.WebControls.BoundField>類別預設的 HTML 編碼的值)。</xref:System.Web.UI.WebControls.BoundField> ASP.NET 提供使用者輸入來封鎖指令碼和 HTML 的輸入的要求驗證功能。 驗證伺服器控制項也會提供以評估使用者輸入。 如需詳細資訊，請參閱[驗證控制項簡介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。      <a name=&quot;data_operations&quot;></a># # 資料作業 GridView 控制項提供許多的內建功能可讓使用者排序、 更新、 刪除、 選取及透過控制項中的項目頁面上。 GridView 控制項繫結至資料來源控制項，GridView 控制項可以讓您利用資料來源控制項的功能，並提供自動排序、 更新和刪除功能。      > [!NOTE] > GridView 控制項可以提供用於排序、 更新和刪除與其他類型的資料來源的支援。 不過，您必須提供適當的事件處理常式實作這些作業。       排序功能可以讓使用者的資料行標頭即可排序 GridView 控制項相對於特定資料行中的項目。 若要啟用排序，<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>屬性`true`。</xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>       當功能的按鈕時，會啟用自動更新、 刪除和選取項目功能<xref:System.Web.UI.WebControls.ButtonField>或<xref:System.Web.UI.WebControls.TemplateField>分別按一下資料行 欄位與 「 編輯 」、 「 刪除 」 及 「 選取 」 的命令名稱。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ButtonField> GridView 控制項可自動將新增<xref:System.Web.UI.WebControls.CommandField>如果資料行 欄位和編輯、 刪除或選取按鈕<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>， <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>，或<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>屬性設定為`true`分別。</xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> </xref:System.Web.UI.WebControls.CommandField>      > [!NOTE] > 記錄插入資料來源不直接支援 GridView 控制項。 不過，您可搭配使用 GridView 控制項中插入記錄`DetailsView`或`FormView`控制項。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DetailsView>或<xref:System.Web.UI.WebControls.FormView>分別。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView>       而不是顯示資料來源中的所有記錄，在相同的時間，GridView 控制項可以自動分成記錄頁面。 若要啟用分頁，<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>      > [!NOTE] > GridView 控制項是根據儲存在<xref:System.Web.UI.PageStatePersister.ViewState%2A>.</xref:System.Web.UI.PageStatePersister.ViewState%2A>資訊回傳上重新建立 如果包含的 GridView 控制項<xref:System.Web.UI.WebControls.TemplateField>或<xref:System.Web.UI.WebControls.CommandField>與<xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A>屬性設定為`true`，然後在<xref:System.Web.UI.Page.EnableViewState%2A>屬性也必須設定為`true`確保並行資料作業，例如更新與刪除，套用至適當的資料列。</xref:System.Web.UI.Page.EnableViewState%2A> </xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.TemplateField>      <a name=&quot;customizing_the_user_interface&quot;></a># # 自訂使用者介面您可以自訂 GridView 控制項的外觀設定控制項的不同部分的樣式屬性。 下表列出不同的樣式屬性。      |樣式屬性 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|在 GridView 控制項中的交替資料列的樣式設定。</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 當設定這個屬性時，資料列會顯示<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定之間交替。 |  |<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|編輯 GridView 控制項中的資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|當資料來源未包含任何記錄 GridView 控制項中顯示空白資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|GridView 控制項的頁尾資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|標頭資料列的 GridView 控制項的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|GridView 控制項的頁面巡覽區列的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|GridView 控制項中的資料列的樣式設定。</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> </xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 當<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>屬性也設定時，資料列會顯示<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定之間交替。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|在 GridView 控制項中選取的資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|樣式，設定為依 GridView 控制項中排序資料行的資料。</xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A> </xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.RowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 當設定此樣式時，樣式 （例如，反白顯示資料行） 是儲存格所套用的遞增順序排序資料時。 |  |<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|樣式，設定為依 GridView 控制項中排序資料行的資料。</xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A> 當設定此樣式時，箭頭表示遞增排序的資料所在的 GridView 控制項標頭以遞增順序排序資料時。 |  |<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|樣式，設定為依 GridView 控制項中排序資料行的資料。</xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A> 當設定此樣式時，樣式 （例如，反白顯示資料行） 是儲存格所套用的遞減順序排序資料時。 |  |<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|樣式，設定為依 GridView 控制項中排序資料行的資料。</xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A> 當設定此樣式時，箭頭指向向下置於 GridView 的標頭以遞減順序排序資料時。 |      您也可以顯示或隱藏的控制項的不同部分。 下表列出可控制哪些部分要顯示或隱藏的屬性。      |屬性 |描述 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|顯示或隱藏 GridView 控制項的頁尾區段。 |  |<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|顯示或隱藏 GridView 控制項的標頭區段。 |     <a name=&quot;events&quot;> </a> # # 事件 GridView 控制項提供數個事件，您可以程式設計的。</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> 這可讓您在事件發生時執行自訂的常式。 下表列出支援的 GridView 控制項的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|發生於按下一個頁面巡覽區按鈕時，但之後 GridView 控制項控點的分頁作業。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至其他頁面控制項中,。 |  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|發生於按下一個頁面巡覽區按鈕時，但之前 GridView 控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|按一下資料列的 [取消] 按鈕時，但 GridView 控制項之前結束編輯模式時發生。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 此事件通常用來停止取消作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowCommand>|GridView 控制項中按下按鈕時，就會發生。</xref:System.Web.UI.WebControls.GridView.RowCommand> 此事件通常用來執行工作，在控制項中按下按鈕時。 |  |<xref:System.Web.UI.WebControls.GridView.RowCreated>|GridView 控制項中建立新的資料列時，就會發生。</xref:System.Web.UI.WebControls.GridView.RowCreated> 此事件通常用來修改資料列的內容，建立資料列時。 |  |<xref:System.Web.UI.WebControls.GridView.RowDataBound>|發生於資料列繫結至 GridView 控制項中的資料。</xref:System.Web.UI.WebControls.GridView.RowDataBound> 此事件通常用來修改資料列的內容，當資料列繫結至資料。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|發生於按一下資料列的 刪除 按鈕時，但之後 GridView 控制項從 資料來源中刪除記錄。</xref:System.Web.UI.WebControls.GridView.RowDeleted> 此事件通常用來檢查刪除作業的結果。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|發生於按一下資料列的 [刪除] 按鈕時，但之前 GridView 控制項中刪除記錄從資料來源。</xref:System.Web.UI.WebControls.GridView.RowDeleting> 此事件通常用來取消刪除作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowEditing>|按一下資料列的 [編輯] 按鈕時，但之前 GridView 控制項進入編輯模式時發生。</xref:System.Web.UI.WebControls.GridView.RowEditing> 此事件通常用來取消編輯作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|發生於按一下資料列的 [更新] 按鈕時，但在 GridView 控制項更新資料列。</xref:System.Web.UI.WebControls.GridView.RowUpdated> 此事件通常用來檢查更新作業的結果。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|發生於按一下資料列的 [更新] 按鈕時，但之前 GridView 控制項更新資料列。</xref:System.Web.UI.WebControls.GridView.RowUpdating> 此事件通常用來取消更新作業。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|發生於按一下資料列選取按鈕時，但之後 GridView 控制項處理選取的作業。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 此事件通常用來在控制項中選取一個資料列之後執行的工作。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|發生於按一下資料列選取按鈕時，但之前 GridView 控制項處理選取的作業。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 此事件通常用來取消選取作業。 |  |<xref:System.Web.UI.WebControls.GridView.Sorted>|按一下此超連結可排序資料行時，但在 GridView 控制項控點的排序作業之後，就會發生。</xref:System.Web.UI.WebControls.GridView.Sorted> 此事件通常用來執行工作，在使用者按一下超連結可排序資料行之後。 |  |<xref:System.Web.UI.WebControls.GridView.Sorting>|按一下此超連結可排序資料行，但之前 GridView 控制項負責排序作業時發生。</xref:System.Web.UI.WebControls.GridView.Sorting> 若要取消排序作業，或執行自訂排序常式通常使用這個事件。 |     <a name=&quot;accessibility&quot;> </a> # # 有關如何設定這個控制項，使其產生符合網頁可及性標準標記的協助工具的資訊，請參閱[Visual Studio 和 ASP.NET 中的協助工具](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控制項和協助工具](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;declarative_syntax&quot;></a># # 宣告式語法```   <asp:GridView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AllowSorting=&quot;True|False&quot;       AutoGenerateColumns=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateSelectButton=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditIndex=&quot;integer&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableSortingAndPagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnRowCancelingEdit=&quot;RowCancelingEdit event handler&quot;       OnRowCommand=&quot;RowCommand event handler&quot;       OnRowCreated=&quot;RowCreated event handler&quot;       OnRowDataBound=&quot;RowDataBound event handler&quot;       OnRowDeleted=&quot;RowDeleted event handler&quot;       OnRowDeleting=&quot;RowDeleting event handler&quot;       OnRowEditing=&quot;RowEditing event handler&quot;       OnRowUpdated=&quot;RowUpdated event handler&quot;       OnRowUpdating=&quot;RowUpdating event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnSelectedIndexChanging=&quot;SelectedIndexChanging event handler&quot;       OnSorted=&quot;Sorted event handler&quot;       OnSorting=&quot;Sorting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       PageSize=&quot;integer&quot;       RowHeaderColumn=&quot;string&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <Columns>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Columns>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <HeaderStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />           <SelectedRowStyle />   </asp:GridView>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how use the GridView control to display the values from the Customers table of the AdventureWorksLT sample database in Microsoft SQL Server. The values are retrieved using a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_1.aspx)]  \n  \n The following example demonstrates how to use the GridView control and a <xref:System.Web.UI.WebControls.LinqDataSource> control so that you can edit records.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_2.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_2.aspx)]  \n  \n For an example demonstrating how to access values in cells, see <xref:System.Web.UI.WebControls.GridViewRow>."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataKeysControl
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundListControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPersistedSelector
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.InsertMethod
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.UI.WebControls.GridView>類別</xref:System.Web.UI.WebControls.GridView>的新執行個體 若要動態地將<xref:System.Web.UI.WebControls.GridView>控制權傳輸至頁面，請建立新<xref:System.Web.UI.WebControls.GridView>物件、 設定其屬性，並再將它加入<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>集合的容器控制項，例如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page.  \n  \n [!code-cs[GridViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[GridViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public GridView ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用自訂分頁。"
  remarks: "分頁可讓您顯示的內容<xref:System.Web.UI.WebControls.GridView>區塊 （chunk） 的控制項。</xref:System.Web.UI.WebControls.GridView> 在頁面上的項目數目由<xref:System.Web.UI.WebControls.GridView.PageSize%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 一般來說，每個資料列中的資料來源會讀取每次<xref:System.Web.UI.WebControls.GridView>控制項移到不同的網頁。</xref:System.Web.UI.WebControls.GridView> 這可能會耗用大量的資源時非常大的資料來源中的項目總數。 自訂分頁可讓您讀取只要您需要從資料來源的單一頁面的項目。       若要啟用自訂分頁，同時設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>和 AllowCustomPaging 屬性`true`。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 中的處理常式<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>設定事件，<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>屬性設為新的頁面索引值，設定<xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>屬性的資料來源中的項目總數來設定要傳回目前的頁面上和呼叫所需的資料列的資料來源<xref:System.Web.UI.WebControls.GridView.DataBind%2A>方法。</xref:System.Web.UI.WebControls.GridView.DataBind%2A> </xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>屬性可讓控制項來決定總頁數，這個值通常由自動讀取所有的項目。</xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>"
  syntax:
    content: public virtual bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果啟用自訂分頁;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用分頁功能。"
  remarks: "而不是在相同的時間，顯示資料來源中的所有記錄<xref:System.Web.UI.WebControls.GridView>控制項可以自動分成記錄頁面。</xref:System.Web.UI.WebControls.GridView> 如果資料來源支援的分頁功能，<xref:System.Web.UI.WebControls.GridView>控制項可以充分利用，並提供內建的分頁功能。</xref:System.Web.UI.WebControls.GridView> 分頁功能可以搭配任何支援的資料來源物件<xref:System.Collections.ICollection?displayProperty=fullName>介面或支援的資料來源分頁功能。</xref:System.Collections.ICollection?displayProperty=fullName>       若要啟用分頁功能，將 AllowPaging 屬性設定為`true`。 根據預設，<xref:System.Web.UI.WebControls.GridView>控制項顯示在頁面上一次 10 筆記錄。</xref:System.Web.UI.WebControls.GridView> 您可以變更顯示在頁面上，藉由設定的記錄數目<xref:System.Web.UI.WebControls.GridView.PageSize%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 若要判斷顯示資料來源內容所需的分頁總數，請使用<xref:System.Web.UI.WebControls.GridView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PageCount%2A> 您可以使用，以判斷目前所顯示的頁面索引<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       啟用分頁時，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 頁面巡覽區列將包含控制項，可讓使用者巡覽至其他頁面。 您可以使用來控制的設定 （例如頁面巡覽區顯示模式，在時間和頁面巡覽區控制項的文字標籤顯示的頁面連結數目） 的頁面巡覽列<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 頁面巡覽列可以藉由設定顯示在頂端、 底端，或最上層及控制項的底部<xref:System.Web.UI.WebControls.PagerSettings.Position%2A>屬性。</xref:System.Web.UI.WebControls.PagerSettings.Position%2A> 您也可以選取其中四個內建的頁面巡覽區顯示模式設定<xref:System.Web.UI.WebControls.PagerSettings.Mode%2A>屬性。</xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> 下表描述的內建的顯示模式。      |模式 |描述 |  |----------|-----------------|  |`PagerButton.NextPrevious`|一組包含上一個和下一步 按鈕重新編頁控制項。 |  |`PagerButton.NextPreviousFirstLast`|一組分頁控制項，包含先前，接下來，第一個和最後一個按鈕。 |  |`PagerButton.Numeric`|一組所組成的重新編頁控制項直接編號存取頁面的連結按鈕。 這是預設模式。 |  |`PagerButton.NumericFirstLast`|一組編號，第一個和最後一個連結按鈕所組成的重新編頁控制項。 |      若要控制項目的出現的頁面巡覽列 （包括其背景色彩、 字型色彩和位置），使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView>控制項自動隱藏頁面巡覽列，當資料來源包含只有一個分頁的記錄。</xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.GridView>控制項也可讓您定義的頁面巡覽列的自訂範本。</xref:System.Web.UI.WebControls.GridView> 如需有關如何建立自訂的頁面巡覽區列範本的詳細資訊，請參閱<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>       <xref:System.Web.UI.WebControls.GridView>控制項提供數個事件，您可以使用分頁發生時執行自訂動作。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|發生於按一下其中一個頁面巡覽區按鈕的但之後<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至其他頁面控制項中,。 |  |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|發生於其中一個頁面巡覽區按鈕按一下時前,<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |"
  example:
  - "The following example demonstrates how to use the AllowPaging property to declaratively enable the paging feature in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_198_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_198_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用分頁功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  id: AllowSorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用排序功能。"
  remarks: "當支援排序的資料來源控制項繫結至<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.GridView>控制項可以讓您利用資料來源控制項的功能，並提供自動排序功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> 當<xref:System.Web.UI.WebControls.GridView>控制項繫結至資料來源藉由設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性以程式設計的方式，您必須提供排序的功能使用<xref:System.Web.UI.WebControls.GridView.Sorting>事件。</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 不同的資料來源有不同的需求，以啟用其排序功能。 若要決定的需求，請參閱特定資料來源的文件。       若要啟用排序，將 AllowSorting 屬性設定為`true`。 排序已啟用時，與每個資料行欄位的標題文字其<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>屬性組會顯示為連結按鈕。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>      > [!NOTE] ><xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>自動產生的資料行欄位的屬性會自動擴展。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 如果您定義您自己的資料行，透過<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合，您必須設定<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>屬性每個資料行; 否則資料行不會顯示 [連結] 按鈕在標頭。</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView.Columns%2A>       針對資料行導致中的項目，按一下 [連結] 按鈕<xref:System.Web.UI.WebControls.GridView>要排序的控制項為基礎的排序運算式。</xref:System.Web.UI.WebControls.GridView> 通常，排序運算式就是會導致的資料行中顯示的欄位名稱<xref:System.Web.UI.WebControls.GridView>控制項相對於該資料行排序。</xref:System.Web.UI.WebControls.GridView> 若要排序多個欄位，請使用包含以逗號分隔的欄位名稱清單的排序運算式。 您可以決定排序運算式，<xref:System.Web.UI.WebControls.GridView>控制套用利用<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView> 如果按一下重複的資料行連結按鈕切換遞增和遞減順序之間的排序方向。 若要判斷目前的排序方向，請使用<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SortDirection%2A>       <xref:System.Web.UI.WebControls.GridView>控制項提供數個事件，您可以使用排序發生時執行自訂動作。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.Sorted>|發生於按的超連結以排序資料行，但之後<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 此事件通常用來執行工作，在使用者按一下超連結可排序資料行之後。 |  |<xref:System.Web.UI.WebControls.GridView.Sorting>|發生於按的超連結以排序資料行，但之前<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 若要取消排序作業，或執行自訂排序常式通常使用這個事件。 |"
  example:
  - "The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when automatically generated columns are used.  \n  \n [!code-cs[GridViewAllowSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_1.aspx)]\n [!code-vb[GridViewAllowSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_1.aspx)]  \n  \n The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when a <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection is defined. An image is also programmatically added to the header of the column being sorted to indicate the sort direction. You must provide your own images for this sample to work.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_2.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_2.aspx)]"
  syntax:
    content: public virtual bool AllowSorting { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用 排序的功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AllowSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的替代中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 AlternatingRowStyle 屬性來控制資料中交替資料列的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 當設定這個屬性時，資料列會顯示交替<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定和 AlternatingRowStyle 設定。</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `AlternatingRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<AlternatingRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `AlternatingRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the AlternatingRowStyle property to declaratively define the style for alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1004_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1004_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示的替代中的資料列樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  id: AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出繫結的欄位會自動建立資料來源中的每個欄位。"
  remarks: "當 AutoGenerateColumns 屬性設定為`true`、<xref:System.Web.UI.WebControls.AutoGeneratedField>物件自動建立的每個資料來源中的欄位。</xref:System.Web.UI.WebControls.AutoGeneratedField> 中的資料行，即會顯示每個欄位<xref:System.Web.UI.WebControls.GridView>順序欄位出現在資料來源控制項。</xref:System.Web.UI.WebControls.GridView> 此選項提供便利的方式，以顯示每個欄位中的資料來源;不過，您的有限控制如何自動產生的資料行 欄位會顯示和行為。       而非讓<xref:System.Web.UI.WebControls.GridView>控制項自動產生的資料行欄位中，您可以手動 AutoGenerateColumns 屬性設定為定義的資料行欄位`false`，然後再建立自訂`Columns`集合。</xref:System.Web.UI.WebControls.GridView> 除了繫結資料行的欄位，您也可以顯示按鈕資料行欄位中，核取方塊資料行欄位、 命令欄位、 超連結資料行欄位、 影像欄位或您自己自訂的範本為基礎的資料行欄位。       您也可以結合明確宣告的資料行自動產生的資料行欄位的欄位。 同時使用時，明確宣告資料行欄位會首先呈現，後面接著的自動產生的資料行欄位。 自動產生的繫結資料行欄位不會加入至<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.GridView.Columns%2A>.</xref:System.Web.UI.WebControls.GridView.Columns%2A>       如果您將此屬性設定為`true`並設定<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>屬性模型型別，<xref:System.Web.DynamicData.DynamicField>控制項所產生。</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 如果您未設定<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>屬性，<xref:System.Web.UI.WebControls.BoundField>控制項所產生。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 如果您不想<xref:System.Web.DynamicData.DynamicField>控制項，您可以使用下列選項:-設定<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>屬性`null`中`Page_Load`事件處理常式。</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> </xref:System.Web.DynamicData.DynamicField> 在此情況下，<xref:System.Web.UI.WebControls.BoundField>控制項所產生。</xref:System.Web.UI.WebControls.BoundField>      -撰寫自訂程式碼來自動產生欄位，藉由建立並指派自己<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>類別並將它的執行個體指派給控制項。</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>      -若要設定 AutoGenerateColumns `false`。 在此情況下，會產生任何欄位，並和您必須手動指定欄位使用例如<xref:System.Web.UI.WebControls.BoundField>或<xref:System.Web.UI.WebControls.ImageField>.</xref:System.Web.UI.WebControls.ImageField></xref:System.Web.UI.WebControls.BoundField>控制項      -請勿設定<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>屬性。</xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 在此情況下，<xref:System.Web.UI.WebControls.BoundField>控制項所產生。</xref:System.Web.UI.WebControls.BoundField>"
  example:
  - "The following example demonstrates how to use the AutoGenerateColumns property to automatically create bound field columns in a <xref:System.Web.UI.WebControls.GridView> control for each field in the data source.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1153_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1153_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自動建立資料來源; 中的 繫結每個欄位的欄位否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>欄位資料行中的每個資料列的 [刪除] 按鈕會自動加入至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當支援刪除的資料來源控制項繫結至<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.GridView>控制項可以讓您利用資料來源控制項的功能，並提供自動刪除功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 的資料來源控制項刪除資料，它必須設定為刪除的資料。 若要設定資料來源控制項來刪除記錄，請參閱特定資料來源控制項的文件。       當 [autogeneratedeletebutton] 屬性設定為`true`，資料行 (由<xref:System.Web.UI.WebControls.CommandField>物件) 使用 [刪除] 按鈕，針對每個資料列會自動加入至<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 從資料來源，按一下 [刪除] 按鈕的資料列永久地移除該記錄。      > [!NOTE] > 也必須設定<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性來識別索引鍵欄位或自動刪除功能運作的資料來源的欄位。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>       <xref:System.Web.UI.WebControls.GridView>控制項提供數個事件，您可以使用資料列遭到刪除時，執行自訂動作。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|發生於按一下的資料列的 [刪除] 按鈕，但之後<xref:System.Web.UI.WebControls.GridView>控制從資料來源中刪除記錄。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 此事件通常用來檢查刪除作業的結果。 |  |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|發生於按一下的資料列的 刪除 按鈕前,<xref:System.Web.UI.WebControls.GridView>控制項從 資料來源中刪除記錄。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 此事件通常用來取消刪除作業。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateDeleteButton property to enable the automatic deleting feature of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1343_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1343_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動新增<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>欄位資料行與 [刪除] 按鈕，每個資料列; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>欄位資料行中的每個資料列的 [編輯] 按鈕會自動加入至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當支援更新的資料來源控制項繫結至<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.GridView>控制項可以讓您利用資料來源控制項的功能，並提供自動更新功能。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 來更新資料的資料來源控制項，它必須設定為更新資料。 若要設定資料來源控制項來更新記錄，請參閱特定資料來源控制項的文件。       當 [autogenerateeditbutton] 屬性設定為`true`，資料行 (由<xref:System.Web.UI.WebControls.CommandField>物件) 使用 [編輯] 按鈕，針對每個資料列會自動加入至<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 按一下 [編輯] 按鈕的資料列時，會將該資料列放在編輯模式。 當資料列處於編輯模式時，不是唯讀的資料列中的每個資料行 欄位會顯示適當的輸入的控制項，例如<xref:System.Web.UI.WebControls.TextBox>控制項，欄位的資料類型。</xref:System.Web.UI.WebControls.TextBox> 這可讓使用者修改欄位的值。       按一下時，編輯 按鈕也會取代的更新 按鈕和 取消 按鈕。 按一下 [更新] 按鈕更新資料來源中的資料列的值變更，並傳回要顯示模式的資料列。 按一下取消&5;d; 按鈕會放棄所有的值變更，並傳回要顯示模式的資料列。      > [!NOTE] > 您可以程式設計的方式將一個資料列處於編輯模式下設定<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>屬性的資料列索引。</xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 若要以程式設計方式結束編輯模式，請設定<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>屬性設為-1。</xref:System.Web.UI.WebControls.GridView.EditIndex%2A>       內建的更新功能時，您必須設定<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>以逗號分隔的欄位清單的內容名稱，以識別主索引鍵欄位或資料來源的欄位; 否則內建的更新功能無法更新正確的記錄。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 使用自動產生欄位資料行時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性`true`)、<xref:System.Web.UI.WebControls.GridView>控制項自動確保對應到欄位或欄位中指定的自動產生的欄位資料行<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性是唯讀狀態。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       您可以控制的資料列處於編輯模式下使用外觀<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。       <xref:System.Web.UI.WebControls.GridView>控制項提供數個事件，您可以使用資料列更新時執行自訂動作。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|發生於按一下的資料列的 [取消] 按鈕前,<xref:System.Web.UI.WebControls.GridView>控制項取消編輯模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 此事件通常用來停止取消作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowEditing>|發生於按一下的資料列的 [編輯] 按鈕前,<xref:System.Web.UI.WebControls.GridView>控制項進入編輯模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 此事件通常用來取消編輯作業。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|發生於按一下的資料列的 [更新] 按鈕，但之後<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 此事件通常用來檢查更新作業的結果。 |  |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|發生於按一下的資料列的 [更新] 按鈕前,<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 此事件通常用來取消更新作業。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateEditButton property to enable the automatic editing feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1016_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1016_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自動將<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>欄位資料行中具有 [編輯] 按鈕的每個資料列; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  id: AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>與每個資料列選取按鈕的欄位資料行自動加入至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當 AutoGenerateSelectButton 屬性設定為`true`，資料行 (由<xref:System.Web.UI.WebControls.CommandField>物件) 使用選取的按鈕，針對每個資料列會自動加入至<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 針對資料列選取控制項中的該資料列，請按一下 [選取] 按鈕，它會設定<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性的資料列索引。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 若要擷取<xref:System.Web.UI.WebControls.GridViewRow>物件，表示選取的資料列，使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> </xref:System.Web.UI.WebControls.GridViewRow> 您也可以取得選取的記錄主索引鍵值，藉由<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>屬性包含的值中指定的索引鍵欄位<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>      > [!NOTE] > 設定，您可以透過程式設計方式選取的資料列<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 若要取消選取資料列的項目，設定<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性設為-1。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       您可以使用，以控制選取的資料列的外觀<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。       <xref:System.Web.UI.WebControls.GridView>控制項提供數個事件，您可以使用選取的資料列時，執行自訂動作。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|發生於按一下的資料列的 [選取] 按鈕，但之後<xref:System.Web.UI.WebControls.GridView>控制項處理選取的作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 此事件通常用來在控制項中選取一個資料列之後執行的工作。 |  |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|發生於按一下的資料列的 [選取] 按鈕前,<xref:System.Web.UI.WebControls.GridView>控制處理選取的作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 此事件通常用來取消選取作業。 |"
  example:
  - "The following example demonstrates how to use the AutoGenerateSelectButton property to enable the automatic selection feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1205_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1205_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateSelectButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動新增<xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>欄位資料行選取 按鈕。 每個資料列; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示的背景影像的 URL <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項。"
  remarks: "若要指定要顯示的背景影像的 URL 使用 BackImageUrl 屬性<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 小於指定的映像是否<xref:System.Web.UI.WebControls.GridView>控制項，影像會並排顯示以在背景填滿。</xref:System.Web.UI.WebControls.GridView> 如果影像大於此控制項，則會裁剪影像。"
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1003_1.aspx)]\n [!code-vb[GridViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1003_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "若要在背景中顯示的影像 URL <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>物件，表示內的底部頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 頁面巡覽區列包含控制項，允許使用者瀏覽至其他頁面，並可顯示在頂端、 底端，或最上層及控制項的底部。 使用 BottomPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.GridViewRow>物件，表示內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > BottomPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.GridView>控制項建立內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       這個屬性通常用於您需要以程式設計方式管理下方的頁面巡覽區列，例如當加入自訂內容。 後必須執行 BottomPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.GridView>控制項已呈現，否則<xref:System.Web.UI.WebControls.GridView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the bottom pager row in a <xref:System.Web.UI.WebControls.GridView> control. The BottomPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_54_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示控制項中的底部頁面巡覽區列。"
  overload: System.Web.UI.WebControls.GridView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要呈現的 HTML 標題項目中的文字<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 [標題] 屬性來指定要呈現的 HTML 標題項目中的文字<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 您指定的文字會提供具有可用來將控制項設為更容易存取的資料表描述的輔助技術裝置。 您也可以指定用於轉譯 HTML 標題項目使用的位置<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>屬性。</xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the caption for a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_177_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_177_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "表示要呈現的 HTML 標題項目中的文字字串<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.GridView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平或垂直的位置中的 HTML 標題項目<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 CaptionAlign 屬性來指定 HTML 標題項目中的水平或垂直位置<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。       這個屬性會設定使用其中一種<xref:System.Web.UI.WebControls.TableCaptionAlign>列舉值。</xref:System.Web.UI.WebControls.TableCaptionAlign> 下表列出可能的值。      |值 |描述 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|標題項目對齊資料表底部。 |  |`TableCaptionAlign.Left`|標題項目與資料表的左邊對齊。 |  |`TableCaptionAlign.NotSet`|未設定標題項目對齊。 |  |`TableCaptionAlign.Right`|標題項目對齊右邊的資料表。 |  |`TableCaptionAlign.Top`|標題項目會在資料表頂端對齊。 |     > [!NOTE] > 當這個屬性設定為`TableCaptionAlign.NotSet`，會使用瀏覽器的預設值。       若要指定 HTML caption 元素的文字，請使用<xref:System.Web.UI.WebControls.GridView.Caption%2A>屬性。</xref:System.Web.UI.WebControls.GridView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the caption element for a <xref:System.Web.UI.WebControls.GridView> control is aligned with the top of the control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_600_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_600_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>，它會使用瀏覽器的預設設定。"
  overload: System.Web.UI.WebControls.GridView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格的內容和儲存格的框線之間的空間數量。"
  remarks: "您可以使用 CellPadding 屬性來控制的儲存格的內容與儲存格的框線之間的間距。 指定的填補量會加入至儲存格的四個邊。       在相同的資料行中的所有資料格<xref:System.Web.UI.WebControls.GridView>控制項具有相同的寬度。</xref:System.Web.UI.WebControls.GridView> 填補數量會套用到最寬的資料格和資料行中的所有其他資料格都有這個儲存格的寬度。 同樣地，相同的資料列中的所有資料格具有相同的高度。 填補數量會套用到資料列中最高的儲存格和資料列中的所有其他資料格都有這個儲存格的高度。 個別儲存格大小不能指定。"
  example:
  - "The following example demonstrates how to use the CellPadding property to declaratively set the amount of space between the contents of a cell and the cell's border.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_836_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_836_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格的內容和儲存格的框線之間的空間數量。 預設值為-1，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格之間的空間量。"
  remarks: "使用 CellSpacing 屬性來控制在相鄰的資料格之間的間距<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 垂直和水平，則會套用這個間距。 儲存格間距是一致的整個控制項。 不能指定個別資料格的資料列或資料行之間的間距。      > [!NOTE] > 如果您設定此屬性的值大於 0，然後將<xref:System.Web.UI.WebControls.GridView.GridLines%2A>屬性相鄰的資料格的框線之間顯示儲存格框線的值，顯示間隔。</xref:System.Web.UI.WebControls.GridView.GridLines%2A> 在此情況下，<xref:System.Web.UI.WebControls.Table.CellSpacing%2A>屬性控制的差距大小。</xref:System.Web.UI.WebControls.Table.CellSpacing%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to declaratively set the amount of space between the cells of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_898_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_898_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格之間的空間數量。 預設值為 0。"
  overload: System.Web.UI.WebControls.GridView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  id: ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定其值會附加至資料欄位的名稱<xref:System.Web.UI.Control.ClientID*>來唯一識別每個執行個體的資料繫結控制項的屬性值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "若要避免命名衝突，當控制項的多個執行個體以多個資料列的轉譯<xref:System.Web.UI.WebControls.GridView>控制項，ASP.NET 產生唯一<xref:System.Web.UI.Control.ClientID%2A>每個執行個體的值。</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.WebControls.GridView> 您指定如何<xref:System.Web.UI.Control.ClientID%2A>藉由設定產生值<xref:System.Web.UI.Control.ClientIDMode%2A>屬性。</xref:System.Web.UI.Control.ClientIDMode%2A> </xref:System.Web.UI.Control.ClientID%2A> 如果您設定<xref:System.Web.UI.Control.ClientIDMode%2A>屬性<xref:System.Web.UI.ClientIDMode>，ASP.NET 會產生<xref:System.Web.UI.Control.ClientID%2A>藉由附加的尾碼，衍生自 ClientIDRowSuffix 中指定的資料欄位。</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> 如果未設定 ClientIDRowSuffix，尾碼是一組序號。"
  syntax:
    content: public virtual string[] ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "資料欄位的值會用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生名稱<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  id: ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生的資料值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  syntax:
    content: public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生的資料值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Columns
  id: Columns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>表示中的資料行欄位的物件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "資料行欄位表示中的資料行<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 資料行屬性 （集合） 用來儲存明確宣告的資料行之所有欄位，以取得轉譯<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 您也可以使用資料行集合，以程式設計方式管理資料行欄位的集合。      > [!NOTE] > 明確宣告資料行欄位可用於與自動產生的資料行欄位搭配使用。 同時使用時，明確宣告資料行欄位會首先呈現，後面接著的自動產生的資料行欄位。 自動產生欄位不會加入至資料行集合的資料行。       資料行欄位會顯示在<xref:System.Web.UI.WebControls.GridView>控制項中的資料行欄位出現在資料行集合的順序。</xref:System.Web.UI.WebControls.GridView> 下表顯示不同的資料行欄位的類別衍生自<xref:System.Web.UI.WebControls.DataControlField>類別，並可用於資料行集合。</xref:System.Web.UI.WebControls.DataControlField>      |資料行欄位類型 |描述 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|顯示資料來源中欄位的值。</xref:System.Web.UI.WebControls.BoundField> 這是<xref:System.Web.UI.WebControls.GridView>控制項的預設資料行類型。 |  |<xref:System.Web.UI.WebControls.ButtonField>|顯示每個項目中的命令按鈕<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView> 這可讓您建立的資料行的自訂按鈕控制項，例如 [新增] 或 [移除] 按鈕。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|顯示每個項目中的核取方塊<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CheckBoxField> 這個資料行的欄位型別通常用於顯示具有布林值的欄位。 |  |<xref:System.Web.UI.WebControls.CommandField>|顯示預先定義的命令按鈕可執行選取、 編輯或刪除作業。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|顯示為超連結資料來源中欄位的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 這個資料行的欄位型別可讓您將第二個欄位繫結至超連結的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|<xref:System.Web.UI.WebControls.GridView>控制項中顯示每個項目的影像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|顯示每個項目中的使用者定義內容<xref:System.Web.UI.WebControls.GridView>控制項，根據指定的範本。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ImageField> 這個資料行的欄位型別可讓您建立自訂的資料行的欄位。 |      雖然您可以程式設計方式加入資料行集合的資料行欄位，會比較容易清單以宣告方式中的資料行欄位<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>顯示或隱藏每個資料行欄位的每個資料行欄位的屬性。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.GridView>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>資料行欄位的屬性設定為`false`，資料行不會顯示在<xref:System.Web.UI.WebControls.GridView>控制項和資料行的資料不會反覆存取用戶端。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您想要看不到構成來回行程的資料行的資料，加入欄位名稱<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to populate the Columns collection declaratively.  \n  \n [!code-vb[GridViewColumnFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_420_1.aspx)]\n [!code-cs[GridViewColumnFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_420_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>包含中的所有資料行欄位<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  id: ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定將會自動產生的資料行控制<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項使用 ASP.NET Dynamic Data 功能。"
  remarks: "若要在網頁中使用 ASP.NET Dynamic Data 功能，您必須新增<xref:System.Web.DynamicData.DynamicDataManager>控制項加入網頁。</xref:System.Web.DynamicData.DynamicDataManager> 這可讓 ASP.NET Dynamic Data 功能，資料繫結控制項在頁面中，例如<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 若要讓個人<xref:System.Web.UI.WebControls.GridView>控制項以使用動態資料功能，您必須使其與<xref:System.Web.DynamicData.DynamicDataManager>藉由呼叫控制項<xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName>方法期間`Page_Init`事件。</xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicDataManager> </xref:System.Web.UI.WebControls.GridView> 這個方法會自動將 ColumnsGenerator 屬性設定為<xref:System.Web.DynamicData.DynamicDataManager>物件。</xref:System.Web.DynamicData.DynamicDataManager>"
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "會自動產生的資料行的控制項<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項使用 ASP.NET Dynamic Data 功能。"
  overload: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立自動產生的資料行欄位。"
  remarks: "方法用來建立自動產生的資料行 CreateAutoGeneratedColumn 欄位時<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性設定為`true`。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 自動產生的資料行欄位的內容透過指定<xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>中所含物件`fieldProperties`參數。</xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref> ，代表要建立之自動產生的資料行欄位的屬性。"
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> ，代表所指定的自動產生的資料行欄位<code> fieldProperties </code>參數。"
  overload: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立用來呈現的控制項階層架構<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>使用指定的資料來源。"
  remarks: "CreateChildControls 方法用來建立的控制項階層架構<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "&lt;Xref:System.Collections.IEnumerable?displayProperty=fullName&gt; ，其中包含的資料來源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示子控制項的繫結至資料。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "建立資料列數目。"
  overload: System.Web.UI.WebControls.GridView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code>會傳回 null <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>。       -<code>dataSource</code>未實作<xref:System.Collections.ICollection>介面，並不能傳回<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>。       -<xref:System.Web.UI.WebControls.GridView.AllowPaging*>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>和<code>dataSource</code>未實作<xref:System.Collections.ICollection>介面，並無法執行資料來源分頁。       -<code>dataSource</code>未實作<xref:System.Collections.ICollection>介面和<code>dataBinding</code>設<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  id: CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立新的子資料表。"
  remarks: "CreateChildTable 方法是 helper 方法，供<xref:System.Web.UI.WebControls.GridView>控制項來建立子資料表。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateChildTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "一律會傳回新<xref href=&quot;System.Web.UI.WebControls.Table&quot;></xref>表示子資料表。"
  overload: System.Web.UI.WebControls.GridView.CreateChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  id: CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立用來建置在控制項階層架構的資料行欄位的集合。"
  remarks: "當<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性設定為`true`，繫結資料行欄位會自動建立資料來源中的每個欄位。</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 每個繫結資料行欄位然後會顯示為中的資料列<xref:System.Web.UI.WebControls.GridView>順序欄位出現在資料來源控制項。</xref:System.Web.UI.WebControls.GridView> CreateColumns 方法用來建立的自動產生的資料行欄位。      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> ，代表資料來源。"
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用指定之資料來源`dataSource`參數，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.ICollection
      description: "A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; ，其中包含用來建置在控制項階層架構的欄位。"
  overload: System.Web.UI.WebControls.GridView.CreateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立控制項的預設樣式。"
  remarks: "CreateControlStyle 方法用來建立控制項的預設樣式。      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>表示控制項的樣式。"
  overload: System.Web.UI.WebControls.GridView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;></xref>物件，其中包含資料來源進行處理傳遞的引數。"
  remarks: "CreateDataSourceSelectArguments 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.GridView>控制項來建立<xref:System.Web.UI.DataSourceSelectArguments>物件，其中包含引數傳遞至資料來源。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.GridView> 在此實作中，<xref:System.Web.UI.DataSourceSelectArguments>物件包含分頁作業的引數。</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> ，其中包含傳遞至資料來源的引數。"
  overload: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立資料列，在<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "CreateRow 方法用來建立的資料列中<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 資料繫結<xref:System.Web.UI.WebControls.GridView>控制項自動產生顯示目標資料所需的資料列。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "若要建立資料列索引。"
    - id: dataSourceIndex
      type: System.Int32
      description: "索引的資料來源繫結至資料列的項目。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>建立使用指定的參數。"
  overload: System.Web.UI.WebControls.GridView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至資料來源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 這個方法無法被繼承。"
  remarks: "將資料繫結至資料來源使用資料繫結方法<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個方法會解析所有資料繫結運算式在使用中的範本中的控制項。       如果自動呼叫 DataBind 方法<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>屬性<xref:System.Web.UI.WebControls.GridView>控制項指的是有效的資料來源控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>       而不是以手動方式呼叫進行資料繫結方法，您可以使用模型繫結與資料繫結控制項的<xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A>屬性名稱的方法會傳回<xref:System.Web.UI.WebControls.GridView>。</xref:System.Web.UI.WebControls.GridView>資料</xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A>設定 <xref:System.Web.UI.WebControls.GridView>接著會自動填入從選取的方法傳回的資料。</xref:System.Web.UI.WebControls.GridView> 模型繫結可簡化您的程式碼使用的資料。 如需詳細資訊，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  example:
  - "The following example demonstrates how to use the DataBind method to bind a data source to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataBind#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[GridViewDataBind#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定陣列，其中包含主索引鍵欄位的顯示中的項目名稱<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "請使用 DataKeyNames 屬性指定欄位或欄位代表資料來源的主索引鍵。 您只應設定此屬性來唯一識別每個資料列; 所需的欄位例如，如果整數值的唯一識別碼資料行識別每個資料列。 您必須設定的 DataKeyNames 屬性 的自動更新和刪除功能<xref:System.Web.UI.WebControls.GridView>運作的控制項。</xref:System.Web.UI.WebControls.GridView> 若要指定要更新或刪除的資料列，這些索引鍵欄位的值會傳遞至資料來源控制項。       如果您要擷取的資料更新時，機碼值，或刪除資料列中，使用`Keys`可能是屬性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>或<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>類別。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 例如，`e.Keys[0]`保存的值中的第一個資料索引鍵<xref:System.Web.UI.WebControls.GridView.RowUpdating>或<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件處理常式。</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       如果您需要選取一個資料列時，擷取資料的金鑰值，請使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>       當設定的 DataKeyNames 屬性時，<xref:System.Web.UI.WebControls.GridView>控制項就會自動填入其<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>提供便利的方式來存取每個資料列的主索引鍵欄位或指定的欄位的值集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView>控制項儲存這些索引鍵欄位值中的控制項狀態。</xref:System.Web.UI.WebControls.GridView> 如果這些值會包含機密資訊，強烈建議您藉由設定啟用檢視狀態加密<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>屬性`ViewStateEncryptionMode.Always`。</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>       當您使用自動產生欄位資料行 (藉由設定<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性`true`)、<xref:System.Web.UI.WebControls.GridView>控制項可確保 DataKeyNames 屬性中指定的欄位對應的資料行是唯讀狀態。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>資料行欄位的屬性設定為`false`，資料行不會顯示在<xref:System.Web.UI.WebControls.GridView>控制項和資料行的資料不會反覆存取用戶端。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您想要看不到可供用戶端的資料行的資料，請將欄位名稱加入至 DataKeyNames 屬性。"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field of the data source. In the example, the `DataKeyNames` attribute of the `GridView` element in markup specifies two key fields by using a comma to separate the names. To run this example, create a Web site that has the following:  \n  \n-   A connection to the AdventureWorksLT sample database and a connection string that is named `AdventureWorksLTConnectionString`. For information about how to set up the AdventureWorksLT sample database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n-   A LINQ-to-SQL data context class that is named `AdventureWorksLTDataClassesDataContext`. The data context must have a class for the SalesOrderDetails table. For information about how to create LINQ-to-SQL classes, see [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1002_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1002_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含的主索引鍵名稱欄位中顯示的項目<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeys
  id: DataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>代表資料的物件索引鍵中的每個資料列的值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>設定屬性，則<xref:System.Web.UI.WebControls.GridView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>控制項中的每個資料列的物件。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>物件包含的欄位中指定的欄位值<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> <xref:System.Web.UI.WebControls.DataKey>物件接著會加入至控制項的 DataKeys 集合。</xref:System.Web.UI.WebControls.DataKey> 使用 DataKeys 屬性擷取<xref:System.Web.UI.WebControls.DataKey>特定資料列中的物件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 您可以使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>屬性，以擷取<xref:System.Web.UI.WebControls.DataKey>目前選取的資料列的物件。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 您也可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>直接擷取目前選取的資料列的資料值的屬性。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKeys property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_962_1.aspx)]\n [!code-vb[GridViewDataKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_962_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;> </xref> ，其中包含每個資料列中的資料金鑰<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要刪除的資料，才能呼叫方法的名稱。"
  remarks: "設定這個屬性會導致模型繫結來做為資料繫結方法。       在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "方法的名稱。"
  overload: System.Web.UI.WebControls.GridView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  id: DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "從資料來源中刪除指定索引處的記錄。"
  remarks: "您可以使用 DeleteRow 方法來以程式設計方式從資料來源中刪除指定索引處的記錄。 這個方法通常使用於您要刪除的記錄從外部<xref:System.Web.UI.WebControls.GridView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.GridView> 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.GridView.RowDeleted>和<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件。</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteRow method to programmatically delete a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDeleteRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_184_1.aspx)]\n [!code-vb[GridViewDeleteRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_184_1.aspx)]"
  syntax:
    content: public virtual void DeleteRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要刪除的資料列索引。"
  overload: System.Web.UI.WebControls.GridView.DeleteRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項未繫結至資料來源控制項。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "資料來源控制項<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項繫結不支援刪除作業，或不沒有資料來源定義任何 delete 命令。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditIndex
  id: EditIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要編輯的資料列索引。"
  remarks: "以零為起始的資料列索引 （第一個資料列是資料列零）。       這個屬性通常用只在下列案例中，其中包含特定的事件處理常式:-您想要<xref:System.Web.UI.WebControls.GridView>控制項以開啟特定資料列的編輯模式中的頁面會顯示第一次。</xref:System.Web.UI.WebControls.GridView> 若要這樣做，您可以設定 EditIndex 屬性中的處理常式<xref:System.Web.UI.Control.Load>事件<xref:System.Web.UI.Page>類別或<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page> </xref:System.Web.UI.Control.Load>      -您想要知道哪一個資料列已在編輯過之後已更新的資料列。 若要這樣做，您可以從 EditIndex 屬性中擷取的資料列索引<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件處理常式。</xref:System.Web.UI.WebControls.GridView.RowUpdated>      -您要繫結<xref:System.Web.UI.WebControls.GridView>控制項至資料來源，藉由設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性以程式設計的方式。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView> 在此情況下您必須設定 EditIndex 屬性<xref:System.Web.UI.WebControls.GridView.RowEditing>和<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件處理常式。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> </xref:System.Web.UI.WebControls.GridView.RowEditing>       如果在回傳後或引發的事件處理常式中，將 EditIndex 屬性晚於<xref:System.Web.UI.Control.Load>事件<xref:System.Web.UI.WebControls.GridView>控制項可能會不進入編輯模式，針對指定的資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Control.Load> 如果您讀取其他事件處理常式中的此屬性的值，索引不會保證以反映正在編輯的資料列。       若要判斷哪個資料列的使用者已按一下**編輯**按鈕或中的超連結，然後再<xref:System.Web.UI.WebControls.GridView>控制項進入編輯模式，您可以擷取從資料列索引<xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A>屬性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>物件存放至<xref:System.Web.UI.WebControls.GridView.RowEditing>事件處理常式。</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> </xref:System.Web.UI.WebControls.GridView>       若要避免<xref:System.Web.UI.WebControls.GridView>控制項進入編輯模式之後使用者已按一下,**編輯**按鈕或超連結，將<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>物件`true`中<xref:System.Web.UI.WebControls.GridView.RowEditing>事件處理常式。</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the EditIndex property to determine which row was updated after it was edited in a <xref:System.Web.UI.WebControls.GridView> control. A message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1013_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1013_1.aspx)]"
  syntax:
    content: public virtual int EditIndex { get; set; }
    return:
      type: System.Int32
      description: "若要編輯的資料列的以零為起始的索引。 預設值為-1，表示正在編輯沒有資料列。"
  overload: System.Web.UI.WebControls.GridView.EditIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的索引為小於-1。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中進行編輯選取的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 EditRowStyle 屬性來控制資料列中編輯的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EditRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<EditRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the EditRowStyle property to define a custom style for the row being edited in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_980_1.aspx)]\n [!code-vb[GridViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_980_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，代表正在編輯中的資料列樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定空白資料列的外觀呈現時<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "使用 EmptyDataRowStyle 屬性來控制中的 null 資料列的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 繫結至控制項的資料來源不包含任何記錄時，會顯示 null 的資料列。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EmptyDataRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<EmptyDataRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to set the EmptyDataRowStyle property declaratively to specify a light blue background and a red font for the null row.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1110_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1110_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，可讓您設定為 null 的資料列的外觀。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定使用者定義的內容，來轉譯時的空白資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.GridView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.GridView> 您可以使用 EmptyDataTemplate 屬性來定義您自己的自訂使用者介面 (UI)，空白資料列。       若要指定空白資料列的自訂範本，先將`<EmptyDataTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 然後，您可以列出範本的開頭和結尾之間的內容`<EmptyDataTemplate>`標記。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 或者，設定為空的資料列使用內建的 UI<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>       如需如何以程式設計方式存取您宣告空的資料範本中的控制項的資訊，請參閱[如何︰ 存取伺服器控制項的 ID](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>和 EmptyDataTemplate 屬性會設定、 EmptyDataTemplate 屬性會優先。</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.GridView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_206_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_206_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含空白資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定来顯示空的資料列中的文字呈現時<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.GridView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.GridView> 您可以使用 EmptyDataText 屬性來指定要顯示空的資料列中的文字。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI)，空白資料列，藉由設定<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>      > [!NOTE] > 如果這兩個 EmptyDataText 和<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-vb[GridViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_935_1.aspx)]\n [!code-cs[GridViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_935_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "要在空白資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否驗證程式控制項將會處理發生在進行插入或更新作業的例外狀況。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果驗證程式控制項將會處理或更新作業; 在插入期間發生的例外狀況，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  id: EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出選取的資料列根據索引或資料索引鍵的值。"
  remarks: "如果這個屬性是`false`並選取資料列，即使新的頁面中有不同的資料，會顯示新的頁面時，系統會選取相同的資料列。 如果您將此屬性設定為`true`，當您顯示一個頁面中，有不同的資料，會選取任何資料列。 如果您再傳回至頁面選取一個資料列，該資料列已選取。"
  syntax:
    content: public virtual bool EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料列選取範圍根據資料索引鍵的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  id: EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出用戶端回呼用於排序和分頁作業。"
  remarks: "根據預設，排序或分頁作業執行時，<xref:System.Web.UI.WebControls.GridView>控制項回傳至伺服器執行的作業。</xref:System.Web.UI.WebControls.GridView> 當 EnableSortingAndPagingCallbacks 屬性設定為`true`、 服務稱為 「 用戶端執行的排序和分頁作業，就不需要文章回傳至伺服器。      > [!NOTE] > 並非所有瀏覽器都支援這項功能。 若要判斷瀏覽器是否支援這項功能，請使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>屬性。</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       中的所有資料行<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合必須支援這項功能運作的回呼。</xref:System.Web.UI.WebControls.GridView.Columns%2A> 如果<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合包含的資料行，不支援回呼，例如<xref:System.Web.UI.WebControls.TemplateField>、<xref:System.NotSupportedException>引發例外狀況。</xref:System.NotSupportedException> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView.Columns%2A>"
  example:
  - "The following example demonstrates how to use the EnableSortingAndPagingCallbacks property to enable client-side callbacks for sorting and paging operations.  \n  \n [!code-vb[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_960_1.aspx)]\n [!code-cs[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_960_1.aspx)]"
  syntax:
    content: public virtual bool EnableSortingAndPagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用用戶端回呼來排序和分頁作業。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.GridView.Columns*>集合包含的資料行，不支援回呼，例如<xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>。</xref:System.Web.UI.WebControls.GridView.Columns*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取指定的資料列內宣告的每個欄位的值，並將它們儲存在指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>物件。"
  remarks: "ExtractRowValues 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.GridView>要擷取的值，宣告所指定之資料列中每個欄位的控制項`row`參數。</xref:System.Web.UI.WebControls.GridView> 您可以指定擷取的值使用是否包含唯讀欄位和索引鍵欄位`includeReadOnlyFields`和`includePrimaryKey`參數，分別。"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>用來儲存欄位值。"
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>要從中擷取的欄位值。"
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括唯讀欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includePrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含主索引鍵欄位或欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>物件，代表頁尾資料列中的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 FooterRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.GridViewRow>物件，代表頁尾資料列中的<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > FooterRow 屬性之後，才可被<xref:System.Web.UI.WebControls.GridView>控制項建立頁尾資料列中的<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       這個屬性通常用於您需要以程式設計方式操作頁尾資料列，例如當加入自訂內容。 後必須執行 FooterRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.GridView>控制項已呈現，否則<xref:System.Web.UI.WebControls.GridView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the FooterRow property to display the sort direction in the footer row.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_775_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_775_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>頁尾資料列中的表示<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定頁尾資料列中的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 FooterStyle 屬性來控制頁尾資料列中的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `FooterStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<FooterStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the FooterStyle property to define a custom style for the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示頁尾資料列中的樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "傳回回呼事件以控制項為目標的結果。"
  remarks: "<xref:System.Web.UI.WebControls.GridView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以非同步方式擷取資料和 GetCallbackResult 方法所擷取的資料傳回至控制項。</xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回呼的結果。"
  overload: System.Web.UI.WebControls.GridView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立回呼指令碼會執行排序作業的按鈕。"
  remarks: "GetCallbackScript 方法是 helper 方法，供<xref:System.Web.UI.WebControls.GridView>控制項來建立執行排序作業的按鈕的回呼指令碼。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "按鈕控制項，以便用來建立回呼指令碼。"
    - id: argument
      type: System.String
      description: "要傳遞至回呼指令碼的引數。"
    return:
      type: System.String
      description: "回呼指令碼會執行排序作業的按鈕。"
  overload: System.Web.UI.WebControls.GridView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定格線樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用格線屬性來指定格線樣式<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 下表列出可用的樣式。      |樣式 |描述 |  |-----------|-----------------|  |`GridLines.None`|不顯示格線。 |  |`GridLines.Horizontal`|顯示水平格線。 |  |`GridLines.Vertical`|顯示垂直格線。 |  |`GridLines.Both`|顯示水平和垂直格線。 |"
  example:
  - "The following example demonstrates how to use the GridLines property to hide the gridlines in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1102_1.aspx)]\n [!code-cs[GridViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>物件，表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 HeaderRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.GridViewRow>物件，表示中的標頭資料列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > HeaderRow 屬性之後，才可被<xref:System.Web.UI.WebControls.GridView>控制項建立中的標頭資料列<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       這個屬性通常用於您需要以程式設計方式操作標頭資料列時，例如，當加入自訂內容。 後必須執行 HeaderRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.GridView>控制項已呈現，否則<xref:System.Web.UI.WebControls.GridView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically change the font color of the header row based on the sort direction.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1107_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1107_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的標頭資料列的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 HeaderStyle 屬性來控制中的標頭資料列的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `HeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<HeaderStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the HeaderStyle property to define a custom style for the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1352_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1352_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的標頭資料列的樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平對齊<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>頁面上的控制項。"
  remarks: "使用指定的水平對齊 HorizontalAlign 屬性<xref:System.Web.UI.WebControls.GridView>頁面內控制項。</xref:System.Web.UI.WebControls.GridView> 下表列出不同的水平對齊樣式。      |對齊值 |描述 |  |---------------------|-----------------|  |`HorizontalAlign.NotSet`|尚未設定<xref:System.Web.UI.WebControls.GridView>控制項的水平對齊。 |  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView>控制項是在頁面上靠左對齊。 |  |`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.GridView>控制項置於頁面。 |  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView>控制項是在頁面上靠右對齊。 |  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView>控制項對齊頁面的左、 右邊界。 |</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to align a <xref:System.Web.UI.WebControls.GridView> control on the right side of a page.  \n  \n [!code-vb[GridViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_660_1.aspx)]\n [!code-cs[GridViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_660_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化啟用分頁功能時顯示的頁面巡覽列。"
  remarks: "InitializePager 方法用來初始化啟用分頁功能時顯示的頁面巡覽列。      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示頁面巡覽列，來初始化。"
    - id: columnSpan
      type: System.Int32
      description: "頁面巡覽區列應該跨越的資料行數目。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> ，代表資料來源。"
  overload: System.Web.UI.WebControls.GridView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  id: InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化中的資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "InitializeRow 方法用來初始化中的資料列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> ，代表要初始化的資料列。"
    - id: fields
      type: System.Web.UI.WebControls.DataControlField[]
      description: "陣列<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>表示中的資料行欄位的物件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷指定的資料類型是否可以繫結中的資料行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "IsBindableType 方法是 helper 方法，通常由控制項開發人員用來以程式設計方式判斷指定的資料類型是否可以繫結中的資料行<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName></xref:System.UInt64?displayProperty=fullName></xref:System.UInt32?displayProperty=fullName></xref:System.UInt16?displayProperty=fullName></xref:System.String?displayProperty=fullName></xref:System.Single?displayProperty=fullName></xref:System.SByte?displayProperty=fullName></xref:System.Int64?displayProperty=fullName></xref:System.Int32?displayProperty=fullName></xref:System.Int16?displayProperty=fullName></xref:System.Guid?displayProperty=fullName></xref:System.Double?displayProperty=fullName></xref:System.Decimal?displayProperty=fullName></xref:System.DateTime?displayProperty=fullName></xref:System.Char?displayProperty=fullName></xref:System.Byte?displayProperty=fullName></xref:System.Boolean?displayProperty=fullName></xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A &lt;xref:System.Type?displayProperty=fullName&gt;表示要測試的資料類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料類型可以繫結中的資料行<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項等控制項，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項需要保存，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "這個方法用來載入中的屬性狀態<xref:System.Web.UI.WebControls.GridView>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;包含控制項的已儲存的控制項狀態值。"
  overload: System.Web.UI.WebControls.GridView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;包含控制項的已儲存的檢視狀態值。"
  overload: System.Web.UI.WebControls.GridView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定是否要在頁面的使用者介面 (UI) 伺服器控制項階層架構中向上傳遞 Web 伺服器控制項的事件。"
  remarks: "OnBubbleEvent 方法會實作<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>方法，將事件從子控制項傳遞至頁面階層。</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件資料。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果事件已取消。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  id: OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重新繫結<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>後其資料的控制項<> *>， <> </> *>，或<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>屬性變更。</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>"
  remarks: "OnDataPropertyChanged 方法是 helper 方法，供<xref:System.Web.UI.WebControls.GridView>後其資料的控制項重新繫結控制項<xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>， <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>，或<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>屬性變更。</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void OnDataPropertyChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;></xref>事件。"
  remarks: "OnDataSourceViewChanged 方法會通知<xref:System.Web.UI.WebControls.GridView>基礎資料來源已變更，而且控制項應重新繫結的控制項。</xref:System.Web.UI.WebControls.GridView> 一般而言，當資料來源檢視的屬性已經變更時，會呼叫 OnDataSourceViewChanged 方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnDataSourceViewChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "當通知由這個方法時，Web 伺服器控制項都必須執行建立及設定執行個體所需的任何初始化步驟。 在此階段的伺服器控制項的生命週期中，控制項的檢視狀態尚未填入。 此外，您無法存取其他伺服器控制項，呼叫這個方法時，無論它是子系或父這個控制項。 不保證會建立並準備好存取其他伺服器控制項。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnInit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanged&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>其中一個頁面巡覽區按鈕按下時，但之後，會引發事件<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 這可讓您提供執行自訂的常式，如自訂分頁作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>其中一個頁面巡覽區按鈕按下時前,，會引發事件<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 這可讓您提供執行自訂的常式，例如取消分頁作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewPageEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "控制項載入前，請設定資料繫結控制項的初始化的狀態。"
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件。"
  remarks: "這個方法會通知伺服器控制項，執行任何必要的預先呈現步驟之前儲存檢視狀態，並呈現內容。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPreRender 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  id: OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>按一下資料列處於編輯模式下的 [取消] 按鈕時，會引發事件，但該資料列結束之前編輯模式。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 這可讓您提供執行自訂的常式，例如停止取消作業，會讓資料列處於不良狀態，此事件發生時的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCancelingEdit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCancelEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCancelEditEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  id: OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowCommand&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCommand>中按下按鈕時，會引發事件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCommand> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCommand 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCommand> event. When the Add button is clicked for a given row of the <xref:System.Web.UI.WebControls.GridView> control, the name of the selected customer is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/10c8d2a8-eb40-462e-a63f-_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/10c8d2a8-eb40-462e-a63f-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCommandEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowCreated&quot;></xref>事件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈現控制項，<xref:System.Web.UI.WebControls.GridViewRow>必須建立在控制項中的每個資料列的物件。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowCreated>就會引發事件時每個資料列中<xref:System.Web.UI.WebControls.GridView>建立控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCreated> 這可讓您提供執行自訂的常式，例如加入到資料列的自訂內容時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowCreated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCreated> event. When a row is being created, its index is stored in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control that is contained in the new row. This enables you to determine the index of the row when the user clicks the command button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/a62170ef-53b8-4054-ad66-_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/a62170ef-53b8-4054-ad66-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowDataBound&quot;></xref>事件。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈現控制項，控制項中的每個資料列必須繫結至資料來源中的記錄。</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowDataBound>資料資料列時，就會引發事件 (由<xref:System.Web.UI.WebControls.GridViewRow>物件) 中的資料繫結<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView.RowDataBound> 這可讓您提供事件處理方法，執行自訂的常式，例如修改繫結的資料列，此事件發生時的值。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDataBound 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。       本主題隨附了含有原始程式碼的 Visual Studio Web 站台專案︰[下載](http://go.microsoft.com/fwlink/?LinkId=191882)。"
  syntax:
    content: protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  id: OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleted&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleted>按一下的資料列的 [刪除] 按鈕，但之後時，會引發事件<xref:System.Web.UI.WebControls.GridView>控制項刪除資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 這可讓您提供執行自訂的常式，如檢查刪除作業的結果，此事件發生時的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDeleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeletedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  id: OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleting>引發資料列的 [刪除] 按鈕按一下時前,<xref:System.Web.UI.WebControls.GridView>控制項刪除資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 這可讓您提供執行自訂的常式，例如取消刪除作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowDeleting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeleteEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  id: OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowEditing>引發資料列的 [編輯] 按鈕按一下時前,<xref:System.Web.UI.WebControls.GridView>控制項進入編輯模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 這可讓您提供執行自訂的常式，例如取消編輯作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowEditing 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewEditEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowEditing*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  id: OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdated&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdated>按一下的資料列的 [更新] 按鈕，但之後時，會引發事件<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 這可讓您提供執行自訂的常式，例如檢查更新作業的結果，此事件發生時的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowUpdated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdatedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  id: OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdating>引發資料列的 [更新] 按鈕按一下時前,<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 這可讓您提供執行自訂的常式，例如取消更新作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnRowUpdating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdateEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnRowUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanged&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>時的資料列選取按一下按鈕時，但之後會引發事件<xref:System.Web.UI.WebControls.GridView>控制處理選取的作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 這可讓您提供執行自訂的常式，例如目前選取的資料列，更新狀態標籤時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSelectedIndexChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  example:
  - "The following example shows how create an event handler for the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event. In this example, the selected row is persisted in the view state. So even after a sorting or a paging operation, only that row will be selected.  \n  \n [!code-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_77_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_77_1.aspx)]"
  syntax:
    content: protected virtual void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  id: OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanging&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>時的資料列選取按一下按鈕時，之前引發事件<xref:System.Web.UI.WebControls.GridView>控制處理選取的作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 這可讓您提供執行自訂的常式，例如取消選取作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSelectedIndexChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSelectEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSelectEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  id: OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.Sorted&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorted>時按的超連結以排序資料行，但之後會引發事件<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 這可讓您提供此事件發生時執行自訂的常式，如自訂排序的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSorted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSorted (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  id: OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;></xref>事件。"
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorting>時按一下的超連結以排序資料行，但之前引發事件<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 這可讓您提供執行自訂的常式，例如取消排序作業時就會發生此事件的事件處理方法。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnSorting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSortEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSortEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.GridView.OnSorting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得顯示資料來源中的記錄所需的分頁數目<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，使用 PageCount 屬性來判斷資料來源中顯示的記錄所需的分頁總數。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 這個值會計算除以在頁面中顯示的記錄數目的資料來源中之記錄的總數 (依指定<xref:System.Web.UI.WebControls.GridView.PageSize%2A>屬性) 和捨入將</xref:System.Web.UI.WebControls.GridView.PageSize%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of pages displayed in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_202_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_202_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "中的頁數<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定目前顯示的頁面的索引。"
  remarks: "啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，使用 PageIndex 屬性來判斷目前所顯示頁面的索引。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 您也可以使用這個屬性，以程式設計方式變更顯示的頁面。"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the index of the currently displayed page in the <xref:System.Web.UI.WebControls.GridView> control. The example also shows how the PageIndex property can be used to specify which page is displayed after the user selects a value from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_849_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_849_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "在目前顯示的頁面以零為起始的索引。"
  overload: System.Web.UI.WebControls.GridView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageIndex 屬性設定為小於 0 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下其中一個頁面巡覽區按鈕的但之後<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項負責的分頁作業。"
  remarks: "其中一個頁面巡覽區按鈕按下時，但之後引發 PageIndexChanged 事件<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，如自訂分頁作業時就會發生此事件的事件處理方法。       若要判斷使用者所選頁面的索引，請使用<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>屬性<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to display the page number selected by the user from the pager row.  \n  \n [!code-vb[GridViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_26_1.aspx)]\n [!code-cs[GridViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_26_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於其中一個頁面巡覽區按鈕按一下時前, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項負責的分頁作業。"
  remarks: "其中一個頁面巡覽區按鈕按下時前, 引發 PageIndexChanging 事件<xref:System.Web.UI.WebControls.GridView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消分頁作業時就會發生此事件的事件處理方法。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       A<xref:System.Web.UI.WebControls.GridViewPageEventArgs>物件傳遞給事件處理方法，後者則可讓您判斷使用者所選頁面的索引，並指出應該取消的分頁作業。</xref:System.Web.UI.WebControls.GridViewPageEventArgs> 若要取消的分頁作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewPageEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel the paging operation if the user attempts to navigate to another page when a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \n  \n [!code-cs[GridViewPageIndexChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_115_1.aspx)]\n [!code-vb[GridViewPageIndexChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_115_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewPageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;></xref>物件，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 PagerSettings 屬性來控制的設定中的頁面巡覽區列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 頁面巡覽列會顯示啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，並且包含允許使用者在控制項中的不同頁面導覽控制項。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.PagerSettings>它所傳回的物件。</xref:System.Web.UI.WebControls.PagerSettings> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.PagerSettings>物件 (例如， `PagerSettings-Mode`)。</xref:System.Web.UI.WebControls.PagerSettings> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<PagerSettings>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerStyle.Mode`)。 頁面巡覽區列的顯示模式和自訂文字或影像的導覽控制項，通常包含一般設定。"
  example:
  - "The following example demonstrates how to set the PagerSettings property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1275_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1275_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> ，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定頁面巡覽列中的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 PagerStyle 屬性來控制頁面巡覽列中的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 頁面巡覽列會顯示啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，並且包含允許使用者在控制項中的不同頁面導覽控制項。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `PagerStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<PagerStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to set the PagerStyle property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_389_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_389_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的頁面巡覽區列的樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面巡覽列中的自訂內容<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "頁面巡覽列會顯示在<xref:System.Web.UI.WebControls.GridView>控制啟用分頁功能時 (當<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性設定為 true)。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> </xref:System.Web.UI.WebControls.GridView> 頁面巡覽區列包含允許使用者瀏覽至控制項中的不同頁面的控制項。 而不是使用內建的頁面巡覽區的資料列的使用者介面 (UI)，您可以定義自己的 UI 使用 PagerTemplate 屬性。      > [!NOTE] > 時 PagerTemplate 屬性設定，它會覆寫內建的頁面巡覽列 UI。       若要指定頁面巡覽區列的自訂範本，先將`<PagerTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 然後，您可以列出範本的開頭和結尾之間的內容`<PagerTemplate>`標記。 若要控制項目的出現的頁面巡覽列，使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>       通常，按鈕控制項就會加入至頁面巡覽區範本，進行分頁作業。 <xref:System.Web.UI.WebControls.GridView>分頁作業使用的按鈕控制項時，控制項執行其`CommandName`按一下屬性設定為 「 頁面 」。</xref:System.Web.UI.WebControls.GridView> 按鈕的`CommandArgument`屬性會決定要執行的分頁作業的類型。 下表列出支援的命令引數值<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      |`CommandArgument`值 |描述 |  |-----------------------------|-----------------|  |&quot;下一步&quot;|巡覽至下一頁。 |  |&quot;Prev&quot;|導覽至上一頁。 |  |&quot;第一個&quot;|巡覽至第一頁。 |  |&quot;最後一個&quot;|巡覽至最後一頁。 |  |整數值 |巡覽至指定的頁面數目。 |"
  example:
  - "The following example demonstrates how to create a custom pager template that allows the user to navigate through a <xref:System.Web.UI.WebControls.GridView> control using a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1266_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1266_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含頁面巡覽區列的自訂內容。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示在頁面上的記錄數目<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，使用 PageSize 屬性來指定要在單一頁面上顯示的記錄數目。</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>"
  example:
  - "The following example demonstrates how to use the PageSize property to display 15 records at a time in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPageSize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1100_1.aspx)]\n [!code-cs[GridViewPageSize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1100_1.aspx)]"
  syntax:
    content: public virtual int PageSize { get; set; }
    return:
      type: System.Int32
      description: "若要在單一頁面上顯示的記錄數目。 預設值為 10。"
  overload: System.Web.UI.WebControls.GridView.PageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageSize 屬性設定為小於 1 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至指定的資料來源<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "PerformDataBinding 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.GridView>指定的資料來源繫結至控制項的控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，其中包含資料來源。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.GridView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "會建立在控制項階層架構。"
  remarks: "這個方法用來建立的控制項階層架構<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "RaiseCallbackEvent 方法是 helper 方法，供<xref:System.Web.UI.WebControls.GridView>控制項來建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "要傳遞至事件處理常式的引數。"
  overload: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發的適當事件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制當回傳至伺服器。"
  remarks: "頁面呼叫<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法發生回傳事件時，就會引發的適當事件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 這個呼叫發生在頁面生命週期中載入和變更的通知完成後，但尚未發生之前。 已經實作這個方法，以建立<xref:System.Web.UI.WebControls.CommandEventArgs>物件引發的事件。</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數，用來建立<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或事件所引發。"
  overload: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呈現使用指定的用戶端瀏覽器至 Web 伺服器控制項內容<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件。"
  remarks: "Render 方法用來呈現伺服器控制項內容，以使用指定的用戶端瀏覽器<xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>物件。</xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>用來呈現伺服器控制項內容的用戶端瀏覽器上。"
  overload: System.Web.UI.WebControls.GridView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  id: RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下資料列處於編輯模式下的 [取消] 按鈕時，但之前的資料列結束編輯模式。"
  remarks: "按一下資料列處於編輯模式下的 [取消] 按鈕時，引發 RowCancelingEdit 事件，但資料列結束之前編輯模式。 這可讓您提供執行自訂的常式，例如停止取消作業，會讓資料列處於不良狀態，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>物件傳遞至事件處理方法，可讓您判斷目前的資料列的索引，並指出應該取消作業。</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> 若要停止取消作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowCancelingEdit event to display a cancellation message when the user cancels the update operation of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowCancellingEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_1.aspx)]\n [!code-vb[GridViewRowCancellingEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_1.aspx)]  \n  \n The following example demonstrates how to use the RowCancelingEdit event to cancel the update operation when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_2.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;
    return:
      type: System.Web.UI.WebControls.GridViewCancelEditEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCommand
  id: RowCommand
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在按一下按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "在按一下按鈕時，會引發 RowCommand 事件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。       按鈕內<xref:System.Web.UI.WebControls.GridView>控制項也可以叫用的某些內建控制項的功能。</xref:System.Web.UI.WebControls.GridView> 若要執行這些作業之一，設定`CommandName`下表中的值的其中一個按鈕的屬性。      |`CommandName`值 |描述 |  |-------------------------|-----------------|  |&quot;取消&quot;|取消編輯作業，並傳回<xref:System.Web.UI.WebControls.GridView>唯讀模式的控制項。</xref:System.Web.UI.WebControls.GridView> 引發<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件。 |  |&quot;刪除&quot;|刪除現有的記錄。</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 引發<xref:System.Web.UI.WebControls.GridView.RowDeleting>和事件<xref:System.Web.UI.WebControls.GridView.RowDeleted>。 |  |&quot;編輯&quot;|目前的記錄置於編輯模式。</xref:System.Web.UI.WebControls.GridView.RowDeleted> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 引發事件<xref:System.Web.UI.WebControls.GridView.RowEditing>。 |  |&quot;頁面&quot;|執行分頁作業。</xref:System.Web.UI.WebControls.GridView.RowEditing> 設定`CommandArgument`&quot;First&quot;，&quot;持續 」 按鈕、 下一步 」、 「 Prev&quot;，或執行頁碼，以指定的分頁作業類型的屬性。 引發<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>和<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。 |  |&quot;選取&quot;|選取目前的記錄。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 引發<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>和<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。 |  |&quot;排序&quot;|排序<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 引發<xref:System.Web.UI.WebControls.GridView.Sorting>和<xref:System.Web.UI.WebControls.GridView.Sorted>事件。 |  |&quot;更新&quot;|更新資料來源中目前的記錄。</xref:System.Web.UI.WebControls.GridView.Sorted> </xref:System.Web.UI.WebControls.GridView.Sorting> 引發<xref:System.Web.UI.WebControls.GridView.RowUpdating>和<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件。 |      雖然 RowCommand 事件引發時按下上表中列出的按鈕時，建議您使用作業的資料表中列出的事件。</xref:System.Web.UI.WebControls.GridView.RowUpdated> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       A<xref:System.Web.UI.WebControls.GridViewCommandEventArgs>物件傳遞至事件處理方法，可讓您判斷命令名稱並按之按鈕的命令引數。</xref:System.Web.UI.WebControls.GridViewCommandEventArgs>      > [!NOTE] > 以判斷引發該事件的資料列的索引，使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>屬性傳遞給事件的事件引數。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> <xref:System.Web.UI.WebControls.ButtonField>類別會自動填入<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有適當的索引值的屬性。</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.ButtonField> 其他的命令按鈕，您必須手動設定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>命令按鈕的屬性。</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 例如，您可以設定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>至`<%# Container.DataItemIndex %>`時<xref:System.Web.UI.WebControls.GridView>控制項有沒有分頁已啟用。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowCommand event to add the name of a customer from a <xref:System.Web.UI.WebControls.GridView> control to a <xref:System.Web.UI.WebControls.ListBox> control when a row's Add button is clicked.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following example demonstrates how to use the RowCommand event to update the price of a product when a row's button is clicked. This example has the paging functionality enabled for the <xref:System.Web.UI.WebControls.GridView> control and sets the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.Button> control to the appropriate row index.  \n  \n [!code-cs[GridViewRowCommmand#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_2.aspx)]\n [!code-vb[GridViewRowCommmand#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;
    return:
      type: System.Web.UI.WebControls.GridViewCommandEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCreated
  id: RowCreated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立一個資料列中時，就會發生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈現控制項，<xref:System.Web.UI.WebControls.GridViewRow>必須建立在控制項中的每個資料列的物件。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> RowCreated 引發此事件是當每個資料列中<xref:System.Web.UI.WebControls.GridView>建立控制項。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如加入到資料列的自訂內容時就會發生此事件的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>物件傳遞至事件處理方法，可讓您存取正在建立的資料列的屬性。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 若要存取特定的儲存格的資料列中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>屬性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>物件。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 您可以判斷哪一個資料列型別 （標頭資料列、 資料列，等等） 建立使用<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>屬性。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowCreated event to store the index of the row being created in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control contained in the row. This enables you to determine the index of the row that contains the <xref:System.Web.UI.WebControls.LinkButton> control when the user clicked the button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_98_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_98_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  id: RowDataBound
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "資料列中的資料繫結時，就會發生<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "之前<xref:System.Web.UI.WebControls.GridView>可以呈現控制項，控制項中的每個資料列必須繫結至資料來源中的記錄。</xref:System.Web.UI.WebControls.GridView> RowDataBound 時，引發事件的資料列 (由<xref:System.Web.UI.WebControls.GridViewRow>物件) 中的資料繫結<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> 這可讓您提供事件處理方法，執行自訂的常式，例如修改繫結的資料列，此事件發生時的值。       A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>物件傳遞至事件處理方法，可讓您存取所要繫結的資料列的屬性。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 若要存取特定的儲存格的資料列中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>屬性<xref:System.Web.UI.WebControls.GridViewRow>中所含物件<xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A>屬性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>物件。</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 您可以判斷哪一個資料列型別 （標頭資料列、 資料列，等等） 使用繫結<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>屬性。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowDataBound event to modify the value of a field in the data source before it is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[GridViewRowDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  id: RowDeleted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [刪除] 按鈕，但之後<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項刪除資料列。"
  remarks: "RowDeleted 引發資料列的 [刪除] 按鈕按一下時，但之後<xref:System.Web.UI.WebControls.GridView>控制項刪除資料列。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，如檢查刪除作業的結果，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的資料列和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>屬性<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>物件。</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> </xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowDeleted event to check the result of the delete operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-cs[GridViewRowDeleted#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_152_1.aspx)]\n [!code-vb[GridViewRowDeleted#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_152_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;
    return:
      type: System.Web.UI.WebControls.GridViewDeletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  id: RowDeleting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [刪除] 按鈕前, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項刪除資料列。"
  remarks: "RowDeleting 引發資料列的 [刪除] 按鈕按一下時前,<xref:System.Web.UI.WebControls.GridView>控制項刪除資料列。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消刪除作業時就會發生此事件的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>物件傳遞給事件處理方法，後者則可讓您判斷目前的資料列的索引，並指出應該取消刪除作業。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 若要取消刪除作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以使用操作<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A>集合，如有必要之前的值會傳遞至資料來源,。</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowDeleting event to cancel the delete operation. The page contains a <xref:System.Web.UI.WebControls.GridView> control that displays a list of customer names and addresses from the AdventureWorksLT database. When the user clicks the **Delete** link for a row, the handler for the RowDeleting event checks the last name of the person displayed in the row that the user is trying to delete. If the last name is \"Beaver\", the delete operation is canceled, and an error message is displayed. For any other name, the delete operation proceeds and the row is deleted.  \n  \n The event handler uses the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to find the row that the user is trying to delete. The example examines the contents of the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection. If the value you want to compare to is a key value, you could examine the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection instead.  \n  \n Rows are deleted from the CustomerAddress table instead of the Customer table in order to keep the example simple. The <xref:System.Web.UI.WebControls.GridView> control shows the result of joining three tables: Customer, Address, and CustomerAddress. When a CustomerAddress row is deleted, the corresponding <xref:System.Web.UI.WebControls.GridView> row disappears. Referential integrity constraints would make the code for an example that actually deletes rows from the Customer table more complex.  \n  \n For information about how to set up the AdventureWorksLT database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewRowDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_24_1.aspx)]\n [!code-cs[GridViewRowDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_24_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;
    return:
      type: System.Web.UI.WebControls.GridViewDeleteEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowEditing
  id: RowEditing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [編輯] 按鈕前, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項進入編輯模式。"
  remarks: "資料列的 [編輯] 按鈕按一下時前, 引發 RowEditing 事件<xref:System.Web.UI.WebControls.GridView>控制項進入編輯模式。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消編輯作業時就會發生此事件的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewEditEventArgs>物件傳遞給事件處理方法，後者則可讓您判斷目前的資料列的索引，並指出應該取消編輯作業。</xref:System.Web.UI.WebControls.GridViewEditEventArgs> 若要取消的編輯作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowEditing event to put a row in edit mode when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_1.aspx)]  \n  \n The following example demonstrates how to use the RowEditing event to cancel the editing operation if the user attempts to edit the record for a company in the United States.  \n  \n [!code-vb[GridViewRowEditing#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_2.aspx)]\n [!code-cs[GridViewRowEditing#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;
    return:
      type: System.Web.UI.WebControls.GridViewEditEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  id: RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要做為資料行標頭的資料行名稱<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "在 HTML 中，可以與一個資料列或資料行相關聯的資料表標頭。 設定來指定方向`scope`屬性`<th>`項目。 <xref:System.Web.UI.WebControls.GridView>控制項具有內建的標頭資料列，可以藉由設定顯示<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>屬性`true`。</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView> 您也可以選擇指定的標頭資料行 (通常是第一個或最後一個資料行中的<xref:System.Web.UI.WebControls.GridView>控制項) 藉由設定這個屬性。</xref:System.Web.UI.WebControls.GridView> 當設定這個屬性時，對應至指定的欄位名稱的資料行中的所有資料格會轉譯為`<th scope=&quot;row&quot;>`項目。      > [!NOTE] > 指定之資料行就會被視為標頭，雖然<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>， <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>，和<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>屬性不會套用至標頭資料行。</xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>       預設呈現`<th>`保留項目，以水平方式轉譯為粗體和置中的文字。 開發人員可以覆寫行為`<th>`項目使用階層式樣式表。      > [!NOTE] > 這個屬性只適用於繫結的欄位。 它不適用於範本欄位。"
  example:
  - "The following example demonstrates how to use the RowHeaderColumn property to display a header column in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowHeaderColumn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_213_1.aspx)]\n [!code-cs[GridViewRowHeaderColumn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_213_1.aspx)]"
  syntax:
    content: public virtual string RowHeaderColumn { get; set; }
    return:
      type: System.String
      description: "要做為資料行標頭的資料行名稱。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>表示中的資料列物件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "資料列數屬性 （集合） 用來儲存中的資料列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView>控制項自動填入資料列集合，藉由建立<xref:System.Web.UI.WebControls.GridViewRow>物件資料來源中的每一筆記錄，然後將每個物件加入至集合。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> 這個屬性通常用於存取控制項中的特定資料列或逐一查看整個資料列的集合。      > [!NOTE] > 只有當資料列具有其<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>屬性設定為`DataControlRowType.DataRow`會儲存在資料列集合。</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> <xref:System.Web.UI.WebControls.GridViewRow>代表頁首、 頁尾和頁面巡覽區的資料列的物件不包含在集合中。</xref:System.Web.UI.WebControls.GridViewRow>"
  example:
  - "The following example demonstrates how to use the Rows collection to access the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. After a row is updated, a message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_233_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_233_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowCollection&quot;> </xref>包含中的所有資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 RowStyle 屬性來控制中的資料列的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 當<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>屬性也設定時，資料列會顯示交替 RowStyle 設定和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定。</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `RowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<RowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the RowStyle property to declaratively define the style for the item rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_996_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_996_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的資料列的樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  id: RowUpdated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [更新] 按鈕，但之後<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項更新資料列。"
  remarks: "按一下的資料列的 [更新] 按鈕，但之後引發 RowUpdated 事件<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如檢查更新作業的結果，此事件發生時的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的資料列和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>屬性<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>物件。</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowUpdated event to check the result of the update operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-vb[GridViewRowUpdated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_146_1.aspx)]\n [!code-cs[GridViewRowUpdated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;
    return:
      type: System.Web.UI.WebControls.GridViewUpdatedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  id: RowUpdating
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [更新] 按鈕前, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項更新資料列。"
  remarks: "資料列的 [更新] 按鈕按一下時前, 引發 RowUpdating 事件<xref:System.Web.UI.WebControls.GridView>控制項更新資料列。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消更新作業時就會發生此事件的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>物件傳遞至事件處理方法，可讓您決定目前的資料列的索引，並指出應該取消更新作業。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 若要取消更新作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以使用操作<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>， <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>，和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>集合，如有必要之前的值會傳遞至資料來源,。</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A> 使用這些集合的常見方式是將 HTML 編碼再將它們儲存在資料來源中，使用者所提供的值。 這有助於防止指令碼資料隱碼攻擊。      > [!NOTE] > <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>，<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>集合會自動填入時才<xref:System.Web.UI.WebControls.GridView>控制項透過繫結至資料<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>屬性。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the RowUpdating event to update the values in the data source object when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;
    return:
      type: System.Web.UI.WebControls.GridViewUpdateEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項需要保存，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "這個方法用來儲存中的屬性狀態<xref:System.Web.UI.WebControls.GridView>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "傳回伺服器控制項目前檢視狀態。 如果沒有與控制項關聯的檢視狀態，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;包含控制項的已儲存的檢視狀態值。"
  overload: System.Web.UI.WebControls.GridView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  id: SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>物件，其中包含選取之資料列中的資料值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>設定屬性，則<xref:System.Web.UI.WebControls.GridView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>控制項使用的值或指定的欄位或欄位的值中的每個資料列的物件。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>物件接著會加入至控制項的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 一般來說，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>屬性用來擷取<xref:System.Web.UI.WebControls.DataKey>特定資料列中的物件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 不過，如果您只需要擷取<xref:System.Web.UI.WebControls.DataKey>物件目前所選取的資料列，您可以只使用 SelectedDataKey 屬性當做捷徑。</xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 這等同於擷取<xref:System.Web.UI.WebControls.DataKey>所指定索引處物件<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性從<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.DataKey> 您也可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>直接擷取目前選取的資料列的資料值的屬性。</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>       如果您要建立<xref:System.Web.UI.WebControls.ControlParameter>物件，並想要存取的第一個欄位以外的索引鍵欄位，使用中的索引的 SelectedDataKey 屬性<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>屬性<xref:System.Web.UI.WebControls.ControlParameter>物件。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter> 範例如下所示。"
  example:
  - "The following example demonstrates how to use the SelectedDataKey property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[GridViewSelectedDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_1.aspx)]  \n  \n The following example demonstrates how to use the second key field as a parameter in a master/detail scenario. A <xref:System.Web.UI.WebControls.GridView> control is used to display records from the Order Details table of the Northwind database. When a record is selected in the <xref:System.Web.UI.WebControls.GridView> control, the details of the product from the Products table are displayed in a <xref:System.Web.UI.WebControls.DetailsView> control. ProductID is the second key name in the <xref:System.Web.UI.WebControls.GridView> control. To access the second key, the value of GridView1.SelectedDataKey[1] is used as the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> for the <xref:System.Web.UI.WebControls.ControlParameter> object of the <xref:System.Web.UI.WebControls.SqlDataSource> control of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_2.aspx)]\n [!code-vb[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>中選取的資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示目前未選取任何資料列。"
  overload: System.Web.UI.WebControls.GridView.SelectedDataKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有資料的金鑰指定於<xref:System.Web.UI.WebControls.GridView.DataKeyNames*>屬性。</xref:System.Web.UI.WebControls.GridView.DataKeyNames*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定選取的資料列中的索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 SelectedIndex 屬性來判斷目前選取的資料列中的索引<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 您也可以使用這個屬性，以程式設計方式在控制項中選取一個資料列。 若要清除選取的資料列，請將這個屬性設為-1。 可以使用自訂目前選取的資料列的外觀<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 若要存取目前選取的資料列，請使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>"
  example:
  - "The following example demonstrates how to use the SelectedIndex property to select the second row in a <xref:System.Web.UI.WebControls.GridView> control when the control is initially displayed.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_806_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_806_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "所選取的資料列中以零為起始的索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 預設值為-1，表示目前未選取任何資料列。"
  overload: System.Web.UI.WebControls.GridView.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "SelectedIndex 屬性設定為小於-1 的值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [選取] 按鈕，但之後<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項處理選取的作業。"
  remarks: "SelectedIndexChanged 事件引發時的資料列選取按一下按鈕時，但之後<xref:System.Web.UI.WebControls.GridView>控制處理選取的作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如目前選取的資料列，更新狀態標籤時就會發生此事件的事件處理方法。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the SelectedIndexChanged event to display the name of the customer in the selected row of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  id: SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按一下的資料列的 [選取] 按鈕前, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制處理選取的作業。"
  remarks: "SelectedIndexChanging 事件引發時的資料列選取按一下按鈕時前,<xref:System.Web.UI.WebControls.GridView>控制處理選取的作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消選取作業時就會發生此事件的事件處理方法。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       A<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>物件傳遞給事件處理方法，後者則可讓您判斷使用者所選取的資料列的索引，並指出應該取消選取作業。</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> 若要取消選取作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the SelectedIndexChanging event to cancel a select operation.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewSelectEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  id: SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定持續性選取的項目中的資料金鑰值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "資料索引鍵在持續性的選取項目的<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示目前已選取任何項目。"
  overload: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  id: SelectedRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>物件，表示控制項中選取的資料列。"
  remarks: "中選取一個資料列時<xref:System.Web.UI.WebControls.GridView>控制，請使用 SelectedRow 屬性擷取<xref:System.Web.UI.WebControls.GridViewRow>物件，表示該資料列。</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 這等同於擷取<xref:System.Web.UI.WebControls.GridViewRow>所指定索引處物件<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>屬性從<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合。</xref:System.Web.UI.WebControls.GridView.Rows%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.GridViewRow>       此物件可用來存取所選的資料列的屬性。"
  example:
  - "The following example demonstrates how to use the SelectedRow property to access the properties of the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_482_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_482_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示控制項中選取的資料列。"
  overload: System.Web.UI.WebControls.GridView.SelectedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  id: SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定選取的資料列中的外觀<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 SelectedRowStyle 屬性來控制在選取的資料列的外觀<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以設定的屬性，以宣告方式使用下列方法之一:-將屬性放在開頭標記<xref:System.Web.UI.WebControls.GridView>控制項在表單中的`Property-Subproperty`，其中`Subproperty`是屬性的<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `SelectedRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -巢狀`<SelectedRowStyle>`開頭和結尾標記之間的項目<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `SelectedRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following example demonstrates how to use the SelectedRowStyle property to define a custom style for the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_603_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_603_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中所選取的資料列樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得選取的資料列中的資料值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性設為以逗號分隔清單的欄位名稱代表資料來源的主索引鍵<xref:System.Web.UI.WebControls.GridView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>控制項使用的值或指定的欄位或欄位的值中的每個資料列的物件。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>物件接著會加入至控制項的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 一般來說，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>屬性用來擷取<xref:System.Web.UI.WebControls.DataKey>特定資料列中的物件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 不過，如果您只需要擷取<xref:System.Web.UI.WebControls.DataKey>物件的目前選取的資料列，您可以直接使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>屬性當做捷徑。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 進一步的捷徑，您可以直接使用 SelectedValue 屬性判斷選取的資料列的第一個索引鍵欄位的資料值。       如果您要建立<xref:System.Web.UI.WebControls.ControlParameter>物件，並想要存取的索引鍵欄位以外的第一個欄位，使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>屬性。</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.ControlParameter> 如需範例，請參閱<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>.</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_553_1.aspx)]\n [!code-vb[GridViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_553_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "資料索引鍵所選取的資料列中的值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  id: SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選取要編輯的資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "這個方法會引發<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>"
  syntax:
    content: public void SelectRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "若要編輯的資料列索引。"
  overload: System.Web.UI.WebControls.GridView.SelectRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  id: SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "置於編輯模式中的資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項，您可以使用指定的資料列索引。"
  remarks: "這個方法會引發<xref:System.Web.UI.WebControls.GridView.RowEditing>事件。</xref:System.Web.UI.WebControls.GridView.RowEditing>"
  syntax:
    content: public void SetEditRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "若要編輯的資料列索引。"
  overload: System.Web.UI.WebControls.GridView.SetEditRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "設定的頁面索引<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項使用的資料列索引。"
  remarks: "這個方法會引發<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.GridView.PageIndexChanged>"
  syntax:
    content: public void SetPageIndex (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "頁面，即可編輯資料列索引。"
  overload: System.Web.UI.WebControls.GridView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否顯示頁尾資料列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 ShowFooter 屬性來指定是否<xref:System.Web.UI.WebControls.GridView>控制項會顯示頁尾資料列。</xref:System.Web.UI.WebControls.GridView> 若要控制頁尾資料列的外觀，使用<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowFooter property to display the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1216_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1216_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示頁尾資料列。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出標頭資料列會顯示在<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "使用 ShowHeader 屬性來指定是否<xref:System.Web.UI.WebControls.GridView>控制項顯示的標頭資料列。</xref:System.Web.UI.WebControls.GridView> 若要控制標頭資料列的外觀，使用<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>屬性。</xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowHeader property to display the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_292_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_292_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示的標頭資料列。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  id: ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否在資料行標題<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項為可見的資料行沒有資料時。"
  syntax:
    content: public virtual bool ShowHeaderWhenEmpty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>標頭是否可見的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  id: Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "排序<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制會根據指定的排序運算式和方向。"
  remarks: "使用排序方法，以程式設計的方式排序<xref:System.Web.UI.WebControls.GridView>控制使用指定的排序運算式和方向。</xref:System.Web.UI.WebControls.GridView> 排序運算式會指定用來排序的資料行。 若要排序多個資料行，建立包含以逗號分隔的欄位名稱清單的排序運算式。 排序方向會指出是否執行排序以遞增或遞減的順序。 這個方法通常使用於您需要排序<xref:System.Web.UI.WebControls.GridView>控制項從受控制，例如從不同的控制項在頁面上。</xref:System.Web.UI.WebControls.GridView> 這個方法也通常用來以程式設計方式設定的預設排序次序<xref:System.Web.UI.WebControls.GridView>控制第一次呈現時。</xref:System.Web.UI.WebControls.GridView> 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.GridView.Sorted>和<xref:System.Web.UI.WebControls.GridView.Sorting>事件。</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.GridView.Sorted>"
  example:
  - "The following example demonstrates how to use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control by multiple columns.  \n  \n [!code-cs[GridViewSort#1](~/add/codesnippet/csharp/73688195-5df0-44a7-842d-_1.aspx)]\n [!code-vb[GridViewSort#1](~/add/codesnippet/visualbasic/73688195-5df0-44a7-842d-_1.aspx)]"
  syntax:
    content: public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);
    parameters:
    - id: sortExpression
      type: System.String
      description: "用來排序的排序運算式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
    - id: sortDirection
      type: System.Web.UI.WebControls.SortDirection
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;></xref>值。"
  overload: System.Web.UI.WebControls.GridView.Sort*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項所繫結至資料來源控制項，但<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>相關聯的資料來源是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortDirection
  id: SortDirection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得要排序的資料行的排序方向。"
  remarks: "使用 SortDirection 屬性來判斷是否要排序的資料行以遞增或遞減順序排序。      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView>控制項具有內建的排序功能會自動設定這個屬性。</xref:System.Web.UI.WebControls.GridView> 這個屬性通常是您以程式設計方式判斷排序方向，或當您要加入至您自己自訂的排序功能需要時才<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the SortDirection property to programmatically determine the sort direction of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_871_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_871_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_SortDirection.Ascending&quot; name=&quot;SortDirection.Ascending&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorted
  id: Sorted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按的超連結以排序資料行，但之後<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項負責排序作業。"
  remarks: "排序事件時按的超連結以排序資料行，但之後引發<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供此事件發生時執行自訂的常式，如自訂排序的事件處理方法。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the Sorted event to display the name of the column being sorted.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_149_1.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public event EventHandler Sorted;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  id: SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定 CSS 樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>時資料行以遞增順序排序資料行。"
  remarks: "當這個屬性設定為`true`，當資料以遞增順序排序樣式套用至資料行中的資料格。 比方說，資料行可以是以反白顯示為特定色彩時以遞增順序排序類型。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果樣式套用至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制當資料行是以遞增順序排序，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  id: SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要套用至 CSS 樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>資料行標題資料行以遞增順序排序時。"
  remarks: "當這個屬性設定為`true`，表示排序方向的箭頭會顯示在資料行標題中。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果樣式套用至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>標題資料行是以遞增順序排序，否則當<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  id: SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>時資料行以遞減順序排序資料行。"
  remarks: "當這個屬性設定為`true`，當資料以遞減順序排序樣式套用至資料行中的資料格。 比方說，資料行可以是以反白顯示為特定色彩會遞減排序類型時。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果樣式套用至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>當資料行以遞減順序排序，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  id: SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要套用至樣式<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>資料行標題資料行以遞減順序排序時。"
  remarks: "當這個屬性設定為`true`，表示排序方向的箭頭會顯示在資料行標題中。"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果樣式套用至<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>標題資料行是以遞減順序排序，否則當<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortExpression
  id: SortExpression
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得相關聯的資料行或排序的資料行的排序運算式。"
  remarks: "若要判斷相關聯的資料行或排序的資料行的排序運算式使用 SortExpression 屬性。      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView>控制項具有內建的排序功能會自動設定這個屬性。</xref:System.Web.UI.WebControls.GridView> 這個屬性通常是只有當您需要以程式設計方式判斷會排序資料行的資料行時，或當您要加入您自己自訂的排序功能來<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>       多個資料行排序時，此屬性會包含以逗號分隔清單的排序所依據的欄位。"
  example:
  - "The following example demonstrates how to use the SortExpression property to determine the name of the column being sorted.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_14_1.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_14_1.aspx)]"
  syntax:
    content: public virtual string SortExpression { get; }
    return:
      type: System.String
      description: "相關聯的資料行或排序的資料行的排序運算式。"
  overload: System.Web.UI.WebControls.GridView.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorting
  id: Sorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於按的超連結以排序資料行，但之前<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項負責排序作業。"
  remarks: "按一下的超連結以排序資料行，但之前引發的排序事件<xref:System.Web.UI.WebControls.GridView>控制項負責排序作業。</xref:System.Web.UI.WebControls.GridView> 這可讓您提供執行自訂的常式，例如取消排序作業時就會發生此事件的事件處理方法。       A<xref:System.Web.UI.WebControls.GridViewSortEventArgs>物件傳遞至事件處理方法，可讓您決定資料行的排序運算式，並指出應該取消選取作業。</xref:System.Web.UI.WebControls.GridViewSortEventArgs> 若要取消選取作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.GridViewSortEventArgs>物件`true`。</xref:System.Web.UI.WebControls.GridViewSortEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需如何以程式設計方式起始排序作業的資訊，請參閱<xref:System.Web.UI.WebControls.GridView.Sort%2A>方法。</xref:System.Web.UI.WebControls.GridView.Sort%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following example demonstrates how to use the Sorting event to perform the sorting functionality when the <xref:System.Web.UI.WebControls.GridView> control is bound to a <xref:System.Data.DataTable> object by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically.  \n  \n [!code-cs[GridViewSorting#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_1.aspx)]\n [!code-vb[GridViewSorting#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_1.aspx)]  \n  \n The following example demonstrates how to use the Sorting event to cancel a sorting operation.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_2.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;
    return:
      type: System.Web.UI.WebControls.GridViewSortEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "傳回回呼事件以控制項為目標的結果。"
  remarks: "<xref:System.Web.UI.WebControls.GridView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以非同步方式擷取資料和<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>方法來擷取的資料傳回至控制項。</xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回呼的結果。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "ICallbackEventHandler.RaiseCallbackEvent 是 helper 方法，以供<xref:System.Web.UI.WebControls.GridView>控制項來建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "要傳遞至事件處理常式的引數。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  id: System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生的資料值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.IDataKeysControl>介面。</xref:System.Web.UI.IDataKeysControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生的資料值<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發的適當事件<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制當回傳至伺服器。"
  remarks: "頁面呼叫<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法時引發的適當事件就會發生回傳事件<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 這個呼叫發生在頁面生命週期中載入和變更的通知完成後，但尚未發生之前。 已經實作這個方法，以建立<xref:System.Web.UI.WebControls.CommandEventArgs>物件所引發之事件的事件。</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數，用來建立<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或事件所引發。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立回呼指令碼會執行排序作業的按鈕。"
  remarks: "ICallbackContainer.GetCallbackScript 是 helper 方法，以供<xref:System.Web.UI.WebControls.GridView>控制項來建立執行排序作業的按鈕的回呼指令碼。</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "按鈕控制項，以便用來建立回呼指令碼。"
    - id: argument
      type: System.String
      description: "要傳遞至回呼指令碼的引數。"
    return:
      type: System.String
      description: "回呼指令碼會執行排序作業的按鈕。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定主索引鍵欄位的資料繫結控制項中顯示的項目名稱。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       此屬性可存取<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>屬性<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 透過公開<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含的項目，會顯示在主索引鍵欄位的名稱<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定資料來源控制項繫結至資料繫結控制項所公開的資料表。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       如果資料來源包含多個資料來源，使用這個屬性來設定特定的資料表、 集合或其他資料，以繫結至控制項。 例如，如果資料來源是<xref:System.Data.DataSet>執行個體，其中包含多個資料表，您可以指定要將控制項繫結使用此屬性的資料表。</xref:System.Data.DataSet>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "資料來源控制項繫結至資料繫結控制項所公開的資料表。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定由此資料繫結控制項擷取項目清單的資料來源物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "資料繫結控制項使用資料來源物件。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定從中資料繫結控制項擷取項目清單的資料來源的識別碼。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "資料繫結控制項在其從中擷取資料的項目之資料來源的識別碼。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定由此資料繫結控制項擷取項目清單的資料來源物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "資料繫結控制項在其從中擷取資料的項目清單的資料來源物件"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  id: System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定其值會附加至資料欄位的名稱<xref:System.Web.UI.Control.ClientID*>來唯一識別每個執行個體的資料繫結控制項的屬性值。</xref:System.Web.UI.Control.ClientID*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundListControl>介面。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "資料欄位的值會用來唯一識別每個執行個體的資料繫結控制項，當 ASP.NET 產生名稱<xref:System.Web.UI.Control.ClientID*>值。</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  id: System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得代表物件的集合<xref:System.Web.UI.WebControls.GridView.DataKeys*>資料繫結控制項中的值。</xref:System.Web.UI.WebControls.GridView.DataKeys*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundListControl>介面。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "陣列，其中包含資料繫結控制項中的每個資料列的資料索引鍵。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  id: System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出選取的資料列根據索引或資料索引鍵的值。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundListControl>介面。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料列選取範圍根據資料索引鍵的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得包含在資料繫結控制項中選取的資料列的資料值的物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundListControl>介面。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "選取的資料列的資料金鑰值。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定資料繫結控制項中選取的資料列的索引。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundListControl>介面。</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "資料繫結控制項中選取的資料列索引。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定控制項的自動產生資料繫結控制項的 ASP.NET Dynamic Data 所使用的資料行。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.GridView>執行個體轉換成<xref:System.Web.UI.WebControls.IFieldControl>介面。</xref:System.Web.UI.WebControls.IFieldControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET 動態資料支援這個屬性。"
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "控制項可自動產生資料繫結控制項的資料行。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  id: System#Web#UI#WebControls#IPersistedSelector#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;。"
  remarks: "您可以指定如何選取的資料列何時會保存<xref:System.Web.UI.WebControls.GridView>控制項處於分頁模式。</xref:System.Web.UI.WebControls.GridView> 根據預設，資料列選取範圍以資料列索引。 每個頁面上選取相同的資料列 （例如，第三個資料列）。 或者，您可以啟用選取的資料列的資料索引鍵為基礎的持續性。 在此情況下，如果您選取第 1 頁上的資料列 3，而且您移動到第 2 頁，會不選取任何資料列在第 2 頁。 如果您移回至頁面 1，3 的資料列已選取。 若要啟用這項功能，請將此屬性設定為`true`。      > [!NOTE] > 2.0、 3.0 和 3.5 版的 ASP.NET，在資料列選取項目只根據資料列索引。 根據預設，ASP.NET 4 中的資料列選取範圍根據回溯相容性的索引。"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "保存的資料金鑰值的資料繫結控制項中選取記錄。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref>物件，表示指定的按鈕控制項的回傳的行為。"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "按鈕控制項，以便用來建立回呼指令碼。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>表示指定的按鈕控制項的回傳的行為。"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buttonControl </code>參數包含<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>會驗證並回傳至相同的容器，它會驗證嘗試。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "TagKey 屬性可讓寫入適當的 HTML 標記的輸出資料流<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> 當<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>屬性設定為`true`，這個屬性會傳回`HtmlTextWriterTag.Div`; 否則這個屬性會傳回`HtmlTextWriterTag.Table`。</xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>值<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.GridView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;></xref>物件，代表在最上層頁面巡覽列<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (藉由設定<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 頁面巡覽區列包含控制項，讓使用者巡覽至其他頁面，並可以顯示在頂端、 底端，或最上層及控制項的底部。 使用 TopPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.GridViewRow>物件，代表在最上層頁面巡覽列<xref:System.Web.UI.WebControls.GridView>控制項。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > TopPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.GridView>控制項建立的最上層頁面巡覽區列<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       這個屬性通常用於您需要以程式設計方式操作最上層頁面巡覽列，例如當加入自訂內容。 後必須執行 TopPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.GridView>控制項已呈現，否則<xref:System.Web.UI.WebControls.GridView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the top pager row in a <xref:System.Web.UI.WebControls.GridView> control. The TopPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_315_1.aspx)]\n [!code-cs[GridViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_315_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref>表示控制項中的最上層頁面巡覽區資料列。"
  overload: System.Web.UI.WebControls.GridView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "會追蹤檢視狀態變更<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制以便可在控制項的儲存<xref href=&quot;System.Web.UI.StateBag&quot;></xref>物件。 這個物件是透過可存取&lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;屬性。"
  remarks: "這個方法會覆寫來標示的起點開始追蹤並儲存變更至控制項的控制項檢視狀態的一部分。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要呼叫才能更新資料的方法名稱。"
  remarks: "設定這個屬性會導致模型繫結來做為資料繫結方法。       在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "方法的名稱。"
  overload: System.Web.UI.WebControls.GridView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  id: UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新位於使用資料列的欄位值的指定資料列索引的記錄。"
  remarks: "您可以使用 UpdateRow 方法來以程式設計方式更新資料來源中指定索引處的記錄。 這個方法通常使用於您要更新的記錄從外部<xref:System.Web.UI.WebControls.GridView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 可以呼叫這個方法，僅針對目前處於編輯模式下，資料列或資料列，其中包含雙向資料繫結的輸入的控制項。 如需雙向繫結運算式的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。       若要指定是否要將頁面驗證執行更新作業之前，請使用`causesValidation`參數。 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.GridView.RowUpdated>和<xref:System.Web.UI.WebControls.GridView.RowUpdating>事件。</xref:System.Web.UI.WebControls.GridView.RowUpdating> </xref:System.Web.UI.WebControls.GridView.RowUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateRow method to programmatically update a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewUpdateRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[GridViewUpdateRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_0_1.aspx)]"
  syntax:
    content: public virtual void UpdateRow (int rowIndex, bool causesValidation);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "要更新的資料列索引。"
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>當呼叫這個方法是; 執行頁面驗證否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.UpdateRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項所繫結至資料來源控制項，但<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>相關聯的資料來源是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  id: UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項呈現其標頭中存取的格式。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 UseAccessibleHeader 屬性來指定是否<xref:System.Web.UI.WebControls.GridView>控制項呈現其標頭中的資料列存取的格式。</xref:System.Web.UI.WebControls.GridView> 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。 根據預設，這個屬性的值是`true`使用轉譯控制項標頭和`<th>`資料表標頭資料格標記。 此外，`scope=&quot;col&quot;`屬性加入至資料表標頭，指定資料行中的所有資料格套用標頭。 預設呈現`<th>`保留項目，以水平方式轉譯為粗體和置中的文字。 開發人員可以覆寫的樣式`<th>`項目使用階層式樣式表。       如果這個屬性的值為`false`，使用轉譯控制項標頭`<td>`資料表儲存格標籤。"
  example:
  - "The following example demonstrates how to use the UseAccessibleHeader property to disable the accessible header.  \n  \n [!code-vb[GridViewUseAccessibleHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1058_1.aspx)]\n [!code-cs[GridViewUseAccessibleHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1058_1.aspx)]"
  syntax:
    content: public virtual bool UseAccessibleHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項呈現的可存取的格式，其標頭否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  id: VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定項目的虛擬數目的資料來源中<xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>控制項所繫結來使用自訂分頁時。"
  remarks: "使用這個屬性時，才值<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>屬性是`true`。</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>屬性。</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>"
  syntax:
    content: public virtual int VirtualItemCount { get; set; }
    return:
      type: System.Int32
      description: "虛擬的項目在資料來源數目， <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>控制項所繫結來使用自訂分頁時。"
  overload: System.Web.UI.WebControls.GridView.VirtualItemCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.GridView.#ctor
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRow
  nameWithType: GridViewRow
  fullName: System.Web.UI.WebControls.GridViewRow
- uid: System.Web.UI.WebControls.GridView.Caption
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.DataKeyArray
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKeyArray
  nameWithType: DataKeyArray
  fullName: System.Web.UI.WebControls.DataKeyArray
- uid: System.Web.UI.WebControls.GridView.Columns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.GridView.DataBind
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
- uid: System.Web.UI.WebControls.GridView.EditIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.GridView.FooterRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.GridView.GridLines
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
- uid: System.Web.UI.WebControls.GridViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventArgs
  nameWithType: GridViewPageEventArgs
  fullName: System.Web.UI.WebControls.GridViewPageEventArgs
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewCancelEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventArgs
  nameWithType: GridViewCancelEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
- uid: System.Web.UI.WebControls.GridViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventArgs
  nameWithType: GridViewCommandEventArgs
  fullName: System.Web.UI.WebControls.GridViewCommandEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridViewRowEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventArgs
  nameWithType: GridViewRowEventArgs
  fullName: System.Web.UI.WebControls.GridViewRowEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventArgs
  nameWithType: GridViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeletedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventArgs
  nameWithType: GridViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeleteEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventArgs
  nameWithType: GridViewEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventArgs
  nameWithType: GridViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventArgs
  nameWithType: GridViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdateEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
- uid: System.Web.UI.WebControls.GridViewSelectEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventArgs
  nameWithType: GridViewSelectEventArgs
  fullName: System.Web.UI.WebControls.GridViewSelectEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
- uid: System.Web.UI.WebControls.GridViewSortEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventArgs
  nameWithType: GridViewSortEventArgs
  fullName: System.Web.UI.WebControls.GridViewSortEventArgs
- uid: System.Web.UI.WebControls.GridView.PageCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
- uid: System.Web.UI.WebControls.GridViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventHandler
  nameWithType: GridViewPageEventHandler
  fullName: System.Web.UI.WebControls.GridViewPageEventHandler
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
- uid: System.Web.UI.WebControls.GridViewCancelEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventHandler
  nameWithType: GridViewCancelEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCommand
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
- uid: System.Web.UI.WebControls.GridViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventHandler
  nameWithType: GridViewCommandEventHandler
  fullName: System.Web.UI.WebControls.GridViewCommandEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCreated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
- uid: System.Web.UI.WebControls.GridViewRowEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventHandler
  nameWithType: GridViewRowEventHandler
  fullName: System.Web.UI.WebControls.GridViewRowEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
- uid: System.Web.UI.WebControls.GridViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventHandler
  nameWithType: GridViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeletedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
- uid: System.Web.UI.WebControls.GridViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventHandler
  nameWithType: GridViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeleteEventHandler
- uid: System.Web.UI.WebControls.GridView.RowEditing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
- uid: System.Web.UI.WebControls.GridViewEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventHandler
  nameWithType: GridViewEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
- uid: System.Web.UI.WebControls.GridViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowCollection
  nameWithType: GridViewRowCollection
  fullName: System.Web.UI.WebControls.GridViewRowCollection
- uid: System.Web.UI.WebControls.GridView.RowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
- uid: System.Web.UI.WebControls.GridViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventHandler
  nameWithType: GridViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
- uid: System.Web.UI.WebControls.GridViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventHandler
  nameWithType: GridViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdateEventHandler
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
- uid: System.Web.UI.WebControls.GridViewSelectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventHandler
  nameWithType: GridViewSelectEventHandler
  fullName: System.Web.UI.WebControls.GridViewSelectEventHandler
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortDirection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.Sorted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.Sorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
- uid: System.Web.UI.WebControls.GridViewSortEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventHandler
  nameWithType: GridViewSortEventHandler
  fullName: System.Web.UI.WebControls.GridViewSortEventHandler
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
- uid: System.Web.UI.WebControls.GridView.#ctor*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView
  nameWithType: GridView.GridView
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
- uid: System.Web.UI.WebControls.GridView.AllowPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridView.Caption*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
- uid: System.Web.UI.WebControls.GridView.CellSpacing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.Columns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn
  nameWithType: GridView.CreateAutoGeneratedColumn
- uid: System.Web.UI.WebControls.GridView.CreateChildControls*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls
  nameWithType: GridView.CreateChildControls
- uid: System.Web.UI.WebControls.GridView.CreateChildTable*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable
  nameWithType: GridView.CreateChildTable
- uid: System.Web.UI.WebControls.GridView.CreateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns
  nameWithType: GridView.CreateColumns
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle
  nameWithType: GridView.CreateControlStyle
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: GridView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow
  nameWithType: GridView.CreateRow
- uid: System.Web.UI.WebControls.GridView.DataBind*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind
  nameWithType: GridView.DataBind
- uid: System.Web.UI.WebControls.GridView.DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow
  nameWithType: GridView.DeleteRow
- uid: System.Web.UI.WebControls.GridView.EditIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues
  nameWithType: GridView.ExtractRowValues
- uid: System.Web.UI.WebControls.GridView.FooterRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult
  nameWithType: GridView.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript
  nameWithType: GridView.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.GridLines*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager
  nameWithType: GridView.InitializePager
- uid: System.Web.UI.WebControls.GridView.InitializeRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow
  nameWithType: GridView.InitializeRow
- uid: System.Web.UI.WebControls.GridView.IsBindableType*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType
  nameWithType: GridView.IsBindableType
- uid: System.Web.UI.WebControls.GridView.LoadControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState
  nameWithType: GridView.LoadControlState
- uid: System.Web.UI.WebControls.GridView.LoadViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState
  nameWithType: GridView.LoadViewState
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: GridView.OnBubbleEvent
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged
  nameWithType: GridView.OnDataPropertyChanged
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: GridView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.GridView.OnInit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit
  nameWithType: GridView.OnInit
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: GridView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: GridView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: GridView.OnPagePreLoad
- uid: System.Web.UI.WebControls.GridView.OnPreRender*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender
  nameWithType: GridView.OnPreRender
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit
  nameWithType: GridView.OnRowCancelingEdit
- uid: System.Web.UI.WebControls.GridView.OnRowCommand*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand
  nameWithType: GridView.OnRowCommand
- uid: System.Web.UI.WebControls.GridView.OnRowCreated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated
  nameWithType: GridView.OnRowCreated
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound
  nameWithType: GridView.OnRowDataBound
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted
  nameWithType: GridView.OnRowDeleted
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting
  nameWithType: GridView.OnRowDeleting
- uid: System.Web.UI.WebControls.GridView.OnRowEditing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing
  nameWithType: GridView.OnRowEditing
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated
  nameWithType: GridView.OnRowUpdated
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating
  nameWithType: GridView.OnRowUpdating
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: GridView.OnSelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging
  nameWithType: GridView.OnSelectedIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnSorted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted
  nameWithType: GridView.OnSorted
- uid: System.Web.UI.WebControls.GridView.OnSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting
  nameWithType: GridView.OnSorting
- uid: System.Web.UI.WebControls.GridView.PageCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PagerSettings*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding
  nameWithType: GridView.PerformDataBinding
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: GridView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: GridView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: GridView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.Render*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render
  nameWithType: GridView.Render
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
- uid: System.Web.UI.WebControls.GridView.RowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.SaveControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState
  nameWithType: GridView.SaveControlState
- uid: System.Web.UI.WebControls.GridView.SaveViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState
  nameWithType: GridView.SaveViewState
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow
  nameWithType: GridView.SelectRow
- uid: System.Web.UI.WebControls.GridView.SetEditRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow
  nameWithType: GridView.SetEditRow
- uid: System.Web.UI.WebControls.GridView.SetPageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex
  nameWithType: GridView.SetPageIndex
- uid: System.Web.UI.WebControls.GridView.ShowFooter*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort
  nameWithType: GridView.Sort
- uid: System.Web.UI.WebControls.GridView.SortDirection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
- uid: System.Web.UI.WebControls.GridView.TopPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState
  nameWithType: GridView.TrackViewState
- uid: System.Web.UI.WebControls.GridView.UpdateMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow
  nameWithType: GridView.UpdateRow
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
