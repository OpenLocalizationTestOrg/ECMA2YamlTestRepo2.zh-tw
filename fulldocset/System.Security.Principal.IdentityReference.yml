### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.IdentityReference
  id: IdentityReference
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  summary: "代表身分識別，而是基底類別<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref>和<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>類別。 這個類別不提供公用建構函式，因此無法被繼承。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class IdentityReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "傳回值，指出指定的物件是否等於這個執行個體<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>類別。"
  syntax:
    content: public abstract bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "與這個相比較的物件<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>執行個體，則為 null 參考。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>具有相同的物件基礎類型和值，因為這樣<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>執行個體; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Principal.IdentityReference.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "做為雜湊函式<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。 GetHashCode 很適合用於雜湊演算法和資料結構，例如雜湊表。"
  syntax:
    content: public abstract int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "這個雜湊程式碼<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  overload: System.Security.Principal.IdentityReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "傳回值，指出指定的型別是否為有效轉譯型別，如<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>類別。"
  syntax:
    content: public abstract bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "要查詢的有效類型，做為從轉換<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。 下列目標類型是有效值︰<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref><xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> targetType </code>是的有效轉譯型別<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>類別; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Principal.IdentityReference.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比較兩個<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件來判斷它們是否相等。 它們會被視為相等如果它們有相同的正式名稱表示，為所傳回<xref:System.Security.Principal.IdentityReference.Value*>屬性，或如果兩者都<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "左邊<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>用於相等比較的運算元。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "右邊<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>用於相等比較的運算元。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比較兩個<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件來判斷它們是否不相等。 視為不相等如果它們有比所傳回的不同的正式名稱表示<xref:System.Security.Principal.IdentityReference.Value*>屬性或其中一個物件是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和另一個無效。</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "左邊<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>用於不相等比較的運算元。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "右邊<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>用於不相等比較的運算元。 這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "傳回所代表身分識別的字串表示<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  syntax:
    content: public abstract string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串格式中的識別。"
  overload: System.Security.Principal.IdentityReference.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "將轉譯所代表的帳戶名稱<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>成為另一個物件<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-衍生型別。"
  syntax:
    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "從轉換的目標型別<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>。"
    return:
      type: System.Security.Principal.IdentityReference
      description: "轉換的識別。"
  overload: System.Security.Principal.IdentityReference.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "取得所代表身分識別的字串值<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "識別所表示的字串值<xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>物件。"
  overload: System.Security.Principal.IdentityReference.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals
  nameWithType: IdentityReference.Equals
- uid: System.Security.Principal.IdentityReference.GetHashCode*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode
  nameWithType: IdentityReference.GetHashCode
- uid: System.Security.Principal.IdentityReference.IsValidTargetType*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType
  nameWithType: IdentityReference.IsValidTargetType
- uid: System.Security.Principal.IdentityReference.op_Equality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality
  nameWithType: IdentityReference.op_Equality
- uid: System.Security.Principal.IdentityReference.op_Inequality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality
  nameWithType: IdentityReference.op_Inequality
- uid: System.Security.Principal.IdentityReference.ToString*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString
  nameWithType: IdentityReference.ToString
- uid: System.Security.Principal.IdentityReference.Translate*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate
  nameWithType: IdentityReference.Translate
- uid: System.Security.Principal.IdentityReference.Value*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
