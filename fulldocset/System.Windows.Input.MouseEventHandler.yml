### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseEventHandler
  id: MouseEventHandler
  langs:
  - csharp
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
  type: Delegate
  summary: "表示方法將處理滑鼠相關路由事件，並不特別涉及滑鼠按鈕或滑鼠滾輪。例如， <xref href=&quot;System.Windows.UIElement.MouseMove&quot;> </xref>。"
  remarks: "這個委派會使用與下列附加的事件:- <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>-<xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>這個委派會使用與下列路由事件。</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> </xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> </xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> 這些路由的事件轉送，使其更容易存取一般項目模型中先前所列的附加的事件[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]。      - <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>- <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>-<xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>附加的事件和基底的項目路由事件共用其事件資料，而反昇和通道之路由事件的版本也共用事件資料。</xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.UIElement.MouseMove?displayProperty=fullName> </xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName> </xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName> 事件路由傳送，這可能會影響事件的處理的特性。 如需詳細資訊，請參閱[輸入概觀](~/add/includes/ajax-current-ext-md.md)。       而不是<xref:System.Windows.RoutedEventArgs>與相關的所有路由事件，最有趣的<xref:System.Windows.Input.MouseEventArgs>MouseEventHandler 實作中，您可能會使用數個的屬性會公開 （expose） 目前的按鈕狀態，例如<xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>和<xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>.</xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A></xref:System.Windows.Input.MouseEventArgs.LeftButton%2A></xref:System.Windows.Input.MouseEventArgs>屬性的屬性</xref:System.Windows.RoutedEventArgs> <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>很有用，尤其是因為您可以檢查<xref:System.Windows.Input.MouseDevice.Captured%2A>一致的情形。</xref:System.Windows.Input.MouseDevice.Captured%2A></xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>       請注意，專門處理滑鼠按鈕事件的事件會使用不同的委派， <xref:System.Windows.Input.MouseButtonEventHandler>.</xref:System.Windows.Input.MouseButtonEventHandler> 滑鼠按鈕內容位於<xref:System.Windows.Input.MouseEventArgs>以防有輸入的模式] 或 [涉及按鈕，即使您正在處理非按鈕事件的互動。</xref:System.Windows.Input.MouseEventArgs>"
  syntax:
    content: public delegate void MouseEventHandler(object sender, MouseEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
