### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.EventSetterHandlerConverter
  id: EventSetterHandlerConverter
  children:
  - System.Windows.Markup.EventSetterHandlerConverter.#ctor
  - System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: EventSetterHandlerConverter
  nameWithType: EventSetterHandlerConverter
  fullName: System.Windows.Markup.EventSetterHandlerConverter
  type: Class
  summary: "將事件 setter 處理常式的字串名稱轉換成委派表示法。"
  remarks: "如需如何針對 WPF XAML 處理事件處理常式名稱的詳細資訊，請參閱[XAML 概觀 (WPF)](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;xamlTextUsage_EventSetterHandlerConverter&quot;></a># # XAML 文字用法"
  syntax:
    content: 'public sealed class EventSetterHandlerConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.EventSetterHandlerConverter
  langs:
  - csharp
  name: EventSetterHandlerConverter()
  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter()
  fullName: System.Windows.Markup.EventSetterHandlerConverter.EventSetterHandlerConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.EventSetterHandlerConverter&quot;></xref>類別。"
  syntax:
    content: public EventSetterHandlerConverter ();
    parameters: []
  overload: System.Windows.Markup.EventSetterHandlerConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "傳回這個轉換子是否可以將某個型別的物件轉換至<xref:System.Delegate>。</xref:System.Delegate>"
  remarks: "這個方法會傳回`true`時，才`sourceType`是<xref:System.String>型別。</xref:System.String> 所有其他`sourceType`類型都會傳回`false`。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>代表您想要從轉換的類型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個轉換子可以執行轉換，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "傳回這個轉換子是否可以將物件轉換成指定的類型。"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: destinationType
      type: System.Type
      description: "A<xref:System.Type>表示您想要轉換成的型別。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "一律傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "將指定的字串轉換成新<xref:System.Delegate>事件處理常式。</xref:System.Delegate>"
  remarks: "`typeDescriptorContext`必須提供服務<xref:System.Xaml.IRootObjectProvider>和<xref:System.Windows.Markup.IProvideValueTarget>。</xref:System.Windows.Markup.IProvideValueTarget> </xref:System.Xaml.IRootObjectProvider>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: source
      type: System.Object
      description: "要轉換的來源字串。"
    return:
      type: System.Object
      description: "新<xref:System.Delegate>表示參考的事件處理常式。</xref:System.Delegate>"
  overload: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法使用必要的服務。       -或-無法執行特定的轉換。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeDescriptorContext</code>or <code>source</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "將指定的值物件轉換成指定的類型。 一律會擲回例外狀況。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>要做為目前的文化特性。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "要轉換的值。"
    - id: destinationType
      type: System.Type
      description: "要轉換的類型`value`參數。"
    return:
      type: System.Object
      description: "一律會擲回例外狀況。"
  overload: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "在所有情況下都擲回。"
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: EventSetterHandlerConverter()
  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter()
  fullName: System.Windows.Markup.EventSetterHandlerConverter.EventSetterHandlerConverter()
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor*
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: EventSetterHandlerConverter
  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom*
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: EventSetterHandlerConverter.CanConvertFrom
- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo*
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: EventSetterHandlerConverter.CanConvertTo
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom*
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: EventSetterHandlerConverter.ConvertFrom
- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo*
  parent: System.Windows.Markup.EventSetterHandlerConverter
  isExternal: false
  name: ConvertTo
  nameWithType: EventSetterHandlerConverter.ConvertTo
