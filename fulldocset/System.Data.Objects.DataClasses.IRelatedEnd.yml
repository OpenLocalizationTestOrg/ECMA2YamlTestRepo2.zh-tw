### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.IRelatedEnd
  id: IRelatedEnd
  children:
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  - System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.IRelatedEnd.Load
  - System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  langs:
  - csharp
  name: IRelatedEnd
  nameWithType: IRelatedEnd
  fullName: System.Data.Objects.DataClasses.IRelatedEnd
  type: Interface
  summary: "定義關聯性的一端。"
  remarks: "IRelatedEnd 定義物件，代表某一端在關聯中的需求。 會實作這個介面的<xref:System.Data.Objects.DataClasses.RelatedEnd>類別。</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.RelatedEnd>是基底類別<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>類別。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601></xref:System.Data.Objects.DataClasses.RelatedEnd>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public interface IRelatedEnd
  implements: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "將物件加入至相關端。"
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>方法將物件加入至相關端。</xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 相關的端必須是<xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       當來源物件會實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>中追蹤和<xref:System.Data.Objects.ObjectStateManager>，也會追蹤所加入的物件。</xref:System.Data.Objects.ObjectStateManager> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作<xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>方法。</xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>       如果相關的端<xref:System.Data.Objects.DataClasses.EntityReference%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>參考的屬性不是`null`，這個方法會擲回的例外狀況。</xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601>"
  syntax:
    content: public void Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要加入至集合的物件。 `entity`必須實作<xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  id: Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "將物件加入至相關端。"
  remarks: "使用這個方法多載不會實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>的實體類別 使用<xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>實體類別，實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>方法</xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>       Add 方法將物件加入至相關端。 相關的端必須是<xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作的 Add 方法。</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>       如果相關的端<xref:System.Data.Objects.DataClasses.EntityReference%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>參考的屬性不是`null`，這個方法會擲回的例外狀況。</xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601>"
  syntax:
    content: public void Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要加入至集合的物件。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "定義兩個所附加物件之間的關聯性。"
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>方法用來定義同時附加至相同的兩個物件之間的關聯性<xref:System.Data.Objects.ObjectContext>執行個體。</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作<xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>方法。</xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作來定義所附加的來源物件與附加至集合之物件之間的關聯性。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱[附加和卸離物件](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。"
  syntax:
    content: public void Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要附加的物件。 `entity`必須實作<xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "定義兩個所附加物件之間的關聯性。"
  remarks: "使用這個方法多載不會實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>的實體類別 使用<xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>實體類別，實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>方法</xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>       附加方法用來定義同時附加至相同的兩個物件之間的關聯性<xref:System.Data.Objects.ObjectContext>執行個體。</xref:System.Data.Objects.ObjectContext>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作附加方法。</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作來定義所附加的來源物件與附加至集合之物件之間的關聯性。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱[附加和卸離物件](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。"
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要附加的物件。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  id: CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "傳回<xref:System.Collections.IEnumerable>它代表屬於相關端的物件。</xref:System.Collections.IEnumerable>"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別</xref:System.Data.Objects.DataClasses.RelatedEnd>會明確實作 CreateSourceQuery 方法  <xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>這兩個類別會覆寫<xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A>方法以傳回<xref:System.Data.Objects.ObjectQuery%601>，當它執行時，傳回相同的集合屬於相關端的物件。</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>"
  syntax:
    content: public System.Collections.IEnumerable CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>它代表屬於相關端的物件。</xref:System.Collections.IEnumerable>"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "傳回<xref:System.Collections.IEnumerator>相關物件的集合中逐一。</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>相關物件的集合中逐一。</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得值，指出是否已載入所有相關的物件。"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別會實作<xref:System.Data.Objects.DataClasses.IRelatedEnd>.</xref:System.Data.Objects.DataClasses.IRelatedEnd> IsLoaded 方法</xref:System.Data.Objects.DataClasses.RelatedEnd> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       <xref:System.Data.Objects.DataClasses.EntityCollection%601><xref:System.Data.Objects.DataClasses.EntityReference%601>類別是繼承自<xref:System.Data.Objects.DataClasses.RelatedEnd>.</xref:System.Data.Objects.DataClasses.RelatedEnd></xref:System.Data.Objects.DataClasses.EntityReference%601>和</xref:System.Data.Objects.DataClasses.EntityCollection%601>"
  example:
  - '[Defining and Managing Relationships](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)'
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果相關的端包含從資料庫的所有相關的實體否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "相關的物件載入這個相關端，使用預設合併選項。"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別會實作<xref:System.Data.Objects.DataClasses.IRelatedEnd>.</xref:System.Data.Objects.DataClasses.IRelatedEnd>的 Load 方法</xref:System.Data.Objects.DataClasses.RelatedEnd> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       [載入](~/add/includes/ajax-current-ext-md.md)呼叫以從相關端的導覽屬性所公開，明確載入相關的物件。 如需詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法會載入相關的物件資料來源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>為`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "相關的物件載入相關端，使用指定的合併選項。"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別會實作 Load 方法。</xref:System.Data.Objects.DataClasses.RelatedEnd> 同時<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>類別覆寫這個實作。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       `Load`呼叫可從相關端所公開的導覽屬性，明確載入相關的物件。 如需詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       Load 方法將相關的物件載入資料來源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>是`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>"
  syntax:
    content: public void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>合併至現有的物件時所要使用&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得這個相關的端所參與之關聯性的名稱。"
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays the relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "此關聯性的名稱<xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>參與。 此關聯性名稱不符合命名空間。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "傳回相關端的中繼資料的參考。"
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;> </xref>物件，其中包含的關聯性端點中繼資料。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "從位於相關端的物件集合中移除物件。"
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>方法從相關端中移除物件。</xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 相關的端必須是<xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作<xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>方法。</xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>"
  syntax:
    content: public bool Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要從集合中移除的物件。 `entity`必須實作<xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>entity</code> was successfully removed, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "從位於相關端的物件集合中移除物件。"
  remarks: "使用這個方法多載不會實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>的實體類別 使用<xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>實體類別，實作<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships>方法</xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>       Remove 方法從相關端中移除物件。 相關的端必須是<xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>類別會明確實作的 Remove 方法。</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>類別會使用這個實作。</xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>"
  syntax:
    content: public bool Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "要從集合中移除的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> entity </code>成功移除;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得位於關聯性來源端的角色名稱。"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別會實作 SourceRoleName 屬性。</xref:System.Data.Objects.DataClasses.RelatedEnd> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>       角色名稱由指定`Role`屬性`End`概念模型中定義此關聯性的關聯中的項目。 如需詳細資訊，請參閱[關聯元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "位於關聯性來源端的角色名稱。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得位於關聯性目標端的角色名稱。"
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>類別會實作 TargetRoleName 屬性。</xref:System.Data.Objects.DataClasses.RelatedEnd> 如需詳細資訊，請參閱<xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>       角色名稱由指定`Role`屬性`End`概念模型中定義此關聯性的關聯中的項目。 如需詳細資訊，請參閱[關聯元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "關聯性目標端的角色名稱。"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add
  nameWithType: IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach
  nameWithType: IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery
  nameWithType: IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: IRelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load
  nameWithType: IRelatedEnd.Load
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove
  nameWithType: IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
