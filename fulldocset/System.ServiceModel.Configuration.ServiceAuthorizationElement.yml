### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement
  id: ServiceAuthorizationElement
  children:
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName
  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType
  langs:
  - csharp
  name: ServiceAuthorizationElement
  nameWithType: ServiceAuthorizationElement
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement
  type: Class
  summary: "表示組態項目會定義服務層級的安全性設定。"
  syntax:
    content: 'public sealed class ServiceAuthorizationElement : System.ServiceModel.Configuration.BehaviorExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BehaviorExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: ServiceAuthorizationElement()
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Configuration.ServiceAuthorizationElement&quot;></xref>類別。"
  syntax:
    content: public ServiceAuthorizationElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies
  id: AuthorizationPolicies
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: AuthorizationPolicies
  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得集合的授權原則類型。"
  remarks: "設定一組授權原則實作 (implementation) 可讓一組輸入宣告轉換成另一組宣告。 可以授與或拒絕存取控制的宣告為基礎。"
  syntax:
    content: public System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection AuthorizationPolicies { get; }
    return:
      type: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection
      description: "<xref href=&quot;System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection&quot;> </xref> ，包含授權原則型別的集合。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType
  id: BehaviorType
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: BehaviorType
  nameWithType: ServiceAuthorizationElement.BehaviorType
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得此行為組態項目的型別。"
  syntax:
    content: public override Type BehaviorType { get; }
    return:
      type: System.Type
      description: "行為類型。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "將指定的組態項目的內容複製到這個組態項目。"
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "要複製的組態元素。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior
  id: CreateBehavior
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: CreateBehavior()
  nameWithType: ServiceAuthorizationElement.CreateBehavior()
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override object CreateBehavior ();
    parameters: []
    return:
      type: System.Object
      description: "即將加入。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  id: ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得或設定布林值，指定是否在服務中的所有作業都模擬呼叫端。"
  remarks: "當特定服務作業模擬呼叫端時，執行緒內容切換至呼叫端內容之前執行指定的服務。"
  syntax:
    content: public bool ImpersonateCallerForAllOperations { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果服務中的所有作業都模擬呼叫端;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply
  id: ImpersonateOnSerializingReply
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得或設定值，指出是否<xref href=&quot;System.ServiceModel.Configuration.ServiceAuthorizationElement&quot;></xref>針對序列化回覆進行模擬。"
  syntax:
    content: public bool ImpersonateOnSerializingReply { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.ServiceModel.Configuration.ServiceAuthorizationElement&quot;></xref>模擬針對序列化回覆; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode
  id: PrincipalPermissionMode
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得或設定用來在伺服器上執行作業的主體。"
  syntax:
    content: public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }
    return:
      type: System.ServiceModel.Description.PrincipalPermissionMode
      description: "有效<xref href=&quot;System.ServiceModel.Description.PrincipalPermissionMode&quot;></xref>值，指定用來在伺服器上執行作業的主體。 預設值是<xref href=&quot;System.ServiceModel.Description.PrincipalPermissionMode&quot;> </xref>。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: Properties
  nameWithType: ServiceAuthorizationElement.Properties
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "即將加入。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName
  id: RoleProviderName
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: RoleProviderName
  nameWithType: ServiceAuthorizationElement.RoleProviderName
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得或設定提供角色資訊的角色提供者名稱[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]應用程式。"
  remarks: "不同類型的角色提供者可用來透過 Windows 群組、 SQL 資料庫，授權管理員原則存放區，以及其他提供角色資訊。"
  syntax:
    content: public string RoleProviderName { get; set; }
    return:
      type: System.String
      description: "角色提供者的名稱。 預設為空字串。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType
  id: ServiceAuthorizationManagerType
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  langs:
  - csharp
  name: ServiceAuthorizationManagerType
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "取得或設定服務授權管理員使用的型別。"
  syntax:
    content: public string ServiceAuthorizationManagerType { get; set; }
    return:
      type: System.String
      description: "字串，指定的服務授權管理員類型。"
  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BehaviorExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BehaviorExtensionElement
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ServiceAuthorizationElement()
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationElement()
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies
- uid: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: AuthorizationPolicyTypeElementCollection
  nameWithType: AuthorizationPolicyTypeElementCollection
  fullName: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: BehaviorType
  nameWithType: ServiceAuthorizationElement.BehaviorType
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: CreateBehavior()
  nameWithType: ServiceAuthorizationElement.CreateBehavior()
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode
- uid: System.ServiceModel.Description.PrincipalPermissionMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: PrincipalPermissionMode
  fullName: System.ServiceModel.Description.PrincipalPermissionMode
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: Properties
  nameWithType: ServiceAuthorizationElement.Properties
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: RoleProviderName
  nameWithType: ServiceAuthorizationElement.RoleProviderName
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ServiceAuthorizationManagerType
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType
  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ServiceAuthorizationElement
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: BehaviorType
  nameWithType: ServiceAuthorizationElement.BehaviorType
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: CopyFrom
  nameWithType: ServiceAuthorizationElement.CopyFrom
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: CreateBehavior
  nameWithType: ServiceAuthorizationElement.CreateBehavior
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: Properties
  nameWithType: ServiceAuthorizationElement.Properties
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: RoleProviderName
  nameWithType: ServiceAuthorizationElement.RoleProviderName
- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*
  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement
  isExternal: false
  name: ServiceAuthorizationManagerType
  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType
