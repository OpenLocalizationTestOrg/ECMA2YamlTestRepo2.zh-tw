### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "指定作業系統應該如何開啟檔案。"
  remarks: "如需建立檔案，並將文字寫入至檔案的範例，請參閱[How to︰ 將文字寫入至檔案](~/add/includes/ajax-current-ext-md.md)。 從檔案讀取文字的範例，請參閱[How to︰ 從檔案讀取文字](~/add/includes/ajax-current-ext-md.md)。 如需讀取和寫入二進位檔案的範例，請參閱[如何︰ 讀取和寫入至新建立資料檔](~/add/includes/ajax-current-ext-md.md)。       A`FileMode`在許多的建構函式中指定參數<xref:System.IO.FileStream>， <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>，然後在`Open`方法<xref:System.IO.File>和<xref:System.IO.FileInfo>來控制如何開啟檔案。</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>       `FileMode`參數控制項是否會覆寫檔案，建立、 開啟，或兩者的組合。 使用`Open`來開啟現有的檔案。 若要將附加至檔案，請使用`Append`。 截斷檔案，或建立檔案，如果不存在，請使用`Create`。"
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "如果它存在和搜尋至檔案的結尾，或建立新檔案，請開啟檔案。 這需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt;權限。 <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>只用於搭配<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>。 要搜尋的位置，則檔案會擲回結束之前嘗試<xref:System.IO.IOException>例外狀況，而讀取失敗，則擲回的任何嘗試<xref:System.NotSupportedException>例外狀況。</xref:System.NotSupportedException> </xref:System.IO.IOException>"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定作業系統應該建立新的檔案。 如果檔案已經存在，則會覆寫。 這需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;權限。 <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>相當於要求，如果檔案不存在，使用 CreateNew;否則，請使用 Truncate。 如果檔案已經存在，但是是隱藏的檔案，<xref:System.UnauthorizedAccessException>擲回例外狀況。</xref:System.UnauthorizedAccessException>"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定作業系統應該建立新的檔案。 這需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;權限。 如果檔案已經存在，<xref:System.IO.IOException>擲回例外狀況。</xref:System.IO.IOException>"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定作業系統應該開啟現有的檔案。 開啟檔案的功能取決於所指定的值<xref href=&quot;System.IO.FileAccess&quot;></xref>列舉型別。 A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt;如果檔案不存在，會擲回例外狀況。"
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定作業系統應該開啟檔案，是否存在的話。否則，您應該建立新的檔案。 如果與開啟的檔案時<xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>， &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;需要的權限。 如果是檔案存取<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>， &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;需要的權限。 如果與開啟的檔案，則<xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>，這兩個&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;和&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;不需要權限。"
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定作業系統應該開啟現有的檔案。 開啟檔案時，應該截斷，因此其大小為零個位元組。 這需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;權限。 嘗試從檔案讀取以開啟<xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;></xref>導致<xref:System.ArgumentException>例外狀況。</xref:System.ArgumentException>"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
