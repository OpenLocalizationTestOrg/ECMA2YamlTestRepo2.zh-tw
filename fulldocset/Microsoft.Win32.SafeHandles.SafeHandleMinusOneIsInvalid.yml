### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  id: SafeHandleMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  type: Class
  summary: "提供 Win32 其中值為-1 表示無效的控制代碼的安全控制代碼實作基底類別。"
  remarks: "此類別衍生自<xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName>類別。</xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName> 它會描述使用值為-1 的無效控制代碼的格式。 這個類別 （例如，檔案或登錄的控制代碼） 的進一步衍生可以將此特製化進一步。 請參閱<xref:Microsoft.Win32.SafeHandles.SafeFileHandle>類別衍生自 SafeHandleMinusOneIsInvalid 類別的範例。</xref:Microsoft.Win32.SafeHandles.SafeFileHandle>      > [!WARNING] > 這個型別實作<xref:System.IDisposable>介面。</xref:System.IDisposable> 當您完成使用類型時，您應該會處置它直接或間接。 若要直接處置的類型，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try``catch`區塊。</xref:System.IDisposable.Dispose%2A> 若要為其配置間接，使用語言建構例如`using`（C# 中） 或`Using`（在 Visual Basic)。 如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SafeHandleMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid&quot;></xref>類別，指定控制代碼是否可靠地釋出。"
  syntax:
    content: protected SafeHandleMinusOneIsInvalid (bool ownsHandle);
    parameters:
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要可靠地釋放控制代碼在結束階段。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>防止釋放 （不建議）。"
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "取得值，指出控制代碼是否無效。"
  remarks: "Common language runtime 使用這個屬性來判斷是否需要重大的最終處理。"
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制代碼無效。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: System.Runtime.InteropServices.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
