### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpTask
  id: JumpTask
  children:
  - System.Windows.Shell.JumpTask.#ctor
  - System.Windows.Shell.JumpTask.ApplicationPath
  - System.Windows.Shell.JumpTask.Arguments
  - System.Windows.Shell.JumpTask.Description
  - System.Windows.Shell.JumpTask.IconResourceIndex
  - System.Windows.Shell.JumpTask.IconResourcePath
  - System.Windows.Shell.JumpTask.Title
  - System.Windows.Shell.JumpTask.WorkingDirectory
  langs:
  - csharp
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
  type: Class
  summary: "代表在應用程式捷徑[!INCLUDE[win7](~/add/includes/win7-md.md)]工作列跳躍清單。"
  remarks: "JumpTask 可以視為應用程式的捷徑。 您指定可執行檔的路徑，藉由設定<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>屬性。</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 如果<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>未設定，就會隱含目前正在執行的處理序的路徑。</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 您可以選擇性地指定<xref:System.Windows.Shell.JumpTask.Arguments%2A>傳遞至在啟動應用程式。</xref:System.Windows.Shell.JumpTask.Arguments%2A>       您可以設定基本的顯示屬性，例如<xref:System.Windows.Shell.JumpTask.Title%2A>， <xref:System.Windows.Shell.JumpTask.Description%2A>，和<xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>跳躍清單中指定工作的外觀。</xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> </xref:System.Windows.Shell.JumpTask.Description%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> 搭配 JumpTask 圖示必須是可從原生資源。 如果多個圖示可用的資源 DLL 或可執行檔中，您會指定要使用藉由指示中的位移<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>屬性。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       根據預設，JumpTask 將放置於**工作**跳躍清單的類別。 您可以設定來指定工作的自訂群組<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>屬性。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       您可以建立沒有 JumpTask，以視覺化方式分隔跳躍清單中的項目<xref:System.Windows.Shell.JumpTask.Title%2A>和<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> 這個空 JumpTask 將顯示為水平線跳躍清單中。 在此情況下，可以設定其他屬性，但它們不會有任何影響。"
  example:
  - "The following example shows how to declare a JumpTask in markup. The JumpTask opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a JumpTask in code. The JumpTask opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: 'public class JumpTask : System.Windows.Shell.JumpItem'
  inheritance:
  - System.Object
  - System.Windows.Shell.JumpItem
  implements: []
  inheritedMembers:
  - System.Windows.Shell.JumpItem.CustomCategory
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Shell.JumpTask&quot;></xref>類別。"
  syntax:
    content: public JumpTask ();
    parameters: []
  overload: System.Windows.Shell.JumpTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  id: ApplicationPath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定應用程式的路徑。"
  remarks: "如果未指定 ApplicationPath 屬性，會隱含目前正在執行的處理序的路徑。 應用程式可以包含非其本身的可執行檔的工作。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string ApplicationPath { get; set; }
    return:
      type: System.String
      description: "應用程式的路徑。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Arguments
  id: Arguments
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定傳遞至應用程式在啟動的引數。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string Arguments { get; set; }
    return:
      type: System.String
      description: "引數傳遞至應用程式上啟動。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Description
  id: Description
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定跳躍清單中的工作的工具提示中顯示的文字。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "工作的工具提示中顯示的文字。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  id: IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定內嵌資源中所用圖示的以零為起始的索引。"
  remarks: "搭配使用的圖示<xref:System.Windows.Shell.JumpTask>必須可以當做原生資源。</xref:System.Windows.Shell.JumpTask> 如果多個圖示可用 DLL 或可執行檔中，您會指定要使用藉由指示 IconResourceIndex 屬性中的位移。       如果未不指定任何圖示資源，或如果找不到指定的圖示時，會顯示標準的系統 圖示。 若要指定無圖示會顯示，請將 IconResourceIndex 屬性設為-1。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public int IconResourceIndex { get; set; }
    return:
      type: System.Int32
      description: "圖示，則為-1 會使用任何圖示的以零為起始的索引。 預設值為 0。"
  overload: System.Windows.Shell.JumpTask.IconResourceIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  id: IconResourcePath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定包含在跳躍清單中顯示的圖示資源的路徑。"
  remarks: "搭配使用的圖示<xref:System.Windows.Shell.JumpTask>必須可以當做原生資源。</xref:System.Windows.Shell.JumpTask> 如果多個圖示可用 DLL 或可執行檔中，您會指定要使用藉由指示中的位移<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>屬性。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       如果未不指定任何圖示資源，或如果找不到指定的圖示時，會顯示標準的系統 圖示。 若要指定無圖示會顯示，請設定<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>屬性設為-1。</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string IconResourcePath { get; set; }
    return:
      type: System.String
      description: "包含的圖示資源的路徑。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.IconResourcePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Title
  id: Title
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定跳躍清單中的工作所顯示的文字。"
  remarks: "一般而言，Title 屬性必須設為<xref:System.Windows.Shell.JumpTask>才會出現在跳躍清單做為可點按的工作。</xref:System.Windows.Shell.JumpTask>       或者，您可以視覺化方式分隔跳躍清單中的項目建立<xref:System.Windows.Shell.JumpTask>不具有標題和<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定。</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask> 這個空白<xref:System.Windows.Shell.JumpTask>將會顯示為水平線跳躍清單中。</xref:System.Windows.Shell.JumpTask> 在此情況下，可以設定其他屬性，但它們不會有任何影響。"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "跳躍清單中的工作所顯示的文字。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  id: WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得或設定在啟動應用程式的工作目錄。"
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string WorkingDirectory { get; set; }
    return:
      type: System.String
      description: "在啟動應用程式的工作目錄。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Shell.JumpTask.WorkingDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Shell.JumpItem
  isExternal: false
  name: System.Windows.Shell.JumpItem
- uid: System.Windows.Shell.JumpTask.#ctor
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpTask.Arguments
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
- uid: System.Windows.Shell.JumpTask.#ctor*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask.JumpTask
- uid: System.Windows.Shell.JumpTask.ApplicationPath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
- uid: System.Windows.Shell.JumpTask.Arguments*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
- uid: System.Windows.Shell.JumpTask.IconResourcePath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
