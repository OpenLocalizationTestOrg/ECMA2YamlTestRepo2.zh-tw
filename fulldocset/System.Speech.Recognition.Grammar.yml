### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "執行階段物件參考的應用程式可用來定義條件約束的語音辨識語音辨識文法。"
  remarks: "語音辨識文法是一組規則或定義 語音辨識引擎可以辨識做為輸入有意義的條件約束。 如需有關建立和使用語音辨識文法的詳細資訊，請參閱[語音辨識](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919)，[建立文法中使用 XML](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1)，[建立文法使用 GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)，和[建立文法使用 SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906)。       撰寫文法之後，必須將它建置到語音辨識引擎可以載入，而且您的應用程式可用於在執行階段管理語音辨識的文法物件。 您可以使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式來建立文法執行個體從<xref:System.Speech.Recognition.GrammarBuilder>或<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>物件，或從檔案或<xref:System.IO.Stream>，包含描述的文法支援的格式。</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> 支援的格式如下:-符合 W3C XML 格式檔[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-與.cfg 換為二進位檔案的已編譯的文法檔案副檔名文法建構函式接受其引數中的 XML 格式文法檔案編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 文法。 您可以減少文法中的物件之 XML 格式文法建構事先編譯文法所需的時間使用其中一種<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       應用程式的語音辨識引擎，為受管理的<xref:System.Speech.Recognition.SpeechRecognizer>或<xref:System.Speech.Recognition.SpeechRecognitionEngine>物件時，可以載入多個語音辨識文法。</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> 應用程式可以個別啟用或停用個別的文法設定<xref:System.Speech.Recognition.Grammar.Enabled%2A>屬性，並修改辨識行為，透過文法屬性，例如<xref:System.Speech.Recognition.Grammar.Priority%2A>和<xref:System.Speech.Recognition.Grammar.Weight%2A>屬性。</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       文法<xref:System.Speech.Recognition.Grammar.SpeechRecognized>輸入符合經由文法的路徑時引發事件。</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] >，以確認任何 URI 或 DLL 用來建置的文法物件的安全性最佳做法是。   >> Windows 和語音平台提供建構從 DLL 或支援指令碼處理的文法的文法執行個體的應用程式的安全性。   >> 如同網頁中從下載文法物件中的指令碼永遠執行`Internet Zone`。 Common Language Runtime (CLR) 會隔離任何可取得文法定義載入的 DLL。"
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream>類別"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，並描述不應定義需要的引數初始化處理常式。       這個建構函式可以建立<xref:System.Speech.Recognition.Grammar>從下列格式的執行個體:-符合 W3C XML 格式檔案[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-已編譯成二進位的文法檔案.cfg 換副檔名為這個建構函式會編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 格式文法檔案。</xref:System.Speech.Recognition.Grammar> 您可以減少建構所需的時間量<xref:System.Speech.Recognition.Grammar>物件從編譯的文法事先使用其中一種 XML 格式文法<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       SRGS 文法可以定義根規則。 若要建立<xref:System.Speech.Recognition.Grammar>從資料流物件，指定根規則，請使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>或<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       若要建立<xref:System.Speech.Recognition.Grammar>物件從資料流，並指定要用來解析相對規則參考的基底 URI 使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "描述語音辨識文法支援的格式資料流。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>描述文法沒有根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "描述包含無法解析的規則參考的文法或不包含有效的文法，描述資料流。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>物件。"
  remarks: "如需有關使用<xref:System.Speech.Recognition.GrammarBuilder>類別來定義文法，請參閱[建立文法使用 GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)。</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "執行個體<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>包含語音辨識文法的條件約束。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>物件。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，而<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>不應包含需要的引數初始化處理常式。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       A<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>可以有根規則。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 若要建立<xref:System.Speech.Recognition.Grammar>物件，指定根規則，使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>或<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       若要建立語音辨識<xref:System.Speech.Recognition.Grammar>從<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>並指定要用來解析相對規則參考的基底 URI 使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "語音辨識文法的條件約束。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>沒有根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>包含無法解析的規則參考。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>檔案中的類別。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，並描述不應定義需要的引數初始化處理常式。       這個建構函式可以建立<xref:System.Speech.Recognition.Grammar>從下列格式的執行個體:-符合 W3C XML 格式檔案[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-已編譯成二進位的文法檔案.cfg 換副檔名為這個建構函式會編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 格式文法檔案。</xref:System.Speech.Recognition.Grammar> 您可以減少建構所需的時間量<xref:System.Speech.Recognition.Grammar>物件從編譯的文法事先使用其中一種 XML 格式文法<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       SRGS 文法可以定義根規則。 若要建立<xref:System.Speech.Recognition.Grammar>從字串物件，指定根規則，請使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       若要建立<xref:System.Speech.Recognition.Grammar>物件，指定要用來解析相對規則參考的基底 URI 檔案中開啟檔案資料流並使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "描述語音辨識文法支援的格式檔案的路徑。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>包含空字串 (&quot;&quot;)，或您的檔案描述的文法沒有根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "檔案未包含有效的描述，或描述包含無法解析的規則參考的文法。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref:System.IO.Stream>，並指定根規則。</xref:System.IO.Stream>"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，並描述不應定義需要的引數初始化處理常式。       這個建構函式可以建立<xref:System.Speech.Recognition.Grammar>從下列格式的執行個體:-符合 W3C XML 格式檔案[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-已編譯成二進位的文法檔案.cfg 換副檔名為這個建構函式會編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 格式文法檔案。</xref:System.Speech.Recognition.Grammar> 您可以減少建構所需的時間量<xref:System.Speech.Recognition.Grammar>物件從編譯的文法事先使用其中一種 XML 格式文法<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       若要建立<xref:System.Speech.Recognition.Grammar>從資料流，並指定要用來解析相對規則參考的基底 URI 使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "描述語音辨識文法支援的格式資料流。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>無法解析，或者不是公用的或<code>ruleName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和文法描述未定義根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "資料流未包含有效的描述，或描述包含無法解析的規則參考的文法。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>物件，並指定根規則。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，而<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>不應包含需要的引數初始化處理常式。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       若要建立<xref:System.Speech.Recognition.Grammar>物件從<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>並指定要用來解析相對規則參考的基底 URI 使用<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "語音辨識文法的條件約束。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>要使用的預設根規則<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>無法解析，或者不是公用的或<code>ruleName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和<code>srgsDocument</code>未包含根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>包含無法解析的規則參考。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從檔案，並指定根規則。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，並描述不應定義需要的引數初始化處理常式。       這個建構函式可以建立<xref:System.Speech.Recognition.Grammar>從下列格式的執行個體:-符合 W3C XML 格式檔案[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-已編譯成二進位的文法檔案.cfg 換副檔名為這個建構函式會編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 格式文法檔案。</xref:System.Speech.Recognition.Grammar> 您可以減少建構所需的時間量<xref:System.Speech.Recognition.Grammar>物件從編譯的文法事先使用其中一種 XML 格式文法<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       若要建立<xref:System.Speech.Recognition.Grammar>，指定要用來解析相對規則參考、 開啟檔案的檔案資料流和使用的基底 URI<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "描述語音辨識文法支援的格式檔案的路徑。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>無法解析，或者不是公用的<code>path</code>為空字串 (&quot;&quot;)，或<code>ruleName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和文法描述未定義根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "檔案未包含有效的描述，或描述包含無法解析的規則參考的文法。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref:System.IO.Stream>，並指定根規則。</xref:System.IO.Stream>"
  remarks: "也可以指定初始設定處理常式的參數。"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>連接到包含文法規格的輸入/輸出物件 （包括檔案、 visual Studio 資源和 Dll）。</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: parameters
      type: System.Object[]
      description: "要傳遞給指定的初始化處理常式的參數<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>的進入點或根規則的內容<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>建立。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> 這個參數可以是 null。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>連接到文法，:-不包含在指定的規則<code>ruleName</code>      -需要初始化參數中指定的不同<code>parameters</code>      -包含無法解析的預設基底的相對規則參考<xref:System.Uri>文法的規則"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ，從資料流類別指定的根規則，並定義基底統一資源識別元 (URI) 來解析相對規則參考。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，並描述不應定義需要的引數初始化處理常式。       這個建構函式可以建立<xref:System.Speech.Recognition.Grammar>從下列格式的執行個體:-符合 W3C XML 格式檔案[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)-已編譯成二進位的文法檔案.cfg 換副檔名為這個建構函式會編譯成二進位格式，來最佳化它們的載入和使用語音辨識引擎的 XML 格式文法檔案。</xref:System.Speech.Recognition.Grammar> 您可以減少建構所需的時間量<xref:System.Speech.Recognition.Grammar>物件從編譯的文法事先使用其中一種 XML 格式文法<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>方法。</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       這個建構函式不會驗證`baseUri`。 不過，`LoadGrammar`方法<xref:System.Speech.Recognition.SpeechRecognitionEngine>或<xref:System.Speech.Recognition.SpeechRecognizer>物件擲回例外狀況，若無法解析的所有文法描述中的規則參考。</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> 如果`baseUri`不`null`、`LoadGrammar`方法使用 URI 來解析任何規則參考，否則無法解析。 如果`baseUri`代表檔案，然後在`LoadGrammar`嘗試解析相對規則參考時，使用指定的檔案和檔案的目錄。"
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "描述語音辨識文法支援的格式資料流。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: baseUri
      type: System.Uri
      description: "要用來解析在文法描述中，任何相關的規則參考的基底 URI 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>無法解析，或者不是公用的或<code>ruleName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和文法描述未定義根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "資料流未包含有效的描述，或描述包含無法解析的規則參考的文法。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別的執行個體從<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>，並指定進入點的文法規則的名稱。"
  remarks: "也可以指定初始設定處理常式的參數。"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "執行個體<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>包含語音辨識文法的條件約束。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: parameters
      type: System.Object[]
      description: "要傳遞給指定的初始化處理常式的參數<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>的進入點或根規則的內容<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>建立。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> 這個參數可以是 null。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-任何參數包含無效的值。      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>所指定<code> srgsDocument </code>不包含所指定的規則<code> ruleName </code>。      -陣列參數的內容不相符任何規則的初始化處理常式的引的數。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>物件，指定根規則，並定義基底統一資源識別元 (URI) 來解析相對規則參考。"
  remarks: "這個建構函式不會讓通過任何參數的初始化處理常式，而<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>不應包含需要的引數初始化處理常式。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       這個建構函式不會驗證`baseUri`。 不過，`LoadGrammar`方法<xref:System.Speech.Recognition.SpeechRecognitionEngine>或<xref:System.Speech.Recognition.SpeechRecognizer>物件擲回例外狀況，若無法解析的所有文法描述中的規則參考。</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> 如果`baseUri`不`null`、`LoadGrammar`方法使用 URI 來解析任何規則參考，否則無法解析。 如果`baseUri`代表檔案，然後在`LoadGrammar`方法會使用指定的檔案和檔案的目錄時，它會嘗試解析相對規則參考。"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "語音辨識文法的條件約束。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>要使用的預設根規則<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>。"
    - id: baseUri
      type: System.Uri
      description: "要用來解析中的任何相對規則參考的基底 URI <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>無法解析，或者不是公用的或<code>ruleName</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>和<code>srgsDocument</code>未包含根規則。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>包含無法解析的規則參考。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別從包含文法定義，且指定的規則，以文法的進入點名稱的檔案..."
  remarks: "也可以指定初始設定處理常式的參數。"
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "檔案的路徑，包括 Dll，包含指定的文法。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: parameters
      type: System.Object[]
      description: "要傳遞給指定的初始化處理常式的參數<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>的進入點或根規則的內容<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>建立。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> 這個參數可以是 null。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-任何參數包含無效的值。      的所指定檔案<code> path </code>不包含有效的文法或在指定的規則<code> ruleName </code>。      -陣列參數的內容不相符任何規則的初始化處理常式的引的數。      -文法具有無法解析的預設基底的相對規則參考<xref:System.Uri>文法的規則。</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別<xref:System.IO.Stream>，並指定根規則來解析相對參考的基底 URI。</xref:System.IO.Stream>"
  remarks: "也可以指定初始設定處理常式的參數。"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>連接到包含文法規格的輸入/輸出物件 （包括檔案、 visual Studio 資源和 Dll）。</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: baseUri
      type: System.Uri
      description: "要用來解析在文法描述中，任何相關的規則參考的基底 URI 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: parameters
      type: System.Object[]
      description: "要傳遞給指定的初始化處理常式的參數<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>的進入點或根規則的內容<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>建立。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> 這個參數可以是 null。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-任何參數包含無效的值。      - <code> stream </code>連線到不包含所指定的規則文法<code> ruleName </code>。      -陣列參數的內容不相符任何規則的初始化處理常式的引的數。      -文法包含無法解析的預設基底的相對規則參考<xref:System.Uri>文法或所提供的 URI 規則<code> baseUri </code>。</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>類別的執行個體從<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>，並指定規則，以文法以及用來解析相對參考基底 URI 的進入點名稱。"
  remarks: "也可以指定初始設定處理常式的參數。"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "執行個體<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>包含語音辨識文法的條件約束。"
    - id: ruleName
      type: System.String
      description: "要做為進入點的語音辨識文法規則的識別碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>使用文法描述的預設根規則。"
    - id: baseUri
      type: System.Uri
      description: "要用來解析在文法描述中，任何相關的規則參考的基底 URI 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: parameters
      type: System.Object[]
      description: "要傳遞至進入點或根規則的<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>屬性所指定的初始化處理常式參數<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>建立。這個參數可以是 null。</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-任何參數包含無效的值。      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>所指定<code> srgsDocument </code>不包含在指定的規則<code> ruleName </code>。      -陣列參數的內容不相符任何規則的初始化處理常式的引的數。      -文法具有無法解析的預設基底的相對規則參考<xref:System.Uri>文法或所提供的 URI 規則<code> baseUri </code>。</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得或設定值，控制是否<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>可以語音辨識器用來執行辨識。"
  remarks: "執行個體<xref:System.Speech.Recognition.Grammar>可能必須啟用還是停用獨立於正在載入的語音辨識引擎。</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref>屬性會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果語音辨識器可以執行辨識使用 語音辨識文法中; 否則屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得是否文法強型別。"
  remarks: "強型別<xref:System.Speech.Recognition.Grammar>物件 (`IsStg`等於`true`) 可傳回強型別結果 （物件，而非原始文字） 用戶端應用程式。</xref:System.Speech.Recognition.Grammar> 例如，可能會傳回強型別文法<xref:System.DateTime>物件而不是可辨識的原始輸入。</xref:System.DateTime>       您可以將程式碼附加到文法的規則實作強型別文法。 辨識引擎會處理任何指定的規則，函式做為輸入目前的部分結果、 執行相關聯的程式碼和文字資訊會變成豐富的型別物件。 這可讓用戶端若要更輕鬆地使用增強的語意檢查，支援多個文化特性中，與內部文法邏輯。       執行個體的強型別<xref:System.Speech.Recognition.Grammar>物件通常做為組件中的資源取得<xref:System.Type>的 Common Language Runtime (CLR)。</xref:System.Type> </xref:System.Speech.Recognition.Grammar> 用來支援不同語言的當地語系化的類型是這類的範例<xref:System.Speech.Recognition.Grammar>物件。</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref>屬性會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果文法是強型別; 否則屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得是否<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>語音辨識器已經載入。"
  remarks: "一次<xref:System.Speech.Recognition.Grammar>已載入，值<xref:System.Speech.Recognition.Grammar.Weight%2A>，和<xref:System.Speech.Recognition.Grammar.Priority%2A>無法變更。</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref>屬性會傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果參考的語音辨識文法目前已載入在語音辨識器; 否則屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref>方法傳回的當地語系化執行個體<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件衍生自<xref:System.Type>.</xref:System.Type>"
  remarks: "當地語系化使用取得的文法`LoadLocalizedGrammarFromType`是通常強型別 (請參閱<xref:System.Speech.Recognition.Grammar.IsStg%2A>如需有關強型別文法)。</xref:System.Speech.Recognition.Grammar.IsStg%2A> 如果`onInitParameters`為 null 參考 (在 Visual Basic 中 Nothing) 的當地語系化文法應該有初始設定方法或不接受引數的方法。"
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "在組件，<xref:System.Type>根據某物件的<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>。</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "要傳遞給 localizedobject 的初始設定方法的參數根據<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>。 這個參數可以是 null。"
    return:
      type: System.Speech.Recognition.Grammar
      description: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref>方法會傳回有效的物件，根據<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果已經發生錯誤。"
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得或設定名稱<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。"
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref>屬性會傳回名稱<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得或設定的優先權值<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。"
  remarks: "`Priority`屬性用來選取文法，當一個以上的文法，都會產生相同的辨識結果。 如果語音辨識器有多個語音辨識文法載入並啟用符合輸入，而且比對會辨識器，從獲得最佳的結果則辨識器會使用具有最高的文法`Priority`。 文法中產生相同的辨識結果也有相同`Priority`值，則會使用辨識器的文法是未定義。"
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref>屬性會傳回整數值，代表特定的相對優先權<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>。 範圍是從-128 到 127 （含)。 預設值為 0。"
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得或設定值，來載入目前的二進位資源的名稱取代<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>。"
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref>屬性會傳回二進位資源的強型別文法中，使用名稱<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>，只載入了。"
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得根規則或項目點的名稱<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。"
  remarks: "建構<xref:System.Speech.Recognition.Grammar>物件和設定其根規則的名稱，請使用其中一個<xref:System.Speech.Recognition.Grammar.%23ctor%2A>建構函式採用`ruleName`參數。</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       如果根規則<xref:System.Speech.Recognition.Grammar>有沒有名稱，則屬性會傳回`null`。</xref:System.Speech.Recognition.Grammar>       根規則<xref:System.Speech.Recognition.Grammar>從執行個體建構<xref:System.Speech.Recognition.GrammarBuilder>物件通常具有沒有名稱，因此會傳回 RuleName `null`。</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref>屬性會傳回參考的語音辨識文法的根規則的識別碼。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "語音辨識器會執行辨識使用時，引發<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。"
  remarks: "語音辨識器也會引發`SpeechRecognized`時它會辨識輸入的事件。 <xref:System.Speech.Recognition.Grammar>語音辨識器之前，會引發物件的 SpeechRecognized 事件`SpeechRecognized`事件。</xref:System.Speech.Recognition.Grammar> 如需詳細資訊，請參閱<xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>， <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>，和<xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>事件。</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       任何特定的文法特定的工作永遠應該由處理常式<xref:System.Speech.Recognition.Grammar>物件 SpeechRecognized 事件。</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref>方法初始化強型別的文法。"
  remarks: "強型別<xref:System.Speech.Recognition.Grammar>物件 (`IsStg`等於`true`) 可傳回強型別結果 （物件，而非原始文字） 用戶端應用程式。</xref:System.Speech.Recognition.Grammar> 例如，可能會傳回強型別文法<xref:System.DateTime>物件而不是可辨識的原始輸入。</xref:System.DateTime>       您可以將程式碼附加到文法的規則實作強型別文法。 辨識引擎會處理任何指定的規則，函式做為輸入目前的部分結果、 執行相關聯的程式碼和文字資訊會變成豐富的型別物件。 這可讓用戶端若要更輕鬆地使用增強的語意檢查，支援多個文化特性中，與內部文法邏輯。       執行個體的強型別<xref:System.Speech.Recognition.Grammar>物件通常做為組件中的資源取得<xref:System.Type>的 Common Language Runtime (CLR)。</xref:System.Type> </xref:System.Speech.Recognition.Grammar> 用來支援不同語言的當地語系化的類型是這類的範例<xref:System.Speech.Recognition.Grammar>物件。</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "要初始化的強型別文法傳遞的參數。這個參數可以是 null。"
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得或設定的權數值<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>物件。"
  remarks: "由於辨識引擎的使用複雜性**加權**，它對特定文法的效能影響不是直接的<xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       語音辨識為加權的系統。 它會評估文法的加權、 替代文法中定義的加權和語音模型所定義之機率的組合為基礎的所有可能的辨識路徑。 語音辨識引擎會使用這些加權和機率來排名可能的替代 recognitions 組合。 文法與更高的加權會影響多個等級的辨識替代項目，比使用較低的加權的文法。       對於 語音辨識器權數屬性的影響會相依於辨識器的實作。 雖然權數屬性可以用來微調應用程式的語音辨識的精確度，則應只有在受控制的診斷研究特定辨識環境並辨識引擎，使用下方的完整資訊之後。"
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref>屬性會傳回浮點值，指出處理語音輸入時，辨識引擎執行個體應該指派之文法的相對加權。 範圍是介於 0.0 到 1.0 （含)。 預設值為 1.0。"
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
