### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "指定的執行狀態<xref href=&quot;System.Threading.Thread&quot;> </xref>。"
  remarks: "ThreadState 列舉型別是只能在一些感興趣的偵錯案例。 您的程式碼應該永遠不會使用執行緒狀態來同步處理執行緒活動。       ThreadState 定義一組所有可能的執行狀態的執行緒。 一旦建立執行緒，則為至少其中一個狀態直到它所終止。 Common language runtime 中建立的執行緒都在一開始處於`Unstarted`狀態，而外部進入執行階段的執行緒已在`Running`狀態。 `Unstarted`執行緒轉換為`Running`藉由呼叫<xref:System.Threading.Thread.Start%2A>.</xref:System.Threading.Thread.Start%2A>狀態 並非所有的組合`ThreadState`是有效的值; 例如，執行緒不會同時`Aborted`和`Unstarted`狀態。      > [!IMPORTANT] > 有兩個執行緒狀態的列舉型別，ThreadState 和<xref:System.Diagnostics.ThreadState?displayProperty=fullName>.</xref:System.Diagnostics.ThreadState?displayProperty=fullName>       下表顯示的動作會導致狀態的變更。      |動作 |ThreadState |  |------------|-----------------|  |Common language runtime 中建立的執行緒。 |尚未開始 |  |另一個執行緒呼叫<xref:System.Threading.Thread.Start%2A?displayProperty=fullName>上新的執行緒和呼叫的方法會傳回。</xref:System.Threading.Thread.Start%2A?displayProperty=fullName><br /><br /> <xref:System.Threading.Thread.Start%2A>方法前不會傳回新的執行緒已開始執行。</xref:System.Threading.Thread.Start%2A> 沒有方法知道點，新的執行緒會開始執行，<xref:System.Threading.Thread.Start%2A>的呼叫期間。 |執行 |  |執行緒呼叫<xref:System.Threading.Thread.Sleep%2A>|WaitSleepJoin |  |另一個物件的執行緒呼叫<xref:System.Threading.Monitor.Wait%2A>。 |WaitSleepJoin |  |另一個執行緒上的執行緒呼叫<xref:System.Threading.Thread.Join%2A>。 |WaitSleepJoin |  |另一個執行緒呼叫<xref:System.Threading.Thread.Interrupt%2A>|執行 |  |另一個執行緒呼叫<xref:System.Threading.Thread.Suspend%2A>|SuspendRequested |  |執行緒回應<xref:System.Threading.Thread.Suspend%2A>要求。 |暫止 |  |另一個執行緒呼叫<xref:System.Threading.Thread.Resume%2A>|執行 |  |另一個執行緒呼叫<xref:System.Threading.Thread.Abort%2A>|AbortRequested |  |執行緒回應<xref:System.Threading.Thread.Abort%2A>要求。 |停止 |  |執行緒已終止。 |停止 |      除了上述的狀態，另外還有`Background`狀態，指出執行緒是否正執行於背景或前景。</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Resume%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Interrupt%2A> </xref:System.Threading.Thread.Join%2A> </xref:System.Threading.Monitor.Wait%2A> </xref:System.Threading.Thread.Sleep%2A> </xref:System.Threading.Thread.Start%2A>       執行緒可以在多個狀態中給定的時間。 例如，如果執行緒已封鎖的呼叫上<xref:System.Threading.Monitor.Wait%2A>，和另一個執行緒呼叫<xref:System.Threading.Thread.Abort%2A>封鎖的執行緒上封鎖的執行緒就會同時`WaitSleepJoin`和`AbortRequested`一次的狀態。</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Monitor.Wait%2A> 在此情況下，當執行緒從呼叫返回<xref:System.Threading.Monitor.Wait%2A>或已中斷，就會收到<xref:System.Threading.ThreadAbortException>開始中止。</xref:System.Threading.ThreadAbortException> </xref:System.Threading.Monitor.Wait%2A>       <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>執行緒屬性會提供執行緒的目前狀態。</xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName> 應用程式必須使用位元遮罩，來判斷是否正在執行一個執行緒。 值因為`Running`零 (0)，測試是否執行緒正在執行使用 C# 程式碼，例如`(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0`或 Visual Basic 程式碼，例如`(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`。"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒狀態包含 AbortRequested 和執行緒已無作用，但其狀態尚未變更為 已停止。"
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt;方法叫用執行緒上、 但尚未收到執行緒暫止<xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref> ，將會嘗試將其終止。"
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒為背景執行緒，而不是前景執行緒正在執行。 此狀態由設定&lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt;屬性。"
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒已經啟動，並未受到封鎖，而且沒有任何暫止<xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref>。"
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒已停止。"
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒會被要求停止。 這是僅供內部使用。"
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒已經暫止。"
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒會被暫止要求。"
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;已不在執行緒上叫用方法。"
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "執行緒會封鎖。 這可能是呼叫&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;或&lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;，要求鎖定的 — 例如，藉由呼叫&lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt;或&lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; — 或等待<xref:System.Threading.ManualResetEvent>.</xref:System.Threading.ManualResetEvent>例如執行緒同步處理物件"
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
