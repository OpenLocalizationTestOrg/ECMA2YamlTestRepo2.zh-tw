### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsView
  id: DetailsView
  children:
  - System.Web.UI.WebControls.DetailsView.#ctor
  - System.Web.UI.WebControls.DetailsView.AllowPaging
  - System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  - System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  - System.Web.UI.WebControls.DetailsView.BackImageUrl
  - System.Web.UI.WebControls.DetailsView.BottomPagerRow
  - System.Web.UI.WebControls.DetailsView.Caption
  - System.Web.UI.WebControls.DetailsView.CaptionAlign
  - System.Web.UI.WebControls.DetailsView.CellPadding
  - System.Web.UI.WebControls.DetailsView.CellSpacing
  - System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  - System.Web.UI.WebControls.DetailsView.CommandRowStyle
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  - System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateControlStyle
  - System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.DetailsView.CreateTable
  - System.Web.UI.WebControls.DetailsView.CurrentMode
  - System.Web.UI.WebControls.DetailsView.DataBind
  - System.Web.UI.WebControls.DetailsView.DataItem
  - System.Web.UI.WebControls.DetailsView.DataItemCount
  - System.Web.UI.WebControls.DetailsView.DataItemIndex
  - System.Web.UI.WebControls.DetailsView.DataKey
  - System.Web.UI.WebControls.DetailsView.DataKeyNames
  - System.Web.UI.WebControls.DetailsView.DefaultMode
  - System.Web.UI.WebControls.DetailsView.DeleteItem
  - System.Web.UI.WebControls.DetailsView.DeleteMethod
  - System.Web.UI.WebControls.DetailsView.EditRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  - System.Web.UI.WebControls.DetailsView.EmptyDataText
  - System.Web.UI.WebControls.DetailsView.EnableModelValidation
  - System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  - System.Web.UI.WebControls.DetailsView.EnsureDataBound
  - System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  - System.Web.UI.WebControls.DetailsView.Fields
  - System.Web.UI.WebControls.DetailsView.FooterRow
  - System.Web.UI.WebControls.DetailsView.FooterStyle
  - System.Web.UI.WebControls.DetailsView.FooterTemplate
  - System.Web.UI.WebControls.DetailsView.FooterText
  - System.Web.UI.WebControls.DetailsView.GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.GridLines
  - System.Web.UI.WebControls.DetailsView.HeaderRow
  - System.Web.UI.WebControls.DetailsView.HeaderStyle
  - System.Web.UI.WebControls.DetailsView.HeaderTemplate
  - System.Web.UI.WebControls.DetailsView.HeaderText
  - System.Web.UI.WebControls.DetailsView.HorizontalAlign
  - System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.InsertMethod
  - System.Web.UI.WebControls.DetailsView.InsertRowStyle
  - System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.DetailsView.ItemCommand
  - System.Web.UI.WebControls.DetailsView.ItemCreated
  - System.Web.UI.WebControls.DetailsView.ItemDeleted
  - System.Web.UI.WebControls.DetailsView.ItemDeleting
  - System.Web.UI.WebControls.DetailsView.ItemInserted
  - System.Web.UI.WebControls.DetailsView.ItemInserting
  - System.Web.UI.WebControls.DetailsView.ItemUpdated
  - System.Web.UI.WebControls.DetailsView.ItemUpdating
  - System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DetailsView.ModeChanged
  - System.Web.UI.WebControls.DetailsView.ModeChanging
  - System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.PageCount
  - System.Web.UI.WebControls.DetailsView.PageIndex
  - System.Web.UI.WebControls.DetailsView.PageIndexChanged
  - System.Web.UI.WebControls.DetailsView.PageIndexChanging
  - System.Web.UI.WebControls.DetailsView.PagerSettings
  - System.Web.UI.WebControls.DetailsView.PagerStyle
  - System.Web.UI.WebControls.DetailsView.PagerTemplate
  - System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  - System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DetailsView.Rows
  - System.Web.UI.WebControls.DetailsView.RowsGenerator
  - System.Web.UI.WebControls.DetailsView.RowStyle
  - System.Web.UI.WebControls.DetailsView.SaveControlState
  - System.Web.UI.WebControls.DetailsView.SaveViewState
  - System.Web.UI.WebControls.DetailsView.SelectedValue
  - System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.DetailsView.TagKey
  - System.Web.UI.WebControls.DetailsView.TopPagerRow
  - System.Web.UI.WebControls.DetailsView.TrackViewState
  - System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.UpdateMethod
  langs:
  - csharp
  name: DetailsView
  nameWithType: DetailsView
  fullName: System.Web.UI.WebControls.DetailsView
  type: Class
  summary: "在資料表中，其中每個資料列都代表記錄的欄位，會顯示從資料來源的單一記錄的值。 在 DetailsView 控制項可讓您編輯、 刪除及插入記錄。"
  remarks: "本主題內容:-[簡介](#introduction)      -   [資料列欄位](#row_fields)      -   [繫結至資料](#binding_to_data)      -   [安全性](#security)      -   [資料作業](#data_operations)      -   [自訂使用者介面](#customizing_the_user_interface)      -   [事件](#events)      -   [協助工具](#Accessibility)      -   [宣告式語法](#DeclarativeSyntax)<a name=&quot;introduction&quot;> </a> # # 簡介 DetailsView 控制項用來從資料來源的單一記錄顯示在資料表中，其中每個記錄的欄位會顯示在資料表資料列。       用於搭配<xref:System.Web.UI.WebControls.GridView>主版詳細資料案例的控制項。</xref:System.Web.UI.WebControls.GridView> 在 DetailsView 控制項支援下列功能:-繫結至資料來源控制項，例如<xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource>      -內建的插入功能。      -內建更新和刪除功能。      -內建的分頁功能。      -以程式設計方式存取 DetailsView 物件模型，來動態設定屬性，處理事件，等等。      透過佈景主題和樣式的可自訂外觀。      <a name=&quot;row_fields&quot;></a># # 列 DetailsView 控制項中的每個資料列由宣告欄位控制項的欄位。 不同的資料列欄位型別決定控制項中的資料列的行為。 欄位控制項衍生自<xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 下表列出可用的不同的資料列欄位型別。      |資料行欄位類型 |描述 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|顯示為文字資料來源中欄位的值。 |  |<xref:System.Web.UI.WebControls.ButtonField>|在 DetailsView 控制項中顯示命令按鈕。</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.BoundField> 這可讓您顯示具有自訂按鈕控制項，例如新增或移除按鈕的資料列。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|在 DetailsView 控制項中顯示核取方塊。</xref:System.Web.UI.WebControls.CheckBoxField> 這個資料列的欄位型別通常用於顯示具有布林值的欄位。 |  |<xref:System.Web.UI.WebControls.CommandField>|顯示內建命令按鈕來執行編輯、 插入或刪除 DetailsView 控制項中的作業。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|顯示為超連結資料來源中欄位的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 這個資料列的欄位型別可讓您將第二個欄位繫結至超連結的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|在 DetailsView 控制項中顯示映像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|根據指定的範本 DetailsView 控制項中顯示使用者定義資料列的內容。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField> 這個資料列的欄位型別可讓您建立自訂的資料列欄位。 |      根據預設，<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性設定為`true`，這會自動產生資料來源繫結的資料列欄位物件，可繫結類型的每個欄位。</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 有效的可繫結類型為<xref:System.String>， <xref:System.DateTime>， <xref:System.Decimal>， <xref:System.Guid>，與基本型別的集合。</xref:System.Guid> </xref:System.Decimal> </xref:System.DateTime> </xref:System.String> 每個欄位然後顯示資料列中為文字，每個欄位出現在資料來源中的順序。       自動產生資料列提供快速簡便的方式來顯示記錄中的每個欄位。 不過，使用 DetailsView 控制項的進階的功能，您必須明確宣告要包括在 DetailsView 控制項中的資料列欄位。 若要宣告的資料列的欄位，請先設定<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性`false`。</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 接下來，加入 開啟和關閉`<Fields>`開頭和結尾標記的 DetailsView 控制項之間的標記。 最後，列出您想要包含在開頭和結尾之間的資料列欄位`<Fields>`標記。 指定的資料列欄位都會加入至<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合的順序列出。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A> <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合可讓您以程式設計方式管理 DetailsView 控制項中的資料列欄位。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>      > [!NOTE] > 自動產生的資料列欄位不會加入至<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>      > [!NOTE] > 明確宣告的資料列欄位可顯示與自動產生的資料列欄位一起使用。 同時使用時，明確宣告的資料列會首先呈現欄位，後面接著會自動產生的資料列欄位。      <a name=&quot;binding_to_data&quot;></a># # 繫結至資料的 DetailsView 控制項可以繫結至資料來源控制項 (例如<xref:System.Web.UI.WebControls.SqlDataSource>控制項或<xref:System.Web.UI.WebControls.ObjectDataSource>控制項) 或任何資料來源集合中實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，例如<xref:System.Data.DataView?displayProperty=fullName>， <xref:System.Collections.ArrayList?displayProperty=fullName>， <xref:System.Collections.Generic.List%601?displayProperty=fullName>，或其他集合型別。</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 使用下列方法之一將 DetailsView 控制項繫結至適當的資料來源類型:-將繫結至資料來源控制項，將設定<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>DetailsView 控制項的屬性<xref:System.Web.UI.Control.ID%2A>資料來源控制項的值。</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 在 DetailsView 控制項自動繫結至指定的資料來源控制項。 這是慣用的方法繫結至資料。      -將繫結至資料來源實作<xref:System.Collections.IEnumerable?displayProperty=fullName>介面，以程式設計方式設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>DetailsView 屬性控制與資料來源，然後呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName>       如需資料繫結的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)。      <a name=&quot;security&quot;></a># # 此控制項可以用來顯示使用者輸入，其中可能包含惡意用戶端指令碼的安全性。 請檢查從用戶端可執行的指令碼、 SQL 陳述式，或其他程式碼傳送之後，顯示應用程式中的任何資訊。 ASP.NET 提供使用者輸入來封鎖指令碼和 HTML 的輸入的要求驗證功能。 如需詳細資訊，請參閱[指令碼擅用概觀](~/add/includes/ajax-current-ext-md.md)。 驗證伺服器控制項也會提供以評估使用者輸入。 如需詳細資訊，請參閱[驗證伺服器控制項語法](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)。      <a name=&quot;data_operations&quot;></a># # 資料作業 DetailsView 控制項提供內建功能，允許使用者更新、 刪除、 插入和控制項中的項目頁面上。 在 DetailsView 控制項繫結至資料來源控制項，DetailsView 控制項可以讓您利用資料來源控制項的功能，並提供自動更新、 刪除、 插入和分頁功能。      > [!NOTE] > DetailsView 控制項可以為 update、 delete、 insert 和分頁作業與其他類型的資料來源提供的支援; 不過，您必須提供適當的事件處理常式中的這些作業的實作。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>， <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>，和<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>       DetailsView 控制項可自動將新增<xref:System.Web.UI.WebControls.CommandField>包含編輯、 刪除或新增按鈕所設定的資料列欄位<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A>， <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A>，或<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A>屬性`true`分別。</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> </xref:System.Web.UI.WebControls.CommandField> 不同於 刪除按鈕 （會刪除選取的記錄立即），按一下 編輯 或 新增 按鈕時，控制項進入編輯 DetailsView 或插入模式中，分別。 在編輯模式中，編輯 按鈕會取代的更新 和 取消 按鈕。 輸入適用於該欄位的資料類型的控制項 (例如<xref:System.Web.UI.WebControls.TextBox>或<xref:System.Web.UI.WebControls.CheckBox>控制項) 會顯示與使用者修改欄位的值。</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> 按一下 更新 按鈕更新資料來源中的記錄，而按一下取消&5;d; 按鈕會放棄所有變更。 同樣地，在插入模式下，新增 按鈕會取代 Insert 和 取消&5;d; 按鈕，並讓使用者輸入新記錄的值會顯示空白的輸入的控制項。      > [!NOTE] > 您也可以手動定義 update、 delete 和 insert 命令按鈕在<xref:System.Web.UI.WebControls.ButtonField>， <xref:System.Web.UI.WebControls.CommandField>，或<xref:System.Web.UI.WebControls.TemplateField>資料列欄位。</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.ButtonField> 在 DetailsView 控制項辨認按鈕與<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性設定為 「 編輯 」、 「 更新 」、 「 刪除 」、 「 新增 」、 「 插入 」，或 [取消]; 不過，您仍然必須提供功能自行。</xref:System.Web.UI.WebControls.Button.CommandName%2A> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>， <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>，和<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>       在 DetailsView 控制項提供分頁功能，可讓使用者巡覽至其他資料來源中的記錄。 啟用時，頁面導覽控制項會顯示在頁面巡覽區列。 若要啟用分頁，<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 您可以使用自訂頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>和<xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> </xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # 自訂使用者介面您可以自訂 DetailsView 控制項的外觀設定控制項的不同部分的樣式屬性。 下表列出您可以設定的樣式屬性。      |樣式屬性 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>|在 DetailsView 控制項中的交替資料列的樣式設定。</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 當設定這個屬性時，資料列會顯示在群組列，<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>設定<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>設定之間交替。 |  |<xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>|包含內建的命令按鈕的資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>|在 DetailsView 控制項時的資料列的樣式設定編輯模式。 |  |<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>|在 DetailsView 中所顯示的空白資料列樣式設定會控制當資料來源不包含任何記錄。 |  |<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>|頁尾資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>|標頭資料列的樣式設定。 |  |<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>|在 DetailsView 控制項時的資料列的樣式設定插入模式。 |  |<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>|頁面巡覽區列的樣式設定。 |  |<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>|在 DetailsView 控制項中的資料列的樣式設定。</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 當<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>屬性也設定時，資料列會顯示<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>設定<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>設定之間交替。 |  |<xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>|標頭資料行的樣式設定。 |     <a name=&quot;events&quot;> </a> # # 事件 DetailsView 控制項提供數個事件，您可以程式設計的。</xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 這可讓您在事件發生時執行自訂的常式。 下表列出 DetailsView 控制項所支援的事件。 在 DetailsView 控制項也會繼承這些事件及其基底類別︰ <xref:System.Web.UI.Control.DataBinding>， <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>， <xref:System.Web.UI.Control.Disposed>， <xref:System.Web.UI.Control.Init>， <xref:System.Web.UI.Control.Load>， <xref:System.Web.UI.Control.PreRender>，和<xref:System.Web.UI.Control.Render%2A>。</xref:System.Web.UI.Control.Render%2A> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Control.Load> </xref:System.Web.UI.Control.Init> </xref:System.Web.UI.Control.Disposed> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> </xref:System.Web.UI.Control.DataBinding>      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>|DetailsView 控制項中按下按鈕時，就會發生。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>|在所有發生<xref:System.Web.UI.WebControls.DetailsViewRow>DetailsView 控制項中建立物件。</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 此事件通常用來顯示之前修改記錄的值。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|按一下 刪除 按鈕時，但在 DetailsView 控制項從 資料來源中刪除記錄之後，就會發生。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 此事件通常用來檢查刪除作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|按一下 [刪除] 按鈕時，但之前 DetailsView 控制項中刪除記錄從資料來源時發生。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 此事件通常用來取消刪除作業。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|按一下 [插入] 按鈕時，但在 DetailsView 控制項才會插入記錄之後，就會發生。</xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 此事件通常用來檢查 insert 作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|按一下 [插入] 按鈕時，但之前 DetailsView 控制項才會插入記錄時發生。</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 此事件通常用來取消插入作業。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|按一下 [更新] 按鈕時，但在 DetailsView 控制項更新資料列之後，就會發生。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 此事件通常用來檢查更新作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|按一下 [更新] 按鈕時之前在 DetailsView, 控制項更新記錄時就會發生。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 此事件通常用來取消更新作業。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|在 DetailsView 控制項變更模式 （編輯、 插入或唯讀模式） 之後，就會發生。</xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 在 DetailsView 控制項變更模式時執行的工作通常使用這個事件。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|在 DetailsView 控制項變更 （編輯、 插入或唯讀模式） 的模式之前，就會發生。</xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 此事件通常用來取消模式變更。 |  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|發生於按下一個頁面巡覽區按鈕時，但之後 DetailsView 控制項控點的分頁作業。</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至不同的記錄控制項中,。 |  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|發生於按下一個頁面巡覽區按鈕時，但之前 DetailsView 控制項負責的分頁作業。</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |     <a name=&quot;Accessibility&quot;> </a> # # 有關如何設定這個控制項，使其產生符合網頁可及性標準標記的協助工具的資訊，請參閱[Visual Studio 和 ASP.NET 中的協助工具](~/add/includes/ajax-current-ext-md.md)和[ASP.NET 控制項和協助工具](~/add/includes/ajax-current-ext-md.md)。      <a name=&quot;DeclarativeSyntax&quot;></a># # 宣告式語法```   <asp:DetailsView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateInsertButton=&quot;True|False&quot;       AutoGenerateRows=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnablePagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <CommandRowStyle />           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FieldHeaderStyle />           <Fields>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Fields>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertRowStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle        />   </asp:DetailsView>   ```"
  example:
  - "The following code example demonstrates how to use to use a DetailsView control in combination with a <xref:System.Web.UI.WebControls.GridView> control for a simple master-detail scenario. It displays the details of an item selected in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[DetailsViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_1.aspx)]\n [!code-cs[DetailsViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example demonstrates how to use the DetailsView control to add, delete, and edit records.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_2.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_2.aspx)]  \n  \n The following code example demonstrates how to declaratively add row fields to the DetailsView control.  \n  \n [!code-vb[DetailsViewRowField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_3.aspx)]\n [!code-cs[DetailsViewRowField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:DetailsView runat="server" Width="125px" Height="50px"></{0}:DetailsView>")]

      public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>的新執行個體 若要動態地將<xref:System.Web.UI.WebControls.DetailsView>控制權傳輸至頁面，請建立新<xref:System.Web.UI.WebControls.DetailsView>物件、 設定其屬性，並再將它加入<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>集合的容器控制項，例如<xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.DetailsView> control to a page.  \n  \n [!code-vb[DetailsViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_161_1.aspx)]\n [!code-cs[DetailsViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_161_1.aspx)]"
  syntax:
    content: public DetailsView ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用分頁功能。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控制項具有內建的分頁功能，可讓使用者瀏覽至不同資料來源中的記錄。</xref:System.Web.UI.WebControls.DetailsView>       <xref:System.Web.UI.WebControls.DetailsView>控制項可以執行使用者介面 (UI) 和資料來源分頁。</xref:System.Web.UI.WebControls.DetailsView> UI 分頁功能可以搭配任何支援的資料來源物件<xref:System.Collections.ICollection?displayProperty=fullName>介面。</xref:System.Collections.ICollection?displayProperty=fullName> 每個分頁作業，<xref:System.Web.UI.WebControls.DetailsView>控制查詢的整個資料收集的資料來源，並選取要顯示的資料列基本上並捨棄其餘的資料。</xref:System.Web.UI.WebControls.DetailsView>       如果資料來源實作<xref:System.Web.UI.DataSourceView>和<xref:System.Web.UI.DataSourceView.CanPage%2A>屬性會傳回`true`、<xref:System.Web.UI.WebControls.DetailsView>控制項將會使用資料來源分頁，而不是 UI 分頁。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.DataSourceView.CanPage%2A> </xref:System.Web.UI.DataSourceView> 在此情況下，<xref:System.Web.UI.WebControls.DetailsView>控制項將會查詢每個分頁作業所需的資料列。</xref:System.Web.UI.WebControls.DetailsView> 因此，資料來源分頁會更有效率 UI 分頁。 只有<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件支援未經修改的資料來源分頁。</xref:System.Web.UI.WebControls.ObjectDataSourceView>       若要啟用分頁功能，將 AllowPaging 屬性設定為`true`。 您可以使用，以判斷基礎資料來源中的項目總數<xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 若要判斷目前所顯示的項目索引，請使用<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       啟用分頁時，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 頁面巡覽區列包含頁面導覽控制項，而且可以顯示在頂端、 底端，或最上層及控制項的底部。 頁面巡覽區列有兩個內建的頁面巡覽，顯示模式︰ 編號頁面和上一頁和下一頁連結 （預設值）。 編號的頁面模式會顯示個別頁面，讓使用者巡覽至特定頁面的連結。 下一頁和上一頁連結模式顯示控制項，可讓使用者巡覽至下一頁或上一頁。      > [!NOTE] ><xref:System.Web.UI.WebControls.DetailsView>控制項自動隱藏頁面巡覽列，當資料來源包含兩個以上的記錄。</xref:System.Web.UI.WebControls.DetailsView>       您可以使用來控制的設定 （例如頁面巡覽區顯示模式，在時間和頁面巡覽區控制項的文字標籤顯示的頁面連結數目） 的頁面巡覽列<xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 若要控制項目的出現的頁面巡覽列 （包括其背景色彩、 字型色彩和位置），使用<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> <xref:System.Web.UI.WebControls.DetailsView>控制項也可讓您定義的頁面巡覽列的自訂範本。</xref:System.Web.UI.WebControls.DetailsView> 如需有關如何建立自訂的頁面巡覽區列範本的詳細資訊，請參閱<xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>       <xref:System.Web.UI.WebControls.DetailsView>控制項提供數個事件，您可以使用分頁發生時執行自訂動作。</xref:System.Web.UI.WebControls.DetailsView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|發生於按一下其中一個頁面巡覽區按鈕的但之後<xref:System.Web.UI.WebControls.DetailsView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 此事件通常使用於您要執行的工作之後使用者巡覽至不同的記錄控制項中,。 |  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|發生於其中一個頁面巡覽區按鈕按一下時前,<xref:System.Web.UI.WebControls.DetailsView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 此事件通常用於取消的分頁作業。 |      AllowPaging 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the AllowPaging property to enable the paging capabilities of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[DetailsViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_117_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用分頁功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的替代資料列中的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 AlternatingRowStyle 屬性來控制資料中交替資料列的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 當設定這個屬性時，資料列會顯示交替<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>設定和 AlternatingRowStyle 設定。</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `AlternatingRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `AlternatingRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the AlternatingRowStyle property to specify the font and style settings for the alternating data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_779_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_779_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示的替代中的資料列樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否要刪除目前的記錄的內建控制項中顯示<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.DetailsView>控制項所繫結的物件，繼承自<xref:System.Web.UI.DataSourceView>和<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性會傳回`true`、<xref:System.Web.UI.WebControls.DetailsView>控制項可以讓您利用資料來源控制項的功能，並提供自動刪除功能。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 的<xref:System.Web.UI.WebControls.SqlDataSourceView>要刪除的資料、 物件<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName>基礎屬性<xref:System.Web.UI.WebControls.SqlDataSource>物件必須使用刪除查詢陳述式來設定。</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSourceView>       當 [autogeneratedeletebutton] 屬性設定為`true`、<xref:System.Web.UI.WebControls.CommandField>資料列與 [刪除] 按鈕的欄位會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 按一下 [刪除] 按鈕會永久地從資料來源中移除該記錄。      > [!NOTE] > 也必須設定<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>自動刪除功能運作的屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>       <xref:System.Web.UI.WebControls.DetailsView>控制項提供數個事件，可用來刪除記錄時執行自訂動作。</xref:System.Web.UI.WebControls.DetailsView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|發生於按一下的 [刪除] 按鈕，但之後<xref:System.Web.UI.WebControls.DetailsView>控制從資料來源中刪除記錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 此事件通常用來檢查刪除作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|發生於按一下的 [刪除] 按鈕前,<xref:System.Web.UI.WebControls.DetailsView>控制從資料來源中刪除記錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 此事件通常用來取消刪除作業。 |      [Autogeneratedeletebutton] 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateDeleteButton property to display the built-in control to delete the current record.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_743_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_743_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>顯示內建控制項刪除目前的記錄。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否顯示內建控制項來編輯目前的記錄，以在<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "當支援更新的資料來源控制項繫結至<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>控制項可以讓您利用資料來源控制項的功能，並提供自動更新功能。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 資料來源控制項來更新資料，其<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>屬性必須使用 update 查詢陳述式來設定。</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>       當 [autogenerateeditbutton] 屬性設定為`true`、<xref:System.Web.UI.WebControls.CommandField>資料列與 [編輯] 按鈕的欄位會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 按一下 [編輯] 按鈕將<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.DetailsView> 處於編輯模式時，每個繫結的欄位不是唯讀的控制項中顯示適當的輸入的控制項，例如<xref:System.Web.UI.WebControls.TextBox>控制欄位的資料類型。</xref:System.Web.UI.WebControls.TextBox> 這可讓使用者修改欄位的值。       按一下時，編輯 按鈕也會取代的更新 按鈕和 取消 按鈕。 按一下 [更新] 按鈕的任何值變更來更新資料來源中的記錄並傳回所指定模式的控制項<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 按一下取消&5;d; 按鈕會放棄所有值變更，並傳回控制項的預設模式。      > [!NOTE] > 將<xref:System.Web.UI.WebControls.DetailsView>以程式設計方式控制處於編輯模式，請使用<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>方法。</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> </xref:System.Web.UI.WebControls.DetailsView>       當<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性也會設為`true`、<xref:System.Web.UI.WebControls.DetailsView>控制會自動確定中指定的欄位<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>屬性是唯讀狀態。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>      > [!NOTE] > 除非您實作自己的更新功能，您必須設定<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>自動更新功能運作的屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>       您可以控制資料的外觀資料列時<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式下使用<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView> 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。       <xref:System.Web.UI.WebControls.DetailsView>控制項提供數個事件，可用來更新記錄時執行自訂動作。</xref:System.Web.UI.WebControls.DetailsView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|發生於按一下的 [更新] 按鈕，但之後<xref:System.Web.UI.WebControls.DetailsView>控制更新的記錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 此事件通常用來檢查更新作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|發生於按一下的 [更新] 按鈕前,<xref:System.Web.UI.WebControls.DetailsView>控制更新的記錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 此事件通常用來取消更新作業。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|<xref:System.Web.UI.WebControls.DetailsView>控制項變更模式之後，就會發生。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|發生於之前<xref:System.Web.UI.WebControls.DetailsView>控制項變更模式。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 此事件通常用來取消模式變更。 |      [Autogenerateeditbutton] 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateEditButton property to display the built-in controls to edit the current record.  \n  \n [!code-cs[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_383_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_383_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示內建控制項來編輯目前的記錄。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  id: AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，表示要插入新記錄的內建控制項是否會顯示在<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "當支援插入的資料來源控制項繫結至<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>控制項可以讓您利用資料來源控制項的功能，並提供自動插入功能。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 資料來源控制項插入資料，其<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>屬性必須設定搭配 insert 查詢陳述式。</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>       當 AutoGenerateInsertButton 屬性設定為`true`、<xref:System.Web.UI.WebControls.CommandField>與新的按鈕的資料列欄位會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 按一下 [新增] 按鈕將<xref:System.Web.UI.WebControls.DetailsView>在插入模式下的控制項。</xref:System.Web.UI.WebControls.DetailsView> 在插入模式下，每個繫結的欄位不是唯讀的控制項中顯示適當的輸入的控制項，例如<xref:System.Web.UI.WebControls.TextBox>控制欄位的資料類型。</xref:System.Web.UI.WebControls.TextBox> 這可讓使用者輸入新資料錄欄位的值。       按一下時，[新增] 按鈕也會取代 [插入] 按鈕和 [取消] 按鈕。 按一下 [插入] 按鈕將新記錄插入資料來源中，並將控制權傳回所指定的模式<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 按一下取消&5;d; 按鈕時，會放棄插入作業，並傳回控制項的預設模式。      > [!NOTE] > 若要以程式設計方式將一個資料列放在插入模式下，使用<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>方法。</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>       您可以控制的是在插入模式下使用的記錄外觀<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。       <xref:System.Web.UI.WebControls.DetailsView>控制項提供數個事件，您可以使用新的記錄插入時執行自訂動作。</xref:System.Web.UI.WebControls.DetailsView> 下表列出可用的事件。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|發生於按一下的 [插入] 按鈕，但之後<xref:System.Web.UI.WebControls.DetailsView>控制項插入資料錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 此事件通常用來檢查 insert 作業的結果。 |  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|發生於按一下的 [插入] 按鈕前,<xref:System.Web.UI.WebControls.DetailsView>控制項插入資料錄。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 此事件通常用來取消插入作業。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|<xref:System.Web.UI.WebControls.DetailsView>控制項變更模式之後，就會發生。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|發生於之前<xref:System.Web.UI.WebControls.DetailsView>控制項變更模式。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 此事件通常用來取消模式變更。 |      AutoGenerateInsertButton 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateInsertButton property to display the built-in controls to insert a new record in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_891_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_891_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateInsertButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示內建控制項以插入新的記錄。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  id: AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否自動產生並顯示在資料來源中的每個欄位的資料列欄位<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "在每個資料列<xref:System.Web.UI.WebControls.DetailsView>控制項由資料列欄位。</xref:System.Web.UI.WebControls.DetailsView> 當 AutoGenerateRows 屬性設定為`true`，每個欄位的資料來源中建立的自動產生的繫結資料列欄位。 每個欄位然後顯示資料列中為文字，每個欄位出現在資料來源中的順序。      > [!NOTE] > 自動產生的繫結資料列欄位不會加入至<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>       自動產生資料列提供快速簡便的方式來顯示記錄中的每個欄位。 不過，要使用的<xref:System.Web.UI.WebControls.DetailsView>控制項的進階的功能，您必須明確宣告中包含的資料列欄位<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>      > [!NOTE] > 明確宣告的資料列欄位可用於與自動產生的資料列欄位搭配使用。 同時使用時，明確宣告的資料列會首先呈現欄位，後面接著會自動產生的資料列欄位。       AutoGenerateRows 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateRows property to automatically create bound row fields for each field in the data source.  \n  \n [!code-cs[DetailsViewAutoGenerateRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_507_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_507_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要顯示自動產生的繫結資料列的每個欄位的欄位中的資料來源;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示的背景影像的 URL <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制項。"
  remarks: "若要指定要顯示的背景影像的 URL 使用 BackImageUrl 屬性<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 小於指定的映像是否<xref:System.Web.UI.WebControls.DetailsView>控制項，影像會並排顯示以在背景填滿。</xref:System.Web.UI.WebControls.DetailsView> 如果影像大於此控制項，則會裁剪影像。"
  example:
  - "The following code example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.DetailsView> control. You must provide your own image for this example to work.  \n  \n [!code-vb[DetailsViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1223_1.aspx)]\n [!code-cs[DetailsViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1223_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "若要顯示的背景影像的 URL <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制項。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件，表示內的底部頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 頁面巡覽區列包含控制項，讓使用者巡覽至其他記錄，並可顯示頂端、 底部，或同時上方和底部的控制項。 使用 BottomPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.DetailsViewRow>物件，表示內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] > BottomPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.DetailsView>控制項建立內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView>       這個屬性通常用於您需要以程式設計方式管理下方的頁面巡覽區列，例如當加入自訂內容。 後必須執行 BottomPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.DetailsView>控制項已呈現，否則<xref:System.Web.UI.WebControls.DetailsView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the BottomPagerRow property to access the bottom pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_133_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>表示內的底部頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要呈現的 HTML 標題項目中的文字<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 [標題] 屬性來指定要呈現的 HTML 標題項目中的文字<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 您指定的文字會提供具有可用來將控制項設為更容易存取的資料表描述的輔助技術裝置。       其他可存取性支援<xref:System.Web.UI.WebControls.DetailsView>控制項由提供<xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用<xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>屬性來指定 HTML 標題項目中的對齊方式<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>       標題的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_921_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_921_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "表示要呈現的 HTML 標題項目中的文字字串<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.DetailsView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平或垂直的位置中的 HTML 標題項目<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。"
  remarks: "使用 CaptionAlign 屬性來指定 HTML 標題項目中的水平或垂直位置<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 這個屬性被提供用來將控制項設為使用者的輔助技術裝置更容易存取。       這個屬性會設定使用其中一種<xref:System.Web.UI.WebControls.TableCaptionAlign>列舉值。</xref:System.Web.UI.WebControls.TableCaptionAlign> 下表列出可能的值。      |值 |描述 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|標題項目對齊資料表底部。 |  |`TableCaptionAlign.Left`|標題項目與資料表的左邊對齊。 |  |`TableCaptionAlign.NotSet`|未設定標題項目對齊。 |  |`TableCaptionAlign.Right`|標題項目對齊右邊的資料表。 |  |`TableCaptionAlign.Top`|標題項目會在資料表頂端對齊。 |      其他可存取性支援<xref:System.Web.UI.WebControls.DetailsView>控制項由提供<xref:System.Web.UI.WebControls.DetailsView.Caption%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.Caption%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用<xref:System.Web.UI.WebControls.DetailsView.Caption%2A>屬性來指定要呈現的 HTML 標題項目中的文字<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.Caption%2A>       CaptionAlign 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.DetailsView> control should be rendered on the left side of the control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_789_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_789_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格的內容和儲存格的框線之間的空間數量。"
  remarks: "您可以使用 CellPadding 屬性來控制的儲存格的內容與儲存格的框線之間的間距。 指定的填補量會加入至儲存格的四個邊。       在相同的資料行中的所有資料格<xref:System.Web.UI.WebControls.DetailsView>控制項具有相同的寬度。</xref:System.Web.UI.WebControls.DetailsView> 填補數量會套用到最寬的資料格和資料行中的所有資料格會調整為該儲存格的寬度。 同樣地，相同的資料列中的所有資料格具有相同的高度。 填補數量會套用到資料列中最高的儲存格和資料列中的所有資料格會調整為該儲存格的高度。 個別儲存格大小不能指定。       若要調整儲存格之間的間距，請使用<xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>"
  example:
  - "The following code example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1251_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1251_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格的內容和儲存格的框線之間的空間數量。 預設值為-1，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定儲存格之間的空間量。"
  remarks: "使用 CellSpacing 屬性來控制在相鄰的資料格之間的間距<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 垂直和水平，則會套用這個間距。 儲存格間距是一致的整個控制項。 不能指定個別資料格的資料列或資料行之間的間距。      > [!NOTE] > 如果您設定這個屬性的值大於 0，，然後再設定<xref:System.Web.UI.WebControls.DetailsView.GridLines%2A>屬性相鄰的資料格的框線之間顯示儲存格框線的值，顯示間隔。</xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 在此情況下，CellSpacing 屬性控制的差距大小。       若要調整儲存格的內容與儲存格的框線之間的間距，請使用<xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>"
  example:
  - "The following code example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_611_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_611_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "以像素的儲存格之間的空間數量。 預設值為 0。"
  overload: System.Web.UI.WebControls.DetailsView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  id: ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "交換器<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>指定模式的控制項。"
  remarks: "若要以程式設計方式切換使用 ChangeMode 方法<xref:System.Web.UI.WebControls.DetailsView>之間編輯、 插入和唯讀模式的控制項。</xref:System.Web.UI.WebControls.DetailsView> 這個方法也會更新<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>屬性以指定的模式。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`DetailsView.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於唯讀模式，這是一般顯示模式。 |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.DetailsView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/28d4c60e-b5c3-4418-86ab-_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/28d4c60e-b5c3-4418-86ab-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;></xref>值。"
  overload: System.Web.UI.WebControls.DetailsView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  id: CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定命令列中的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 CommandRowStyle 屬性來控制中的命令列的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 命令列包含要執行作業，例如編輯、 刪除和插入的命令按鈕。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `CommandRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `CommandRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the CommandRowStyle property to specify the font and style settings for the command row in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCommandRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_313_1.aspx)]\n [!code-cs[DetailsViewCommandRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_313_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示命令列中的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;></xref>物件，代表使用指定的欄位屬性的自動產生的資料列欄位。"
  remarks: "CreateAutoGeneratedRow 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立使用指定的欄位屬性的自動產生的資料列欄位。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref> ，其中包含針對屬性<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref>。"
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> ，其中包含所指定的欄位屬性<code> fieldProperties </code>參數。"
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  id: CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立一組指定的資料項目的自動產生的資料列欄位。"
  remarks: "當<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性設定為`true`，CreateAutoGeneratedRows 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立一組自動產生資料列的目前資料的項目欄位。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>"
  syntax:
    content: protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);
    parameters:
    - id: dataItem
      type: System.Object
      description: "要建立的自動產生的資料列欄位的資料項目。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，其中包含指定的資料項目的自動產生的資料列欄位。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制項沒有任何屬性或要從中產生欄位的屬性。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立用來呈現的控制項階層架構<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "CreateChildControls 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立控制項的控制項階層架構。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>表示的資料來源<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示資料繫結; 期間呼叫這個方法否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int32
      description: "資料來源中的項目數目。"
  overload: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code> returns a null <xref href=\"System.Web.UI.DataSourceView\"></xref>.  \n  \n \\- or -  \n  \n d<code>ataSource</code> is not an <xref:System.Collections.ICollection> and cannot return a total row count.  \n  \n \\- or -  \n  \n <code>dataBinding</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface.  \n  \n \\- or -  \n  \n <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <xref:System.Web.UI.WebControls.DetailsView.AllowPaging*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立預設資料表樣式物件，以便<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "CreateControlStyle 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>來建立其預設資料表樣式物件的控制。</xref:System.Web.UI.WebControls.DetailsView> 除了預設樣式設定<xref:System.Web.UI.WebControls.TableStyle>物件，這個方法也設定下表中的屬性。</xref:System.Web.UI.WebControls.TableStyle>      |屬性 |初始值 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>|`GridLines.Both`|  |<xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|</xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A></xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> ，其中包含的預設資料表樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;></xref>取得傳遞給 Select 命令的物件。"
  remarks: "CreateDataSourceSelectArguments 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立<xref:System.Web.UI.DataSourceSelectArguments>取得傳遞給 Select 命令的物件。</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>傳遞給 Select 命令"
  overload: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  id: CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立一組完整的自動產生和使用者定義的資料列欄位用來產生在控制項階層架構。"
  remarks: "CreateFieldSet 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立一組完整的資料列控制項的欄位。</xref:System.Web.UI.WebControls.DetailsView> 如果<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性設定為`true`為自動產生資料列欄位會附加至包含的使用者定義的資料列欄位<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 若要建立的自動產生的資料列欄位，根據資料的項目，請傳入`true`如`useDataSource`參數; 否則會自動產生的資料列欄位會根據建立的現有資料列欄位控制項中的屬性。"
  syntax:
    content: protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);
    parameters:
    - id: dataItem
      type: System.Object
      description: "要建立資料列欄位的資料項目。"
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要建立的自動產生的資料列欄位; 使用資料項目否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>包含自動產生和使用者定義的資料列的欄位指定的資料項目。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件使用指定的項目索引、 資料列類型和資料列狀態。"
  remarks: "CreateRow 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立<xref:System.Web.UI.WebControls.DetailsViewRow>物件。</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "若要顯示之資料項目的以零為起始的索引。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>具有指定的項目之索引、 資料列類型和資料列狀態。"
  overload: System.Web.UI.WebControls.DetailsView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立包含資料表的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "CreateTable 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立資料表做為控制項的容器。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> ，代表包含資料表的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前的資料輸入模式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 CurrentMode 屬性來判斷是否<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯、 插入或唯讀模式。</xref:System.Web.UI.WebControls.DetailsView> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於唯讀模式，這是一般顯示模式。 |      這個值通常自動設定<xref:System.Web.UI.WebControls.DetailsView>時新增、 更新、 插入、 刪除或取消命令按鈕控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 您可以使用，以也以程式設計方式變更模式<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>方法。</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>       當<xref:System.Web.UI.WebControls.DetailsView>控制項變更模式，則下表中的事件會引發。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您建立自訂事件處理常式，在事件發生時執行常式。      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|發生於按一下變更<xref:System.Web.UI.WebControls.DetailsView>控制項模式的命令按鈕時，但模式變更之後。 |  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|發生於變更的模式，在命令按鈕<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，模式變更之前，但。 |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged>"
  example:
  - "The following code example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.DetailsView> control is in edit, insert, or read-only mode. If the user attempts to navigate to a different record while the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode, the paging operation is canceled.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_883_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_883_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;></xref>值。"
  overload: System.Web.UI.WebControls.DetailsView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>方法的基底類別。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>"
  remarks: "資料繫結控制項應該覆寫<xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>而不是資料繫結。</xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料的項目繫結至<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "存取資料項目的 DataItem 屬性繫結至使用<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 資料的項目通常用於直接存取目前記錄的欄位值。 型別<xref:System.Object>傳回此屬性會根據資料來源而有所不同。</xref:System.Object> 例如，當<xref:System.Web.UI.WebControls.SqlDataSource>控制項繫結至<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Data.DataRowView>物件傳回。</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!NOTE] > 只在發生資料繫結之後，便使用這個屬性。 資料繫結之前，這個屬性會傳回`null`。 這個屬性時，也不適用<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式，並傳回`null`。</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-cs[DetailsViewDataItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_505_1.aspx)]\n [!code-vb[DetailsViewDataItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_505_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>，代表資料的項目繫結至<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得基礎資料來源中的項目數目。"
  remarks: "啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`)，使用 DataItemCount 屬性來判斷基礎資料來源中的記錄總數。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>      > [!NOTE] > 因為<xref:System.Web.UI.WebControls.DetailsView>控制項會顯示一次只有一筆記錄，此值也會對應至顯示資料來源中的每一筆記錄所需的分頁總數。</xref:System.Web.UI.WebControls.DetailsView>       若要判斷目前的記錄從基礎資料來源的索引，請使用<xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>"
  example:
  - "The following code example demonstrates how to use the DataItemCount property to determine the number of items in the data source. This value is used to display the page count in a <xref:System.Web.UI.WebControls.Label> control contained within a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_215_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_215_1.aspx)]"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "基礎資料來源中的項目數目。"
  overload: System.Web.UI.WebControls.DetailsView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得要顯示在項目的索引<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>從基礎資料來源的控制項。"
  remarks: "啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`)，使用 DataItemIndex 屬性來判斷目前所顯示的記錄的索引。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 您也可以使用這個屬性，以程式設計方式變更顯示的記錄。      > [!NOTE] > 啟用分頁功能時，您也可以使用這個屬性來判斷顯示; 記錄的頁面數目但是要注意這個屬性是以零為起始。       若要判斷資料來源中的項目總數，請使用<xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>"
  example:
  - "The following code example demonstrates how to use the DataItemIndex property to determine the index of the current item in the data source. This value is used to display the current page number in a <xref:System.Web.UI.WebControls.Label> control contained in a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1295_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1295_1.aspx)]"
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "以零為起始的索引中所顯示的資料項目的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>從基礎資料來源的控制項。"
  overload: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref>物件，代表顯示的資料錄的主索引鍵。"
  remarks: "當<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>設定屬性，則<xref:System.Web.UI.WebControls.DetailsView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>物件，代表目前記錄的索引鍵欄位。</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 使用 DataKey 屬性來取得這<xref:System.Web.UI.WebControls.DataKey>物件。</xref:System.Web.UI.WebControls.DataKey> 這個屬性通常用來取得索引鍵和其對應的值中指定的欄位<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>      > [!NOTE] >，請您也可以使用<xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>屬性來判斷中所列的第一個索引鍵欄位值<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>"
  example:
  - "The following code example demonstrates how to use the DataKey property to determine the key field and corresponding value for the current record.  \n  \n [!code-cs[DetailsViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_369_1.aspx)]\n [!code-vb[DetailsViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_369_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> ，代表顯示的資料錄的主索引鍵。"
  overload: System.Web.UI.WebControls.DetailsView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定陣列，其中包含資料來源的索引鍵欄位的名稱。"
  remarks: "請使用 DataKeyNames 屬性指定以逗號分隔清單的欄位名稱代表資料來源的主索引鍵。 當設定的 DataKeyNames 屬性時，<xref:System.Web.UI.WebControls.DetailsView>控制項會自動建立<xref:System.Web.UI.WebControls.DataKey>物件，代表目前記錄的索引鍵欄位，並將其儲存在<xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.DetailsView> 當<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性也會設為`true`、<xref:System.Web.UI.WebControls.DetailsView>控制會自動確保 DataKeyNames 屬性中指定的欄位為唯讀。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>      > [!NOTE] > 您必須設定自動更新、 刪除和插入功能 DataKeyNames 屬性<xref:System.Web.UI.WebControls.DetailsView>運作的控制項。</xref:System.Web.UI.WebControls.DetailsView>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性的資料列欄位設定為`false`，資料列不會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制和資料列的資料不會反覆存取用戶端。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您想要看不到構成來回行程的資料列資料，請將欄位名稱加入至 DataKeyNames 屬性。"
  example:
  - "The following code example demonstrates how to use the DataKeyNames property to identify the key field for the data source bound to the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_209_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_209_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含資料來源的索引鍵欄位的名稱。"
  overload: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定的預設資料輸入模式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 DefaultMode 屬性來指定是否<xref:System.Web.UI.WebControls.DetailsView>控制項的編輯或 insert 作業執行後返回編輯、 插入或唯讀模式。</xref:System.Web.UI.WebControls.DetailsView> 根據預設，<xref:System.Web.UI.WebControls.DetailsView>傳回以唯讀模式的控制項; 不過，您可以保留<xref:System.Web.UI.WebControls.DetailsView>控制中編輯，或插入模式下，此屬性設定為適當的值。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 下表列出不同的模式值。      |模式 |描述 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式，可讓使用者更新記錄的值。 |  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式下，可讓使用者將新記錄新增至資料來源。 |  |`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控制項處於唯讀模式，這是一般顯示模式。 |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the DefaultMode property to specify that the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode after a record has been updated.  \n  \n [!code-cs[DetailsViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1138_1.aspx)]\n [!code-vb[DetailsViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1138_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_DetailsViewMode.ReadOnly&quot; name=&quot;DetailsViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "刪除現有的記錄從資料來源。"
  remarks: "如果不會刪除<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式。</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>之前刪除的項目，就會引發事件。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`取消刪除。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行刪除作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "在頁面控制項執行刪除作業時所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定資料的外觀資料列時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項處於編輯模式。"
  remarks: "若要控制資料的外觀 EditRowStyle 屬性的資料列時使用<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式。</xref:System.Web.UI.WebControls.DetailsView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EditRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the EditRowStyle property to specify the font and style settings for the data rows when a <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-vb[DetailsViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_539_1.aspx)]\n [!code-cs[DetailsViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_539_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，代表資料的樣式的資料列時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項處於編輯模式。"
  overload: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的空白資料列時，資料來源繫結至顯示外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項並未包含任何記錄。"
  remarks: "使用 EmptyDataRowStyle 屬性來控制中的空白資料列的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 繫結至控制項的資料來源不包含任何記錄時，會顯示空白資料列。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `EmptyDataRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the EmptyDataRowStyle property to specify the font and style settings for the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_578_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_578_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> ，可讓您設定空白資料列的外觀。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定使用者定義的內容，來轉譯時的空白資料列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.DetailsView> 您可以使用 EmptyDataTemplate 屬性來定義您自己的自訂使用者介面 (UI)，空白資料列。 若要指定 null 的資料列的自訂範本，先將`<EmptyDataTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 然後，您可以列出範本的開頭和結尾之間的內容`<EmptyDataTemplate>`標記。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 或者，設定為空的資料列使用內建的 UI<xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>和 EmptyDataTemplate 屬性會設定、 EmptyDataTemplate 屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>"
  example:
  - "The following code example demonstrates how to use the EmptyDataTemplate property to create a custom empty data row.  \n  \n [!code-vb[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_788_1.aspx)]\n [!code-cs[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_788_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> ，其中包含空白資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定来顯示空的資料列中的文字呈現時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項所繫結至資料來源不包含任何記錄。"
  remarks: "空白資料列會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制當繫結至控制項的資料來源不包含任何記錄。</xref:System.Web.UI.WebControls.DetailsView> 您可以使用 EmptyDataText 屬性來指定要顯示空的資料列中的文字。 若要控制的空白資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI)，空白資料列，藉由設定<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>      > [!NOTE] > 如果這兩個 EmptyDataText 和<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>       EmptyDataText 的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_617_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_617_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "要在空白資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否已啟用資料模型的驗證。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料模型驗證已啟用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  id: EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否使用用戶端的回呼函式中的分頁作業<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "您可以使用 EnablePagingCallbacks 屬性來指定是否分頁作業將會使用用戶端回呼函式。 啟用時，分頁是使用回撥功能，可避免需要將頁面回傳至伺服器來執行。      > [!NOTE] > 用戶端分頁功能，才支援 Microsoft Internet Explorer 5.5 及更新版本及 Netscape 6.0 及更新版本。       EnablePagingCallbacks 的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the EnablePagingCallbacks property to enable the use of client-side callback functions for paging operations.  \n  \n [!code-vb[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_800_1.aspx)]\n [!code-cs[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_800_1.aspx)]"
  syntax:
    content: public virtual bool EnablePagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用的分頁作業; 用戶端的回呼函式否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>後確認資料清單控制項需要資料繫結，以及是否已指定有效的資料來源控制項的方法。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>"
  remarks: "資料繫結不會發生<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取顯示每個欄位的值，並將它們儲存在指定<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>物件。"
  remarks: "ExtractRowValues 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項，以擷取每個欄位的值。</xref:System.Web.UI.WebControls.DetailsView> 它們可用於資料來源作業的值可以。 您可以指定擷取的值使用是否包含唯讀欄位和索引鍵欄位`includeReadOnlyFields`和`includePrimaryKey`參數，分別。"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>用來儲存欄位值。"
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包括唯讀欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含主索引鍵欄位或欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  id: FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的標頭資料行的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 FieldHeaderStyle 屬性來控制中的欄位標頭資料行的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 這是包含資料值的欄位名稱的資料行。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `FieldHeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `FieldHeaderStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the FieldHeaderStyle property to specify the font and style settings for the field header row.  \n  \n [!code-vb[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_602_1.aspx)]\n [!code-cs[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_602_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的標頭資料行樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Fields
  id: Fields
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>物件，表示中的明確宣告的資料列欄位<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "當您明確宣告的資料列欄位<xref:System.Web.UI.WebControls.DetailsView>控制項，這些欄位會儲存在 欄位屬性 （集合） 的資料列。</xref:System.Web.UI.WebControls.DetailsView> Fields 集合也可讓您以程式設計方式管理明確宣告的資料列的集合。      > [!NOTE] > 明確宣告的資料列欄位可用於與自動產生的資料列欄位搭配使用。 同時使用時，明確宣告的資料列會首先呈現欄位，後面接著會自動產生的資料列欄位。 自動產生欄位不會加入至欄位集合的資料列。       不同的資料列欄位型別決定控制項中的資料列的行為。 下表會顯示欄位集合中可用的欄位型別不同的資料列。      |資料列欄位型別 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|顯示為文字資料來源中欄位的值。 |  |<xref:System.Web.UI.WebControls.ButtonField>|顯示命令按鈕在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.BoundField> 這可讓您顯示具有自訂按鈕控制項，例如新增或移除按鈕的資料列。 |  |<xref:System.Web.UI.WebControls.CheckBoxField>|顯示在核取方塊<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CheckBoxField> 這個資料列的欄位型別通常用於顯示具有布林值的欄位。 |  |<xref:System.Web.UI.WebControls.CommandField>|顯示內建命令按鈕來執行編輯、 插入或刪除<xref:System.Web.UI.WebControls.DetailsView>控制項中的作業。 |  |<xref:System.Web.UI.WebControls.HyperLinkField>|顯示為超連結資料來源中欄位的值。</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 這個資料列的欄位型別可讓您將第二個欄位繫結至超連結的 URL。 |  |<xref:System.Web.UI.WebControls.ImageField>|<xref:System.Web.UI.WebControls.DetailsView>控制項中顯示映像。 |  |<xref:System.Web.UI.WebControls.TemplateField>|顯示使用者定義的內容中的資料列的<xref:System.Web.UI.WebControls.DetailsView>控制項根據指定的範本。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.ImageField> 這個資料列的欄位型別可讓您建立自訂的資料列欄位。 |      明確宣告的資料列欄位<xref:System.Web.UI.WebControls.DetailsView>控制，第一組<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>屬性`false`。</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> </xref:System.Web.UI.WebControls.DetailsView> 接下來，加入 開啟和關閉`<Fields>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 最後，列出您想要包含在開頭和結尾之間的資料列欄位`<Fields>`標記。 資料列欄位會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制資料列欄位會顯示欄位集合中的順序。</xref:System.Web.UI.WebControls.DetailsView>       雖然您可以程式設計方式加入資料列欄位，欄位集合，會比較容易列出的資料列欄位以宣告方式在<xref:System.Web.UI.WebControls.DetailsView>控制，然後使用<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>每個資料列欄位来顯示或隱藏資料列欄位的屬性。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.DetailsView>       如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性的資料列欄位設定為`false`，資料列不會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制和資料列的資料不會反覆存取用戶端。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 如果您想要看不到構成來回行程的資料列資料，加入欄位名稱<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>"
  example:
  - "The following code example demonstrates how to declaratively add row fields to the Fields collection of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_545_1.aspx)]\n [!code-vb[DetailsViewFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_545_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>包含中的所有明確宣告的資料列欄位<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.Fields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件，代表頁尾資料列中的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>或<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 FooterRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.DetailsViewRow>物件，代表頁尾資料列。</xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView.FooterRow%2A>屬性之後，才可被<xref:System.Web.UI.WebControls.DetailsView>控制項建立頁尾資料列中的<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.FooterRow%2A>       這個屬性通常用於您需要以程式設計方式操作頁尾資料列，例如當加入自訂內容。 後必須執行 FooterRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.DetailsView>控制項已呈現，否則<xref:System.Web.UI.WebControls.DetailsView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>       若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>"
  example:
  - "The following code example demonstrates how to use the FooterRow property to access the footer row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom footer row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_51_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>頁尾資料列中的表示<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定頁尾資料列中的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>或<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 FooterStyle 屬性來控制頁尾資料列中的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `FooterStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify the font and style settings for the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_989_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_989_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示頁尾資料列中的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁尾資料列中的使用者定義內容<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>或 FooterTemplate 屬性設定。</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> 您可以使用 FooterTemplate 屬性頁尾資料列的檔案，以定義您自己的自訂使用者介面 (UI)。 若要指定頁尾資料列的自訂範本，先將`<FooterTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 然後，您可以列出範本的開頭和結尾之間的內容`<FooterTemplate>`標記。 若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 或者，您可以只顯示文字頁尾資料列中藉由設定<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>和 FooterTemplate 屬性會設定、 FooterTemplate 屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom footer row.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1257_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1257_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含頁尾資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要在頁尾資料列中顯示的文字<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "頁尾資料列會顯示在底部<xref:System.Web.UI.WebControls.DetailsView>負責控制何時 FooterText 或<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 FooterText 屬性來指定要在頁尾資料列中顯示的文字。 若要控制頁尾資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI) 頁尾資料列設定<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>      > [!NOTE] > 如果這兩個 FooterText 和<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>       FooterText 的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1250_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1250_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "要在頁尾資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "傳回回呼事件以控制項為目標的結果。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>擷取資料和 GetCallbackResult 方法所擷取的資料傳回至控制項。</xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回呼的結果。"
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "傳回使用指定的引數所建立的回呼字串。"
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "初始化回呼控制項。"
    - id: argument
      type: System.String
      description: "回呼的程式碼。"
    return:
      type: System.String
      description: "要傳送至用戶端的完整回呼字串。"
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定格線樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用格線屬性來指定格線樣式<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 下表列出可用的樣式。      |樣式 |描述 |  |-----------|-----------------|  |`GridLines.None`|不顯示格線。 |  |`GridLines.Horizontal`|顯示水平格線。 |  |`GridLines.Vertical`|顯示垂直格線。 |  |`GridLines.Both`|顯示水平和垂直格線。 |"
  example:
  - "The following code example demonstrates how to use the GridLines property to hide all gridlines in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1023_1.aspx)]\n [!code-cs[DetailsViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1023_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.GridLines&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件，表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>或<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 HeaderRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.DetailsViewRow>物件，表示標頭資料列。</xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] ><xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>屬性之後，才可被<xref:System.Web.UI.WebControls.DetailsView>控制項建立中的標頭資料列<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>       這個屬性通常用於您需要以程式設計方式操作標頭資料列，例如當加入自訂內容。 後必須執行 HeaderRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.DetailsView>控制項已呈現，否則<xref:System.Web.UI.WebControls.DetailsView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the HeaderRow property to access the header row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom header row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_730_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_730_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>表示中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的標頭資料列的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>或<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 HeaderStyle 屬性來控制中的標頭資料列的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `HeaderStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify the font and style settings for the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的標頭資料列的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定使用者定義的內容中的標頭資料列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.DetailsView>負責控制何時<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>或 HeaderTemplate 屬性設定。</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> 您可以使用 HeaderTemplate 屬性標頭資料列的檔案，以定義您自己的自訂使用者介面 (UI)。 指定標頭資料列的自訂範本，請先將`<HeaderTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 然後，您可以列出範本的開頭和結尾之間的內容`<HeaderTemplate>`標記。 若要控制標頭資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 或者，您可以只顯示文字標頭列中藉由設定<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>      > [!NOTE] > 如果兩個<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>、 HeaderTemplate 屬性會設定 HeaderTemplate 屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom header row.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_748_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_748_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含標頭資料列的自訂內容。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示的標頭資料列中的文字<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "標頭資料列會顯示在頂端<xref:System.Web.UI.WebControls.DetailsView>負責控制何時 HeaderText 或<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>屬性設定。</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView> 使用 HeaderText 屬性來指定要在標頭資料列中顯示的文字。 若要控制標頭資料列的樣式，請使用<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 或者，您可以定義您自己的自訂使用者介面 (UI) 標頭資料列藉由設定<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>而不是這個屬性的屬性。</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>      > [!NOTE] > 如果這兩個 HeaderText 和<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>設定的屬性，<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>屬性會優先。</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>       HeaderText 的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_786_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_786_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "要在標頭資料列中顯示的文字。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定水平對齊<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>頁面上的控制項。"
  remarks: "使用指定的水平對齊 HorizontalAlign 屬性<xref:System.Web.UI.WebControls.DetailsView>頁面內控制項。</xref:System.Web.UI.WebControls.DetailsView> 下表列出不同的水平對齊樣式。      |HorizontalAlign 值 |描述 |  |---------------------------|-----------------|  |`HorizontalAlign.NotSet`|尚未設定<xref:System.Web.UI.WebControls.DetailsView>控制項的水平對齊。 |  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.DetailsView>控制項是在頁面上靠左對齊。 |  |`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.DetailsView>控制項置於頁面。 |  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.DetailsView>控制項是在頁面上靠右對齊。 |  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.DetailsView>控制項對齊頁面的左、 右邊界。 |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.DetailsView> control should be centered on the page.  \n  \n [!code-cs[DetailsViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_375_1.aspx)]\n [!code-vb[DetailsViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_375_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "會建立頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "InitializePager 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來建立頁面巡覽區列。</xref:System.Web.UI.WebControls.DetailsView> 它會建立<xref:System.Web.UI.WebControls.TableCell>物件，其中包含使用之屬性的導覽控制項<xref:System.Web.UI.WebControls.PagedDataSource>中所含物件`pagedDataSource`參數。</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 資料格就會加入至指定的資料列`row`參數。"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>包含頁面巡覽區資料列。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> ，其中包含目前頁面的資料。"
  overload: System.Web.UI.WebControls.DetailsView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  id: InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件。"
  remarks: "InitializeRow 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>初始化指定的控制項<xref:System.Web.UI.WebControls.DetailsViewRow>物件。</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView> 資料列會初始化為<xref:System.Web.UI.WebControls.DataControlField>中所含物件`field`參數。</xref:System.Web.UI.WebControls.DataControlField>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>初始化。"
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>對應於資料列。"
  overload: System.Web.UI.WebControls.DetailsView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將目前的記錄插入資料來源中。"
  remarks: "當<xref:System.Web.UI.WebControls.DetailsView>控制項在插入模式下，請使用 InsertItem 方法來以程式設計方式插入資料來源中的 目前的記錄。</xref:System.Web.UI.WebControls.DetailsView> 這個方法通常使用於您要插入的外部目前從資料錄<xref:System.Web.UI.WebControls.DetailsView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] ><xref:System.Web.UI.WebControls.DetailsView>控制項必須在插入模式下呼叫，否則這個方法時<xref:System.Web.HttpException>擲回例外狀況。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.DetailsView>       若要指定是否要將頁面驗證執行插入作業之前，請使用`causesValidation`參數。 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>和<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemInserted>"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行頁面驗證時呼叫的方法;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in insert mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行插入作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "在頁面控制項執行插入作業時所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.DetailsView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>負責控制何時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項處於插入模式。"
  remarks: "資料列中<xref:System.Web.UI.WebControls.DetailsView>使用這個樣式來顯示控制項時<xref:System.Web.UI.WebControls.DetailsView>控制項處於插入模式。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 您可以使用 InsertRowStyle 屬性來控制在插入模式下的資料列的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `InsertRowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `InsertRowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the InsertRowStyle property to specify the font and style settings for the data rows when the <xref:System.Web.UI.WebControls.DetailsView> control is in insert mode.  \n  \n [!code-cs[DetailsViewInsertRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_63_1.aspx)]\n [!code-vb[DetailsViewInsertRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_63_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的資料列的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>負責控制何時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項處於插入模式。"
  overload: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷指定的資料類型是否可以繫結中的欄位<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "IsBindableType 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項來決定指定的資料類型是否可以繫結至控制項中的欄位。</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>控制項支援下列資料類型︰ 所有的基本資料類型，例如<xref:System.Boolean>， <xref:System.Byte>，和<xref:System.Int32><xref:System.DateTime><xref:System.Decimal><xref:System.Guid><xref:System.String></xref:System.String>       </xref:System.Guid>       </xref:System.Decimal>       </xref:System.DateTime>       </xref:System.Int32></xref:System.Byte></xref:System.Boolean></xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>，代表要檢查的資料類型。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料類型可以繫結中的欄位<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項等控制項，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內按鈕<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時。"
  remarks: "中的按鈕時，會引發 ItemCommand 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>物件傳遞至事件處理常式，可讓您判斷命令名稱並按之按鈕的命令引數。</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> 若要判斷目前記錄的索引，請使用<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.DetailsView> control. When the user clicks the Add Contact button, the item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_53_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_53_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DetailsViewCommandEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在中建立的記錄時，就會發生<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "ItemCreated 事件的記錄建立在每次都會引發<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 當第一次呈現控制項，或當使用者巡覽至另一筆記錄，也可能會發生。 您可以使用此事件以提供執行自訂的常式，例如加入到資料列的自訂內容時就會發生此事件的事件處理常式。       您可以存取頁首、 頁尾和頁面巡覽區中的資料列<xref:System.Web.UI.WebControls.DetailsView>控制項使用<xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>， <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>， <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>，或<xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A>屬性，分別。</xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> </xref:System.Web.UI.WebControls.DetailsView> 若要存取其中的資料列，使用<xref:System.Web.UI.WebControls.DetailsView.Rows%2A>集合。</xref:System.Web.UI.WebControls.DetailsView.Rows%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemCreated event to update a custom pager row with current paging statistics.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_31_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_31_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的 [刪除] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但之後刪除作業。"
  remarks: "中的 [刪除] 按鈕時，會引發 ItemDeleted 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，但之後刪除作業。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如檢查刪除作業的結果，此事件發生時的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs>物件傳遞至事件處理常式，可讓您判斷受影響的資料列和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs> 您還可以指出是否已處理例外狀況的事件處理常式設定<xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemDeleted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs a delete operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_62_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的 [刪除] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但刪除作業之前。"
  remarks: "中的 [刪除] 按鈕時，會引發 ItemDeleting 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，但刪除作業之前。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如取消刪除作業時就會發生此事件的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs>物件傳遞至事件處理常式，可讓您判斷要刪除記錄的索引，並指出應該取消刪除作業。</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs> 若要取消刪除作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以使用操作<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A>集合，如有必要之前的值會傳遞至資料來源,。</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemDeleting event to cancel the delete operation if the user attempts to delete the last item from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[DetailsViewItemDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_56_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內插入按鈕<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但是在插入作業之後。"
  remarks: "ItemInserted 事件引發時插入按鈕內<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，但是在插入作業之後。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如檢查插入作業的結果，此事件發生時的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs>物件傳遞至事件處理常式，可讓您判斷受影響的資料列和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs> 您還可以指出是否已處理例外狀況的事件處理常式設定<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A> 若要保留在插入模式下的控制項，在插入作業之後，設定<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemInserted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an insert operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_55_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生於內插入按鈕<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但在 insert 作業之前。"
  remarks: "中的 [插入] 按鈕時，會引發 ItemInserting 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，但在 insert 作業之前。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如取消 insert 作業時就會發生此事件的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs>物件傳遞至事件處理常式，可讓您指出表示應該取消這項插入作業。</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs> 若要取消的插入作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以使用操作<xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>集合，如有必要之前的值會傳遞至資料來源,。</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemInserting event to HTML-encode the values entered by the user before a new record is added to the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_70_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_70_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在 [更新] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但是在更新作業之後。"
  remarks: "中的 [更新] 按鈕時，會引發 ItemUpdated 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，但是在更新作業之後。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如檢查更新作業的結果，此事件發生時的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>物件傳遞至事件處理常式，可讓您判斷受影響的資料列和任何例外狀況可能發生的數目。</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 您還可以指出是否已處理例外狀況的事件處理常式設定<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 為了讓控制項處於編輯模式，在更新作業之後，設定<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemUpdated event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an update operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_43_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_43_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "在 [更新] 按鈕時，就會發生<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>按一下控制項時，但在更新作業之前。"
  remarks: "中的 [更新] 按鈕時，會引發 ItemUpdating 事件<xref:System.Web.UI.WebControls.DetailsView>按一下控制項時，更新作業之前，但。</xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如取消更新作業時就會發生此事件的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs>物件傳遞至事件處理常式，可讓您決定更新記錄的索引，並指出應該取消更新作業。</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs> 若要取消更新作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您也可以使用操作<xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A>， <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A>，和<xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A>集合，如有必要之前的值會傳遞至資料來源,。</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A> 使用這些集合的常見方式是將 HTML 編碼再將它們儲存在資料來源中，使用者所提供的值。 這有助於防止指令碼資料隱碼攻擊。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ItemUpdating event to HTML-encode the values entered by the user before a record is updated in the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState*>屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "LoadControlState 方法用來載入中的屬性狀態<xref:System.Web.UI.WebControls.DetailsView>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 主要由控制項開發人員使用此方法擴充時<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示的狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "載入先前儲存的檢視狀態的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](~/add/includes/ajax-current-ext-md.md)。       LoadViewState 方法用來載入先前儲存的檢視狀態的<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>表示的狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項嘗試變更之間編輯、 插入和唯讀模式，但之後<xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>更新屬性。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>"
  remarks: "ModeChanged 引發時<xref:System.Web.UI.WebControls.DetailsView>控制項嘗試變更之間編輯、 插入和唯讀模式，但之後<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>更新屬性。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，如同步處理的事件處理常式<xref:System.Web.UI.WebControls.DetailsView>與另一個控制項，此事件發生時的控制項。</xref:System.Web.UI.WebControls.DetailsView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ModeChanged event to display the current mode in the header row.  \n  \n [!code-cs[DetailsViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_76_1.aspx)]\n [!code-vb[DetailsViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_76_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項嘗試前編輯、 插入和唯讀模式之間變更<xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>更新屬性。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>"
  remarks: "ModeChanging 引發時<xref:System.Web.UI.WebControls.DetailsView>控制項嘗試前編輯、 插入和唯讀模式之間變更<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>更新屬性。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如取消模式變更時就會發生此事件的事件處理常式。       A<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs>物件傳遞至事件處理常式，可讓您判斷新的模式，來判斷模式變更是否已取消編輯作業，使用者的結果，或取消模式變更。</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs> 若要判斷新的模式，請使用<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A> 若要判斷模式變更是否取消編輯作業之使用者的結果，請使用<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A> 您可以藉由設定取消模式變更<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the ModeChanging event to disable the paging feature when the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-cs[DetailsViewModeChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[DetailsViewModeChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewModeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定是否要在頁面的使用者介面 (UI) 伺服器控制項階層架構中向上傳遞 Web 伺服器控制項的事件。"
  remarks: "OnBubbleEvent 方法會實作<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>方法，將事件從子控制項傳遞至頁面階層。</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果事件已取消。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;></xref>事件。"
  remarks: "OnDataSourceViewChanged 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.DataSourceView.DataSourceViewChanged>事件。</xref:System.Web.UI.DataSourceView.DataSourceViewChanged> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnDataSourceViewChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件。"
  remarks: "OnInit 方法會呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnInit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;></xref>事件。"
  remarks: "會呼叫數方法<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       數方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewCommandEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCreated&quot;></xref>事件。"
  remarks: "OnItemCreated 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemCreated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleted&quot;></xref>事件。"
  remarks: "OnItemDeleted 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemDeleted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeletedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;></xref>事件。"
  remarks: "OnItemDeleting 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemDeleting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeleteEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserted&quot;></xref>事件。"
  remarks: "OnItemInserted 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemInserted> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemInserted 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;></xref>事件。"
  remarks: "OnItemInserting 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemInserting 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdated&quot;></xref>事件。"
  remarks: "OnItemUpdated 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemUpdated 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;></xref>事件。"
  remarks: "OnItemUpdating 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnItemUpdating 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdateEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanged&quot;></xref>事件。"
  remarks: "OnModeChanged 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>事件。</xref:System.Web.UI.WebControls.DetailsView.ModeChanged> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnModeChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;></xref>事件。"
  remarks: "OnModeChanging 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>事件。</xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnModeChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewModeEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有處理常式，如<xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanged&quot;></xref>事件。"
  remarks: "OnPageIndexChanged 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>事件。</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanging&quot;></xref>事件。"
  remarks: "OnPageIndexChanging 方法由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項引發<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>事件。</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> </xref:System.Web.UI.WebControls.DetailsView> 擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnPageIndexChanging 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewPageEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "這個方法時，會呼叫<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項未繫結至資料來源控制項、 未取消的分頁作業，和事件處理常式未註冊的事件。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "控制項載入前，請設定資料繫結控制項的初始化的狀態。"
  remarks: "OnPagePreLoad 方法可用來控制頁面生命週期內的資料繫結時發生。 它會藉由設定資料繫結控制項的內部初始化的狀態。 因為控制項的初始化狀態期間設定<xref:System.Web.UI.Page.PreLoad>網頁的生命週期的階段<xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A>呼叫控制項的資料屬性變更時，該階段之後，控制項必須重新繫結至其資料會在呈現之前發出信號的任何時間的事件處理常式。</xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> </xref:System.Web.UI.Page.PreLoad>       OnPagePreLoad 方法會覆寫<xref:System.Web.UI.WebControls.DetailsView>類別來設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A>屬性`true`在其中的 HTTP 要求是回傳，已啟用檢視狀態，但是資料繫結控制項具有尚未已繫結的情況下。</xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> </xref:System.Web.UI.WebControls.DetailsView> 此案例中是常見的控制項例如<xref:System.Web.UI.WebControls.Wizard>和<xref:System.Web.UI.WebControls.MultiView>，其中控制項的可見性則會在執行階段變更。</xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.Wizard>"
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>引發事件。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件。"
  remarks: "這個方法會通知伺服器控制項，執行任何預先呈現的必要步驟，在儲存檢視狀態，以及內容轉譯之前。擴充<xref:System.Web.UI.WebControls.DetailsView>類別</xref:System.Web.UI.WebControls.DetailsView>時，它通常會由控制項開發人員使用       OnPreRender 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得資料來源中的記錄數目。"
  remarks: "如果<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性是`null`，`0`傳回。</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "資料來源中的記錄數目。"
  overload: System.Web.UI.WebControls.DetailsView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示記錄的索引。"
  remarks: "啟用分頁功能時 (當<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性設定為`true`)，使用 PageIndex 屬性來判斷目前所顯示的記錄的索引。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 您也可以使用這個屬性，以程式設計方式變更顯示的記錄。      > [!NOTE] > 啟用分頁功能時，您也可以使用這個屬性來判斷顯示; 記錄的頁面數目但是要注意這個屬性是以零為起始。       若要判斷資料來源中的項目總數，請使用<xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "以零為起始的索引中所顯示的資料項目的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>從基礎資料來源的控制項。"
  overload: System.Web.UI.WebControls.DetailsView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選取的值是小於<xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時的值<xref:System.Web.UI.WebControls.DetailsView.PageIndex*>分頁作業之後的屬性變更。</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控制項時，引發 PageIndexChanged 事件頁面巡覽區按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 頁面 」) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.DetailsView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，每當發生此事件的事件處理常式。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       頁面巡覽區按鈕通常位於中的頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 此事件通常用來同步處理<xref:System.Web.UI.WebControls.DetailsView>用來控制<xref:System.Web.UI.WebControls.GridView>控制項或設定行為<xref:System.Web.UI.WebControls.DetailsView>分頁作業之後的控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.DetailsView> to read-only mode when the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_59_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_59_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "發生時的值<xref:System.Web.UI.WebControls.DetailsView.PageIndex*>分頁作業之前的屬性變更。</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控制項時，引發 PageIndexChanging 事件頁面巡覽區按鈕 (按鈕，以使用其`CommandName`屬性設定為 「 頁面 」) 控制項內按一下時前,<xref:System.Web.UI.WebControls.DetailsView>控制項負責的分頁作業。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 這可讓您提供執行自訂的常式，例如取消分頁作業時就會發生此事件的事件處理常式。      > [!NOTE] > 以程式設計方式設定時，不會引發這個事件<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       頁面巡覽區按鈕通常位於中的頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>       A<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>物件傳遞至事件處理常式，可讓您判斷使用者所選頁面的索引，並指出應該取消的分頁作業。</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> 若要判斷使用者所選頁面的索引，請使用<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A>屬性。</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A> 若要取消的分頁作業，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>物件`true`。</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  example:
  - "The following code example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_38_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_38_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewPageEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;></xref>物件，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 PagerSettings 屬性來控制的設定中的頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 頁面巡覽列會顯示啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`) 並包含可讓使用者瀏覽至不同的記錄控制項中的控制項。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.PagerSettings>它所傳回的物件。</xref:System.Web.UI.WebControls.PagerSettings> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.PagerSettings>物件 (例如， `PagerSetting-Mode`)。</xref:System.Web.UI.WebControls.PagerSettings> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerSetting.Mode`)。 頁面巡覽區列的顯示模式和自訂文字或影像的導覽控制項，通常包含一般設定。"
  example:
  - "The following code example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1242_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1242_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> ，可讓您設定的屬性中的頁面巡覽區按鈕<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定的頁面巡覽列中的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 PagerStyle 屬性來控制頁面巡覽列中的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 頁面巡覽列會顯示啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`)，並且包含允許使用者在控制項中的不同頁面導覽控制項。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `PagerStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the PagerStyle property to specify the font and style settings for the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1045_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1045_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的頁面巡覽區列的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面巡覽列中的自訂內容<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "頁面巡覽列會顯示在<xref:System.Web.UI.WebControls.DetailsView>控制啟用分頁功能時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性設定為 true)。</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> </xref:System.Web.UI.WebControls.DetailsView> 頁面巡覽區列包含允許使用者瀏覽至控制項中的不同頁面的控制項。 而不是使用內建的頁面巡覽區的資料列的使用者介面 (UI)，您可以定義自己的 UI 使用 PagerTemplate 屬性。 若要指定頁面巡覽區列的自訂範本，先將`<PagerTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 然後，您可以列出範本的開頭和結尾之間的內容`<PagerTemplate>`標記。 若要控制項目的出現的頁面巡覽列，使用<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>"
  example:
  - "The following code example demonstrates how to use the PagerTemplate property to create a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_501_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_501_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>包含頁面巡覽區列的自訂內容。 預設值為 null，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至指定的資料來源<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "PerformDataBinding 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>指定的資料來源繫結至控制項的控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>，代表資料來源。</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "設定控制項階層架構的<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "PrepareControlHierarchy 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制來設定在控制項階層架構中向上<xref:System.Web.UI.WebControls.DetailsView>控制之前要呈現控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "RaiseCallbackEvent 方法是 helper 方法，供<xref:System.Web.UI.WebControls.DetailsView>控制項來建立在回呼處理常式的引數<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "要傳遞至事件處理常式的引數。"
  overload: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發的適當事件<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制當回傳至伺服器。"
  remarks: "Web 網頁會呼叫方法，當回傳事件發生時就會引發的適當事件 RaisePostBackEvent<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 這個呼叫發生在頁面生命週期中載入和變更的通知完成後，但尚未發生之前。 已經實作這個方法，以建立<xref:System.Web.UI.WebControls.CommandEventArgs>物件引發的事件。</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數，用來建立<xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref>事件或事件所引發。"
  overload: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "顯示<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>上使用指定的用戶端控制項<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件。"
  remarks: "Render 方法用來呈現伺服器控制項內容，以使用指定的用戶端瀏覽器<xref:System.Web.UI.HtmlTextWriter>物件。</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，其中包含要在用戶端上呈現的輸出資料流。"
  overload: System.Web.UI.WebControls.DetailsView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>表示中的資料列物件<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "資料列數屬性 （集合） 用來儲存中的資料列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>控制項自動填入資料列集合，藉由建立<xref:System.Web.UI.WebControls.DetailsViewRow>物件資料來源中的每一筆記錄，然後將物件加入至集合。</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView> 這個屬性通常用於存取控制項中的特定資料列或逐一查看整個資料列的集合。      > [!NOTE] > 僅資料列會儲存在資料列集合。 <xref:System.Web.UI.WebControls.DetailsViewRow>代表頁首、 頁尾和頁面巡覽區的資料列的物件不包含在集合中。</xref:System.Web.UI.WebControls.DetailsViewRow>"
  example:
  - "The following code example demonstrates how to use the Rows property to access a data row in a <xref:System.Web.UI.WebControls.DetailsView> control. The data row is used to retrieve the value of a field from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1064_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1064_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>包含中的所有資料列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  id: RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定物件，用於實作<xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;></xref>介面以自動填入 在檢視中的資料列。"
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "實作的物件<xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;></xref>介面。"
  overload: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>物件，可讓您設定中的資料列的外觀<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "使用 RowStyle 屬性來控制中的資料列的外觀<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> 當<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>屬性也設定時，資料列會顯示交替 RowStyle 設定和<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>設定。</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TableItemStyle>它所傳回的物件。</xref:System.Web.UI.WebControls.TableItemStyle> 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TableItemStyle>物件 (例如， `RowStyle-ForeColor`)。</xref:System.Web.UI.WebControls.TableItemStyle> 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩和字型屬性。"
  example:
  - "The following code example demonstrates how to use the RowStyle property to specify the font and style settings for the data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_619_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_619_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "若要參考<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>表示中的資料列的樣式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存中的屬性狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項需要保存，即使&lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "這個方法用來儲存中的屬性狀態<xref:System.Web.UI.WebControls.DetailsView>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "傳回伺服器控制項目前檢視狀態。 如果沒有與控制項關聯的檢視狀態，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "儲存目前的檢視狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "SaveViewState 方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項儲存控制項的狀態。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>，其中包含的儲存的狀態<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得目前的記錄中的資料值<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "您可以使用 SelectedValue 屬性來判斷目前的資料錄的資料值。 若要擷取的實際<xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>物件，表示記錄，使用的資料索引鍵<xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>屬性。</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>       這個屬性為預設屬性，<xref:System.Web.UI.WebControls.ControlParameter>物件將繫結至執行階段。</xref:System.Web.UI.WebControls.ControlParameter> 如需詳細資訊，請參閱<xref:System.Web.UI.ControlValuePropertyAttribute>， <xref:System.Web.UI.WebControls.ControlParameter>，和[使用參數與篩選的資料來源控制項](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.ControlValuePropertyAttribute>"
  example:
  - "The following code example demonstrates how to use the SelectedValue property to determine the data key value for the current record.  \n  \n [!code-cs[DetailsViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_453_1.aspx)]\n [!code-vb[DetailsViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_453_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "資料索引鍵中的目前記錄的值<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "設定目前顯示的頁面中的索引<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要設定的索引值。"
  overload: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "請參閱<xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*>.</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*>方法"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>來擷取資料和<xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A>方法來擷取的資料傳回至控制項。</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "回呼的結果。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發回呼事件使用指定的引數。"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "事件引數。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>.</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.IDataItemContainer>介面。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "傳回<xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>值。</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱<xref:System.Web.UI.IDataItemContainer.DisplayIndex*>.</xref:System.Web.UI.IDataItemContainer.DisplayIndex*>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.IDataItemContainer>介面。</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "Returns <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.IPostBackEventHandler>介面。</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "字串，代表要傳遞給事件處理常式的選擇性事件引數。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立的回呼指令碼<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "這個方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.DetailsView>控制項以產生其回呼指令碼。</xref:System.Web.UI.WebControls.DetailsView> 如果<xref:System.Web.UI.WebControls.DetailsView>控制項不會呈現用戶端指令碼，或如果`argument`參數是`null`或空字串 (&quot;&quot;)，這個方法會傳回`null`。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "張貼至伺服器頁面上的按鈕控制項。"
    - id: argument
      type: System.String
      description: "回撥事件引數。"
    return:
      type: System.String
      description: "回呼指令碼<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "陣列，其中包含資料繫結控制項中顯示的項目之主索引鍵欄位的名稱。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataMember%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "資料清單的名稱， <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制項繫結至。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSource%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "物件，表示資料來源從中<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項擷取其資料。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceID%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "包含的資料清單的資料來源控制項的 ID 項目， <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制擷取。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "物件，包含資料的清單項目， <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>控制擷取。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.DataKey%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "物件，表示中的資料列的資料金鑰值<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.Mode%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IDataBoundControl>介面。</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>       The <xref:System.Web.UI.WebControls.DetailsView> can be set to `ReadOnly`, `Edit` or `Delete`.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "目前的模式<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個屬性的說明，請參閱&lt;xref:System.Web.UI.WebControls.IFieldControl.FieldsGenerator%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.WebControls.IFieldControl>介面。</xref:System.Web.UI.WebControls.IFieldControl> </xref:System.Web.UI.WebControls.DetailsView>       這個屬性用來自動產生的資料行<xref:System.Web.UI.WebControls.DetailsView>控制項使用 ASP.NET Dynamic Data 功能。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "控制項可自動產生的資料行<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Web.UI.WebControls.DetailsView>執行個體轉換成<xref:System.Web.UI.IPostBackEventHandler>介面。</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "產生用戶端回傳事件的控制項。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>所需的資訊與<xref:System.Web.UI.Page.GetPostBackEventReference*>建構有效的指令碼，當用戶端上執行，啟始用戶端就會回傳。</xref:System.Web.UI.Page.GetPostBackEventReference*>"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buttonControl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>驗證，則在<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制並嘗試使用相同<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項做為回傳目標。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>值<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "TagKey 屬性可讓寫入適當的 HTML 標記的輸出資料流<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "如果<xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*>是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，這個屬性會傳回<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>。</xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*> 否則，它會傳回<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>物件，代表在最上層頁面巡覽列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "啟用分頁時 (藉由設定<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>屬性`true`)，額外的資料列呼叫頁面巡覽列會自動顯示在<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 頁面巡覽區列包含控制項，讓使用者巡覽至其他記錄，並可顯示頂端、 底部，或同時上方和底部的控制項。 使用 TopPagerRow 屬性，若要以程式設計方式存取<xref:System.Web.UI.WebControls.DetailsViewRow>物件，代表在最上層頁面巡覽列<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] > TopPagerRow 屬性之後，才可被<xref:System.Web.UI.WebControls.DetailsView>控制項建立內的底部頁面巡覽區列<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView>       這個屬性通常用於您需要以程式設計方式操作最上層頁面巡覽列，例如當加入自訂內容。 後必須執行 TopPagerRow 屬性所做的任何修改<xref:System.Web.UI.WebControls.DetailsView>控制項已呈現，否則<xref:System.Web.UI.WebControls.DetailsView>控制項將會覆寫任何變更。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the TopPagerRow property to access the top pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-vb[DetailsViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_822_1.aspx)]\n [!code-cs[DetailsViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_822_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>表示中的最上層頁面巡覽區列<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "標記開始追蹤並儲存檢視狀態變更起點<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>控制項。"
  remarks: "這個方法會覆寫來標示的起點開始追蹤並儲存變更至控制項的控制項檢視狀態的一部分。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新資料來源中目前的記錄。"
  remarks: "當<xref:System.Web.UI.WebControls.DetailsView>控制項處於編輯模式，請使用 UpdateItem 方法來以程式設計方式更新資料來源中目前的記錄。</xref:System.Web.UI.WebControls.DetailsView> 這個方法通常使用於您需要更新目前的記錄從外部<xref:System.Web.UI.WebControls.DetailsView>控制，例如來自不同頁面上的控制項。</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] ><xref:System.Web.UI.WebControls.DetailsView>呼叫，否則這個方法時，控制項必須是處於編輯模式下<xref:System.Web.HttpException>擲回例外狀況。</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.DetailsView>       若要指定是否要將頁面驗證執行更新作業之前，請使用`causesValidation`參數。 呼叫這個方法也會引發<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>和<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>事件。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行頁面驗證時呼叫的方法;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.DetailsView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in edit mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定頁面時，控制項執行更新作業所呼叫的方法名稱。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "在頁面時，控制項執行更新作業所呼叫方法的名稱。"
  overload: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRow
  nameWithType: DetailsViewRow
  fullName: System.Web.UI.WebControls.DetailsViewRow
- uid: System.Web.UI.WebControls.DetailsView.Caption
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
- uid: System.Web.UI.WebControls.DetailsViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewMode
  nameWithType: DetailsViewMode
  fullName: System.Web.UI.WebControls.DetailsViewMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventHandler
  nameWithType: DetailsViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventHandler
  nameWithType: DetailsViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventHandler
  nameWithType: DetailsViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
- uid: System.Web.UI.WebControls.DetailsViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventHandler
  nameWithType: DetailsViewInsertEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventHandler
  nameWithType: DetailsViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventHandler
  nameWithType: DetailsViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
- uid: System.Web.UI.WebControls.DetailsViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventHandler
  nameWithType: DetailsViewModeEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewModeEventHandler
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventArgs
  nameWithType: DetailsViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventArgs
  nameWithType: DetailsViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventArgs
  nameWithType: DetailsViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventArgs
  nameWithType: DetailsViewInsertEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventArgs
  nameWithType: DetailsViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventArgs
  nameWithType: DetailsViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventArgs
  nameWithType: DetailsViewModeEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewModeEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventArgs
  nameWithType: DetailsViewPageEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewPageEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
- uid: System.Web.UI.WebControls.DetailsViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventHandler
  nameWithType: DetailsViewPageEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewPageEventHandler
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DetailsView.Rows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRowCollection
  nameWithType: DetailsViewRowCollection
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
- uid: System.Web.UI.WebControls.DetailsView.#ctor*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView
  nameWithType: DetailsView.DetailsView
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsView.Caption*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode
  nameWithType: DetailsView.ChangeMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow
  nameWithType: DetailsView.CreateAutoGeneratedRow
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows
  nameWithType: DetailsView.CreateAutoGeneratedRows
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls
  nameWithType: DetailsView.CreateChildControls
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle
  nameWithType: DetailsView.CreateControlStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: DetailsView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet
  nameWithType: DetailsView.CreateFieldSet
- uid: System.Web.UI.WebControls.DetailsView.CreateRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow
  nameWithType: DetailsView.CreateRow
- uid: System.Web.UI.WebControls.DetailsView.CreateTable*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable
  nameWithType: DetailsView.CreateTable
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind
  nameWithType: DetailsView.DataBind
- uid: System.Web.UI.WebControls.DetailsView.DataItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem
  nameWithType: DetailsView.DeleteItem
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound
  nameWithType: DetailsView.EnsureDataBound
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues
  nameWithType: DetailsView.ExtractRowValues
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
- uid: System.Web.UI.WebControls.DetailsView.FooterRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult
  nameWithType: DetailsView.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript
  nameWithType: DetailsView.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.GridLines*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager
  nameWithType: DetailsView.InitializePager
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow
  nameWithType: DetailsView.InitializeRow
- uid: System.Web.UI.WebControls.DetailsView.InsertItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem
  nameWithType: DetailsView.InsertItem
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType
  nameWithType: DetailsView.IsBindableType
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState
  nameWithType: DetailsView.LoadControlState
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState
  nameWithType: DetailsView.LoadViewState
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DetailsView.OnBubbleEvent
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DetailsView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.DetailsView.OnInit*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit
  nameWithType: DetailsView.OnInit
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand
  nameWithType: DetailsView.OnItemCommand
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated
  nameWithType: DetailsView.OnItemCreated
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted
  nameWithType: DetailsView.OnItemDeleted
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting
  nameWithType: DetailsView.OnItemDeleting
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted
  nameWithType: DetailsView.OnItemInserted
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting
  nameWithType: DetailsView.OnItemInserting
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated
  nameWithType: DetailsView.OnItemUpdated
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating
  nameWithType: DetailsView.OnItemUpdating
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged
  nameWithType: DetailsView.OnModeChanged
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging
  nameWithType: DetailsView.OnModeChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: DetailsView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: DetailsView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: DetailsView.OnPagePreLoad
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender
  nameWithType: DetailsView.OnPreRender
- uid: System.Web.UI.WebControls.DetailsView.PageCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding
  nameWithType: DetailsView.PerformDataBinding
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DetailsView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: DetailsView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: DetailsView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.Render*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render
  nameWithType: DetailsView.Render
- uid: System.Web.UI.WebControls.DetailsView.Rows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState
  nameWithType: DetailsView.SaveControlState
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState
  nameWithType: DetailsView.SaveViewState
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex
  nameWithType: DetailsView.SetPageIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState
  nameWithType: DetailsView.TrackViewState
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem
  nameWithType: DetailsView.UpdateItem
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
