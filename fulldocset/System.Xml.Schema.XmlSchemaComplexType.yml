### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaComplexType
  id: XmlSchemaComplexType
  children:
  - System.Xml.Schema.XmlSchemaComplexType.#ctor
  - System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  - System.Xml.Schema.XmlSchemaComplexType.Attributes
  - System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  - System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  - System.Xml.Schema.XmlSchemaComplexType.Block
  - System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  - System.Xml.Schema.XmlSchemaComplexType.ContentModel
  - System.Xml.Schema.XmlSchemaComplexType.ContentType
  - System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  - System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  - System.Xml.Schema.XmlSchemaComplexType.IsMixed
  - System.Xml.Schema.XmlSchemaComplexType.Particle
  langs:
  - csharp
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType
  fullName: System.Xml.Schema.XmlSchemaComplexType
  type: Class
  summary: "代表<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C) 所指定的項目從 XML 結構描述。 這個類別定義的屬性和項目的內容會決定複雜類型。"
  remarks: "項目可以宣告具有型別屬性，它是指`complexType`定義結構、 內容和屬性，該元素的項目。"
  example:
  - "The following example creates a `complexType` element.  \n  \n [!code-cpp[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_27_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_27_1.vb)]\n [!code-cs[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_27_1.cs)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaComplexType Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_27_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaComplexType : System.Xml.Schema.XmlSchemaType'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaType
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaType.BaseSchemaType
  - System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  - System.Xml.Schema.XmlSchemaType.Datatype
  - System.Xml.Schema.XmlSchemaType.DerivedBy
  - System.Xml.Schema.XmlSchemaType.Final
  - System.Xml.Schema.XmlSchemaType.FinalResolved
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  - System.Xml.Schema.XmlSchemaType.Name
  - System.Xml.Schema.XmlSchemaType.QualifiedName
  - System.Xml.Schema.XmlSchemaType.TypeCode
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;></xref>類別。"
  syntax:
    content: public XmlSchemaComplexType ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  id: AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定值<xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;></xref>複雜類型的元件。"
  remarks: "如果這個屬性不是 null，複雜類型可以包含<xref:System.Xml.Schema.XmlSchemaAnyAttribute>.</xref:System.Xml.Schema.XmlSchemaAnyAttribute>中指定的命名空間中的任何屬性"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AnyAttribute { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;> </xref>複雜類型的元件。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  id: Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得複雜類型的屬性集合。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Attributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "包含<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>和<xref href=&quot;System.Xml.Schema.XmlSchemaAttributeGroupRef&quot;></xref>類別。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  id: AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得這個複雜類型及其基底型別的所有遵守屬性的集合。"
  remarks: "例如，從所有屬性的組合`Attributes`從階層中每個類型的屬性。       這個屬性的值為唯讀。 結構描述成功編譯來判斷完成屬性集，允許的執行個體文件之後，這個屬性具有值。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable AttributeUses { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "從這個複雜類型和其基底類型的所有屬性的集合。 編譯後值<xref uid=&quot;langword_csharp_AttributeUses&quot; name=&quot;AttributeUses&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  id: AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得編譯後值<xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;></xref>此複雜類型和其基底類型。"
  remarks: "這個屬性的值為唯讀。 結構描述成功編譯來判斷完成屬性集的複雜型別之後，此屬性的值。 例如，它可能是`anyAttribute`基底類型中的項目。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AttributeWildcard { get; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "編譯後值<xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定<xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "指出衍生的型別。       這個屬性可以包含下列值: |列舉 |描述 |  |----------|-----------------|  |`None`|使用所定義的衍生限制`BlockDefault`屬性結構描述，如果存在的話。 |  |`Extension`|無法利用擴充衍生的類型所取代此項目。 |  |`Restriction`|無法由限制衍生的類型所取代此項目。 |  |`All`|`#all`. 無法取代這個項目，不論衍生方法的任何類型。 |      `Substitution`， `List`，和`Union`衍生方法不支援這個屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;> </xref>屬性可防止複雜類型中指定的型別衍生的使用。 預設值是<xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得值，類型編譯為後結構描述驗證資訊集 (infoset) 之後。 這個值表示如何強制執行型別時<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>用於執行個體文件。"
  remarks: "這個值會從該類型本身，或如果未定義類型層級，它取自`schema`項目。 例如，如果有限制的值，可以使用特別定義的類型，不是型別衍生自特別定義的型別。       這個屬性可以包含下列值: |列舉 |描述 |  |----------|-----------------|  |`None`|使用所定義的衍生限制`BlockDefault`屬性結構描述，如果存在的話。 |  |`Extension`|無法利用擴充衍生的類型所取代此項目。 |  |`Restriction`|無法由限制衍生的類型所取代此項目。 |  |`All`|`#all`. 無法取代這個項目，不論衍生方法的任何類型。 |      `Substitution`， `List`，和`Union`衍生方法不支援這個屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "後結構描述驗證 infoset 值。 預設值是<xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;></xref>值<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  id: ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定編譯後<xref href=&quot;System.Xml.Schema.XmlSchemaContentModel&quot;></xref>此複雜類型。"
  remarks: "這是與互斥<xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>屬性。</xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentModel ContentModel { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaContentModel
      description: "內容模型類型的其中一個<xref href=&quot;System.Xml.Schema.XmlSchemaSimpleContent&quot;></xref>或<xref href=&quot;System.Xml.Schema.XmlSchemaComplexContent&quot;></xref>類別。"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  id: ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得包含編譯後值之複雜類型的內容模型。"
  remarks: "這是中的後結構描述驗證資訊集的內容。       如果`IsMixed`屬性設定為`true`上`ContentModel`具有類型的屬性`XmlSchemaComplexContent`，傳回的值為`Mixed`。       如果`IsMixed`屬性是`false`，值是`Empty`或`ElementOnly`。       如果型別上的`ContentModel`屬性都有類型`XmlSchemaSimpleContent`，則這個值一律是`TextOnly`。       `ContentType`屬性必須有下表中所顯示的值。      |列舉 |描述 |  |----------|-----------------|  |`TextOnly`|純文字內容。 |  |`Empty`|空白的內容。 |  |`ElementOnly`|僅限元素內容。 |  |`Mixed`|混合內容模型。 |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentType ContentType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaContentType
      description: "編譯後值的內容模型的複雜型別。"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  id: ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得物件所在的編譯後值<xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>物件。</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>"
  remarks: "這`ContentTypeParticle`之後最常衍生的型別和基底複雜類型的內容模型已解決，根據 W3C XML 結構描述定義語言 (XSD) 規格中定義的規則決定。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle ContentTypeParticle { get; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "內容類型的物件。 編譯後值<xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>物件。</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定資訊，決定如果<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;></xref>項目可以用於執行個體文件。"
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，項目無法使用此<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;></xref>直接項目，且必須使用衍生自該複雜型別<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;></xref>項目。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  id: IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定資訊，決定複雜類型是否具有混合內容模型 （內容中的標記）。"
  remarks: "指出是否出現字元資料可以之間之子項目的這`complexType`。 如果`simpleContent`元素為子元素，`mixed`不允許有屬性 (`false`)。 如果`complexContent`元素為子元素，`mixed`屬性可以覆寫`mixed`屬性`complexContent`項目。"
  syntax:
    content: public override bool IsMixed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此複雜類型的子元素之間可以出現的字元資料否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  id: Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定複合項類型做為其中一個<xref href=&quot;System.Xml.Schema.XmlSchemaGroupRef&quot;> </xref>， <xref href=&quot;System.Xml.Schema.XmlSchemaChoice&quot;> </xref>， <xref href=&quot;System.Xml.Schema.XmlSchemaAll&quot;> </xref>，或<xref href=&quot;System.Xml.Schema.XmlSchemaSequence&quot;></xref>類別。"
  remarks: "物件必須是下列合成的其中一個: |項目 |描述 |  |-------------|-----------------|  |`group`|複雜型別包含參考群組中所定義的項目。 |  |`sequence`|複雜類型包含指定序列中所定義的項目。 |  |`choice`|複雜型別不允許在指定的項目`choice`項目。 |  |`all`|複雜型別允許的所有項目中指定`all`元素出現一次或完全無法執行。 |      這是與互斥<xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>屬性。</xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle Particle { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "複合項類型。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Particle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaAnyAttribute
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAnyAttribute
  nameWithType: XmlSchemaAnyAttribute
  fullName: System.Xml.Schema.XmlSchemaAnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaContentModel
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentModel
  nameWithType: XmlSchemaContentModel
  fullName: System.Xml.Schema.XmlSchemaContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaContentType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentType
  nameWithType: XmlSchemaContentType
  fullName: System.Xml.Schema.XmlSchemaContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaParticle
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
