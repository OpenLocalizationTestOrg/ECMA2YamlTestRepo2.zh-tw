### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy
  id: FileSystemProxy
  children:
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystemProxy
  nameWithType: FileSystemProxy
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy
  type: Class
  summary: "提供屬性和方法，以處理磁碟機、 檔案和目錄。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem`物件。      |若要 |請參閱 |  |--------|---------|  |從文字檔讀取 |[How to︰ 從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從分隔的文字檔讀取 |[How to︰ 從逗號分隔的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從固定寬度的文字檔讀取 |[How to︰ 從固定寬度的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從以多種格式的文字檔讀取 |[How to︰ 以多種格式從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |讀取二進位檔案 |[如何︰ 讀取二進位檔案](~/add/includes/ajax-current-ext-md.md)|  |讀取文字檔<xref:System.IO.StreamReader>|[如何︰ 以 StreamReader 從檔案讀取文字](~/add/includes/ajax-current-ext-md.md)|  |寫入文字檔案 |[How to︰ 將文字寫入至檔案](~/add/includes/ajax-current-ext-md.md)|  |附加至文字檔案 |[如何︰ 附加至文字檔](~/add/includes/ajax-current-ext-md.md)|  |寫入至二進位檔案 |[如何︰ 寫入二進位檔案](~/add/includes/ajax-current-ext-md.md)|  |寫入文字檔中**MyDocuments**目錄 |[如何︰ 將文字寫入至檔案，在 我的文件目錄](~/add/includes/ajax-current-ext-md.md)|  |寫入文字檔案與`StreamWriter` | [How to︰ 將文字寫入檔案以 StreamWriter](~/add/includes/ajax-current-ext-md.md)|  |將具有特定模式的檔案複製 |[How to︰ 將具有特定模式的檔案複製到目錄](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到相同的目錄 |[How to︰ 在相同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到不同的目錄 |[How to︰ 在不同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |建立檔案 |[How to︰ 建立檔案](~/add/includes/ajax-current-ext-md.md)|  |刪除檔案 |[如何︰ 刪除檔案](~/add/includes/ajax-current-ext-md.md)|  |尋找具有特定模式的檔案 |[如何︰ 尋找具有特定模式的檔案](~/add/includes/ajax-current-ext-md.md)|  |移動檔案 |[如何︰ 移動檔案](~/add/includes/ajax-current-ext-md.md)|  |重新命名檔案 |[如何︰ 重新命名檔案](~/add/includes/ajax-current-ext-md.md)|  |將目錄複製到另一個目錄 |[How to︰ 將目錄複製到另一個目錄](~/add/includes/ajax-current-ext-md.md)|  |建立目錄 |[How to︰ 建立目錄](~/add/includes/ajax-current-ext-md.md)|  |尋找具有特定模式的子目錄 |[如何︰ 尋找具有特定模式的子目錄](~/add/includes/ajax-current-ext-md.md)|  |取得目錄中的檔案集合 |[How to︰ 取得目錄中的檔案集合](~/add/includes/ajax-current-ext-md.md)|  |從讀取**MyDocuments**目錄 |[如何︰ 擷取的內容我的文件目錄](~/add/includes/ajax-current-ext-md.md)|  |剖析檔案路徑 |[如何︰ 剖析檔案路徑](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class FileSystemProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "結合兩個路徑，並傳回格式正確的路徑。"
  remarks: "這個方法會修剪多餘的斜線字元來建立格式正確的路徑。       下表列出包含工作的範例`My.Computer.FileSystem.CombinePath`方法。      |若要 |請參閱 |  |--------|---------|  |結合的目錄路徑和檔案名稱 |[如何︰ 剖析檔案路徑](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要合併的第一個路徑。"
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 要合併的第二個路徑。"
    return:
      type: System.String
      description: "指定路徑的組合。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>或<code>relativePath</code>格式不正確的路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄複製到另一個目錄。"
  remarks: "這個方法會複製目錄以及目錄本身的內容。 如果目標目錄不存在，則會建立它。 如果具有相同名稱的目錄存在於目標位置，則會合併兩個目錄的內容。 您可以在作業期間指定之目錄的新名稱。       目錄中的檔案複製時，例外狀況可能擲回造成特定的檔案。 這類例外狀況會擲回時，會將它們合併成單一的例外狀況的`Data`屬性會保留項目中的表單<xref:System.Collections.IDictionary>所在的檔案或目錄路徑是索引鍵和對應的值包含特定的例外狀況訊息。</xref:System.Collections.IDictionary> 使用`For…Each`列舉項目。       下表列出包含工作的範例`My.Computer.FileSystem.CopyDirectory`方法。      |若要 |請參閱 |  |--------|---------|  |複製目錄 |[How to︰ 將目錄複製到另一個目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/239273f2-9d6f-48a8-9a46-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要複製的目錄。"
    - id: destinationDirectoryName
      type: System.String
      description: "要複製的目錄位置。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "來源目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "來源路徑和目標路徑都相同。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的資料夾名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目的地檔案存在，但無法存取。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄複製到另一個目錄。"
  remarks: "這個方法會複製目錄以及目錄本身的內容。 如果目標目錄不存在，則會建立它。 如果具有相同名稱的目錄存在於目標位置，則會合併兩個目錄的內容。 您可以在作業期間指定之目錄的新名稱。       目錄中的檔案複製時，例外狀況可能擲回造成特定的檔案。 這類例外狀況會擲回時，會將它們合併成單一的例外狀況的`Data`屬性會保留項目中的表單<xref:System.Collections.IDictionary>所在的檔案或目錄路徑是索引鍵和對應的值包含特定的例外狀況訊息。</xref:System.Collections.IDictionary> 使用`For…Each`列舉項目。       下表列出包含工作的範例`My.Computer.FileSystem.CopyDirectory`方法。      |若要 |請參閱 |  |--------|---------|  |複製目錄 |[How to︰ 將目錄複製到另一個目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/88ad980f-7c55-41f5-ae9e-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要複製的目錄。"
    - id: destinationDirectoryName
      type: System.String
      description: "要複製的目錄位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "來源目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "來源路徑和目標路徑都相同。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的資料夾名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目的地檔案存在，但無法存取。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>設定為<xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;></xref>和使用者取消作業，或無法複製目錄中的一個或多個檔案。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄複製到另一個目錄。"
  remarks: "這個方法會複製目錄以及目錄本身的內容。 如果目標目錄不存在，則會建立它。 如果具有相同名稱的目錄存在於目標位置，則會合併兩個目錄的內容。 您可以在作業期間指定之目錄的新名稱。       目錄中的檔案複製時，例外狀況可能擲回造成特定的檔案，例如檔案時合併過程`overwrite`設`False`。 這類例外狀況會擲回時，會將它們合併成單一的例外狀況的`Data`屬性會保留項目中的表單<xref:System.Collections.IDictionary>所在的檔案或目錄路徑是索引鍵和對應的值包含特定的例外狀況訊息。</xref:System.Collections.IDictionary> 使用`For…Each`列舉項目。       下表列出包含工作的範例`My.Computer.FileSystem.CopyDirectory`方法。      |若要 |請參閱 |  |--------|---------|  |複製目錄 |[How to︰ 將目錄複製到另一個目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/029fa5e0-f9d2-4d2b-ae58-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要複製的目錄。"
    - id: destinationDirectoryName
      type: System.String
      description: "要複製的目錄位置。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆寫現有檔案。否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "來源目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "來源路徑和目標路徑都相同。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的資料夾名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目的地檔案存在，但無法存取。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄複製到另一個目錄。"
  remarks: "這個方法會複製目錄以及目錄本身的內容。 如果目標目錄不存在，則會建立它。 如果具有相同名稱的目錄存在於目標位置，則會合併兩個目錄的內容。 您可以在作業期間指定之目錄的新名稱。       目錄中的檔案複製時，例外狀況可能擲回造成特定的檔案。 這類例外狀況會擲回時，會將它們合併成單一的例外狀況的`Data`屬性會保留項目中的表單<xref:System.Collections.IDictionary>所在的檔案或目錄路徑是索引鍵和對應的值包含特定的例外狀況訊息。</xref:System.Collections.IDictionary> 使用`For…Each`列舉項目。       下表列出包含工作的範例`My.Computer.FileSystem.CopyDirectory`方法。      |若要 |請參閱 |  |--------|---------|  |複製目錄 |[How to︰ 將目錄複製到另一個目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/045c3090-625f-4707-88c2-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要複製的目錄。"
    - id: destinationDirectoryName
      type: System.String
      description: "要複製的目錄位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定應完成，如果使用者按一下**取消**作業期間。 預設值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>或<code>sourceDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "來源目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "來源路徑和目標路徑都相同。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的資料夾名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "目的地檔案存在，但無法存取。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>設定為<xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;></xref>和使用者取消作業，或無法複製目錄中的一個或多個檔案。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案複製到新位置。"
  remarks: "`CopyFile`不會保留 Ace （存取控制項目）。 新建立的檔案會將預設的 Ace 繼承建立所在的目錄。       下表列出包含工作的範例`My.Computer.FileSystem.CopyFile`方法。      |若要 |請參閱 |  |--------|---------|  |將檔案複製到相同的目錄。 |[How to︰ 在相同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到不同的目錄。 |[How to︰ 在不同的目錄中建立檔案的複本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destinationFileName
      type: System.String
      description: "要複製之檔案的目標位置。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路徑資訊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "具有相同名稱的目標目錄中的檔案正在使用中。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案複製到新位置。"
  remarks: "`CopyFile`不會保留 Ace （存取控制項目）。 新建立的檔案會將預設的 Ace 繼承建立所在的目錄。       下表列出包含工作的範例`My.Computer.FileSystem.CopyFile`方法。      |若要 |請參閱 |  |--------|---------|  |將檔案複製到相同的目錄。 |[How to︰ 在相同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到不同的目錄。 |[How to︰ 在不同的目錄中建立檔案的複本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destinationFileName
      type: System.String
      description: "要複製之檔案的目標位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路徑資訊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目的地檔案已存在和<code> overwrite </code>設<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案複製到新位置。"
  remarks: "`CopyFile`不會保留 Ace （存取控制項目）。 新建立的檔案會將預設的 Ace 繼承建立所在的目錄。       下表列出包含工作的範例`My.Computer.FileSystem.CopyFile`方法。      |若要 |請參閱 |  |--------|---------|  |將檔案複製到相同的目錄。 |[How to︰ 在相同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到不同的目錄。 |[How to︰ 在不同的目錄中建立檔案的複本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destinationFileName
      type: System.String
      description: "要複製之檔案的目標位置。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果應該覆寫現有檔案。否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路徑資訊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目的地檔案已存在和<code> overwrite </code>設<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案複製到新位置。"
  remarks: "`CopyFile`不會保留 Ace （存取控制項目）。 新建立的檔案會將預設的 Ace 繼承建立所在的目錄。       下表列出包含工作的範例`My.Computer.FileSystem.CopyFile`方法。      |若要 |請參閱 |  |--------|---------|  |將檔案複製到相同的目錄。 |[How to︰ 在相同的目錄中建立一份檔案](~/add/includes/ajax-current-ext-md.md)|  |將檔案複製到不同的目錄。 |[How to︰ 在不同的目錄中建立檔案的複本](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要複製的檔案。"
    - id: destinationFileName
      type: System.String
      description: "要複製之檔案的目標位置。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定應完成，如果使用者按一下**取消**作業期間。 預設值是<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>包含路徑資訊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>或<code>sourceFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目的地檔案已存在和<code> overwrite </code>設<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>設定為<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，和使用者已取消該作業，或發生未指定的 I/O 錯誤。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "建立目錄。"
  remarks: "如果目錄已經存在，則會擲不回任何例外狀況。       下表列出包含工作的範例`My.Computer.FileSystem.CreateDirectory`方法。      |若要 |請參閱 |  |--------|---------|  |建立目錄 |[How to︰ 建立目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/23416b68-c5ce-4c96-b164-_1.vb)]"
  syntax:
    content: public void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "名稱和位置的目錄。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目錄名稱的格式不正確。 例如，它包含不合法的字元，或只有空格。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "目錄名稱長度過長。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目錄名稱只是一個冒號 （:）。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "要建立之目錄的父目錄是唯讀的"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有建立該目錄的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "取得或設定目前的目錄。"
  remarks: '`CurrentDirectory`這是全系統環境變數。'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_2.vb)]"
  syntax:
    content: public string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "檔案 I/O 作業目前的目錄。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "路徑不是有效的。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的目錄。"
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "要刪除的目錄。"
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "指定應該的動作時要刪除的目錄含有檔案或目錄。 預設值是<xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路徑可以是零長度字串、 格式不正確、 只包含空格，或包含無效的字元 （包括萬用字元）。 路徑是裝置路徑 (開頭為\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在或檔案。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目錄或子目錄中的檔案正在使用中。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目錄名稱含有冒號 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有必要的權限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "使用者取消作業，或無法刪除目錄。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的目錄。"
  remarks: "`showUI`和`recycle`沒有使用者互動，例如 Windows 服務的應用程式中不支援參數。"
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "要刪除的目錄。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "指定已刪除的檔案是否應傳送至**資源回收筒**。 預設值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路徑可以是零長度字串、 格式不正確、 只包含空格，或包含無效的字元 （包括萬用字元）。 路徑是裝置路徑 (開頭為\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在或檔案。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目錄或子目錄中的檔案正在使用中。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目錄名稱含有冒號 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有必要的權限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "使用者取消作業，或無法刪除目錄。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的目錄。"
  remarks: "`showUI`， `recycle`，和`onUserCancel`沒有使用者互動，例如 Windows 服務的應用程式中不支援參數。"
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "要刪除的目錄。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "指定已刪除的檔案是否應傳送至**資源回收筒**。 預設值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定是否要擲回例外狀況，如果使用者按一下**取消**。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路徑可以是零長度字串、 格式不正確、 只包含空格，或包含無效的字元 （包括萬用字元）。 路徑是裝置路徑 (開頭為\\\\ \\\\。\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在或檔案。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目錄或子目錄中的檔案正在使用中。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目錄名稱含有冒號 （:）。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者沒有必要的權限。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "使用者取消作業，或無法刪除目錄。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的檔案。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem.DeleteFile`方法。      |若要 |請參閱 |  |--------|---------|  |若要刪除的檔案 |[如何︰ 刪除檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_3.vb)]"
  syntax:
    content: public void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "名稱和要刪除之檔案的路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。它有尾端斜線其中必須指定一個檔案。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用中。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有刪除檔案的權限或檔案為唯讀。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的檔案。"
  remarks: "`showUI`和`recycle`沒有使用者互動，例如 Windows 服務的應用程式中不支援參數。       下表列出包含工作的範例`My.Computer.FileSystem.DeleteFile`方法。      |若要 |請參閱 |  |--------|---------|  |若要刪除的檔案 |[如何︰ 刪除檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "名稱和要刪除之檔案的路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "是否已刪除的檔案傳送至**資源回收筒**。 預設值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。它有尾端斜線其中必須指定一個檔案。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用中。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有刪除檔案的權限或檔案為唯讀。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "刪除的檔案。"
  remarks: "`showUI`， `recycle`，和`onUserCancel`沒有使用者互動，例如 Windows 服務的應用程式中不支援參數。       下表列出包含工作的範例`My.Computer.FileSystem.DeleteFile`方法。      |若要 |請參閱 |  |--------|---------|  |若要刪除的檔案 |[如何︰ 刪除檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "名稱和要刪除之檔案的路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "是否已刪除的檔案傳送至**資源回收筒**。 預設值是<xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定使用者取消該作業時，會擲回例外狀況。 預設值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。它有尾端斜線其中必須指定一個檔案。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用中。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有刪除檔案的權限或檔案為唯讀。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "使用者已取消作業和<code> onUserCancel </code>設<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定的目錄存在。"
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/7dd70ea7-fac8-4509-8a5b-_1.vb)]"
  syntax:
    content: public bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "目錄的路徑。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果目錄存在。否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  id: Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回所有可用的磁碟機名稱的唯讀集合。"
  remarks: "這個屬性會傳回所有邏輯磁碟機。"
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._61_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "唯讀集合的所有可用的磁碟機做為<xref href=&quot;System.IO.DriveInfo&quot;></xref>物件。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果指定的檔案存在。"
  remarks: "如果應用程式沒有足夠的權限讀取指定的檔案，`FileExists`方法會傳回`False`，不論是否存在的路徑; 該方法不會擲回例外狀況。"
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._238_1.vb)]"
  syntax:
    content: public bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "名稱和檔案的路徑。"
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果檔案存在，否則這個方法會傳回<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "檔案名稱結尾是反斜線 (\\\\)。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回唯讀的集合，表示包含指定的文字的檔案名稱的字串。"
  remarks: "如果找不到任何符合指定的模式的檔案，則會傳回空集合。       下表列出包含工作的範例`My.Computer.FileSystem.FindInFiles`方法。      |若要 |請參閱 |  |--------|---------|  |目錄中搜尋的檔案，其中包含特定字串 |[逐步解說︰ 操作 Visual Basic 中檔案和目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/0411284c-97f6-421f-9cd5-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "要搜尋的目錄。"
    - id: containsText
      type: System.String
      description: "搜尋的文字。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果應該區分大小寫，搜尋否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否要包含子資料夾。 預設值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "包含指定的文字的檔案名稱的唯讀集合..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為`\\.\`)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目錄指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "指定的目錄路徑含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回唯讀的集合，表示包含指定的文字的檔案名稱的字串。"
  remarks: "如果找不到任何符合指定的模式的檔案，則會傳回空集合。       下表列出包含工作的範例`My.Computer.FileSystem.FindInFiles`方法。      |若要 |請參閱 |  |--------|---------|  |目錄中搜尋的檔案，其中包含特定字串 |[逐步解說︰ 操作 Visual Basic 中檔案和目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/cb69d87f-5cdb-4aa7-8869-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "要搜尋的目錄。"
    - id: containsText
      type: System.String
      description: "搜尋的文字。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果應該區分大小寫，搜尋否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否要包含子資料夾。 預設值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: fileWildcards
      type: System.String[]
      description: "要比對的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "包含指定的文字的檔案名稱的唯讀集合..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為`\\.\`)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目錄指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "指定的目錄路徑含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回集合，代表了目錄內的子目錄的路徑名稱的字串。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem.GetDirectories`方法。      |若要 |請參閱 |  |--------|---------|  |列出具有特定模式的子目錄 |[如何︰ 尋找具有特定模式的子目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._12_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "名稱和目錄的路徑。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "指定的目錄內的子目錄的路徑名稱的唯讀集合..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目錄指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回集合，代表了目錄內的子目錄的路徑名稱的字串。"
  remarks: "您可以使用`wildcards`參數來指定特定的模式。 如果您想要在搜尋中包含子目錄的內容，設定`searchType`參數`SearchAllSubDirectories`。       如果找不到任何符合指定的模式的目錄，則會傳回空集合。       下表列出包含工作的範例`My.Computer.FileSystem.GetDirectories`方法。      |若要 |請參閱 |  |--------|---------|  |列出具有特定模式的子目錄 |[如何︰ 尋找具有特定模式的子目錄](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/ed44a5f7-321c-4c72-83a6-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "名稱和目錄的路徑。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否要包含子資料夾。 預設值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: wildcards
      type: System.String[]
      description: "要比對名稱的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "指定的目錄內的子目錄的路徑名稱的唯讀集合。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "一或多個指定的萬用字元是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，空字串，或只包含空格。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定的目錄指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>指定路徑的物件。"
  remarks: "如果目錄不存在，擲回例外狀況不直到第一次屬性<xref:System.IO.DirectoryInfo>存取物件。</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/5efdf299-cb73-46cc-a9c9-_1.vb)]"
  syntax:
    content: public System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 目錄的路徑。"
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>指定路徑的物件。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "目錄路徑含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回<xref href=&quot;System.IO.DriveInfo&quot;></xref>指定的磁碟機的物件。"
  remarks: "<xref:System.IO.DriveInfo>類別模型化的磁碟機，並提供方法和屬性來查詢磁碟機資訊。</xref:System.IO.DriveInfo> 使用<xref:System.IO.DriveInfo>來判斷哪些磁碟機可用，而且它們是哪種類型的磁碟機。</xref:System.IO.DriveInfo> 您也可以查詢來決定容量和可用空間的磁碟機上的屬性。"
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._61_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "要檢查的磁碟機。"
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>指定的磁碟機物件。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回<xref href=&quot;System.IO.FileInfo&quot;></xref>物件為指定的檔案。"
  remarks: "如果檔案不存在; 不擲回例外狀況相反地，它將會擲回第一次存取物件的屬性。       下表列出的工作，包含範例`My.Computer.FileSystem.GetFileInfo`方法。      |若要 |請參閱 |  |--------|---------|  |判斷檔案的名稱和路徑 |[如何︰ 剖析檔案路徑](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "名稱和檔案的路徑。"
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>指定的檔案物件"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路徑名稱格式不正確。 例如，它包含無效的字元，或只有空格。 檔案名稱有尾端斜線。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中包含字串中間的冒號。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑名稱太長。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏 ACL （存取控制清單） 檔案的存取權。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回代表了目錄內檔案名稱的字串的唯讀集合。"
  remarks: "如果找不到任何符合指定的模式的檔案，則會傳回空集合。       下表列出包含工作的範例`My.Computer.FileSystem.GetFiles`方法。      |若要 |請參閱 |  |--------|---------|  |取得目錄中的檔案集合 |[How to︰ 取得目錄中的檔案集合](~/add/includes/ajax-current-ext-md.md)|  |在目錄中尋找具有特定模式的檔案 |[如何︰ 尋找具有特定模式的檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "要搜尋的目錄。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "從指定的目錄的檔案名稱的唯讀集合。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "要搜尋之目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回代表了目錄內檔案名稱的字串的唯讀集合。"
  remarks: "如果找不到任何符合指定的模式的檔案，則會傳回空集合。       下表列出包含工作的範例`My.Computer.FileSystem.GetFiles`方法。      |若要 |請參閱 |  |--------|---------|  |取得目錄中的檔案集合 |[How to︰ 取得目錄中的檔案集合](~/add/includes/ajax-current-ext-md.md)|  |在目錄中尋找具有特定模式的檔案 |[如何︰ 尋找具有特定模式的檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "要搜尋的目錄。"
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "是否要包含子資料夾。 預設值是<xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>。"
    - id: wildcards
      type: System.String[]
      description: "要比對的模式。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "從指定的目錄的檔案名稱的唯讀集合。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "要搜尋之目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>指向現有的檔案。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者缺乏必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "剖析檔案名稱，從提供的路徑。"
  remarks: "這是字串作業。`FileSystem`不檢查。       `GetName`方法就會忽略發生在路徑結尾的斜線。       下表列出包含工作的範例`My.Computer.FileSystem.GetFileName`方法。      |若要 |請參閱 |  |--------|---------|  |剖析檔案路徑 |[如何︰ 剖析檔案路徑](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._127_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "必要。 要剖析的路徑。 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "檔案名稱，從指定的路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回提供的路徑的父路徑。"
  remarks: "這是字串作業。不會檢查檔案系統。"
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._166_1.vb)]"
  syntax:
    content: public string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "要檢查的路徑。"
    return:
      type: System.String
      description: "提供的路徑的父路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "路徑沒有上層路徑，因為它是根的路徑。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "建立在磁碟上的唯一命名的零位元組暫存檔案，並傳回該檔案的完整路徑。"
  remarks: "這個方法可以用來建立暫存檔案。"
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._60_1.vb)]"
  syntax:
    content: public string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含暫存檔案的完整路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄從一個位置移到另一個。"
  remarks: "如果嘗試的目錄不存在的目錄中移動，就會建立與目標結構。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移動的目錄路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "移動來源目錄的目錄路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "來源不是根目錄或來源路徑和目標路徑都相同。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄從一個位置移到另一個。"
  remarks: "如果嘗試的目錄不存在的目錄中移動，就會建立與目標結構。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移動的目錄路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "移動來源目錄的目錄路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目標目錄已經存在和 o<code> verwrite </code>設<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄從一個位置移到另一個。"
  remarks: "如果嘗試的目錄不存在的目錄中移動，就會建立與目標結構。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移動的目錄路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "移動來源目錄的目錄路徑。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果應該覆寫現有的目錄。否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "目標目錄已經存在和 o<code> verwrite </code>設<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將目錄從一個位置移到另一個。"
  remarks: "如果嘗試的目錄不存在的目錄中移動，就會建立與目標結構。"
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "要移動的目錄路徑。"
    - id: destinationDirectoryName
      type: System.String
      description: "移動來源目錄的目錄路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定使用者取消該作業時，會擲回例外狀況。 預設值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '原因為下列其中一個路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\)。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>或<code>destinationDirectoryName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>設定為<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> ，您無法複製檔案的子目錄。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>設定為<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，和使用者取消作業，或無法完成作業。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "作業是個循環。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案移到新位置。"
  remarks: "如果目標結構不存在，則會建立它。       `MoveFile`方法會保留 Ace （存取控制項目），只有當移動相同的磁碟區中的檔案。 這包括繼承的 Ace，變成直接 Ace 時移動 （直接 Ace 的優先順序高於繼承 Ace）。 如果磁碟區之間移動檔案，將不會複製 Ace。       下表列出的工作，包含範例`My.Computer.FileSystem.MoveFile`方法。      |若要 |請參閱 |  |--------|---------|  |移動檔案 |[如何︰ 移動檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移動檔案的路徑。"
    - id: destinationFileName
      type: System.String
      description: "檔案應移到其中的目錄路徑。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案移到新位置。"
  remarks: "如果目標結構不存在，則會建立它。       `MoveFile`方法會保留 Ace （存取控制項目），只有當移動相同的磁碟區中的檔案。 這包括繼承的 Ace，變成直接 Ace 時移動 （直接 Ace 的優先順序高於繼承 Ace）。 如果磁碟區之間移動檔案，將不會複製 Ace。       下表列出的工作，包含範例`My.Computer.FileSystem.MoveFile`方法。      |若要 |請參閱 |  |--------|---------|  |移動檔案 |[如何︰ 移動檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移動檔案的路徑。"
    - id: destinationFileName
      type: System.String
      description: "檔案應移到其中的目錄路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案移到新位置。"
  remarks: "如果目標結構不存在，則會建立它。       `MoveFile`方法會保留 Ace （存取控制項目），只有當移動相同的磁碟區中的檔案。 這包括繼承的 Ace，變成直接 Ace 時移動 （直接 Ace 的優先順序高於繼承 Ace）。 如果磁碟區之間移動檔案，將不會複製 Ace。       下表列出的工作，包含範例`My.Computer.FileSystem.MoveFile`方法。      |若要 |請參閱 |  |--------|---------|  |移動檔案 |[如何︰ 移動檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移動檔案的路徑。"
    - id: destinationFileName
      type: System.String
      description: "檔案應移到其中的目錄路徑。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>若要覆寫現有檔案。否則<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將檔案移到新位置。"
  remarks: "如果目標結構不存在，則會建立它。       `MoveFile`方法會保留 Ace （存取控制項目），只有當移動相同的磁碟區中的檔案。 這包括繼承的 Ace，變成直接 Ace 時移動 （直接 Ace 的優先順序高於繼承 Ace）。 如果磁碟區之間移動檔案，將不會複製 Ace。       下表列出的工作，包含範例`My.Computer.FileSystem.MoveFile`方法。      |若要 |請參閱 |  |--------|---------|  |移動檔案 |[如何︰ 移動檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "要移動檔案的路徑。"
    - id: destinationFileName
      type: System.String
      description: "檔案應移到其中的目錄路徑。"
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "指定是否要以視覺化方式追蹤作業的進度。 預設值是<xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "指定使用者取消該作業時，會擲回例外狀況。 預設值是<xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "來源檔案無效或不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>設定為<xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>，且使用者已取消操作，或發生未指定的 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法可讓您建立<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>物件，可用來輕鬆又有效率地剖析結構化的文字檔案，例如記錄檔。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>物件可以用來讀取分隔和固定寬度的檔案。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |若要 |請參閱 |  |--------|---------|  |從分隔的文字檔讀取 |[How to︰ 從逗號分隔的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從固定寬度的文字檔讀取 |[How to︰ 從固定寬度的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從以多種格式的文字檔讀取 |[How to︰ 以多種格式從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/5e21a8aa-3482-4e3a-9ad2-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "要使用開啟的檔案<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>讀取指定的檔案。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "無法使用指定的格式剖析資料列。 例外狀況訊息指定的列造成例外狀況，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>屬性會被指派包含列中的文字。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法可讓您建立<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>物件，可用來輕鬆又有效率地剖析結構化的文字檔案，例如記錄檔。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>物件可以用來讀取分隔和固定寬度的檔案。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |若要 |請參閱 |  |--------|---------|  |從分隔的文字檔讀取 |[How to︰ 從逗號分隔的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從固定寬度的文字檔讀取 |[How to︰ 從固定寬度的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從以多種格式的文字檔讀取 |[How to︰ 以多種格式從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/3b0d773c-848f-4938-ac74-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "要使用開啟的檔案<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    - id: fieldWidths
      type: System.Int32[]
      description: "欄位的寬度。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>讀取指定的檔案。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "無法使用指定的格式剖析資料列。 例外狀況訊息指定的列造成例外狀況，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>屬性會被指派包含列中的文字。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref>方法可讓您建立<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>物件，可用來輕鬆又有效率地剖析結構化的文字檔案，例如記錄檔。 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>物件可以用來讀取分隔和固定寬度的檔案。"
  remarks: "下表列出包含工作的範例`My.Computer.FileSystem.OpenTextFieldParser`方法。      |若要 |請參閱 |  |--------|---------|  |從分隔的文字檔讀取 |[How to︰ 從逗號分隔的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從固定寬度的文字檔讀取 |[How to︰ 從固定寬度的文字檔讀取](~/add/includes/ajax-current-ext-md.md)|  |從以多種格式的文字檔讀取 |[How to︰ 以多種格式從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/e7a2cbe1-d56b-4ce5-b088-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "要使用開啟的檔案<xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>。"
    - id: delimiters
      type: System.String[]
      description: "欄位的分隔符號。"
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>讀取指定的檔案。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "無法使用指定的格式剖析資料列。 例外狀況訊息指定的列造成例外狀況，而<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>屬性會被指派包含列中的文字。</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "開啟<xref:System.IO.StreamReader>要從檔案讀取物件。</xref:System.IO.StreamReader>"
  remarks: "只有文字檔案可以讀取與<xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       下表列出包含工作的範例`My.Computer.FileSystem.OpenTextFileReader`方法。      |若要 |請參閱 |  |--------|---------|  |開啟具有<xref:System.IO.StreamReader>|[如何︰ 以 StreamReader 從檔案讀取文字](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/90cca2c4-4b9b-4b82-b049-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "要讀取的檔案。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>若要從檔案讀取物件</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "檔案名稱結尾是反斜線 (\\\\)。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的檔案。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限從檔案讀取。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "開啟<xref:System.IO.StreamReader>要從檔案讀取物件。</xref:System.IO.StreamReader>"
  remarks: "只有文字檔案可以讀取與<xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       下表列出包含工作的範例`My.Computer.FileSystem.OpenTextFileReader`方法。      |若要 |請參閱 |  |--------|---------|  |開啟具有<xref:System.IO.StreamReader>|[如何︰ 以 StreamReader 從檔案讀取文字](~/add/includes/ajax-current-ext-md.md)| </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/2b6a2b5b-b6e7-41de-a324-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要讀取的檔案。"
    - id: encoding
      type: System.Text.Encoding
      description: "若要使用的檔案內容的編碼方式。 預設值為 ASCII。"
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>若要從檔案讀取物件</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "檔案名稱結尾是反斜線 (\\\\)。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的檔案。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限從檔案讀取。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "開啟<xref:System.IO.StreamWriter>物件寫入至指定的檔案。</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter`方法開啟及初始化檔案資料流，然後傳回<xref:System.IO.StreamWriter>該資料流的物件。</xref:System.IO.StreamWriter> 您可以寫入資料流為依需求次數，並完成後將其關閉。      > [!NOTE] > 必須呼叫<xref:System.IO.StreamWriter.Close%2A>方法<xref:System.IO.StreamWriter>物件，並確定所有資料都會正確地都寫入至基礎資料流。</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       如果您要寫入檔案中只有少數的字串，則可能更容易使用<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>方法。</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       下表列出的工作，包含範例`My.Computer.FileSystem.OpenTextFileWriter`方法。      |若要 |請參閱 |  |--------|---------|  |將文字寫入至副檔名`StreamWriter` | [How to︰ 以 StreamWriter 檔案寫入的文字](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/cbe9d22d-ebc5-4087-a635-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "要寫入至檔案。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要附加至檔案的內容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆寫檔案的內容。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>要寫入至指定的檔案物件。</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "檔案名稱結尾有尾端斜線。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "開啟<xref:System.IO.StreamWriter>寫入至指定的檔案。</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter`方法開啟及初始化檔案資料流，然後傳回<xref:System.IO.StreamWriter>該資料流的物件。</xref:System.IO.StreamWriter> 您可以寫入資料流為依需求次數，並完成後將其關閉。      > [!NOTE] > 必須呼叫<xref:System.IO.StreamWriter.Close%2A>方法<xref:System.IO.StreamWriter>物件，並確定所有資料都會正確地都寫入至基礎資料流。</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       如果您要寫入檔案中只有少數的字串，則可能更容易使用<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>方法。</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       下表列出的工作，包含範例`My.Computer.FileSystem.OpenTextFileWriter`方法。      |若要 |請參閱 |  |--------|---------|  |將文字寫入至副檔名`StreamWriter` | [How to︰ 以 StreamWriter 檔案寫入的文字](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/829b6f81-31e4-45e8-93df-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要寫入至檔案。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要附加至檔案中的內容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆寫檔案的內容。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: encoding
      type: System.Text.Encoding
      description: "要用於寫入檔案編碼方式。 預設值為 ASCII。"
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>要寫入至指定的檔案物件。</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "檔案名稱結尾有尾端斜線。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回檔案的內容當做位元組陣列。"
  remarks: "`ReadAllBytes`方法`My.Computer.FileSystem`物件可讓您讀取二進位檔案。 檔案的內容會傳回做為位元組陣列。       請勿根據檔案名稱的檔案來判斷內容。 例如，檔案 Form1.vb 可能不是 Visual Basic 來源檔案。 確認所有輸入，然後再使用您的應用程式中的資料。       下表列出包含工作的範例`My.Computer.FileSystem.ReadAllBytes`方法。      |若要 |請參閱 |  |--------|---------|  |讀取二進位檔案 |[如何︰ 讀取二進位檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._93_1.vb)]"
  syntax:
    content: public byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "要讀取的檔案。"
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>陣列，包含檔案的內容。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回的文字檔案做為內容<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。"
  remarks: "`ReadAllText`方法`My.Computer.FileSystem`物件可讓您從文字檔讀取。 檔案的內容會以字串形式傳回。       檔案編碼方式可以是指定檔案的內容是否例如 ASCII 或 utf-8 的編碼方式。 如果您從含擴充字元的檔案讀取，您需要指定檔案的編碼方式使用 ReadAllText 方法的另一個多載。       請勿根據檔案名稱的檔案來判斷內容。 例如，檔案 Form1.vb 可能不是 Visual Basic 來源檔案。 確認所有輸入，然後再使用您的應用程式中的資料。       下表列出包含工作的範例`My.Computer.FileSystem.ReadAllText`方法。      |若要 |請參閱 |  |--------|---------|  |從文字檔讀取 |[How to︰ 從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_2.vb)]"
  syntax:
    content: public string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "名稱和要讀取的檔案路徑。"
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含檔案的內容。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "傳回的文字檔案做為內容<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>。"
  remarks: "`ReadAllText`方法`My.Computer.FileSystem`物件可讓您從文字檔讀取。 檔案的內容會以字串形式傳回。       檔案編碼方式可以是指定檔案的內容是否例如 ASCII 或 utf-8 的編碼方式。 如果您從含擴充字元的檔案讀取，您需要指定檔案的編碼方式。       請勿根據檔案名稱的檔案來判斷內容。 例如，檔案 Form1.vb 可能不是 Visual Basic 來源檔案。 確認所有輸入，然後再使用您的應用程式中的資料。       下表列出包含工作的範例`My.Computer.FileSystem.ReadAllText`方法。      |若要 |請參閱 |  |--------|---------|  |從文字檔讀取 |[How to︰ 從文字檔讀取](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_2.vb)]"
  syntax:
    content: public string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "名稱和要讀取的檔案路徑。"
    - id: encoding
      type: System.Text.Encoding
      description: "字元編碼以用於讀取檔案。 預設值為 utf-8。"
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>包含檔案的內容。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "重新命名目錄。"
  remarks: "這個方法無法用來移動目錄。使用`MoveDirectory`移動和重新命名目錄的方法。"
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/2ed39ac4-a333-4d3c-94f5-_1.vb)]"
  syntax:
    content: public void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "路徑和要重新命名目錄的名稱。"
    - id: newName
      type: System.String
      description: "新目錄的名稱。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>包含路徑資訊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -<code>newName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "目錄不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "沒有現有的檔案或目錄中指定的名稱與<code> newName </code>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過 248 個字元。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "重新命名的檔案。"
  remarks: "這個方法無法用來移動檔案。使用<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>方法來移動及重新命名檔案。</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>       下表列出的工作，包含範例`My.Computer.FileSystem.RenameFile`方法。      |若要 |請參閱 |  |--------|---------|  |重新命名檔案 |[如何︰ 重新命名檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/b921ac51-10eb-406b-bf32-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "若要重新命名檔案。"
    - id: newName
      type: System.String
      description: "新的檔案名稱。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>包含路徑資訊，或以反斜線結尾 (\\\\)。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -<code>newName</code>是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>或空字串。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "沒有現有的檔案或目錄中指定的名稱與<code> newName </code>。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "使用者沒有必要的權限。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  id: SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "取得物件，提供用於存取常用的屬性參考目錄。"
  remarks: ''
  example:
  - "This example returns the file path for the user's Desktop directory and displays it.  \n  \n [!code-vb[VbVbcnMyFileSystem#80](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._102_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy SpecialDirectories { get; }
    return:
      type: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
      description: "這個屬性會傳回<xref href=&quot;Microsoft.VisualBasic.FileIO.SpecialDirectories&quot;></xref>電腦物件。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將資料寫入至二進位檔案。"
  remarks: "如果指定的路徑，但不包括檔案名稱，不是有效的<xref:System.IO.DirectoryNotFoundException>擲回例外狀況。</xref:System.IO.DirectoryNotFoundException> 如果此路徑有效，但檔案不存在，則會建立檔案。      > [!NOTE] >`WriteAllBytes`方法開啟的檔案、 寫入，，然後關閉它。 使用程式碼`WriteAllBytes`方法是使用程式碼，比簡單<xref:System.IO.BinaryWriter>物件。</xref:System.IO.BinaryWriter> 不過，如果您將資料加入至檔案，使用迴圈，<xref:System.IO.BinaryWriter>物件可提供更佳的效能，因為您只需要開啟和關閉檔案一次。</xref:System.IO.BinaryWriter>       下表列出的工作，包含範例`My.Computer.FileSystem.WriteAllBytes`方法。      |若要 |請參閱 |  |--------|---------|  |寫入至二進位檔案 |[如何︰ 寫入二進位檔案](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/b345f967-5fa3-438e-bb10-_1.vb)]"
  syntax:
    content: public void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "路徑和名稱，要寫入的檔案。"
    - id: data
      type: System.Byte[]
      description: "要寫入檔案資料。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要附加至檔案內容。<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆寫檔案內容。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將文字寫入檔案。"
  remarks: "Utf-8 編碼方式，用來寫入檔案。 若要指定不同的編碼方式，使用 WriteAllText 方法的多載不同。       如果指定的檔案不存在，則會建立它。       如果指定的編碼不符合現有檔案的編碼，則會忽略指定的編碼。      > [!NOTE] >`WriteAllText`方法開啟的檔案、 寫入，，然後關閉它。 使用程式碼`WriteAllText`方法是使用程式碼，比簡單<xref:System.IO.StreamWriter>物件。</xref:System.IO.StreamWriter> 不過，如果利用迴圈，將字串加入至檔案<xref:System.IO.StreamWriter>物件可提供更佳的效能，因為您只需要開啟和關閉檔案一次。</xref:System.IO.StreamWriter> 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>方法。</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       下表列出包含工作的範例`My.Computer.FileSystem.WriteAllText`方法。      |若要 |請參閱 |  |--------|---------|  |將文字寫入至檔案 |[How to︰ 將文字寫入至檔案](~/add/includes/ajax-current-ext-md.md)|  |將文字附加至檔案 |[如何︰ 附加至文字檔](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "要寫入至檔案。"
    - id: text
      type: System.String
      description: "要寫入檔案的文字。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要附加至檔案的內容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆寫檔案的內容。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "將文字寫入檔案。"
  remarks: "如果指定的檔案不存在，則會建立它。       如果指定的編碼不符合現有檔案的編碼，則會忽略指定的編碼。      > [!NOTE] >`WriteAllText`方法開啟的檔案、 寫入，，然後關閉它。 使用程式碼`WriteAllText`方法是使用程式碼，比簡單<xref:System.IO.StreamWriter>物件。</xref:System.IO.StreamWriter> 不過，如果利用迴圈，將字串加入至檔案<xref:System.IO.StreamWriter>物件可提供更佳的效能，因為您只需要開啟和關閉檔案一次。</xref:System.IO.StreamWriter> 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>方法。</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       下表列出包含工作的範例`My.Computer.FileSystem.WriteAllText`方法。      |若要 |請參閱 |  |--------|---------|  |將文字寫入至檔案 |[How to︰ 將文字寫入至檔案](~/add/includes/ajax-current-ext-md.md)|  |將文字附加至檔案 |[如何︰ 附加至文字檔](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "要寫入至檔案。"
    - id: text
      type: System.String
      description: "要寫入檔案的文字。"
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>要附加至檔案的內容<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>覆寫檔案的內容。 預設值是<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>。"
    - id: encoding
      type: System.Text.Encoding
      description: "寫入檔案時要使用的編碼方式。 預設值為 utf-8。"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '下列原因之一路徑無效︰ 它是長度為零的字串。它只包含空格。它包含無效的字元。或者它是裝置路徑 (開頭為\\ \\。\\); 結束有尾端斜線。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "檔案不存在。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "檔案正在使用另一個處理序，或發生 I/O 錯誤。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "路徑超過系統定義的長度上限。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "路徑中的檔案或目錄名稱含有冒號 （:），或者是無效的格式。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "不是記憶體不足，無法將字串寫入緩衝區。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "使用者缺乏必要的權限來檢視路徑。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
  parent: Microsoft.VisualBasic.MyServices
  isExternal: false
  name: SpecialDirectoriesProxy
  nameWithType: SpecialDirectoriesProxy
  fullName: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath
  nameWithType: FileSystemProxy.CombinePath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystemProxy.CopyDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile
  nameWithType: FileSystemProxy.CopyFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystemProxy.CreateDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystemProxy.DeleteDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystemProxy.DeleteFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystemProxy.DirectoryExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists
  nameWithType: FileSystemProxy.FileExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystemProxy.FindInFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystemProxy.GetDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystemProxy.GetDirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystemProxy.GetDriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystemProxy.GetFileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles
  nameWithType: FileSystemProxy.GetFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName
  nameWithType: FileSystemProxy.GetName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystemProxy.GetParentPath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystemProxy.GetTempFileName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystemProxy.MoveDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile
  nameWithType: FileSystemProxy.MoveFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystemProxy.OpenTextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystemProxy.OpenTextFileReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystemProxy.OpenTextFileWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystemProxy.ReadAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystemProxy.ReadAllText
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystemProxy.RenameDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile
  nameWithType: FileSystemProxy.RenameFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystemProxy.WriteAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystemProxy.WriteAllText
