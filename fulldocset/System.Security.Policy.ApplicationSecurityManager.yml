### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "管理資訊清單啟動應用程式信任決策。"
  remarks: "ApplicationSecurityManager 類別提供的資訊清單為基礎的應用程式執行的重要資訊。 <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>屬性會識別信任管理員負責判斷應用程式是否受到信任。</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>方法呼叫的應用程式信任管理員以判斷應用程式是否受到信任。</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>屬性包含使用者的快取的信任決策。</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得目前的應用程式信任管理員。"
  remarks: "目前版本中沒有一個可以是自訂實作的信任管理員的<xref:System.Security.Policy.IApplicationTrustManager>介面。</xref:System.Security.Policy.IApplicationTrustManager> 信任管理員預設實作會提示安裝應用程式，提升的權限授與應用程式的使用者權限。 其他信任管理員實作可能會有不同的使用者體驗。 例如，實作可能會檢查企業信任的應用程式，而不提示使用者提供該資訊清單。"
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "<xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> ，代表目前的信任管理員。"
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "在此應用程式原則並沒有信任管理員。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "判斷使用者是否核准以要求的權限集合來執行指定的應用程式。"
  remarks: "DetermineApplicationTrust 使用設定<xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>屬性來判斷是否允許在指定的應用程式執行與的權限集的應用程式資訊清單中的要求。</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> 信任管理員的行為會依賴信任管理員實作，且資訊傳入`context`參數。 信任管理員的預設行為是建立使用者介面 (UI) 對話方塊，以判斷使用者核准。 不過，信任管理員也可以決定根據其他準則，例如決策公司資料庫所提供的應用程式的信任狀態。 信任決策可保存、 根據`context`參數屬性和信任管理員實作。 如果應用程式信任決策，根據使用者對話方塊保存，未來呼叫<xref:System.Security.Policy.ApplicationSecurityManager>不會顯示每個要求該應用程式的 UI 對話方塊。</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust 稱為資訊清單，但之前已經下載到本機系統的應用程式。"
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "<xref href=&quot;System.ActivationContext&quot;> </xref>識別應用程式的啟動內容。"
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "A <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref>識別應用程式的信任管理員內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要執行指定的應用程式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得應用程式信任集合，其中包含使用者的快取的信任決策。"
  remarks: "集合中的信任決策會維護使用方法的集合，例如<xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>方法或<xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>方法。</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> ，其中包含使用者的快取的信任決策。"
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
