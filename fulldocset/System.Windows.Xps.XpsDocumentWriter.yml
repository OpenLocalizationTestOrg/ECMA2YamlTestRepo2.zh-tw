### YamlMime:ManagedReference
items:
- uid: System.Windows.Xps.XpsDocumentWriter
  id: XpsDocumentWriter
  children:
  - System.Windows.Xps.XpsDocumentWriter.CancelAsync
  - System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator
  - System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.String)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  - System.Windows.Xps.XpsDocumentWriter.WritingCancelled
  - System.Windows.Xps.XpsDocumentWriter.WritingCompleted
  - System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired
  - System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged
  langs:
  - csharp
  name: XpsDocumentWriter
  nameWithType: XpsDocumentWriter
  fullName: System.Windows.Xps.XpsDocumentWriter
  type: Class
  summary: "提供方法來寫入[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件或列印佇列。"
  remarks: "XpsDocumentWriter 有沒有建構函式。 若要建立 XpsDocumentWriter，使用靜態<xref:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter%2A>方法的<xref:System.Windows.Xps.Packaging.XpsDocument>類別或使用一種靜態<xref:System.Printing.PrintQueue.CreateXpsDocumentWriter%2A>方法的<xref:System.Printing.PrintQueue>類別。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.CreateXpsDocumentWriter%2A> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter%2A> 文件或建立 XpsDocumentWriter 佇列成為它所寫入的目標。"
  example:
  - "The following example shows how to create an instance of the XpsDocumentWriter class.  \n  \n [!code-cs[XpsSave#CreateXpsDocumentWriter](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createxpsdocumentwriter)]\n [!code-vb[XpsSave#CreateXpsDocumentWriter](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createxpsdocumentwriter)]"
  syntax:
    content: 'public class XpsDocumentWriter : System.Windows.Documents.Serialization.SerializerWriter'
  inheritance:
  - System.Object
  - System.Windows.Documents.Serialization.SerializerWriter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.CancelAsync
  id: CancelAsync
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: XpsDocumentWriter.CancelAsync()
  fullName: System.Windows.Xps.XpsDocumentWriter.CancelAsync()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "取消目前<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync*>作業。</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync*>"
  syntax:
    content: public override void CancelAsync ();
    parameters: []
  overload: System.Windows.Xps.XpsDocumentWriter.CancelAsync*
  exceptions:
  - type: System.Windows.Xps.XpsWriterException
    commentId: T:System.Windows.Xps.XpsWriterException
    description: "沒有非同步寫入作業正在進行中。"
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator
  id: CreateVisualsCollator
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: CreateVisualsCollator()
  nameWithType: XpsDocumentWriter.CreateVisualsCollator()
  fullName: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "傳回<xref href=&quot;System.Windows.Xps.VisualsToXpsDocument&quot;></xref>可以寫入<xref href=&quot;System.Windows.Media.Visual&quot;></xref>物件至文件或列印佇列。"
  remarks: "<xref:System.Windows.Xps.VisualsToXpsDocument>寫入至相同目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>做為<xref:System.Windows.Xps.XpsDocumentWriter>建立<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Printing.PrintQueue> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.VisualsToXpsDocument>"
  example:
  - "The following example shows how to use the CreateVisualsCollator method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public override System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();
    parameters: []
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "The new <xref href=&quot;System.Windows.Xps.VisualsToXpsDocument&quot;></xref>."
  overload: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: XpsDocumentWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "傳回<xref href=&quot;System.Windows.Xps.VisualsToXpsDocument&quot;></xref>可以寫入<xref href=&quot;System.Windows.Media.Visual&quot;></xref>物件與<xref href=&quot;System.Printing.PrintTicket&quot;></xref>到 XPS 文件或列印佇列的設定。"
  remarks: "<xref:System.Windows.Xps.VisualsToXpsDocument>寫入至相同目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>做為<xref:System.Windows.Xps.XpsDocumentWriter>建立<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Printing.PrintQueue> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.VisualsToXpsDocument>       這個方法不會驗證或修改指定`documentPrintTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePrintTicket, System.Printing.PrintTicket documentPrintTicket);
    parameters:
    - id: documentSequencePrintTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>指定文件順序的預設列印喜好設定。"
    - id: documentPrintTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>代表每份文件的預設列印喜好設定。"
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "新<xref href=&quot;System.Windows.Xps.VisualsToXpsDocument&quot;></xref>寫入<xref href=&quot;System.Windows.Media.Visual&quot;></xref>的項目<xref href=&quot;System.Printing.PrintTicket&quot;></xref>設定<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;> </xref>。"
  overload: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.String)
  id: Write(System.String)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: XpsDocumentWriter.Write(String)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]至目標文件<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>至目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue></xref:System.Windows.Xps.Packaging.XpsDocument>中的<xref:System.Windows.Documents.FixedDocument>項目</xref:System.Windows.Documents.FixedDocument>集來源中的項目</xref:System.Windows.Documents.FixedDocument>       此寫入方法將 reserialize 指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件會在移除的所有內容<xref:System.IO.Packaging.Package>，就不需要由保留[XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761)。</xref:System.IO.Packaging.Package>  介紹雷同，也會移除所有延伸模組從<xref:System.Windows.Documents.FixedPage>標記，包括任何擴充[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]內容。</xref:System.Windows.Documents.FixedPage>       設計此寫入方法不會呼叫<xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>事件。</xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>"
  syntax:
    content: public void Write (string documentPath);
    parameters:
    - id: documentPath
      type: System.String
      description: "來源文件的路徑。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator)
  id: Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(DocumentPaginator)
  nameWithType: XpsDocumentWriter.Write(DocumentPaginator)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example shows how to use the Write method to write to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteToXpsWithDocumentPaginator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writetoxpswithdocumentpaginator)]\n [!code-vb[XpsSave#WriteToXpsWithDocumentPaginator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writetoxpswithdocumentpaginator)]"
  syntax:
    content: public override void Write (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料指標，也包含資料分頁方法。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument)
  id: Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedDocument)
  nameWithType: XpsDocumentWriter.Write(FixedDocument)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocument)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>"
  example:
  - "The following example shows how to use this method to write to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteToXpsWithFixedDocument](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writetoxpswithfixeddocument)]\n [!code-vb[XpsSave#WriteToXpsWithFixedDocument](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writetoxpswithfixeddocument)]"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;> </xref>。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  id: Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence)
  nameWithType: XpsDocumentWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocumentSequence)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的集。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>"
  example:
  - "The following example shows how to use the Write method to write a sequence of [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] documents.  \n  \n [!code-cs[XpsSave#WriteToXpsWithFixedDocumentSequence](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writetoxpswithfixeddocumentsequence)]\n [!code-vb[XpsSave#WriteToXpsWithFixedDocumentSequence](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writetoxpswithfixeddocumentsequence)]"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "一組文件寫入<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;> </xref>。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage)
  id: Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedPage)
  nameWithType: XpsDocumentWriter.Write(FixedPage)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedPage)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入的頁面<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;> </xref>。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual)
  id: Write(System.Windows.Media.Visual)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(Visual)
  nameWithType: XpsDocumentWriter.Write(Visual)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(Visual)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "為批次寫入的<xref:System.Windows.Media.Visual>，請使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>"
  example:
  - "The following example shows how to use the Write method to write a <xref:System.Windows.Media.Visual> to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteToXpsWithVisual](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writetoxpswithvisual)]\n [!code-vb[XpsSave#WriteToXpsWithVisual](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writetoxpswithvisual)]"
  syntax:
    content: public override void Write (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  id: Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(String,XpsDocumentNotificationLevel)
  nameWithType: XpsDocumentWriter.Write(String,XpsDocumentNotificationLevel)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(String,XpsDocumentNotificationLevel)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]至目標文件<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "當`notificationLevel`已停用，<xref:System.Windows.Xps.XpsDocumentWriter>複製序列化[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件的目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>建立<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Printing.PrintQueue> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.XpsDocumentWriter> 當`notificationLevel`已啟用，<xref:System.Windows.Xps.XpsDocumentWriter>先還原序列化文件，接下來這，然後將它寫入進度通知的目標為每個頁面都會輸出。</xref:System.Windows.Xps.XpsDocumentWriter>       雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 此方法會將<xref:System.Windows.Documents.FixedDocument>來源的<xref:System.Windows.Documents.FixedDocument>目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue></xref:System.Windows.Xps.Packaging.XpsDocument>中的項目</xref:System.Windows.Documents.FixedDocument>序列中的項目</xref:System.Windows.Documents.FixedDocument>       如果`notificationLevel`指定為<xref:System.Windows.Xps.XpsDocumentNotificationLevel>，僅序列化文件，不會列印時，才不會產生通知。</xref:System.Windows.Xps.XpsDocumentNotificationLevel>  若要接收通知必須 reserialized 文件。  當 reserialized 文件是從所有內容<xref:System.IO.Packaging.Package>，就不需要由保留[XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761)已移除。</xref:System.IO.Packaging.Package>  介紹雷同，也會移除所有延伸模組從<xref:System.Windows.Documents.FixedPage>標記，包括任何擴充[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]內容。</xref:System.Windows.Documents.FixedPage>       如果`notificationLevel`指定為<xref:System.Windows.Xps.XpsDocumentNotificationLevel>不 reserialized 文件和延伸的任何內容都會保留下來，即使在列印時。</xref:System.Windows.Xps.XpsDocumentNotificationLevel>       設計此寫入方法不會呼叫<xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>事件。</xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>"
  syntax:
    content: public void Write (string documentPath, System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel);
    parameters:
    - id: documentPath
      type: System.String
      description: "來源文件的路徑。"
    - id: notificationLevel
      type: System.Windows.Xps.XpsDocumentNotificationLevel
      description: "表示是否啟用通知。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料指標，也包含資料分頁方法。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> ，代表資料的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedDocument,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "以同步方式寫入<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的集。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "寫入的文件集。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件集的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(FixedPage,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入頁面。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示頁面的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: Write(Visual,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(Visual,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "為批次寫入的<xref:System.Windows.Media.Visual>，請使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(String)
  nameWithType: XpsDocumentWriter.WriteAsync(String)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]至目標文件<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>至目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue></xref:System.Windows.Xps.Packaging.XpsDocument>中的<xref:System.Windows.Documents.FixedDocument>項目</xref:System.Windows.Documents.FixedDocument>集來源中的項目</xref:System.Windows.Documents.FixedDocument>       這個 WriteAsync 方法將 reserialize 指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件會在移除的所有內容<xref:System.IO.Packaging.Package>，就不需要由保留[XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761)。</xref:System.IO.Packaging.Package>  介紹雷同，也會移除所有延伸模組從<xref:System.Windows.Documents.FixedPage>標記，包括任何擴充[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]內容。</xref:System.Windows.Documents.FixedPage>       設計此 WriteAsync 方法不會呼叫<xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>事件。</xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>"
  syntax:
    content: public void WriteAsync (string documentPath);
    parameters:
    - id: documentPath
      type: System.String
      description: "來源文件的路徑。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: ''
  example:
  - "The following example shows how to use this method to write to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteAsyncToXpsWithDocumentPaginator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writeasynctoxpswithdocumentpaginator)]\n [!code-vb[XpsSave#WriteAsyncToXpsWithDocumentPaginator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writeasynctoxpswithdocumentpaginator)]"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料指標，也包含資料分頁方法。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  id: WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>"
  example:
  - "The following example shows how to use this method to write to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteAsyncToXpsWithFixedDocument](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writeasynctoxpswithfixeddocument)]\n [!code-vb[XpsSave#WriteAsyncToXpsWithFixedDocument](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writeasynctoxpswithfixeddocument)]"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的集。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>"
  example:
  - "The following example shows how to use this method to write to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteAsyncToXpsWithFixedDocumentSequence](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writeasynctoxpswithfixeddocumentsequence)]\n [!code-vb[XpsSave#WriteAsyncToXpsWithFixedDocumentSequence](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writeasynctoxpswithfixeddocumentsequence)]"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "寫入的文件集。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage)
  id: WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入頁面。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual)
  id: WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(Visual)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "為批次寫入的<xref:System.Windows.Media.Visual>，請使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>"
  example:
  - "The following example shows how to use this method to write a <xref:System.Windows.Media.Visual> to an [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] document.  \n  \n [!code-cs[XpsSave#WriteAsyncToXpsWithVisual](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writeasynctoxpswithvisual)]\n [!code-vb[XpsSave#WriteAsyncToXpsWithVisual](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writeasynctoxpswithvisual)]"
  syntax:
    content: public override void WriteAsync (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  id: WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(String,XpsDocumentNotificationLevel)
  nameWithType: XpsDocumentWriter.WriteAsync(String,XpsDocumentNotificationLevel)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(String,XpsDocumentNotificationLevel)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件和通知選項以目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "當`notificationLevel`已停用，<xref:System.Windows.Xps.XpsDocumentWriter>複製序列化[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]文件的目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>建立<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Printing.PrintQueue> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.XpsDocumentWriter> 當`notificationLevel`已啟用，<xref:System.Windows.Xps.XpsDocumentWriter>先還原序列化文件，接下來這，然後將它寫入進度通知的目標為每個頁面都會輸出。</xref:System.Windows.Xps.XpsDocumentWriter>       雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 此方法會將<xref:System.Windows.Documents.FixedDocument>來源的<xref:System.Windows.Documents.FixedDocument>目標<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue></xref:System.Windows.Xps.Packaging.XpsDocument>中的項目</xref:System.Windows.Documents.FixedDocument>序列中的項目</xref:System.Windows.Documents.FixedDocument>       如果`notificationLevel`指定為<xref:System.Windows.Xps.XpsDocumentNotificationLevel>，僅序列化文件，不會列印時，才不會產生通知。</xref:System.Windows.Xps.XpsDocumentNotificationLevel>  若要接收通知必須 reserialized 文件。  當 reserialized 文件是從所有內容<xref:System.IO.Packaging.Package>，就不需要由保留[XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761)已移除。</xref:System.IO.Packaging.Package>  介紹雷同，也會移除所有延伸模組從<xref:System.Windows.Documents.FixedPage>標記，包括任何擴充[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]內容。</xref:System.Windows.Documents.FixedPage>       如果`notificationLevel`指定為<xref:System.Windows.Xps.XpsDocumentNotificationLevel>不 reserialized 文件和延伸的任何內容都會保留下來，即使在列印時。</xref:System.Windows.Xps.XpsDocumentNotificationLevel>       設計此 WriteAsync 方法不會呼叫<xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>事件。</xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>"
  syntax:
    content: public void WriteAsync (string documentPath, System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel);
    parameters:
    - id: documentPath
      type: System.String
      description: "來源文件的路徑。"
    - id: notificationLevel
      type: System.Windows.Xps.XpsDocumentNotificationLevel
      description: "表示是否啟用通知。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userSuppliedState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料; 的指標也包含資料分頁方法。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料指標，也包含資料分頁方法。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> ，代表資料的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userSuppliedState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的集。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userSuppliedState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "寫入的文件集。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的集。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "寫入的文件集。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件集的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userSuppliedState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入頁面。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入頁面。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示頁面的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(Visual,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "為批次寫入的<xref:System.Windows.Media.Visual>，請使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public override void WriteAsync (System.Windows.Media.Visual visual, object userSuppliedState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "為批次寫入的<xref:System.Windows.Media.Visual>，請使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式分頁的內容寫入指定的<xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userSuppliedState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "物件，包含未分頁的來源資料; 的指標也包含資料分頁方法。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> ，代表資料的預設列印喜好設定。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocument&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>集。</xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userSuppliedState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "寫入的文件。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "WriteAsync 將一組文件以非同步方式寫入<xref:System.Windows.Xps.Packaging.XpsDocument>或<xref:System.Printing.PrintQueue>建立<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Printing.PrintQueue> </xref:System.Windows.Xps.Packaging.XpsDocument> 寫入的資料包括<xref:System.Printing.PrintTicket>和呼叫端要傳遞至事件處理常式的其他資訊。</xref:System.Printing.PrintTicket>       雖然<xref:System.Windows.Xps.Packaging.XpsDocument>類別具有單數名稱，<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個<xref:System.Windows.Documents.FixedDocument>或一組多份文件。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> </xref:System.Windows.Xps.Packaging.XpsDocument> 這個方法會加入<xref:System.Windows.Documents.FixedDocument>或一組<xref:System.Windows.Documents.FixedDocument>項目至現有的順序。</xref:System.Windows.Documents.FixedDocument> </xref:System.Windows.Documents.FixedDocument>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userSuppliedState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "要寫入的文件集。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件集的預設列印喜好設定。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Documents.FixedPage&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userSuppliedState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "寫入頁面。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示頁面的預設列印喜好設定。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,PrintTicket,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "將以非同步方式指定<xref href=&quot;System.Windows.Media.Visual&quot;></xref>搭配<xref href=&quot;System.Printing.PrintTicket&quot;></xref>目標<xref href=&quot;System.Windows.Xps.Packaging.XpsDocument&quot;></xref>或<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "撰寫多個<xref:System.Windows.Media.Visual>項目，使用<xref:System.Windows.Xps.VisualsToXpsDocument>.</xref:System.Windows.Xps.VisualsToXpsDocument> </xref:System.Windows.Media.Visual>       這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 如果有必要，請使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法來建立<xref:System.Printing.PrintTicket>專屬於<xref:System.Printing.PrintQueue>和適用於指定的印表機。</xref:System.Printing.PrintQueue> </xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  syntax:
    content: public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userSuppliedState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>寫入。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>表示文件的預設列印喜好設定。"
    - id: userSuppliedState
      type: System.Object
      description: "指定使用者識別以及物件與非同步作業產生關聯。"
  overload: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WritingCancelled
  id: WritingCancelled
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WritingCancelled
  nameWithType: XpsDocumentWriter.WritingCancelled
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingCancelled
  type: Event
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "發生時<> *> 或<> *> 會取消作業。"
  syntax:
    content: public override event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;
    return:
      type: System.Windows.Documents.Serialization.WritingCancelledEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WritingCompleted
  id: WritingCompleted
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WritingCompleted
  nameWithType: XpsDocumentWriter.WritingCompleted
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingCompleted
  type: Event
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "寫入作業完成時發生。"
  remarks: ''
  example:
  - "The following example shows how to use the WritingCompleted event.  \n  \n [!code-cs[XpsSave#WritingEvents](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writingevents)]\n [!code-vb[XpsSave#WritingEvents](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writingevents)]"
  syntax:
    content: public override event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;
    return:
      type: System.Windows.Documents.Serialization.WritingCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired
  id: WritingPrintTicketRequired
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WritingPrintTicketRequired
  nameWithType: XpsDocumentWriter.WritingPrintTicketRequired
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired
  type: Event
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "之前發生<> *> 或<> *> 方法會將<xref href=&quot;System.Printing.PrintTicket&quot;></xref>文件或列印佇列。"
  remarks: "WritingPrintTicketRequired 可讓事件處理常式以取代新<xref:System.Printing.PrintTicket>個傳遞給寫入作業。</xref:System.Printing.PrintTicket>       下列四個<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>和<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法不會呼叫 WritingPrintTicketRequired 事件:- <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>(~ / add/includes/ajax-current-ext-md.md)- <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>(~/add/includes/ajax-current-ext-md.md XpsDocumentNotificationLevel)- <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>（字串）- <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>（String，XpsDocumentNotificationLevel）</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> </xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>"
  example:
  - "The following example shows how to use the WritingPrintTicketRequired event.  \n  \n [!code-cs[XpsPrint#PrintMultipleFixedContentDocuments](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#printmultiplefixedcontentdocuments)]\n [!code-vb[XpsPrint#PrintMultipleFixedContentDocuments](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#printmultiplefixedcontentdocuments)]  \n  \n The event handler is created in the following example.  \n  \n [!code-cs[XpsPrint#MultipleFixedContentDocuments_WritingPrintTicketRequired](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#multiplefixedcontentdocuments_writingprintticketrequired)]\n [!code-vb[XpsPrint#MultipleFixedContentDocuments_WritingPrintTicketRequired](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#multiplefixedcontentdocuments_writingprintticketrequired)]"
  syntax:
    content: public override event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;
    return:
      type: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged
  id: WritingProgressChanged
  parent: System.Windows.Xps.XpsDocumentWriter
  langs:
  - csharp
  name: WritingProgressChanged
  nameWithType: XpsDocumentWriter.WritingProgressChanged
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged
  type: Event
  assemblies:
  - System.Printing
  namespace: System.Windows.Xps
  summary: "發生時<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>更新其進度。"
  remarks: ''
  example:
  - "The following example shows how to create and use a WritingProgressChanged event handler.  \n  \n [!code-cs[XpsSave#WritingEvents](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#writingevents)]\n [!code-vb[XpsSave#WritingEvents](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#writingevents)]"
  syntax:
    content: public override event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;
    return:
      type: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: System.Windows.Documents.Serialization.SerializerWriter
- uid: System.Windows.Xps.XpsWriterException
  parent: System.Windows.Xps
  isExternal: false
  name: XpsWriterException
  nameWithType: XpsWriterException
  fullName: System.Windows.Xps.XpsWriterException
- uid: System.Windows.Xps.XpsDocumentWriter.CancelAsync
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: CancelAsync()
  nameWithType: XpsDocumentWriter.CancelAsync()
  fullName: System.Windows.Xps.XpsDocumentWriter.CancelAsync()
- uid: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: CreateVisualsCollator()
  nameWithType: XpsDocumentWriter.CreateVisualsCollator()
  fullName: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator()
- uid: System.Windows.Documents.Serialization.SerializerWriterCollator
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: SerializerWriterCollator
  nameWithType: SerializerWriterCollator
  fullName: System.Windows.Documents.Serialization.SerializerWriterCollator
- uid: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: XpsDocumentWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.String)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(String)
  nameWithType: XpsDocumentWriter.Write(String)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(DocumentPaginator)
  nameWithType: XpsDocumentWriter.Write(DocumentPaginator)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator)
- uid: System.Windows.Documents.DocumentPaginator
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedDocument)
  nameWithType: XpsDocumentWriter.Write(FixedDocument)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocument)
- uid: System.Windows.Documents.FixedDocument
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocument
  nameWithType: FixedDocument
  fullName: System.Windows.Documents.FixedDocument
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedDocumentSequence)
  nameWithType: XpsDocumentWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocumentSequence)
- uid: System.Windows.Documents.FixedDocumentSequence
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocumentSequence
  nameWithType: FixedDocumentSequence
  fullName: System.Windows.Documents.FixedDocumentSequence
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedPage)
  nameWithType: XpsDocumentWriter.Write(FixedPage)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedPage)
- uid: System.Windows.Documents.FixedPage
  parent: System.Windows.Documents
  isExternal: false
  name: FixedPage
  nameWithType: FixedPage
  fullName: System.Windows.Documents.FixedPage
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(Visual)
  nameWithType: XpsDocumentWriter.Write(Visual)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(String,XpsDocumentNotificationLevel)
  nameWithType: XpsDocumentWriter.Write(String,XpsDocumentNotificationLevel)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(String,XpsDocumentNotificationLevel)
- uid: System.Windows.Xps.XpsDocumentNotificationLevel
  parent: System.Windows.Xps
  isExternal: false
  name: XpsDocumentNotificationLevel
  nameWithType: XpsDocumentNotificationLevel
  fullName: System.Windows.Xps.XpsDocumentNotificationLevel
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedDocument,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocument,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(FixedPage,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(FixedPage,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write(Visual,PrintTicket)
  nameWithType: XpsDocumentWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.Write(Visual,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(String)
  nameWithType: XpsDocumentWriter.WriteAsync(String)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(String)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocument)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedPage)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(Visual)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(String,XpsDocumentNotificationLevel)
  nameWithType: XpsDocumentWriter.WriteAsync(String,XpsDocumentNotificationLevel)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(String,XpsDocumentNotificationLevel)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocument,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedPage,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(Visual,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,PrintTicket)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocument,PrintTicket,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(FixedPage,PrintTicket,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: XpsDocumentWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Xps.XpsDocumentWriter.WriteAsync(Visual,PrintTicket,Object)
- uid: System.Windows.Xps.XpsDocumentWriter.WritingCancelled
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WritingCancelled
  nameWithType: XpsDocumentWriter.WritingCancelled
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingCancelled
- uid: System.Windows.Documents.Serialization.WritingCancelledEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCancelledEventHandler
  nameWithType: WritingCancelledEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCancelledEventHandler
- uid: System.Windows.Xps.XpsDocumentWriter.WritingCompleted
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WritingCompleted
  nameWithType: XpsDocumentWriter.WritingCompleted
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingCompleted
- uid: System.Windows.Documents.Serialization.WritingCompletedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCompletedEventHandler
  nameWithType: WritingCompletedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCompletedEventHandler
- uid: System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WritingPrintTicketRequired
  nameWithType: XpsDocumentWriter.WritingPrintTicketRequired
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired
- uid: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingPrintTicketRequiredEventHandler
  nameWithType: WritingPrintTicketRequiredEventHandler
  fullName: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
- uid: System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WritingProgressChanged
  nameWithType: XpsDocumentWriter.WritingProgressChanged
  fullName: System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged
- uid: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingProgressChangedEventHandler
  nameWithType: WritingProgressChangedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
- uid: System.Windows.Xps.XpsDocumentWriter.CancelAsync*
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: CancelAsync
  nameWithType: XpsDocumentWriter.CancelAsync
- uid: System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator*
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: CreateVisualsCollator
  nameWithType: XpsDocumentWriter.CreateVisualsCollator
- uid: System.Windows.Xps.XpsDocumentWriter.Write*
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: Write
  nameWithType: XpsDocumentWriter.Write
- uid: System.Windows.Xps.XpsDocumentWriter.WriteAsync*
  parent: System.Windows.Xps.XpsDocumentWriter
  isExternal: false
  name: WriteAsync
  nameWithType: XpsDocumentWriter.WriteAsync
