### YamlMime:ManagedReference
items:
- uid: System.Transactions.Enlistment
  id: Enlistment
  children:
  - System.Transactions.Enlistment.Done
  langs:
  - csharp
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
  type: Class
  summary: "協助交易的最後階段登記的交易參與者和交易管理員之間通訊。"
  remarks: "當<xref:System.Transactions.Transaction.EnlistVolatile%2A>和<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>物件會叫用登記在交易中的參與者，它們會傳回此物件，描述編列。</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       在交易認可的最後一個階段中，交易管理員將此物件傳遞給實作資源管理員<xref:System.Transactions.IEnlistmentNotification>介面在交易中登記。</xref:System.Transactions.IEnlistmentNotification> 具體來說，交易管理員便會呼叫 <xref:System.Transactions.IEnlistmentNotification.Commit%2A>或<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>參與者，根據是否後者已決定要認可或回復交易的方法。</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 參與者應該呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，這個物件可讓交易管理員知道它已完成其工作。</xref:System.Transactions.Enlistment.Done%2A>       可以呼叫登記<xref:System.Transactions.Enlistment.Done%2A>方法在任何時間之前已呼叫它<xref:System.Transactions.PreparingEnlistment.Prepared%2A>準備階段。</xref:System.Transactions.PreparingEnlistment.Prepared%2A> </xref:System.Transactions.Enlistment.Done%2A>  如此一來，登記計算唯讀的票數，這表示它投票認可交易，但是不需要接收最終的結果。 請注意之後,<xref:System.Transactions.Enlistment.Done%2A>呼叫方法時，已登錄的參與者接收來自交易管理員的任何進一步的通知。</xref:System.Transactions.Enlistment.Done%2A>"
  example:
  - "The following example shows an implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, and when the <xref:System.Transactions.Enlistment.Done%2A> method should be called.  \n  \n [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/t-system.transactions.en_1.cs)]\n [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/t-system.transactions.en_1.vb)]"
  syntax:
    content: public class Enlistment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Enlistment.Done
  id: Done
  parent: System.Transactions.Enlistment
  langs:
  - csharp
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "表示交易參與者已完成其工作。"
  remarks: "在交易認可的最後一個階段中，交易管理員呼叫  <xref:System.Transactions.IEnlistmentNotification.Commit%2A>，<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>或<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>參與者，根據是否要認可或回復交易的方法。</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 資源管理員應該執行任何工作需要完成交易，然後再告知交易管理員它已完成上呼叫 Done 的方法`enlistment`參數。       如果資源管理員已編列永久，但藉由呼叫 Done 方法沒有回應，交易管理員不確定資源管理員已收到對應通知呼叫。 因此，交易管理員會持續等候回應，以及維護與此交易相關資訊。  如果這樣做會永遠不會呼叫，此項資訊是周圍無限期地保留在記憶體中或在整個系統資源。 這會導致無法回收資源。 如果是分散式交易，這可能最後會填滿中止 MSDTC 程序的 MSDTC 記錄檔。 如果是交易受<xref:System.Transactions>，這會導致記憶體耗用量，資源管理員的程序的漸進式且持續增加。</xref:System.Transactions> 因此，很重要，一旦您的資源管理員透過呼叫 Done 的方法您準備工作。       登記之前可以呼叫 Done 的方法隨時則稱為<xref:System.Transactions.PreparingEnlistment.Prepared%2A>準備階段。</xref:System.Transactions.PreparingEnlistment.Prepared%2A> 如此一來，登記計算唯讀的票數，這表示它投票認可交易，但是不需要接收最終的結果。 請注意，會呼叫這個方法之後，已登錄的參與者沒有進一步從接收通知之交易管理員。"
  syntax:
    content: public void Done ();
    parameters: []
  overload: System.Transactions.Enlistment.Done*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.Enlistment.Done
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
- uid: System.Transactions.Enlistment.Done*
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done
  nameWithType: Enlistment.Done
