### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute
  id: ZoneIdentityPermissionAttribute
  children:
  - System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone
  langs:
  - csharp
  name: ZoneIdentityPermissionAttribute
  nameWithType: ZoneIdentityPermissionAttribute
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute
  type: Class
  summary: "可讓安全性動作<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;></xref>来套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。"
  remarks: "宣告所允許的範圍需視<xref:System.Security.Permissions.SecurityAction>用。</xref:System.Security.Permissions.SecurityAction>      > [!IMPORTANT] > 開頭[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]，不會使用身分識別的權限。   >> 在.NET framework 1.0 和 1.1 版中，要求的識別權限會生效，即使呼叫組件是完全受信任。 也就是說，雖然呼叫組件具有完全信任，但識別權限的要求會失敗組件不符合要求的準則。 在.NET Framework 2.0 版中，身分識別的權限的要求會沒有效率，如果呼叫的組件具有完全信任。 如此可確保所有的權限，不會識別權限的特殊情況的一致性。       安全性屬性所宣告的安全性資訊儲存在屬性目標的中繼資料，而且由系統在執行階段存取。 安全性屬性僅用於宣告式安全性。 命令式安全性，為使用對應的權限類別。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ZoneIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  langs:
  - csharp
  name: ZoneIdentityPermissionAttribute(SecurityAction)
  nameWithType: ZoneIdentityPermissionAttribute.ZoneIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.ZoneIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.ZoneIdentityPermissionAttribute&quot;></xref>類別具有指定<xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>。"
  syntax:
    content: public ZoneIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "其中一個<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>值。"
  overload: System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: ZoneIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "建立並傳回新<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>。"
  remarks: "只應該由應用程式程式碼永遠不會由安全性系統中，呼叫這個方法。       在編譯時期，屬性會將安全性宣告轉換成中繼資料的序列化形式。 建立中繼資料中的宣告式安全性資料，從 的權限，此方法會傳回對應至這個屬性。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>會對應至這個屬性。"
  overload: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone
  id: Zone
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  langs:
  - csharp
  name: Zone
  nameWithType: ZoneIdentityPermissionAttribute.Zone
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得或設定屬性值所指定的內容區域中的成員資格。"
  syntax:
    content: public System.Security.SecurityZone Zone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: "其中一個<xref href=&quot;System.Security.SecurityZone&quot;></xref>值。"
  overload: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: ZoneIdentityPermissionAttribute(SecurityAction)
  nameWithType: ZoneIdentityPermissionAttribute.ZoneIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.ZoneIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: ZoneIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: Zone
  nameWithType: ZoneIdentityPermissionAttribute.Zone
  fullName: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: ZoneIdentityPermissionAttribute
  nameWithType: ZoneIdentityPermissionAttribute.ZoneIdentityPermissionAttribute
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: ZoneIdentityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*
  parent: System.Security.Permissions.ZoneIdentityPermissionAttribute
  isExternal: false
  name: Zone
  nameWithType: ZoneIdentityPermissionAttribute.Zone
