### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IStateRuntime
  id: IStateRuntime
  children:
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.StopProcessing
  langs:
  - csharp
  name: IStateRuntime
  nameWithType: IStateRuntime
  fullName: System.Web.SessionState.IStateRuntime
  type: Interface
  summary: "定義 ASP.NET 狀態服務用來管理工作階段資料的介面。"
  remarks: "ASP.NET 可以使用稱為 ASP.NET 狀態服務的 Windows 服務來管理工作階段狀態的-處理序外。 <xref:System.Web.SessionState.StateRuntime>類別可由 unmanaged 程式碼，在此服務來管理工作階段資料。</xref:System.Web.SessionState.StateRuntime> 這個類別支援.NET Framework 基礎結構實作的 ASP.NET 狀態服務，且不想直接從程式碼使用。       使用 ASP.NET 狀態服務不管理 ASP.NET; 中的工作階段狀態的預設方法ASP.NET 預設支援同處理序工作階段狀態管理。 它也支援管理工作階段狀態，在 Microsoft SQL Server 資料庫中，第二個跨處理序選項，然後讓自訂的工作階段狀態管理解決方案。 如需工作階段狀態儲存體選項的詳細資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IStateRuntime
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "使用 ASP.NET 狀態伺服器來處理工作階段資料。"
  remarks: "ASP.NET 可以使用稱為 ASP.NET 狀態服務的 Windows 服務來管理工作階段狀態的-處理序外。 <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>方法用於 unmanaged 程式碼，在此服務所管理的工作階段資料。</xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>       此成員支援.NET Framework 基礎結構的實作 ASP.NET 狀態服務，並不是原先想要直接從您的程式碼使用。 如需工作階段狀態儲存體選項的詳細資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>Unmanaged 的 ASP.NET 狀態伺服器中儲存物件指標。</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "要在物件上採取的動作。"
    - id: uri
      type: System.String
      description: "工作階段識別項。"
    - id: exclusive
      type: System.Int32
      description: "存放區中的物件的存取類型。"
    - id: timeout
      type: System.Int32
      description: "儲存工作階段資料的分鐘數。"
    - id: lockCookieExists
      type: System.Int32
      description: "值，指出鎖定 cookie 是否存在於 ASP.NET 狀態伺服器從 ASP.NET Web 伺服器的原始要求。"
    - id: lockCookie
      type: System.Int32
      description: "工作階段狀態的鎖定擁有者。"
    - id: contentLength
      type: System.Int32
      description: "儲存工作階段之資料的長度，以位元組為單位。"
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>指向受管理的 ASP.NET 狀態伺服器中的工作階段中所儲存的內容。</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "使用 ASP.NET 狀態伺服器來處理工作階段資料。"
  remarks: "ASP.NET 可以使用稱為 ASP.NET 狀態服務的 Windows 服務來管理工作階段狀態的-處理序外。 ProcessRequest 方法用於 unmanaged 程式碼，在此服務所管理的工作階段資料。       此成員支援.NET Framework 基礎結構的實作 ASP.NET 狀態服務，並不是原先想要直接從您的程式碼使用。 如需工作階段狀態儲存體選項的詳細資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>Unmanaged 的 ASP.NET 狀態伺服器中儲存物件指標。</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "要在物件上採取的動作。"
    - id: uri
      type: System.String
      description: "工作階段識別項。"
    - id: exclusive
      type: System.Int32
      description: "存放區中的物件的存取類型。"
    - id: extraFlags
      type: System.Int32
      description: "值，指出目前的工作階段是否未初始化、 無 cookie 工作階段。"
    - id: timeout
      type: System.Int32
      description: "儲存工作階段資料的分鐘數。"
    - id: lockCookieExists
      type: System.Int32
      description: "值，指出鎖定 cookie 是否存在於 ASP.NET 狀態伺服器從 ASP.NET Web 伺服器的原始要求。"
    - id: lockCookie
      type: System.Int32
      description: "工作階段狀態的鎖定擁有者。"
    - id: contentLength
      type: System.Int32
      description: "儲存工作階段之資料的長度，以位元組為單位。"
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>指向受管理的 ASP.NET 狀態伺服器中的工作階段中所儲存的內容。</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  id: StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "停止工作階段資料儲存在 ASP.NET 狀態伺服器處理。"
  remarks: "ASP.NET 可以使用稱為 ASP.NET 狀態服務的 Windows 服務來管理工作階段狀態的-處理序外。 <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A>方法可由 unmanaged 程式碼，在此服務來停止處理的工作階段資料。</xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> 這個成員提供來支援 ASP.NET 狀態服務的.NET Framework 基礎結構實作，而且不想直接從程式碼使用。 如需工作階段狀態儲存體選項的詳細資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void StopProcessing ();
    parameters: []
  overload: System.Web.SessionState.IStateRuntime.StopProcessing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest
  nameWithType: IStateRuntime.ProcessRequest
- uid: System.Web.SessionState.IStateRuntime.StopProcessing*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing
  nameWithType: IStateRuntime.StopProcessing
