### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnectionStringBuilder
  id: OleDbConnectionStringBuilder
  children:
  - System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  - System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  - System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  - System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  - System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  - System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  - System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  - System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  - System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: OleDbConnectionStringBuilder
  nameWithType: OleDbConnectionStringBuilder
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder
  type: Class
  summary: "提供簡單的方式來建立和管理使用的連接字串的內容<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>類別。"
  remarks: "The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class. The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by OLE DB connections, and developers can add arbitrary key/value pairs for any other connection string values. The OleDbConnectionStringBuilder class implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface. This means that the class works with Visual Studio .NET designers at design time. When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio .NET, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.  \n  \n Developers needing to create connection strings as part of applications can use the OleDbConnectionStringBuilder class to build and modify connection strings. The class also makes it easy to manage connection strings stored in an application configuration file. The OleDbConnectionStringBuilder performs checks only for the limited set of known key/value pairs. Therefore, this class can be used to create invalid connection strings. The following table lists the known keys and their corresponding properties within the OleDbConnectionStringBuilder class, and their default values. Besides these specific values, developers can add any key/value pairs to the collection that is contained within the OleDbConnectionStringBuilder instance:  \n  \n|Key|Property|Default value|  \n|---------|--------------|-------------------|  \n|File Name|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A>|\"\"|  \n|Provider|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>|\"\"|  \n|Data Source|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>|\"\"|  \n|Persist Security Info|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>|False|  \n|OLE DB Services|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>|-13|  \n  \n The <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property handles attempts to insert malicious entries. For example, the following code, using the default <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property (the indexer, in C#) correctly escapes the nested key/value pair:  \n  \n```vb#  \nDim builder As _  \n    New System.Data.OleDb.OleDbConnectionStringBuilder  \nbuilder(\"Provider\") = \"Microsoft.Jet.OLEDB.4.0\"  \nbuilder(\"Data Source\") = \"C:\\Sample.mdb\"  \nbuilder(\"User Id\") = \"Admin;NewValue=Bad\"  \n```  \n  \n```c#  \nSystem.Data.OleDb.OleDbConnectionStringBuilder builder =   \n    new System.Data.OleDb.OleDbConnectionStringBuilder();  \nbuilder[\"Provider\"] = \"Microsoft.Jet.OLEDB.4.0\";  \nbuilder[\"Data Source\"] = \"C:\\\\Sample.mdb\";  \nbuilder[\"User Id\"] = \"Admin;NewValue=Bad\";  \n```  \n  \n The result is the following connection string that handles the invalid value in a safe manner:  \n  \n```  \nProvider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\Sample.mdb;User ID=\"Admin;NewValue=Bad\"  \n```"
  example:
  - "The following console application builds connection strings for several OLE DB databases. First, the example creates a connection string for a Microsoft Access database, and then creates a connection string for an IBM DB2 database. The example also parses an existing connection string, and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how OleDbConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_1_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_1_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Provider")]

      [System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]

      [System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))]

      public sealed class OleDbConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsFixedSize
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbConnectionStringBuilder()
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>類別。"
  syntax:
    content: public OleDbConnectionStringBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbConnectionStringBuilder(String)
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "初始化的新執行個體<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>類別。 提供的連接字串提供的資料執行個體的內部連接資訊。"
  remarks: "設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性直接 (藉由設定<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>屬性) 或將連接字串做為參數傳遞的建構函式，可能會影響集合內所包含的索引鍵/值組<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。</xref:System.Data.OleDb.OleDbConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>&quot;sqloledb，&quot;的屬性，例如，將所有標準 SQL 連接字串屬性。</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 請參閱本主題，如需示範此行為的範例。       對於某些提供者，指定連接字串內<xref:System.Data.OleDb.OleDbConnectionStringBuilder>建構函式會被重新配置提供索引鍵/值組的順序。</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_18_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public OleDbConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "物件的內部連接資訊的基準。 剖析成索引鍵/值組。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "連接字串格式不正確 （可能遺失必要&quot;=&quot;內的索引鍵/值組）。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: OleDbConnectionStringBuilder.Clear()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "清除的內容<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>執行個體。"
  remarks: "Clear 方法移除所有的索引鍵/值組，從<xref:System.Data.OleDb.OleDbConnectionStringBuilder>，並重設所有對應的屬性為其預設值。</xref:System.Data.OleDb.OleDbConnectionStringBuilder> 這包括設定<xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>屬性設為 0，並設定<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>屬性設為空字串。</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>"
  example:
  - "The following example demonstrates the effect of calling the Clear method. This example populates the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> with some key/value pairs, and then calls the Clear method and shows the results.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_29_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_29_1.vb)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: OleDbConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "決定是否<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>包含特定索引鍵。"
  remarks: "雖然設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性可能會隱含地填入適當的索引鍵/值組提供者，ContainsKey 方法不會傳回`true`提供隱含索引鍵。</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 這個方法會傳回`true`僅適用於明確提供的索引鍵。"
  example:
  - The following example creates an <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the ContainsKey method.
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "要在中尋找的索引鍵<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "true，否則<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>包含具有指定的項目索引鍵，否則為 false。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>為 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定要連接到資料來源的名稱。"
  remarks: "如果傳入的值是 null，當您嘗試設定屬性時，會重設資料來源屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的 「 資料來源 」 索引鍵。"
  example:
  - "The following example console application creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, and then sets the DataSource and <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> properties. Finally, the example creates a new <xref:System.Data.OleDb.OleDbConnection> instance, and uses that object to connect to the indicated data store.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_25_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_25_1.cs)]"
  syntax:
    content: public string DataSource { get; set; }
    return:
      type: System.String
      description: "資料來源屬性的值或<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  id: FileName
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定連接到資料來源的通用資料連結 (UDL) 檔案的名稱。"
  remarks: "如果傳入的值是 null，當您嘗試設定屬性時，會重設的檔案名稱屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的&quot;FileName&quot;索引鍵。       設定這個屬性不會造成<xref:System.Data.OleDb.OleDbConnectionStringBuilder>讀取所參考的檔案的內容，即使該檔案存在且包含有效的連接資訊的執行個體。</xref:System.Data.OleDb.OleDbConnectionStringBuilder> 設定此屬性沒有任何作用以外，表示要連接到資料來源時所讀取的檔案。"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "檔案名稱 屬性的值或<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: OleDbConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: OleDbConnectionStringBuilder.Item(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定與指定之索引鍵相關聯的值。 在 C# 中，這個屬性是索引子。"
  remarks: "因為設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性可以對應項目加入集合的索引鍵/值組 （取決於特定的提供者的行為），您可能會無法擷取您還沒有設定明確的索引鍵的值。</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 例如，當您設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性為&quot;sqloledb 」，您可以擷取的&quot;Workstation ID&quot;值即使您沒有設定它自己。</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 如需示範本主題中的範例，請參閱。"
  example:
  - "The following example uses the Item property (the indexer, in C#) to retrieve and set values within the collection of key/value pairs. Note that setting the provider, in this case, also provides default values for all the key/value pairs associated with the selected provider.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_5_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "取得或設定項目的索引鍵。"
    return:
      type: System.Object
      description: "具有指定索引鍵相關聯的值。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "連接字串格式不正確 （可能遺失必要&quot;=&quot;內的索引鍵/值組）。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得<xref:System.Collections.ICollection>，包含在索引鍵<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>。</xref:System.Collections.ICollection>"
  remarks: "中的值順序<xref:System.Collections.ICollection>並未指定，但中關聯值的順序相同，則<xref:System.Collections.ICollection>傳回<xref:System.Data.Common.DbConnectionStringBuilder.Values%2A>屬性。</xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  example:
  - "The following console application example creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_10_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_10_1.vb)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，包含在索引鍵<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  id: OleDbServices
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定要傳遞的 OLE DB 服務內的索引鍵的連接字串的值。"
  remarks: "OLE DB 服務內的索引鍵的連接字串中定義值，可讓開發人員啟用或停用 OLE DB 服務的組合。 屬性包含值，OLE DB 文件中所述的位元組合。 如需有關適當的值，這個屬性的詳細資訊，請參閱 OLE DB 程式設計人員參考，特別是，「 提供者服務預設值的正在覆寫 」。 這個屬性的預設值是-13。 這會對應至資源集中化、 自動交易登記、 工作階段層級的彙總和任何用戶端資料指標引擎的要求。"
  example:
  - "The following example works with the OleDbServices property in two ways. First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string. Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the OLE DB Services key. This step demonstrates that setting the value from the connection string modifies the OleDbServices property, as well.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_8_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public int OleDbServices { get; set; }
    return:
      type: System.Int32
      description: "傳回對應至 OLE DB 服務內的索引鍵的連接字串的值。 根據預設，值為-13。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定布林值，指出連接開啟或曾經處於開啟狀態，是否要敏感的安全性資訊，例如密碼，傳回為連接的一部分。"
  remarks: "此屬性會對應至連接字串內的&quot;Persist Security Info&quot;索引鍵。"
  example:
  - "The following example works with the PersistSecurityInfo property in two ways. First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string. Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the \"Persist Security Info\" key. This step demonstrates that setting the value from the connection string modifies the PersistSecurityInfo property, as well.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_23_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: "PersistSecurityInfo 屬性的值或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得或設定字串，包含與內部連接字串相關聯的資料提供者的名稱。"
  remarks: "如果傳入的值是 null，當您嘗試設定屬性時，會重設的提供者屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的 「 提供者 」 索引鍵。       值設定`Provider`屬性直接 (藉由設定<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>屬性) 或將連接字串做為參數傳遞的建構函式，可能會影響集合內所包含的索引鍵/值組<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。</xref:System.Data.OleDb.OleDbConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 將提供者屬性設定為&quot;sqloledb&quot;，例如，將所有標準 SQL 連接字串屬性。 請參閱本主題，如需示範此行為的範例。       對於某些提供者，指定連接字串內<xref:System.Data.OleDb.OleDbConnectionStringBuilder>建構函式會被重新配置提供索引鍵/值組的順序。</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.Provider#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_24_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.Provider#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_24_1.cs)]"
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "提供者屬性的值或<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>如果未提供。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: OleDbConnectionStringBuilder.Remove(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "移除具有指定之索引鍵的項目<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>執行個體。"
  remarks: "Remove 方法傳回值，指出成功，因為它不需要尋找的索引鍵是否存在，然後再嘗試移除索引鍵/值組，來自<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates a <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and demonstrates the behavior of the Remove method.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_22_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_22_1.vb)]"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "要從連接字串中移除的索引鍵/值組的索引鍵<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果索引鍵存在於連接字串內，且已移除<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果索引鍵不存在。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>為 null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: OleDbConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "擷取值，對應到提供的索引鍵，從<xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;></xref>執行個體。"
  remarks: "TryGetValue 方法可讓開發人員安全地擷取值，以從<xref:System.Data.OleDb.OleDbConnectionStringBuilder>而不需確認提供的索引鍵名稱是有效的索引鍵名稱。</xref:System.Data.OleDb.OleDbConnectionStringBuilder> TryGetValue 不會引發例外狀況，當您呼叫它，在不存在的機碼中傳遞，因為您沒有擷取其值之前，尋找索引鍵。 呼叫 TryGetValue 具有不存在的索引鍵會將 null 值 (`Nothing`在 Visual Basic 中) 中`value`參數。"
  example:
  - "The following example demonstrates the behavior of the TryGetValue method.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/c608ef8d-2ee4-49df-a105-_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/c608ef8d-2ee4-49df-a105-_1.cs)]"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "要擷取之項目的索引鍵。"
    - id: value
      type: System.Object
      description: "若要對應的值。`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> keyword </code>連接字串中找到，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>包含 null 值 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder()
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder(String)
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: OleDbConnectionStringBuilder.Clear()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Clear()
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: OleDbConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: OleDbConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: OleDbConnectionStringBuilder.Item(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: OleDbConnectionStringBuilder.Remove(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(String)
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: OleDbConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: OleDbConnectionStringBuilder.Clear
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: OleDbConnectionStringBuilder.ContainsKey
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: OleDbConnectionStringBuilder.GetProperties
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: OleDbConnectionStringBuilder.Item
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: OleDbConnectionStringBuilder.Remove
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: OleDbConnectionStringBuilder.TryGetValue
