### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  id: SessionSecurityTokenCacheKey
  children:
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  type: Class
  summary: "代表索引鍵中的項目<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCache&quot;> </xref>。"
  remarks: "快取時<xref:System.IdentityModel.Tokens.SessionSecurityToken>有兩個索引所需。</xref:System.IdentityModel.Tokens.SessionSecurityToken> 其中一個是內容識別碼，由<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName>跨所有工作階段權杖的唯一屬性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> 另一個方法是金鑰的產生，由<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName>屬性，這是唯一的工作階段權杖。</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> 當發出工作階段權杖時有只內容識別碼。 更新工作階段權杖後，會加入金鑰產生。 在更新之後，更新工作階段權杖的唯一識別透過內容識別碼和金鑰產生。       SessionSecurityTokenCacheKey 類型的物件會作為索引的工作階段權杖快取。 索引一定會有效<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A>屬性指定，但<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性可能是`null`，取決於是否已更新權杖。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> 另外還有一個選擇性<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>讓的端點設定為語彙基元。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>"
  syntax:
    content: public class SessionSecurityTokenCacheKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  id: '#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>類別。"
  syntax:
    content: public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);
    parameters:
    - id: endpointId
      type: System.String
      description: "設定快取項目為端點識別碼。 這是應該值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A?displayProperty=fullName&gt;快取權杖的屬性。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "快取項目的內容識別碼。 這是應該值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName&gt;快取權杖的屬性。"
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "快取項目的金鑰產生。 這是應該值&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName&gt;快取權杖的屬性。 會在更新權杖時，使用此值。 它會是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>快取的新語彙基元時。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得快取索引鍵內容識別碼。"
  remarks: "這會對應至<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>快取權杖的屬性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "快取索引鍵內容識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得此快取項目範圍內的端點識別碼。"
  remarks: "這會對應至<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>快取權杖的屬性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>"
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "此快取項目範圍內的端點識別碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "判斷指定的物件是否與目前的快取索引鍵相同。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>為`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性不在比較中使用。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要與目前的快取索引鍵進行比較的物件。 應能指派從<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的物件相當於目前的快取索引鍵。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  id: GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回目前的快取索引鍵的雜湊碼。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性不使用產生的雜湊碼。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的快取索引鍵雜湊碼。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  id: IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得或設定值，指出進行索引比較時，是否可以忽略金鑰產生。"
  remarks: '這個屬性會影響之方式<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性會被視為由下列方法和運算子︰ <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>，和<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>'
  syntax:
    content: public bool IgnoreKeyGeneration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>略過索引鍵產生作業;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得金鑰產生的快取索引鍵"
  remarks: "這會對應至<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>快取權杖的屬性。</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "金鑰產生的快取索引鍵"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "會實作等號比較運算子，如<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>類別。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>為`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性不在比較中使用。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Equality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比較的第一個快取索引鍵。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比較的第二個快取索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>快取索引鍵是否相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "會實作等號比較運算子，如<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>類別。"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>為`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性不在比較中使用。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Inequality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比較的第一個快取索引鍵。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "要比較的第二個快取索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果快取索引鍵不相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "覆寫<xref:System.Object.ToString*>提供唯一的識別項。</xref:System.Object.ToString*>"
  remarks: "如果<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>是`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>屬性不使用。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "以字串形式的索引鍵。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals
  nameWithType: SessionSecurityTokenCacheKey.Equals
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality
  nameWithType: SessionSecurityTokenCacheKey.op_Equality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString
  nameWithType: SessionSecurityTokenCacheKey.ToString
