### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression
  id: OrderByExpression
  children:
  - System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  - System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  - System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  - System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  langs:
  - csharp
  name: OrderByExpression
  nameWithType: OrderByExpression
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression
  type: Class
  summary: "提供方法來套用排序運算式，以<xref:System.Linq.IQueryable>物件。</xref:System.Linq.IQueryable>"
  remarks: "OrderByExpression 類別用來<xref:System.Web.UI.WebControls.QueryExtender>以遞增或遞減順序排序資料的控制項。</xref:System.Web.UI.WebControls.QueryExtender> 執行排序的項目類型的預設比較子。       <xref:System.Web.UI.WebControls.QueryExtender>控制項支援各種不同的選項可讓您篩選資料。</xref:System.Web.UI.WebControls.QueryExtender> 您可以使用篩選選項之後，您可以使用 OrderByExpression 物件來排序資料。       指定要使用排序的資料欄位<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A>屬性。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> 使用指定的排序方向<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>屬性。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> OrderByExpression 物件套用至資料來源之後，您可以使用<xref:System.Web.UI.WebControls.Expressions.ThenBy>另一個資料欄位上執行後續的排序運算式。</xref:System.Web.UI.WebControls.Expressions.ThenBy>"
  example:
  - "The following example shows how to search the Products table of the AdventureWorks database for products that have names that start with the string that is specified in the `SearchTextBox` text box. The OrderByExpression object sorts the data by the ListPrice data field in descending order and then by the product ID field in ascending order. The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ThenByExpressions")]

      [System.Web.UI.PersistChildren(false)]

      public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;></xref>類別。"
  syntax:
    content: public OrderByExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定的屬性<xref:System.Linq.IQueryable>排序所依據的物件。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>物件排序資料欄位中的資料。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 後續的排序作業可以執行不同的資料欄位上使用<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>屬性。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "屬性<xref:System.Linq.IQueryable>排序所依據的資料來源物件。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得與設定的排序方向<xref:System.Linq.IQueryable>資料來源物件。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>類別用於<xref:System.Web.UI.WebControls.QueryExtender>以遞增或遞減順序排序資料的控制項。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 使用方向屬性被指定排序作業的方向。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the ProductID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "資料來源物件的排序方向。"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "若要將排序運算式套用<xref:System.Linq.IQueryable>物件根據<> *> 值和<> *> 值。</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "指定要套用排序的資料來源。"
    return:
      type: System.Linq.IQueryable
      description: "運算式已套用至資料來源執行個體。"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  id: ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定集合<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>運算式之後套用<xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;></xref>值套用至資料來源。"
  remarks: "排序後執行作業使用<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>中<xref:System.Web.UI.WebControls.QueryExtender>控制項，後續的排序作業可以執行使用 ThenByExpressions 屬性。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order using the ThenByExpressions. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy> ThenByExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
      description: "集合<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>運算式之後套用<xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;></xref>套用至資料來源。"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
- uid: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ThenBy>
  nameWithType: Collection<ThenBy>
  fullName: System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.Expressions.ThenBy
    name: ThenBy
    nameWithType: ThenBy
    fullName: ThenBy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression
  nameWithType: OrderByExpression.OrderByExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable
  nameWithType: OrderByExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
