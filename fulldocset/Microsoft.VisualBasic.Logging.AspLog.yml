### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.AspLog
  id: AspLog
  children:
  - Microsoft.VisualBasic.Logging.AspLog.#ctor
  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  langs:
  - csharp
  name: AspLog
  nameWithType: AspLog
  fullName: Microsoft.VisualBasic.Logging.AspLog
  type: Class
  summary: "提供屬性和事件和例外狀況資訊寫入應用程式的記錄檔接聽程式的方法。"
  remarks: "`My.Application.Log`物件提供直接的進入點從中存取[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]的記錄服務。 `WriteEntry`和`WriteException`方法會將訊息寫入應用程式的記錄檔接聽程式。 接聽程式可以由應用程式的組態檔設定。 如需詳細資訊，請參閱[逐步解說︰ 變更位置 My.Application.Log 寫入資訊](~/add/includes/ajax-current-ext-md.md)和[使用應用程式記錄檔](~/add/includes/ajax-current-ext-md.md)。       `My.Application.Log`物件是僅供用戶端應用程式。 Web 應用程式，使用`My.Log`。 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.</xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>       下表列出包含工作的範例`My.Application.Log`物件。      |若要 |請參閱 |  |--------|---------|  |事件資訊寫入至應用程式的記錄檔接聽程式 |[如何︰ 寫入記錄訊息](~/add/includes/ajax-current-ext-md.md)|  |例外狀況資訊寫入應用程式的記錄檔接聽程式 |[How to︰ 記錄例外狀況](~/add/includes/ajax-current-ext-md.md)|  |決定在何處`My.Application.Log`將資訊寫入 |[逐步解說︰ 判斷 My.Application.Log 寫入資訊的位置](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.Logging.Log
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;></xref>類別。"
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;></xref>類別。"
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> 提供給名稱<xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>屬性物件。</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>"
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "建立新<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>並將它加入<xref:System.Diagnostics.TraceSource.Listeners*>集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "這個方法會建立新<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>，將其名稱設定為`FileLog`，並將它設定為記錄訊息嚴重性層級<xref:System.Diagnostics.SourceLevels>和更新版本。</xref:System.Diagnostics.SourceLevels> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 新<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>物件接著會新增至<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>呼叫的方法，如果<xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>屬性尚未設定。</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> </xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> 可以在應用程式的組態檔中設定追蹤來源。"
  syntax:
    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Microsoft.VisualBasic.Logging.Log
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog
  nameWithType: AspLog.AspLog
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists
