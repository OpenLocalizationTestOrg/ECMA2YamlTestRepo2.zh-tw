### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHostBase
  id: ServiceHostBase
  children:
  - System.ServiceModel.ServiceHostBase.#ctor
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  langs:
  - csharp
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
  type: Class
  summary: "擴充 ServiceHostBase 類別來實作公開自訂程式撰寫模型的主機。"
  remarks: "您可以使用 ServiceHostBase 類別來建立提供自訂的程式設計模型的主機。 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]服務程式設計模型會使用<xref:System.ServiceModel.ServiceHost>類別。</xref:System.ServiceModel.ServiceHost>       衍生自這個類別之 Managed c + + 使用者的特別附註:-置於您清除碼置於 (On) (Begin) Close （and / or OnAbort），不是解構函式。      為避免解構函式。它們會導致編譯器自動產生<xref:System.IDisposable>.</xref:System.IDisposable>      為避免使用非參考成員;它們會導致編譯器自動產生<xref:System.IDisposable>.</xref:System.IDisposable>      為避免使用完成項;但是假如您加入一個，就應該抑制建置警告並呼叫<xref:System.GC.SuppressFinalize%28System.Object%29>和完成項本身從 (On) (Begin) Close （and / or OnAbort） 以模擬原本可能自動產生<xref:System.IDisposable>行為。</xref:System.IDisposable> </xref:System.GC.SuppressFinalize%28System.Object%29>"
  example:
  - "This sample uses the <xref:System.ServiceModel.ServiceHost> class, which is derived from ServiceHostBase.  \n  \n [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_10_1.cs)]\n [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_10_1.vb)]"
  syntax:
    content: 'public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.IDisposable
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>類別。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#30](~/add/codesnippet/csharp/m-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: protected ServiceHostBase ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  id: AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將基底位址新增至服務主機。"
  remarks: "這個屬性可讓使用者擴充<xref:System.ServiceModel.ServiceHostBase>建構主機後，提供基底地址。</xref:System.ServiceModel.ServiceHostBase> AddBaseAddress 可用來將基底位址新增至現有的主機，但是如果描述已經過初始化，會擲回例外狀況。"
  syntax:
    content: protected void AddBaseAddress (Uri baseAddress);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: "A <xref:System.Uri>，其中包含目前主機上裝載的服務的基底位址。</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> baseAddress </code>無法呼叫。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  id: AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "加入具有預設繫結上找到的服務主機的每個合約中的所有基底地址的服務端點。"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
      description: "預設端點的唯讀集合。"
  overload: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將指定的服務端點加入至託管服務。"
  remarks: "使用方法時，服務主機就會進行的合約描述 「 由-組態-名稱 」 驗證。 換句話說，主機會確認<xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A>存在於清單中的服務所實作的服務合約的組態名稱。</xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> 如果通過驗證，在描述<xref:System.ServiceModel.Description.ServiceEndpoint>使用它，即使<xref:System.ServiceModel.Description.ContractDescription>反映從是不同的服務。</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.ServiceEndpoint>       例如，假設 ServiceEndpoint 中的說明 」 和 「 反映來自服務的合約描述名稱相同，但不同的作業行為。 只有 「 由-組態-名稱 」 驗證的是，沒有任何驗證的行為相同，而且有一個描述更新因為另一個描述。       如果`address`是相對 URI，其中一個基底位址<xref:System.ServiceModel.ServiceHost>（視繫結的通訊協定） 會當成端點的基底位址。</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "服務端點。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Endpoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機不是處於已建立或開啟狀態，或沒有任何<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>託管服務。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>Address</code>, <code>Binding, </code> or <code>Contract</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將服務端點加入至裝載的服務，使用指定的合約、 繫結和端點位址。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#40](~/add/codesnippet/csharp/edf6e090-b786-4010-8e21-_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "端點所實作的合約。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>加入端點。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "已新增之端點位址。 這可以是絕對或相對 URI。 如果是相對 URI，其中一個基底位址<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> （視繫結的通訊協定） 會當成端點的基底位址。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>新增至裝載的服務。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機並非處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，或是沒有任何<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>託管的服務，因此無法新增端點或繫結缺少繫結配置傳輸。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將服務端點加入至託管服務指定的合約、 繫結以及含有端點位址的 URI。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "端點所實作的合約。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>加入端點。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>包含加入之端點位址。</xref:System.Uri> 這可以是絕對或相對 URI。 如果是相對 URI，其中一個基底位址<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> （視繫結的通訊協定） 會當成端點的基底位址。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>新增至裝載的服務。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機並非處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，或是沒有任何<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>託管的服務，因此無法新增端點。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將服務端點加入至託管服務指定的合約、 繫結、 端點位址和包含其接聽的位址的 URI。"
  remarks: "如果`address`是相對 URI，其中一個基底位址<xref:System.ServiceModel.ServiceHost>（視繫結的通訊協定） 會當成端點的基底位址。</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "端點所實作的合約。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>加入端點。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "已新增之端點位址。 這個位址可以是絕對或相對 URI。 如果是相對 URI，其中一個基底位址<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> （視繫結的通訊協定） 會當成端點的基底位址。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>，其中包含端點接聽傳入訊息的位址。</xref:System.Uri> 這個 URI 可以是相對或絕對。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>新增至裝載的服務。</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機並非處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，或是沒有任何<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>託管的服務，因此無法新增端點。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將服務端點加入至託管服務指定的合約、 繫結以及含有端點與接聽位址的 Uri。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "端點所實作的合約。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>加入端點。</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>包含加入之端點位址。</xref:System.Uri> 如果是相對 URI，其中一個基底位址<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> （視繫結的通訊協定） 會當成端點的基底位址。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>，其中包含端點接聽傳入訊息的位址。</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>新增至裝載的服務。</xref:System.ServiceModel.Description.ServiceEndpoint> 這個 URI 可以是絕對或相對的。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機並非處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，或是沒有任何<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>託管的服務，因此無法新增端點。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "從組態檔載入服務描述資訊並將其套用至正在建構的執行階段。"
  syntax:
    content: protected virtual void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "裝載之服務的描述是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authentication
  id: Authentication
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得服務驗證行為。"
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthenticationBehavior
      description: "服務驗證行為。"
  overload: System.ServiceModel.ServiceHostBase.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authorization
  id: Authorization
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得裝載之服務的授權行為。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#36](~/add/codesnippet/csharp/p-system.servicemodel.se_20_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthorizationBehavior
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref>裝載的服務。"
  overload: System.ServiceModel.ServiceHostBase.Authorization*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  id: BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得裝載之服務所使用的基底位址。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> BaseAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型別的<xref:System.Uri>，其中包含裝載之服務的基底位址。</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.BaseAddresses*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  id: ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得服務主機所使用的通道發送器集合。"
  syntax:
    content: public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }
    return:
      type: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherCollection&quot;> </xref> ，其中包含由服務主機使用的通道發送器。"
  overload: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定允許服務主機關閉的時間間隔。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#33](~/add/codesnippet/csharp/p-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定允許服務主機關閉的時間間隔。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.CloseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值，以毫秒為單位，為小於零或大於<xref:System.Int32.MaxValue>（2,147,483,647 或者以 0x7fffffff）。</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "主機已處於<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "主機處於<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "在衍生類別中實作時，會建立託管服務的描述。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#41](~/add/codesnippet/csharp/08a56b4f-56f2-446f-b0f7-_1.cs)]'
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt;包含<xref:System.ServiceModel.Description.ContractDescription>服務物件。</xref:System.ServiceModel.Description.ContractDescription>"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>託管服務。"
  overload: System.ServiceModel.ServiceHostBase.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Credentials
  id: Credentials
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得裝載之服務的認證。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#37](~/add/codesnippet/csharp/p-system.servicemodel.se_11_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Credentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref>裝載的服務。"
  overload: System.ServiceModel.ServiceHostBase.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得允許服務主機關閉時間的預設的間隔。"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>指定允許服務主機關閉的時間預設間隔。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得允許服務主機開啟時間的預設的間隔。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#35](~/add/codesnippet/csharp/p-system.servicemodel.se_16_1.cs)]'
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>指定允許服務主機開啟的時間預設間隔。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Description
  id: Description
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得裝載之服務的描述。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#38](~/add/codesnippet/csharp/p-system.servicemodel.se_3_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceDescription Description { get; }
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>託管服務。"
  overload: System.ServiceModel.ServiceHostBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Extensions
  id: Extensions
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得目前指定的服務主機的延伸。"
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
      description: "&lt;Xref:System.ServiceModel.IExtensionCollection%601&gt;型別的<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>。"
  overload: System.ServiceModel.ServiceHostBase.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  id: ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "擷取由裝載之服務實作的合約。"
  syntax:
    content: protected System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> ImplementedContracts { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt;包含<xref:System.ServiceModel.Description.ContractDescription>服務物件。</xref:System.ServiceModel.Description.ContractDescription>"
  overload: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定的增量增加到託管服務的訊息流量率限制。"
  remarks: "這項限制可使用存取<xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>屬性。</xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>"
  example:
  - '[!code-cs[S_SelfHost#42](~/add/codesnippet/csharp/84777560-890d-4922-a9a5-_1.cs)]'
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: "用來增加流量控制限制的訊息數目。"
    return:
      type: System.Int32
      description: "新增遞增後新限制。"
  overload: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值小於零。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "建立並初始化服務主機的合約和服務的描述。"
  syntax:
    content: protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "A <xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> ，其中包含裝載之服務的基底位址。"
  overload: System.ServiceModel.ServiceHostBase.InitializeDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化服務主機的執行階段。"
  syntax:
    content: protected virtual void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "裝載之服務的描述是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  id: LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "從託管服務的組態檔載入服務項目。"
  syntax:
    content: protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);
    parameters:
    - id: serviceSection
      type: System.ServiceModel.Configuration.ServiceElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref>要從組態載入。"
  overload: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceSection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "裝載之服務的描述是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定由裝載之服務接收的訊息流量控制限制。"
  remarks: "這項限制可以使用遞增<xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>方法。</xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>"
  example:
  - '[!code-cs[S_SelfHost#39](~/add/codesnippet/csharp/p-system.servicemodel.se_10_1.cs)]'
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: "由裝載之服務接收的訊息流量控制限制。"
  overload: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值小於零。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "中止服務。"
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "開始服務主機關閉時叫用的非同步作業。"
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成關閉作業的時間長度。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派，會接收非同步作業關閉完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步關閉作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>會參考非同步關閉作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "開始非同步作業，在開啟服務主機上叫用。"
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成開啟作業的時間長度。</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委派會接收非同步作業開啟完成的通知。</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "指定的物件，由應用程式，其中包含與非同步開啟作業相關聯的狀態資訊。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>會參考非同步開啟作業。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "關閉裝載的服務，包括其通道發送器以及相關聯的執行個體內容和接聽程式。"
  remarks: "呼叫 OnClose 會進行下列作業:-關閉所有的輸入<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>，這也會關閉其相關聯<xref:System.ServiceModel.Channels.IChannelListener>執行個體。</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 這樣會阻止任何新的通道不會被接受。      -呼叫<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>所有<xref:System.ServiceModel.InstanceContext>物件，表示它們會停止接受新的訊息。</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>      -等候所有<xref:System.ServiceModel.InstanceContext>物件來關閉其相關的通道完成傳送所有擱置的訊息時執行的動作。</xref:System.ServiceModel.InstanceContext>      -關閉<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>與主機相關聯的物件。</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成關閉作業的時間長度。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "服務主機所使用的資源釋出。"
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "完成關閉服務主機上叫用的非同步作業。"
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回的&lt;xref:System.ServiceModel.ServiceHostBase.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "完成開啟服務主機上叫用的非同步作業。"
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>呼叫所傳回的&lt;xref:System.ServiceModel.ServiceHostBase.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;方法。</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "開啟通道發送器。"
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定必須逾時前完成開啟作業的時間長度。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得裝載之服務的服務認證、 服務驗證及授權行為。"
  remarks: "一旦這些行為都已初始化開啟服務時，就無法變更。"
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnOpened*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定允許服務主機開啟的時間間隔。"
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>，指定允許服務主機開啟的時間間隔。</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OpenTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "這個值是小於零或大於<xref:System.Int32.MaxValue>（2,147,483,647 或者以 0x7fffffff）。</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主機處於<xref:System.ServiceModel.CommunicationState>或<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "主機已處於<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "主機處於<xref:System.ServiceModel.CommunicationState>狀態，無法修改。</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  id: ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "釋放服務和通道發送器效能計數器的託管服務。"
  remarks: "呼叫<xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>和<xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>。</xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29></xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>時，會叫用此方法"
  syntax:
    content: protected void ReleasePerformanceCounters ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  id: SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "將指定之端點的端點位址設定指定的位址。"
  syntax:
    content: public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "服務端點。"
    - id: relativeAddress
      type: System.String
      description: "端點位址。"
  overload: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "關閉服務主機。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "發生於收到未知的訊息。"
  remarks: >-
    > [!WARNING]

    >  When using <xref:System.ServiceModel.WorkflowServiceHost>, exposing a hosting endpoint, and a UnknownMessageReceived exception is thrown, the host passes the message to the event handler. If an attempt is made to read this message an <xref:System.InvalidOperationException> is thrown. The description of the exception will say “This message cannot support the operation because it has been read.”  The WCF infrastructure reads the message while extracting the message parameters. This message is then passed to the event handler and any attempt to read it causes an exception. If you need to access message parameters in your <xref:System.InvalidOperationException> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] hosting endpoints see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.ServiceHostBase.#ctor
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ServiceEndpoint>
  nameWithType: ReadOnlyCollection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHostBase.Authentication
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
- uid: System.ServiceModel.Description.ServiceAuthenticationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthenticationBehavior
  nameWithType: ServiceAuthenticationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthenticationBehavior
- uid: System.ServiceModel.ServiceHostBase.Authorization
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherCollection
  nameWithType: ChannelDispatcherCollection
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.Credentials
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: true
  name: IExtensionCollection<ServiceHostBase>
  nameWithType: IExtensionCollection<ServiceHostBase>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.ServiceHostBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
- uid: System.ServiceModel.Configuration.ServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.#ctor*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase.ServiceHostBase
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress
  nameWithType: ServiceHostBase.AddBaseAddress
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints
  nameWithType: ServiceHostBase.AddDefaultEndpoints
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHostBase.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHostBase.ApplyConfiguration
- uid: System.ServiceModel.ServiceHostBase.Authentication*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
- uid: System.ServiceModel.ServiceHostBase.Authorization*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
- uid: System.ServiceModel.ServiceHostBase.CreateDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHostBase.CreateDescription
- uid: System.ServiceModel.ServiceHostBase.Credentials*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHostBase.InitializeDescription
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime
  nameWithType: ServiceHostBase.InitializeRuntime
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection
  nameWithType: ServiceHostBase.LoadConfigurationSection
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort
  nameWithType: ServiceHostBase.OnAbort
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose
  nameWithType: ServiceHostBase.OnBeginClose
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen
  nameWithType: ServiceHostBase.OnBeginOpen
- uid: System.ServiceModel.ServiceHostBase.OnClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose
  nameWithType: ServiceHostBase.OnClose
- uid: System.ServiceModel.ServiceHostBase.OnClosed*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHostBase.OnClosed
- uid: System.ServiceModel.ServiceHostBase.OnEndClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose
  nameWithType: ServiceHostBase.OnEndClose
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen
  nameWithType: ServiceHostBase.OnEndOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen
  nameWithType: ServiceHostBase.OnOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpened*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened
  nameWithType: ServiceHostBase.OnOpened
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters
  nameWithType: ServiceHostBase.ReleasePerformanceCounters
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress
  nameWithType: ServiceHostBase.SetEndpointAddress
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ServiceHostBase.System.IDisposable.Dispose
