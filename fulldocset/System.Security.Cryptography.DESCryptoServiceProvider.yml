### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DESCryptoServiceProvider
  id: DESCryptoServiceProvider
  children:
  - System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  - System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  langs:
  - csharp
  name: DESCryptoServiceProvider
  nameWithType: DESCryptoServiceProvider
  fullName: System.Security.Cryptography.DESCryptoServiceProvider
  type: Class
  summary: "定義包裝函式物件來存取密碼編譯服務提供者 (CSP) 版本的資料加密標準 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 演算法。 這個類別無法被繼承。"
  remarks: "此演算法支援金鑰長度為 64 位元。"
  example:
  - "The following code example uses DESCryptoServiceProvider (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/t-system.security.crypto_121_1.cpp)]\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/t-system.security.crypto_121_1.cs)]\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_121_1.vb)]  \n  \n Decryption can be handled in the same way; use [CreateDecryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True) instead of [CreateEncryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True). The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.DES
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DES.Create
  - System.Security.Cryptography.DES.Create(System.String)
  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])
  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])
  - System.Security.Cryptography.DES.Key
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: DESCryptoServiceProvider()
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.DESCryptoServiceProvider&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/m-system.security.crypto_132_1.cpp)]\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/m-system.security.crypto_132_1.cs)]\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_132_1.vb)]  \n  \n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: public DESCryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "資料加密標準 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 沒有密碼編譯服務提供者可用。"
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "建立對稱資料加密標準 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 使用指定的金鑰解密子物件 (<>*>) 和初始化向量 (<>*>)。"
  remarks: "這個方法會解密加密的訊息使用建立<xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>多載具有相同參數。</xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "使用對稱演算法的祕密金鑰。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用對稱演算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>解密子物件。"
  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "值<> *> 屬性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>。      -的值<> *> 屬性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;></xref>和值<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>屬性不是 8。</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -或者-使用金鑰大小無效。       -或者-演算法的金鑰大小無法使用。"
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "建立對稱資料加密標準 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 使用指定的金鑰加密子物件 (<>*>) 和初始化向量 (<>*>)。"
  remarks: "使用<xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A>多載具有相同的參數來解密此方法的結果。</xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_1.cpp)]\n [!code-cs[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_1.cs)]\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in memory.  \n  \n [!code-cs[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_2.cs)]\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_2.cpp)]\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_2.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "使用對稱演算法的祕密金鑰。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用對稱演算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>加密子物件。"
  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "值<> *> 屬性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>。      -的值<> *> 屬性是<xref href=&quot;System.Security.Cryptography.CipherMode&quot;></xref>和值<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>屬性不是 8。</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -或者-使用金鑰大小無效。       -或者-演算法的金鑰大小無法使用。"
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: DESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "產生的隨機初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) 要用於演算法。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "使用這個方法產生的隨機<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>時未指定。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: DESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "產生的隨機金鑰 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) 要用於演算法。</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "使用此方法時未指定產生的隨機金鑰。 這個方法永遠不會傳回弱式金鑰 (請參閱<xref:System.Security.Cryptography.DES.IsWeakKey%2A>) 或半弱式金鑰 (請參閱<xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>)。</xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A> </xref:System.Security.Cryptography.DES.IsWeakKey%2A>       此演算法支援金鑰長度為 64 位元。"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DES
  isExternal: false
  name: System.Security.Cryptography.DES
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: DESCryptoServiceProvider()
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: DESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: DESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: DESCryptoServiceProvider
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: DESCryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: DESCryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: DESCryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: DESCryptoServiceProvider.GenerateKey
