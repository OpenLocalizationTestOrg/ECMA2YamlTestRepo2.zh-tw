### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataReader
  id: OleDbDataReader
  children:
  - System.Data.OleDb.OleDbDataReader.Close
  - System.Data.OleDb.OleDbDataReader.Depth
  - System.Data.OleDb.OleDbDataReader.FieldCount
  - System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetEnumerator
  - System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  - System.Data.OleDb.OleDbDataReader.GetSchemaTable
  - System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  - System.Data.OleDb.OleDbDataReader.HasRows
  - System.Data.OleDb.OleDbDataReader.IsClosed
  - System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.String)
  - System.Data.OleDb.OleDbDataReader.NextResult
  - System.Data.OleDb.OleDbDataReader.Read
  - System.Data.OleDb.OleDbDataReader.RecordsAffected
  - System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
  type: Class
  summary: "提供從資料來源讀取順向資料流的資料列的方式。 這個類別無法被繼承。"
  remarks: "若要建立 OleDbDataReader，您必須呼叫<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法<xref:System.Data.OleDb.OleDbCommand>物件，而不是直接使用建構函式。</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       在關閉之前<xref:System.Data.OleDb.OleDbConnection>，先關閉 OleDbDataReader 物件。</xref:System.Data.OleDb.OleDbConnection> 如果您計劃 resuse<xref:System.Data.OleDb.OleDbCommand>物件，您也必須關閉 OleDbDataReader 物件。例如，您無法擷取輸出參數，直到之後呼叫<xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbCommand>       結果集，另一個處理序或執行緒正在讀取資料時，所做的變更可能會顯示使用者的 OleDbDataReader。 不過，精確的行為取決於時間點。       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>和<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>是您可以呼叫的唯一屬性 OleDbDataReader 關閉之後。</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 雖然<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>屬性可能是存取 OleDbDataReader 存在時，務必呼叫<xref:System.Data.OleDb.OleDbDataReader.Close%2A>傳回的值之前<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>保證精確的傳回值。</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> </xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an OleDbDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OleDbDataReader and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-vb[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: 'public sealed class OleDbDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Close
  id: Close
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "關閉<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>物件。"
  remarks: "當您透過使用時，您必須明確呼叫 Close 方法<xref:System.Data.OleDb.OleDbDataReader>使用相關聯<xref:System.Data.OleDb.OleDbConnection>用於其他用途。</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataReader>      > [!CAUTION] > 沒有呼叫**關閉**或**處置**連線、 DataReader 或在任何其他 managed 的物件上**Finalize**類別的方法。 在完成項中，您應該只需釋放類別直接擁有的 unmanaged 的資源。 如果您的類別未擁有任何 unmanaged 的資源，並包含**Finalize**類別定義中的方法。 如需詳細資訊，請參閱[回收](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_24_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_24_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Depth
  id: Depth
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得值，指出目前資料列的巢狀深度。"
  remarks: "最外層的資料表具有深度為零。"
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "目前資料列的巢狀深度。"
  overload: System.Data.OleDb.OleDbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得目前資料列中的資料行數目。"
  remarks: "包含隱藏的欄位。 使用<xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>以排除隱藏的欄位。</xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>       在查詢執行之後，不傳回資料列，FieldCount 會傳回 0。"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "當未置於有效資料錄集，0;否則為目前的記錄中的資料行數目。 預設值為-1。"
  overload: System.Data.OleDb.OleDbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "沒有目前連接到資料來源。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為布林值。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是布林值，或會產生例外狀況。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Boolean
      description: "資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為位元組。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是一個位元組。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Byte
      description: "指定的資料行做為位元組的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "位元組資料流從指定的資料行位移讀取到緩衝區做為指定的緩衝區位移開頭的陣列。"
  remarks: "GetBytes 欄位中傳回可用位元組的數。 大部分的情況下這是欄位的確切的長度。 不過，傳回的數字可能小於欄位的實際長度如果`GetBytes`已經使用來取得位元組的欄位。 這可能是情況下，例如，當<xref:System.Data.OleDb.OleDbDataReader>讀入緩衝區的大型資料結構。</xref:System.Data.OleDb.OleDbDataReader> 如需詳細資訊，請參閱`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>設定       如果您要傳入的緩衝區`null`，GetBytes 傳回欄位的長度，以位元組為單位。       不會進行轉換;因此，擷取的資料必須已經是位元組陣列。"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: dataIndex
      type: System.Int64
      description: "要從其中開始讀取的作業的欄位內的索引。"
    - id: buffer
      type: System.Byte[]
      description: "要讀入位元組資料流緩衝區。"
    - id: bufferIndex
      type: System.Int32
      description: "中的索引`buffer`所在開始寫入作業。"
    - id: length
      type: System.Int32
      description: "要複製至緩衝區的最大長度。"
    return:
      type: System.Int64
      description: "實際讀取的位元組數目。"
  overload: System.Data.OleDb.OleDbDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為字元。"
  remarks: "不支援<xref:System.Data.OleDb>.</xref:System.Data.OleDb>"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Char
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "字元資料流從指定的資料行位移讀取到緩衝區做為指定的緩衝區位移開頭的陣列。"
  remarks: "GetChars 欄位中傳回可用字元的數。 大部分的情況下這是欄位的確切的長度。 不過，傳回的數字可能小於欄位的實際長度如果`GetChars`已經使用從欄位取得字元。 這可能是情況下，例如，當<xref:System.Data.OleDb.OleDbDataReader>讀入緩衝區的大型資料結構。</xref:System.Data.OleDb.OleDbDataReader> 如需詳細資訊，請參閱`SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>設定       如果您要傳入的緩衝區`null`，GetChars 傳回欄位的長度，以字元為單位。       不會進行轉換;因此，擷取的資料必須已經是字元陣列。"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: dataIndex
      type: System.Int64
      description: "內要開始讀取的作業的資料列的索引。"
    - id: buffer
      type: System.Char[]
      description: "要將資料複製到其中的緩衝區。"
    - id: bufferIndex
      type: System.Int32
      description: "中的索引`buffer`所在開始寫入作業。"
    - id: length
      type: System.Int32
      description: "要讀取的字元數。"
    return:
      type: System.Int64
      description: "實際讀取的字元數目。"
  overload: System.Data.OleDb.OleDbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>物件要求的資料行序數。"
  remarks: "<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>會呼叫 GetData 如果提供者會傳回<xref:System.Data.IDataReader>具有資料行支援<xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDataReader> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>物件。"
  overload: System.Data.OleDb.OleDbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得來源的資料類型的名稱。"
  syntax:
    content: public override string GetDataTypeName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.String
      description: "後端資料類型的名稱。 如需詳細資訊，請參閱[SQL Server 資料型別](http://go.microsoft.com/fwlink/?LinkId=198032)或[存取資料型別](http://go.microsoft.com/fwlink/?LinkId=198033)。"
  overload: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得所指定的資料行的值<xref:System.DateTime>物件。</xref:System.DateTime>"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.DateTime>物件。</xref:System.DateTime>       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.DateTime
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "即將加入。"
    return:
      type: System.Data.Common.DbDataReader
      description: "即將加入。"
  overload: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得所指定的資料行的值<xref:System.Decimal>物件。</xref:System.Decimal>"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.Decimal>物件。</xref:System.Decimal>       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Decimal
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為雙精確度浮點數。"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是雙精確度浮點數。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Double
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回<xref:System.Collections.IEnumerator>可用來逐一查看資料讀取器中的資料列。</xref:System.Collections.IEnumerator>"
  remarks: "雖然您可以使用這個方法來擷取明確的列舉值，以語言支援`foreach`建構，它是簡單直接以逐一查看資料讀取器中的資料列使用迴圈建構。"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可用來逐一查看資料讀取器中的資料列。</xref:System.Collections.IEnumerator>"
  overload: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得<xref:System.Type>也就是物件的資料型別。</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Type
      description: "<xref:System.Type>也就是物件的資料型別。</xref:System.Type>"
  overload: System.Data.OleDb.OleDbDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為單精確度浮點數。"
  remarks: "不會進行轉換。 因此，擷取的資料必須是單精確度浮點數。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Single
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為全域唯一識別碼 (GUID)。"
  remarks: "不會進行轉換;因此擷取的資料必須是全域唯一識別碼。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Guid
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值為 16 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須是 16 位元帶正負號的整數。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Int16
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為 32 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須是 32 位元帶正負號的整數。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Int32
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為 64 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須是 64 位元帶正負號的整數。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Int64
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的名稱。"
  syntax:
    content: public override string GetName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.String
      description: "指定資料行名稱。"
  overload: System.Data.OleDb.OleDbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得資料行序數，給定的資料行的名稱。"
  remarks: "GetOrdinal 第一次執行區分大小寫的查閱。 如果失敗，進行第二個不區分大小寫的搜尋。 方法會擲回`IndexOutOfRange`exceptionif 找不到以零為起始的資料行序數。       GetOrdinal 是區分假名寬度。       因為根據序數進行查閱比具名查閱更有效率，很效率不佳，在迴圈內呼叫 GetOrdinal。 呼叫 GetOrdinal 一次，並將結果指派給整數變數在迴圈中使用，以節省時間。"
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_9_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_9_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "資料行的名稱。"
    return:
      type: System.Int32
      description: "以零為起始的資料行序數。"
  overload: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "指定的名稱不是有效的資料行名稱。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "傳回<xref href=&quot;System.Data.DataTable&quot;></xref>描述的資料行中繼資料<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>。"
  remarks: "GetSchemaTable 方法對應至 OLE DB **icolumnsrowset:: Getcolumnsrowset**方法，並依下列順序的每個資料行傳回中繼資料: |DataReader 資料行 |OLE DB 資料行識別碼 |描述 |  |-----------------------|----------------------|-----------------|  |ColumnName |DBCOLUMN_NAME |資料行; 的名稱這可能不是唯一的。 如果無法判別，則會傳回 null 值。 這個名稱一律會反映目前的檢視或命令文字中的資料行的最新重新命名。 |  |ColumnOrdinal |DBCOLUMN_NUMBER |資料行以零為起始的序數。 此資料行不能包含 null 值。 |  |ColumnSize |DBCOLUMN_COLUMNSIZE |資料行中值的最大可能長度。 使用固定長度的資料類型的資料行，這是資料類型的大小。 |  |NumericPrecision |DBCOLUMN_PRECISION |如果 DbType 是數值資料類型，這是資料行的最大有效位數。 DBTYPE_DECIMAL 或 DBTYPE_NUMERIC 的資料類型之資料行的有效位數，取決於資料行的定義。 如果 DbType 不是數值資料類型，這是 null 的值。 |  |NumericScale |DBCOLUMN_SCALE |如果 DbType DBTYPE_DECIMAL 或 DBTYPE_NUMERIC，這是小數點右邊的位數。 否則，這個值是 null 值。 |  |資料型別 |None |對應至資料行的.NET Framework 類型。 |  |提供者類型 |DBCOLUMN_TYPE |資料行的資料類型的指標。 如果資料行的資料類型而有所不同逐列，這必須是 DBTYPE_VARIANT。 此資料行不能包含 null 值。 |  |IsLong |DBCOLUMNFLAGS_ISLONG |如果資料行包含二進位長物件 (BLOB)，其中包含很長的資料提供者就會設定 DBCOLUMNFLAGS_ISLONG。 非常長資料的定義是特定提供者。 這個旗標的設定會對應至內 IS_LONG 資料行的資料類型的 PROVIDER_TYPES 資料列集的值。 |  |AllowDBNull |DBCOLUMNFLAGS_ISNULLABLE |提供者設定 DBCOLUMNFLAGS_ISNULLABLE 如果取用者可以將資料行設定為 null 的值，或如果無法判斷提供者，取用者是否可以設定為 null 值的資料行。 資料行可以包含 null 值，即使它不能設為 null 的值。 |  |IsReadOnly |DBCOLUMNFLAGS_WRITE |`true`如果資料行不能修改過，否則`false`。 資料行假設為可寫入，如果提供者已設定 DBCOLUMNFLAGS_WRITE 或 DBCOLUMNFLAGS_WRITEUNKNOWN 旗標。 |  |IsRowVersion |DBCOLUMNFLAGS_ISROWID |提供者設定 DBCOLUMNFLAGS_ISROWID，如果資料行都包含永續性資料列識別碼，不能寫入，且沒有有意義值除了識別資料列。 |  |IsUnique |DBCOLUMN_ISUNIQUE 會 |VARIANT_TRUE: BaseTableName 可以傳回基底資料表的資料表中任何兩個資料列在這個資料行中不具有相同的值。 IsUnique 透過本身或是否有型別只適用於此資料行的 UNIQUE 條件約束保證是 VARIANT_TRUE，如果資料行代表索引鍵。<br /><br /> VARIANT_FALSE: 資料行可以包含基底資料表中重複的值。 此資料行的預設值是 VARIANT_FALSE。 |  |IsKey |DBCOLUMN_KEYCOLUMN |VARIANT_TRUE︰ 資料行是一組資料列集中的資料行的其中一個，結合在一起唯一識別資料列。 與 IsKey 設為 VARIANT_TRUE 的資料行必須唯一識別資料列集中的資料列。 沒有這個資料行集是資料行的最小集合的需求。 這個資料行集可能會產生來自基底資料表主索引鍵、 唯一條件約束或唯一索引鍵。<br /><br /> VARIANT_FALSE︰ 資料行不需要唯一識別資料列。 |  |IsAutoIncrement |DBCOLUMN_ISAUTOINCREMENT |VARIANT_TRUE︰ 資料行，將值指派給新的資料列，以固定遞增方式。<br /><br /> VARIANT_FALSE︰ 資料行不會指派值給新的資料列，以固定遞增方式。 此資料行的預設值是 VARIANT_FALSE。 |  |BaseSchemaName |DBCOLUMN_BASESCHEMANAME |包含資料行的資料存放區中的結構描述名稱。 如果無法判斷基底結構描述名稱，則為 null 值。 此資料行的預設值是 null 值。 |  |BaseCatalogName |DBCOLUMN_BASECATALOGNAME |包含資料行的資料存放區中的類別目錄名稱。 如果無法判斷基底目錄名稱，則為 null 值。 此資料行的預設值是 null 值。 |  |BaseTableName |DBCOLUMN_BASETABLENAME |資料表或檢視中包含資料行的資料存放區的名稱。 如果無法判斷基底資料表名稱，則為 null 值。 此資料行的預設值是 null 值。 |  |BaseColumnName |DBCOLUMN_BASECOLUMNNAME |資料存放區中的資料行名稱。 這可能是如果原先使用別名 ColumnName 資料行中傳回的資料行名稱不同。 如果無法判斷基底的資料行名稱，或如果資料列集資料行衍生而來但不是完全相同，資料中的資料行存放區，則為 null 值。 此資料行的預設值是 null 值。 |     > [!NOTE] > 來確保中繼資料行傳回正確的資訊，您必須呼叫<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>與`behavior`參數設定為`KeyInfo`。</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 否則，有些結構描述資料表中的資料行可能會傳回預設值，null 或不正確的資料。"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>描述資料行中繼資料。"
  overload: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>已關閉。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得指定資料行的值做為字串。"
  remarks: "不會進行轉換;因此擷取的資料必須是字串。       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.String
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得所指定的資料行的值<xref:System.TimeSpan>物件。</xref:System.TimeSpan>"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.TimeSpan>物件。</xref:System.TimeSpan>       呼叫<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>呼叫這個方法之前尋找 null 值。</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public TimeSpan GetTimeSpan (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.TimeSpan
      description: "指定資料行的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的轉換無效。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得原生格式的指定序數的資料行的值。"
  remarks: "這個方法會傳回<xref:System.DBNull>null 資料庫資料行。</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Object
      description: "要傳回的值。"
  overload: System.Data.OleDb.OleDbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "填入物件的陣列與目前資料列的資料行值。"
  remarks: "對於大部分的應用程式，GetValues 方法會提供有效率的方法，用於擷取所有資料行，而不是個別擷取每個資料行。       您可以傳遞<xref:System.Object>陣列，其中包含產生的資料列中所包含的資料行數目少於。</xref:System.Object> 資料量<xref:System.Object>陣列，含有複製到陣列。</xref:System.Object> 您也可以傳遞<xref:System.Object>陣列的長度大於包含在產生的資料列中的資料行數目。</xref:System.Object>       這個方法會傳回<xref:System.DBNull>null 資料庫資料行。</xref:System.DBNull>"
  example:
  - >-
    [!code-cs[OleDbDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_12_1.cs)]
     [!code-vb[OleDbDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_12_1.vb)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "陣列<xref:System.Object>複製屬性資料行。</xref:System.Object>"
    return:
      type: System.Int32
      description: "執行個體數目<xref:System.Object>陣列中。</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  id: HasRows
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得值，指出是否<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>包含一或多個資料列。"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>包含一或多個資料列，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指出是否要關閉資料讀取器。"
  remarks: "IsClosed 和<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>屬性之後，您可以呼叫<xref:System.Data.OleDb.OleDbDataReader>已關閉。</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>已關閉，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得值，指出資料行是否包含不存在或遺漏的值。"
  remarks: "呼叫這個方法來尋找 null 資料行值，然後再呼叫的型別有 get 的方法 (例如， <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>， <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>，依此類推) 以避免引發錯誤。</xref:System.Data.OleDb.OleDbDataReader.GetChar%2A> </xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料行值相當於<xref href=&quot;System.DBNull&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得值，指定資料行的原生格式資料行序數。"
  syntax:
    content: public override object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "資料行序數。"
    return:
      type: System.Object
      description: "原生格式的指定資料行值。"
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0- <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "在原生格式的資料行名稱中取得指定資料行的值。"
  remarks: "第一次執行區分大小寫的查閱。 如果失敗，進行第二個不區分大小寫的搜尋。       這個方法是區分假名寬度。"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "資料行名稱。"
    return:
      type: System.Object
      description: "原生格式的指定資料行值。"
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "找不到具有指定名稱的任何資料行。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  id: NextResult
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "讀取批次 SQL 陳述式的結果時，請將資料讀取器前移至下一個結果。"
  remarks: "用來處理多個可以執行批次 SQL 陳述式產生的結果。       根據預設，資料讀取器上的第一個結果。"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果有多個結果集;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Read
  id: Read
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "往前推進<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>到下一筆記錄。"
  remarks: "預設位置<xref:System.Data.OleDb.OleDbDataReader>是第一個資料錄之前。</xref:System.Data.OleDb.OleDbDataReader> 因此，您必須呼叫讀取存取的任何資料。       雖然<xref:System.Data.OleDb.OleDbDataReader>正在使用中，<xref:System.Data.OleDb.OleDbConnection>正忙於處理它，直到您呼叫<xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A></xref:System.Data.OleDb.OleDbConnection>關聯</xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果有多個資料列。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.OleDb.OleDbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得已變更、 插入或執行 SQL 陳述式所刪除的資料列數目。"
  remarks: "直到所有資料列會讀取，並關閉<xref:System.Data.OleDb.OleDbDataReader>.</xref:System.Data.OleDb.OleDbDataReader> RecordsAffected 屬性未設定       這個屬性的值是累計的。 例如，如果兩筆記錄插入批次模式中，RecordsAffected 的值為二。       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>而且 RecordsAffected 之後，您可以呼叫的唯一屬性<xref:System.Data.OleDb.OleDbDataReader>已關閉。</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "資料列數目的變更、 插入或刪除。如果沒有資料列受到影響的 0 或陳述式失敗。與 SELECT 陳述式的-1。"
  overload: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得的欄位數目<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>不隱藏的。"
  remarks: "這個值用來判斷中有多少欄位<xref:System.Data.OleDb.OleDbDataReader>可見。</xref:System.Data.OleDb.OleDbDataReader> 比方說，部份的主索引鍵上的 SELECT 會傳回索引鍵的剩餘部分做為隱藏欄位。 隱藏的欄位永遠會附加在可見欄位。"
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "沒有隱藏的欄位數目。"
  overload: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbDataReader.Close
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
- uid: System.Data.OleDb.OleDbDataReader.Depth
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
- uid: System.Data.OleDb.OleDbDataReader.Read
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
- uid: System.Data.OleDb.OleDbDataReader.Close*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close
  nameWithType: OleDbDataReader.Close
- uid: System.Data.OleDb.OleDbDataReader.Depth*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
- uid: System.Data.OleDb.OleDbDataReader.FieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OleDbDataReader.GetBoolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte
  nameWithType: OleDbDataReader.GetByte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OleDbDataReader.GetBytes
- uid: System.Data.OleDb.OleDbDataReader.GetChar*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar
  nameWithType: OleDbDataReader.GetChar
- uid: System.Data.OleDb.OleDbDataReader.GetChars*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars
  nameWithType: OleDbDataReader.GetChars
- uid: System.Data.OleDb.OleDbDataReader.GetData*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData
  nameWithType: OleDbDataReader.GetData
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OleDbDataReader.GetDataTypeName
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OleDbDataReader.GetDateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: OleDbDataReader.GetDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OleDbDataReader.GetDecimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OleDbDataReader.GetDouble
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbDataReader.GetEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OleDbDataReader.GetFieldType
- uid: System.Data.OleDb.OleDbDataReader.GetFloat*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OleDbDataReader.GetFloat
- uid: System.Data.OleDb.OleDbDataReader.GetGuid*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OleDbDataReader.GetGuid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OleDbDataReader.GetInt16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OleDbDataReader.GetInt32
- uid: System.Data.OleDb.OleDbDataReader.GetInt64*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OleDbDataReader.GetInt64
- uid: System.Data.OleDb.OleDbDataReader.GetName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName
  nameWithType: OleDbDataReader.GetName
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OleDbDataReader.GetOrdinal
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OleDbDataReader.GetSchemaTable
- uid: System.Data.OleDb.OleDbDataReader.GetString*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString
  nameWithType: OleDbDataReader.GetString
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OleDbDataReader.GetTimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue
  nameWithType: OleDbDataReader.GetValue
- uid: System.Data.OleDb.OleDbDataReader.GetValues*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues
  nameWithType: OleDbDataReader.GetValues
- uid: System.Data.OleDb.OleDbDataReader.HasRows*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OleDbDataReader.IsDBNull
- uid: System.Data.OleDb.OleDbDataReader.Item*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item
  nameWithType: OleDbDataReader.Item
- uid: System.Data.OleDb.OleDbDataReader.NextResult*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult
  nameWithType: OleDbDataReader.NextResult
- uid: System.Data.OleDb.OleDbDataReader.Read*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read
  nameWithType: OleDbDataReader.Read
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
