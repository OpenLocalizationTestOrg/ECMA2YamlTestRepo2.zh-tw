### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  id: IMessageSink
  children:
  - System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Messaging.IMessageSink.NextSink
  - System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)
  langs:
  - csharp
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
  type: Interface
  summary: "定義訊息接收的介面。"
  remarks: "在 proxy 上方法呼叫時，遠端執行功能基礎結構傳遞實際跨越遠端界限中，實際物件使用呼叫方法引數，並傳回結果物件的引數傳回至用戶端之 proxy 物件提供必要的支援。       遠端方法呼叫是從用戶端到伺服器端的訊息，而且可能再次返回。 遠端方法呼叫的方式跨遠端界限，通過一連串`IMessageSink`物件。 鏈結中的每個接收接收訊息物件、 執行特定作業，並委派至鏈結中的下一個接收。 Proxy 物件包含第一個參考`IMessageSink`它需要使用啟動關閉的鏈結。       非同步呼叫，委派，在每個接收提供回覆接收 (另一個`IMessageSink`)，會先呼叫下一個接收回覆時途中回。       不同類型的接收執行不同的作業，根據收到的訊息物件的類型。 比方說，一個接收可能會導致要採取的鎖定，另一個無法強制執行呼叫安全性、 另一個可能會執行資料流程呼叫控制項和可靠性服務，以及另一個可能尚未會傳輸到不同的呼叫<xref:System.AppDomain>，處理程序或電腦。</xref:System.AppDomain> 鏈結中的兩個或多個訊息接收可以與彼此互動，對每個特定的動作。"
  example:
  - "The following code example shows the implementation of the IMessageSink interface. Note that the sample assumes type definitions and assembly references that must be provided for the sample to compile.  \n  \n [!code-cs[IMessageSink_Client#3](~/add/codesnippet/csharp/t-system.runtime.remotin_40_1.cs)]\n [!code-vb[IMessageSink_Client#3](~/add/codesnippet/visualbasic/t-system.runtime.remotin_40_1.vb)]\n [!code-cpp[IMessageSink_Client#3](~/add/codesnippet/cpp/t-system.runtime.remotin_40_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IMessageSink
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  id: AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  langs:
  - csharp
  name: AsyncProcessMessage(IMessage,IMessageSink)
  nameWithType: IMessageSink.AsyncProcessMessage(IMessage,IMessageSink)
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(IMessage,IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "以非同步方式處理指定的訊息。"
  remarks: "這個方法會在訊息接收上叫用的遠端執行功能基礎結構，或由先前的非同步訊息接收。"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "要處理的訊息。"
    - id: replySink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "回覆接收回覆訊息。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessageCtrl
      description: "傳回<xref href=&quot;System.Runtime.Remoting.Messaging.IMessageCtrl&quot;></xref>提供方法來控制非同步訊息之後有已分派的介面。"
  overload: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接呼叫端會透過介面的參考呼叫，而且沒有基礎結構的權限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.IMessageSink.NextSink
  id: NextSink
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  langs:
  - csharp
  name: NextSink
  nameWithType: IMessageSink.NextSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.NextSink
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "取得接收鏈結中的下一個訊息接收。"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "接收鏈結中的下一個訊息接收。"
  overload: System.Runtime.Remoting.Messaging.IMessageSink.NextSink*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接呼叫端會透過介面的參考呼叫，而且沒有基礎結構的權限。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)
  id: SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  langs:
  - csharp
  name: SyncProcessMessage(IMessage)
  nameWithType: IMessageSink.SyncProcessMessage(IMessage)
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(IMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "同步處理指定的訊息。"
  remarks: "SyncProcessMessage 方法會在訊息接收上叫用的遠端執行功能基礎結構，或先前接收同步訊息。"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "要處理的訊息。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "在回應要求回覆訊息。"
  overload: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直接呼叫端會透過介面的參考呼叫，而且沒有基礎結構的權限。"
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: AsyncProcessMessage(IMessage,IMessageSink)
  nameWithType: IMessageSink.AsyncProcessMessage(IMessage,IMessageSink)
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(IMessage,IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageCtrl
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageCtrl
  nameWithType: IMessageCtrl
  fullName: System.Runtime.Remoting.Messaging.IMessageCtrl
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Messaging.IMessageSink.NextSink
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: NextSink
  nameWithType: IMessageSink.NextSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.NextSink
- uid: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: SyncProcessMessage(IMessage)
  nameWithType: IMessageSink.SyncProcessMessage(IMessage)
  fullName: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(IMessage)
- uid: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage*
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: AsyncProcessMessage
  nameWithType: IMessageSink.AsyncProcessMessage
- uid: System.Runtime.Remoting.Messaging.IMessageSink.NextSink*
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: NextSink
  nameWithType: IMessageSink.NextSink
- uid: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage*
  parent: System.Runtime.Remoting.Messaging.IMessageSink
  isExternal: false
  name: SyncProcessMessage
  nameWithType: IMessageSink.SyncProcessMessage
