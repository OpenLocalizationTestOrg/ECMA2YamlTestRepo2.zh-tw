### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsBase
  id: SettingsBase
  children:
  - System.Configuration.SettingsBase.#ctor
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Item(System.String)
  - System.Configuration.SettingsBase.Properties
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Save
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  langs:
  - csharp
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
  type: Class
  summary: "提供用來支援使用者屬性設定的基底類別。"
  remarks: "ASP.NET Web Form 和 Windows Form 使用相同的組態設定基礎結構來支援使用者設定。 在 ASP.NET 中的使用者設定通常稱為 ASP.NET 設定檔。 設定基礎結構包括 SettingsBase 基底類別，<xref:System.Configuration.SettingsProperty>類別，<xref:System.Configuration.SettingsPropertyValue>類別的<xref:System.Configuration.SettingsContext>類別、<xref:System.Configuration.SettingsProvider>類別和<xref:System.Configuration.SettingAttribute>類別。</xref:System.Configuration.SettingAttribute> </xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsContext> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>       設定基底類別提供的通用基礎結構來定義和保存設定屬性。 根據這些基底類別衍生的方式和其執行階段環境，設定應用程式開發介面可以提供不同的功能等級。 例如，ASP.NET 設定檔會使用設定基底類別，來提供所儲存及載入根據要求語意的每個使用者設定。"
  syntax:
    content: public abstract class SettingsBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>類別。"
  syntax:
    content: protected SettingsBase ();
    parameters: []
  overload: System.Configuration.SettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Context
  id: Context
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得相關聯的設定內容。"
  remarks: "A<xref:System.Configuration.SettingsContext>由應用程式用來提供內容提供者可用來保存設定的資訊。</xref:System.Configuration.SettingsContext>       每個設定類別衍生自<xref:System.Configuration.SettingsBase>具有與其相關聯的內容</xref:System.Configuration.SettingsBase> 內容會傳遞給身分識別的其他資訊的設定資訊的設定提供者。 內容因此作為提示，以協助判斷如何保存相關的設定值的設定提供者。"
  syntax:
    content: public virtual System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>設定執行個體相關聯。"
  overload: System.Configuration.SettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  id: Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化所用的內部屬性<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>物件。"
  syntax:
    content: public void Initialize (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties, System.Configuration.SettingsProviderCollection providers);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "設定內容相關的設定屬性。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "設定屬性且可從<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>執行個體。"
    - id: providers
      type: System.Configuration.SettingsProviderCollection
      description: "載入及儲存屬性值時，應使用初始化提供者。"
  overload: System.Configuration.SettingsBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得值，指出物件的存取是否為同步 （安全執行緒）。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果存取<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>已同步處理，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.SettingsBase.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定指定的設定屬性的值。"
  remarks: "項目屬性，也稱為索引子，而例行性用於衍生自<xref:System.Configuration.SettingsBase>.</xref:System.Configuration.SettingsBase>設定類別 此項目屬性類別的公用屬性繫結至對應的設定屬性。       存取屬性時，第一次<xref:System.Configuration.SettingsBase>執行個體將會尋找所有共用相同的提供者所要求的屬性為其他屬性。</xref:System.Configuration.SettingsBase> <xref:System.Configuration.SettingsBase>執行個體然後會呼叫提供者，並將其傳遞一組<xref:System.Configuration.SettingsProperty>物件，代表提供者應該擷取的資料。</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsBase>       請注意，將會取得索引子，而且如果以執行緒安全的方式設定屬性資料<xref:System.Configuration.SettingsBase.IsSynchronized%2A>是`true`。</xref:System.Configuration.SettingsBase.IsSynchronized%2A> A<xref:System.Configuration.SettingsBase>預設執行個體不是安全執行緒。</xref:System.Configuration.SettingsBase> 不過，您可以呼叫<xref:System.Configuration.SettingsBase.Synchronized%2A>，並傳入<xref:System.Configuration.SettingsBase>執行個體進行<xref:System.Configuration.SettingsBase>索引子以安全執行緒的方式運作。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase.Synchronized%2A>"
  syntax:
    content: public virtual object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>包含用來存取屬性的名稱。</xref:System.String>"
    return:
      type: System.Object
      description: "如果找到，具名的設定屬性的值。"
  overload: System.Configuration.SettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "沒有目前的物件，與相關聯的屬性，或找不到指定的屬性。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "嘗試設定唯讀屬性。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "在設定作業期間設定屬性，與不相容的型別是所提供的值。"
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Properties
  id: Properties
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得設定屬性的集合。"
  remarks: "`get`內容屬性存取子傳回的集合<xref:System.Configuration.SettingsProperty>所管理的屬性相關聯的執行個體<xref:System.Configuration.SettingsBase>執行個體。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsProperty>       <xref:System.Configuration.SettingsBase>類別原生會辨識某些設定，例如其名稱、 屬性類型、 設定提供者、 預設值和唯讀狀態和序列化喜好設定的特性。</xref:System.Configuration.SettingsBase> 這些特性會鏡射做為屬性<xref:System.Configuration.SettingsProperty>類別。</xref:System.Configuration.SettingsProperty> 所有其他屬性的<xref:System.Configuration.SettingsProperty>類別都只會傳遞給<xref:System.Configuration.SettingsAttributeDictionary>.</xref:System.Configuration.SettingsAttributeDictionary>為其相關聯的設定提供者</xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>集合，其中包含所有<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>物件。"
  overload: System.Configuration.SettingsBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得設定的集合屬性值。"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "集合<xref href=&quot;System.Configuration.SettingsPropertyValue&quot;></xref>代表受屬性的實際資料值物件<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>執行個體。"
  overload: System.Configuration.SettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Providers
  id: Providers
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得設定提供者的集合。"
  syntax:
    content: public virtual System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref>包含<xref href=&quot;System.Configuration.SettingsProvider&quot;></xref>物件。"
  overload: System.Configuration.SettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Save
  id: Save
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "儲存設定屬性的目前值。"
  remarks: "<xref:System.Configuration.SettingsBase>執行個體根據每一個屬性相關聯的提供者的屬性予以分組。</xref:System.Configuration.SettingsBase> 每個提供者稱為序列中，並傳遞的一組應該儲存提供者的屬性。"
  syntax:
    content: public virtual void Save ();
    parameters: []
  overload: System.Configuration.SettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  id: Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "提供<xref href=&quot;System.Configuration.SettingsBase&quot;></xref>類別，為同步 （安全執行緒）。"
  remarks: "索引子將會取得並以執行緒安全的方式設定屬性的資料，如果<xref:System.Configuration.SettingsBase.IsSynchronized%2A>屬性設定為`true`。</xref:System.Configuration.SettingsBase.IsSynchronized%2A>  A<xref:System.Configuration.SettingsBase>預設的執行個體不是安全執行緒。</xref:System.Configuration.SettingsBase>  不過，您可以呼叫已同步處理傳入<xref:System.Configuration.SettingsBase>執行個體進行<xref:System.Configuration.SettingsBase>索引子以安全執行緒的方式運作。</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase>"
  syntax:
    content: public static System.Configuration.SettingsBase Synchronized (System.Configuration.SettingsBase settingsBase);
    parameters:
    - id: settingsBase
      type: System.Configuration.SettingsBase
      description: "用來支援使用者屬性設定的類別。"
    return:
      type: System.Configuration.SettingsBase
      description: "A <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref>同步處理的類別。"
  overload: System.Configuration.SettingsBase.Synchronized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.SettingsBase.#ctor
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
- uid: System.Configuration.SettingsBase.Context
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.SettingsBase.IsSynchronized
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsBase.Item(System.String)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsBase.Properties
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsBase.Providers
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
- uid: System.Configuration.SettingsBase
  parent: System.Configuration
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
- uid: System.Configuration.SettingsBase.#ctor*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase.SettingsBase
- uid: System.Configuration.SettingsBase.Context*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
- uid: System.Configuration.SettingsBase.Initialize*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize
  nameWithType: SettingsBase.Initialize
- uid: System.Configuration.SettingsBase.IsSynchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
- uid: System.Configuration.SettingsBase.Item*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item
  nameWithType: SettingsBase.Item
- uid: System.Configuration.SettingsBase.Properties*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
- uid: System.Configuration.SettingsBase.Providers*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save
  nameWithType: SettingsBase.Save
- uid: System.Configuration.SettingsBase.Synchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized
  nameWithType: SettingsBase.Synchronized
