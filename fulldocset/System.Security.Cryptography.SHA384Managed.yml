### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA384Managed
  id: SHA384Managed
  children:
  - System.Security.Cryptography.SHA384Managed.#ctor
  - System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384Managed.HashFinal
  - System.Security.Cryptography.SHA384Managed.Initialize
  langs:
  - csharp
  name: SHA384Managed
  nameWithType: SHA384Managed
  fullName: System.Security.Cryptography.SHA384Managed
  type: Class
  summary: "計算<xref href=&quot;System.Security.Cryptography.SHA384&quot;></xref>使用 managed 程式庫的輸入資料的雜湊。"
  remarks: "使用雜湊是設為固定大小，表示大量資料的唯一值。 如果且只有對應的資料也會比對，應該符合兩組資料的雜湊。 對資料進行小變更會導致無法預期的大量變更，雜湊。       雜湊演算法的大小 SHA384Managed 為 384 位元。"
  example:
  - "The following example computes the SHA384Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA384Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_104_1.cpp)]\n [!code-cs[Classic SHA384Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_104_1.cs)]\n [!code-vb[Classic SHA384Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_104_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA384Managed : System.Security.Cryptography.SHA384
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA384
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384.Create
  - System.Security.Cryptography.SHA384.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref>類別。"
  remarks: "使用雜湊是設為固定大小，表示大量資料的唯一值。 如果且只有對應的資料也會比對，應該符合兩組資料的雜湊。 對資料進行小變更會導致無法預期的大量變更，雜湊。       該雜湊大小<xref:System.Security.Cryptography.SHA384Managed>演算法為 384 位元。</xref:System.Security.Cryptography.SHA384Managed>       **重要**如果啟用下列的安全性設定在 本機安全性原則，或做為群組原則的一部分，您會收到<xref:System.InvalidOperationException>當您嘗試使用這個建構函式︰**系統密碼編譯︰ 使用 FIPS 相容方法於加密、 雜湊和簽署**</xref:System.InvalidOperationException>"
  syntax:
    content: public SHA384Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已啟用美國聯邦資訊處理標準 (FIPS) 安全性設定。 此實作不是 Windows Platform FIPS 驗證的密碼編譯演算法的一部分。"
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，將資料轉遞到成為物件<xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref>來計算雜湊的雜湊演算法。"
  remarks: "應用程式碼，不會呼叫這個方法。       此抽象方法會執行雜湊計算。 每次寫入至密碼編譯資料流物件會將資料傳遞到這個方法。 對於每個資料區塊，這個方法會更新雜湊物件的狀態，以便在資料流結尾傳回正確的雜湊值。"
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "輸入的資料。"
    - id: ibStart
      type: System.Int32
      description: "中要開始使用資料的位元組陣列的位移。"
    - id: cbSize
      type: System.Int32
      description: "陣列中要用作資料的位元組數目。"
  overload: System.Security.Cryptography.SHA384Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "在衍生類別中覆寫，對雜湊計算做最後密碼編譯資料流物件處理最後一個資料之後。"
  remarks: "應用程式碼，不會呼叫這個方法。 這個方法會完成任何部分的計算，並傳回資料流的正確雜湊值。"
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "計算的雜湊程式碼中。"
  overload: System.Security.Cryptography.SHA384Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的執行個體<xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref>。"
  remarks: "使用雜湊是設為固定大小，表示大量資料的唯一值。 如果且只有對應的資料也會比對，應該符合兩組資料的雜湊。 對資料進行小變更會導致無法預期的大量變更，雜湊。       該雜湊大小<xref:System.Security.Cryptography.SHA384Managed>演算法為 384 位元。</xref:System.Security.Cryptography.SHA384Managed>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA384
  isExternal: false
  name: System.Security.Cryptography.SHA384
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
- uid: System.Security.Cryptography.SHA384Managed.#ctor*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed
  nameWithType: SHA384Managed.SHA384Managed
- uid: System.Security.Cryptography.SHA384Managed.HashCore*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA384Managed.HashCore
- uid: System.Security.Cryptography.SHA384Managed.HashFinal*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA384Managed.HashFinal
- uid: System.Security.Cryptography.SHA384Managed.Initialize*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA384Managed.Initialize
