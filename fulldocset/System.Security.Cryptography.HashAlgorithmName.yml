### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HashAlgorithmName
  id: HashAlgorithmName
  children:
  - System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.GetHashCode
  - System.Security.Cryptography.HashAlgorithmName.MD5
  - System.Security.Cryptography.HashAlgorithmName.Name
  - System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.SHA1
  - System.Security.Cryptography.HashAlgorithmName.SHA256
  - System.Security.Cryptography.HashAlgorithmName.SHA384
  - System.Security.Cryptography.HashAlgorithmName.SHA512
  - System.Security.Cryptography.HashAlgorithmName.ToString
  langs:
  - csharp
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
  type: Struct
  summary: "指定密碼編譯雜湊演算法的名稱。"
  remarks: "HashAlgorithmName 結構所包含的某些靜態屬性傳回預先定義的雜湊演算法名稱，以及<xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>可以表示為強類型字串的自訂的雜湊演算法名稱的屬性。</xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> 雜湊演算法名稱會區分大小寫。       使用 Microsoft 的 CNG （密碼編譯下一個層代） API 實作的非對稱演算法解譯基礎字串值視為[CNG 演算法識別項](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)。       非對稱演算法使用其他技術來實作:-必須至少辨識&quot;MD5&quot;、&quot;SHA1&quot;、&quot;SHA256&quot;、&quot;SHA384&quot;和&quot;SHA512&quot;。      -應該會辨識其他的 CNG 識別項，它們支援任何其他的雜湊演算法。"
  syntax:
    content: 'public struct HashAlgorithmName : IEquatable<System.Security.Cryptography.HashAlgorithmName>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.HashAlgorithmName>
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: HashAlgorithmName(String)
  nameWithType: HashAlgorithmName.HashAlgorithmName(String)
  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>結構，以自訂的名稱。"
  remarks: "建構函式上執行任何驗證`name`。"
  syntax:
    content: public HashAlgorithmName (string name);
    parameters:
    - id: name
      type: System.String
      description: "自訂的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HashAlgorithmName.Equals(Object)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "傳回值，指出目前的執行個體和指定的物件是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要與目前的執行個體比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> obj </code>是<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>物件及其<xref:System.Security.Cryptography.HashAlgorithmName.Name*>屬性是等於目前的執行個體。</xref:System.Security.Cryptography.HashAlgorithmName.Name*> 這個比較是序數和區分大小寫。"
  overload: System.Security.Cryptography.HashAlgorithmName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  id: Equals(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Equals(HashAlgorithmName)
  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "傳回值，指出兩個<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>執行個體會相等。"
  syntax:
    content: public bool Equals (System.Security.Cryptography.HashAlgorithmName other);
    parameters:
    - id: other
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要與目前的執行個體比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Security.Cryptography.HashAlgorithmName.Name*>屬性<code> other </code>是否等於目前的執行個體。</xref:System.Security.Cryptography.HashAlgorithmName.Name*> 這個比較是序數和區分大小寫。"
  overload: System.Security.Cryptography.HashAlgorithmName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HashAlgorithmName.GetHashCode()
  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "傳回目前執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的執行個體或如果沒有為 0 的雜湊碼<code> name </code>值提供給<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>建構函式。"
  overload: System.Security.Cryptography.HashAlgorithmName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.MD5
  id: MD5
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: MD5
  nameWithType: HashAlgorithmName.MD5
  fullName: System.Security.Cryptography.HashAlgorithmName.MD5
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得代表&quot;MD5&quot;的雜湊演算法名稱。"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "代表&quot;MD5&quot;的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.MD5*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Name
  id: Name
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Name
  nameWithType: HashAlgorithmName.Name
  fullName: System.Security.Cryptography.HashAlgorithmName.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得基礎演算法名稱的字串表示法。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "演算法名稱的字串表示或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或&lt;xref:System.String?displayProperty=fullName&gt;沒有雜湊演算法是否可用。"
  overload: System.Security.Cryptography.HashAlgorithmName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: op_Equality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "判斷兩個指定<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>物件是否相等。"
  remarks: "等號比較方法來定義等號比較運算子，如操作<xref:System.Security.Cryptography.HashAlgorithmName>值。</xref:System.Security.Cryptography.HashAlgorithmName>"
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要比較的第一個物件。"
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要比較的第二個物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>left</code> and <code>right</code> have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Security.Cryptography.HashAlgorithmName.Name*>"
  overload: System.Security.Cryptography.HashAlgorithmName.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "判斷兩個指定<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>物件不相等。"
  remarks: "不等比較方法來定義作業的不等比較運算子的<xref:System.Security.Cryptography.HashAlgorithmName>值。</xref:System.Security.Cryptography.HashAlgorithmName>"
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要比較的第一個物件。"
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: "要比較的第二個物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個<code> left </code>和<code> right </code>不具有相同<xref:System.Security.Cryptography.HashAlgorithmName.Name*>值; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Security.Cryptography.HashAlgorithmName.Name*>"
  overload: System.Security.Cryptography.HashAlgorithmName.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1
  id: SHA1
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得代表&quot;SHA1&quot;的雜湊演算法名稱。"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "代表&quot;SHA1&quot;的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.SHA1*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256
  id: SHA256
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得代表&quot;SHA256&quot;的雜湊演算法名稱。"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "代表&quot;SHA256&quot;的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.SHA256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384
  id: SHA384
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得代表&quot;SHA384&quot;的雜湊演算法名稱。"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "代表&quot;SHA384&quot;的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.SHA384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512
  id: SHA512
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得代表&quot;SHA512&quot;的雜湊演算法名稱。"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "代表&quot;SHA512&quot;的雜湊演算法名稱。"
  overload: System.Security.Cryptography.HashAlgorithmName.SHA512*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.ToString
  id: ToString
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: ToString()
  nameWithType: HashAlgorithmName.ToString()
  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "傳回目前的字串表示法<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>執行個體。"
  remarks: "ToString 方法會傳回<xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>屬性，如果已指派給。</xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> 否則，它會傳回<xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "目前的字串表示<xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;></xref>執行個體。"
  overload: System.Security.Cryptography.HashAlgorithmName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: HashAlgorithmName(String)
  nameWithType: HashAlgorithmName.HashAlgorithmName(String)
  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals(Object)
  nameWithType: HashAlgorithmName.Equals(Object)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals(HashAlgorithmName)
  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: GetHashCode()
  nameWithType: HashAlgorithmName.GetHashCode()
  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithmName.MD5
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: MD5
  nameWithType: HashAlgorithmName.MD5
  fullName: System.Security.Cryptography.HashAlgorithmName.MD5
- uid: System.Security.Cryptography.HashAlgorithmName.Name
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Name
  nameWithType: HashAlgorithmName.Name
  fullName: System.Security.Cryptography.HashAlgorithmName.Name
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Equality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512
- uid: System.Security.Cryptography.HashAlgorithmName.ToString
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: ToString()
  nameWithType: HashAlgorithmName.ToString()
  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName.HashAlgorithmName
- uid: System.Security.Cryptography.HashAlgorithmName.Equals*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals
  nameWithType: HashAlgorithmName.Equals
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: GetHashCode
  nameWithType: HashAlgorithmName.GetHashCode
- uid: System.Security.Cryptography.HashAlgorithmName.MD5*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: MD5
  nameWithType: HashAlgorithmName.MD5
- uid: System.Security.Cryptography.HashAlgorithmName.Name*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Name
  nameWithType: HashAlgorithmName.Name
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Equality
  nameWithType: HashAlgorithmName.op_Equality
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Inequality
  nameWithType: HashAlgorithmName.op_Inequality
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
- uid: System.Security.Cryptography.HashAlgorithmName.ToString*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: ToString
  nameWithType: HashAlgorithmName.ToString
