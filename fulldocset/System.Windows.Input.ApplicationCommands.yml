### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ApplicationCommands
  id: ApplicationCommands
  children:
  - System.Windows.Input.ApplicationCommands.CancelPrint
  - System.Windows.Input.ApplicationCommands.Close
  - System.Windows.Input.ApplicationCommands.ContextMenu
  - System.Windows.Input.ApplicationCommands.Copy
  - System.Windows.Input.ApplicationCommands.CorrectionList
  - System.Windows.Input.ApplicationCommands.Cut
  - System.Windows.Input.ApplicationCommands.Delete
  - System.Windows.Input.ApplicationCommands.Find
  - System.Windows.Input.ApplicationCommands.Help
  - System.Windows.Input.ApplicationCommands.New
  - System.Windows.Input.ApplicationCommands.NotACommand
  - System.Windows.Input.ApplicationCommands.Open
  - System.Windows.Input.ApplicationCommands.Paste
  - System.Windows.Input.ApplicationCommands.Print
  - System.Windows.Input.ApplicationCommands.PrintPreview
  - System.Windows.Input.ApplicationCommands.Properties
  - System.Windows.Input.ApplicationCommands.Redo
  - System.Windows.Input.ApplicationCommands.Replace
  - System.Windows.Input.ApplicationCommands.Save
  - System.Windows.Input.ApplicationCommands.SaveAs
  - System.Windows.Input.ApplicationCommands.SelectAll
  - System.Windows.Input.ApplicationCommands.Stop
  - System.Windows.Input.ApplicationCommands.Undo
  langs:
  - csharp
  name: ApplicationCommands
  nameWithType: ApplicationCommands
  fullName: System.Windows.Input.ApplicationCommands
  type: Class
  summary: "提供的標準組的應用程式相關命令。"
  remarks: "ApplicationCommands 類別中的命令和命令中的其他命令程式庫類別，例如<xref:System.Windows.Input.ComponentCommands>和<xref:System.Windows.Input.NavigationCommands>，用於代表一組應用程式設計人員經常遇到的常見命令。</xref:System.Windows.Input.NavigationCommands> </xref:System.Windows.Input.ComponentCommands>  命令只代表的執行個體<xref:System.Windows.Input.RoutedCommand>不實作邏輯的命令。</xref:System.Windows.Input.RoutedCommand> 實作邏輯繫結至與<xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding>命令 例如，如果<xref:System.Windows.Input.ApplicationCommands.Close%2A>控制，這會執行的邏輯執行命令<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令可能無法提供控制項，因此應用程式寫入器會負責寫決定控制項將如何處理命令的邏輯。</xref:System.Windows.Input.ApplicationCommands.Close%2A> </xref:System.Windows.Input.ApplicationCommands.Close%2A>       許多控制項實作邏輯提供許多命令程式庫中的命令。  例如，<xref:System.Windows.Controls.TextBox>類別會提供邏輯<xref:System.Windows.Input.ApplicationCommands.Paste%2A>， <xref:System.Windows.Input.ApplicationCommands.Cut%2A>， <xref:System.Windows.Input.ApplicationCommands.Copy%2A>， <xref:System.Windows.Input.ApplicationCommands.Undo%2A>，和<xref:System.Windows.Input.ApplicationCommands.Redo%2A>命令。</xref:System.Windows.Input.ApplicationCommands.Redo%2A> </xref:System.Windows.Input.ApplicationCommands.Undo%2A> </xref:System.Windows.Input.ApplicationCommands.Copy%2A> </xref:System.Windows.Input.ApplicationCommands.Cut%2A> </xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Controls.TextBox>       如需有關命令和命令，請參閱[指揮概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static class ApplicationCommands
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.CancelPrint
  id: CancelPrint
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
  fullName: System.Windows.Input.ApplicationCommands.CancelPrint
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Cancel Print 的命令的值。"
  remarks: "這個命令表示取消列印工作的方法。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_CancelPrint&quot;></a># # XAML 屬性使用方式```   <object property=&quot;CancelPrint&quot;/>>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand CancelPrint { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> 未定義的動作。       </td></tr><tr><td> UI 文字       </td><td> 取消列印       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.CancelPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Close
  id: Close
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Close
  nameWithType: ApplicationCommands.Close
  fullName: System.Windows.Input.ApplicationCommands.Close
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Close 命令的值。"
  remarks: "這個命令表示關閉項目 （通常檔案） 的方法。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Close&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Close&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Close { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> 未定義的動作。       </td></tr><tr><td> UI 文字       </td><td> 關閉       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.ContextMenu
  id: ContextMenu
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
  fullName: System.Windows.Input.ApplicationCommands.ContextMenu
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Context Menu 命令的值。"
  remarks: "這個命令表示若要開啟操作功能表。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_ContextMenu&quot;></a># # XAML 屬性使用方式```   <object property=&quot;ContextMenu&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand ContextMenu { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Shift + F10 應用程式       </td></tr><tr><td> 滑鼠軌跡       </td><td> 滑鼠軌跡未附加至這個命令，但大部分的應用程式遵循的慣例來叫用操作功能表使用按右鍵手勢。       </td></tr><tr><td> UI 文字       </td><td> 操作功能表       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Copy
  id: Copy
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Copy
  nameWithType: ApplicationCommands.Copy
  fullName: System.Windows.Input.ApplicationCommands.Copy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Copy 命令的值。"
  remarks: "這個命令表示選取範圍複製到剪貼簿。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Copy&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Copy&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Copy { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + C Ctrl + Insert       </td></tr><tr><td> UI 文字       </td><td> 複製       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.CorrectionList
  id: CorrectionList
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
  fullName: System.Windows.Input.ApplicationCommands.CorrectionList
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Correction List 命令的值。"
  remarks: "這個命令，開啟更正清單表示。       更正清單會根據內容而不同。 例如，與[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]輸入更正清單識別重新轉換選項。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_CorrectionList&quot;></a># # XAML 屬性使用方式```   <object property=&quot;CorrectionList&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand CorrectionList { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> 未定義的動作。       </td></tr><tr><td> UI 文字       </td><td> 更正清單       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.CorrectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Cut
  id: Cut
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Cut
  nameWithType: ApplicationCommands.Cut
  fullName: System.Windows.Input.ApplicationCommands.Cut
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Cut 命令的值。"
  remarks: "這個命令表示剪下選取範圍至剪貼簿。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Cut&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Cut&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Cut { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + X Shift + Delete       </td></tr><tr><td> UI 文字       </td><td> 剪下       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Cut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Delete
  id: Delete
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Delete
  nameWithType: ApplicationCommands.Delete
  fullName: System.Windows.Input.ApplicationCommands.Delete
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Delete 命令的值。"
  remarks: "此命令會指出来刪除選取項目。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Delete&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Delete&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Delete { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Del       </td></tr><tr><td> UI 文字       </td><td> 刪除       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Find
  id: Find
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Find
  nameWithType: ApplicationCommands.Find
  fullName: System.Windows.Input.ApplicationCommands.Find
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Find 命令的值。"
  remarks: "這個命令表示若要開啟 專用的 尋找 對話方塊。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Find&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Find&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Find { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + F       </td></tr><tr><td> UI 文字       </td><td> 尋找       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Help
  id: Help
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Help
  nameWithType: ApplicationCommands.Help
  fullName: System.Windows.Input.ApplicationCommands.Help
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Help 命令的值。"
  remarks: "這個命令以開啟 [說明] 對話方塊 （視窗） 表示。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Help&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Help&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Help { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> F1       </td></tr><tr><td> UI 文字       </td><td> [說明]       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Help*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.New
  id: New
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: New
  nameWithType: ApplicationCommands.New
  fullName: System.Windows.Input.ApplicationCommands.New
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 New 命令的值。"
  remarks: "這個命令建立新的項目表示。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_New&quot;></a># # XAML 屬性使用方式```   <object property=&quot;New&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand New { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + N       </td></tr><tr><td> UI 文字       </td><td> 新增       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.New*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.NotACommand
  id: NotACommand
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
  fullName: System.Windows.Input.ApplicationCommands.NotACommand
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "表示命令通常會被忽略。"
  remarks: "此命令會被忽略，並不會處理輸入的事件導致。  這可用來關閉現有的控制項內建的輸入繫結。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_NotACommand&quot;></a># # XAML 屬性使用方式```   <object property=&quot;NotACommand&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand NotACommand { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。"
  overload: System.Windows.Input.ApplicationCommands.NotACommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Open
  id: Open
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Open
  nameWithType: ApplicationCommands.Open
  fullName: System.Windows.Input.ApplicationCommands.Open
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Open 命令的值。"
  remarks: "這個命令表示開啟項目 （通常檔案） 的方法。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Open&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Open&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Open { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + O       </td></tr><tr><td> UI 文字       </td><td> 開啟       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Paste
  id: Paste
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Paste
  nameWithType: ApplicationCommands.Paste
  fullName: System.Windows.Input.ApplicationCommands.Paste
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Paste 命令的值。"
  remarks: "這個命令表示選取範圍至剪貼簿貼上的方法。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Paste&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Paste&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Paste { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + V 鍵 Shift + Insert       </td></tr><tr><td> UI 文字       </td><td> 貼上       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Print
  id: Print
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Print
  nameWithType: ApplicationCommands.Print
  fullName: System.Windows.Input.ApplicationCommands.Print
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Print 命令的值。"
  remarks: "此命令會表示要列印目前的項目。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Print&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Print&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Print { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + P       </td></tr><tr><td> UI 文字       </td><td> 列印       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Print*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.PrintPreview
  id: PrintPreview
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
  fullName: System.Windows.Input.ApplicationCommands.PrintPreview
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Print Preview 命令的值。"
  remarks: "這個命令以開啟 預覽列印對話方塊表示。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_PrintPreview&quot;></a># # XAML 屬性使用方式```   <object property=&quot;PrintPreview&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand PrintPreview { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + f2 鍵       </td></tr><tr><td> UI 文字       </td><td> 預覽列印       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.PrintPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Properties
  id: Properties
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationCommands.Properties
  fullName: System.Windows.Input.ApplicationCommands.Properties
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Properties 命令的值。"
  remarks: "此命令會指出来開啟 [屬性] 對話方塊。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Properties&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Properties&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Properties { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> F4       </td></tr><tr><td> UI 文字       </td><td> 屬性       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Redo
  id: Redo
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Redo
  nameWithType: ApplicationCommands.Redo
  fullName: System.Windows.Input.ApplicationCommands.Redo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Redo 命令的值。"
  remarks: "這個命令表示取消復原上次的動作。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Redo&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Redo&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Redo { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + Y       </td></tr><tr><td> UI 文字       </td><td> 取消復原       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Redo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Replace
  id: Replace
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Replace
  nameWithType: ApplicationCommands.Replace
  fullName: System.Windows.Input.ApplicationCommands.Replace
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Replace 命令的值。"
  remarks: "這個命令表示若要開啟 [取代] 對話方塊。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Replace&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Replace&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Replace { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + H       </td></tr><tr><td> UI 文字       </td><td> 取代       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Save
  id: Save
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Save
  nameWithType: ApplicationCommands.Save
  fullName: System.Windows.Input.ApplicationCommands.Save
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Save 命令的值。"
  remarks: "此命令會指出来儲存目前的項目。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Save&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Save&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Save { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + S       </td></tr><tr><td> UI 文字       </td><td> 儲存       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.SaveAs
  id: SaveAs
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
  fullName: System.Windows.Input.ApplicationCommands.SaveAs
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Save As 命令的值。"
  remarks: "此命令會指出来開啟 [另存新檔] 對話方塊。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_SaveAs&quot;></a># # XAML 屬性使用方式```   <object property=&quot;SaveAs&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand SaveAs { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> 未定義的動作。       </td></tr><tr><td> UI 文字       </td><td> 另存新檔       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.SaveAs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.SelectAll
  id: SelectAll
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
  fullName: System.Windows.Input.ApplicationCommands.SelectAll
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示全選命令的值。"
  remarks: "這個命令表示選取所有項目。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_SelectAll&quot;></a># # XAML 屬性使用方式```   <object property=&quot;SelectAll&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand SelectAll { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl + A       </td></tr><tr><td> UI 文字       </td><td> 全選       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.SelectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Stop
  id: Stop
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Stop
  nameWithType: ApplicationCommands.Stop
  fullName: System.Windows.Input.ApplicationCommands.Stop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得表示 Stop 命令的值。"
  remarks: "這個命令表示停止處理。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Stop&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Stop&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Stop { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Esc       </td></tr><tr><td> UI 文字       </td><td> 停止       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ApplicationCommands.Undo
  id: Undo
  parent: System.Windows.Input.ApplicationCommands
  langs:
  - csharp
  name: Undo
  nameWithType: ApplicationCommands.Undo
  fullName: System.Windows.Input.ApplicationCommands.Undo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得代表 Undo 命令的值。"
  remarks: "這個命令表示復原上次的動作。       不一定會針對任何給定的物件; 此命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。      <a name=&quot;xamlAttributeUsage_Undo&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Undo&quot;/>   ```"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Undo { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "命令。       <table><thead><tr><th> 預設值       </th><th></th></tr></thead><tbody><tr><td> 按鍵動作       </td><td> Ctrl-Z       </td></tr><tr><td> UI 文字       </td><td> 復原       </td></tr></tbody></table>"
  overload: System.Windows.Input.ApplicationCommands.Undo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.ApplicationCommands.CancelPrint
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
  fullName: System.Windows.Input.ApplicationCommands.CancelPrint
- uid: System.Windows.Input.RoutedUICommand
  parent: System.Windows.Input
  isExternal: false
  name: RoutedUICommand
  nameWithType: RoutedUICommand
  fullName: System.Windows.Input.RoutedUICommand
- uid: System.Windows.Input.ApplicationCommands.Close
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Close
  nameWithType: ApplicationCommands.Close
  fullName: System.Windows.Input.ApplicationCommands.Close
- uid: System.Windows.Input.ApplicationCommands.ContextMenu
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
  fullName: System.Windows.Input.ApplicationCommands.ContextMenu
- uid: System.Windows.Input.ApplicationCommands.Copy
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Copy
  nameWithType: ApplicationCommands.Copy
  fullName: System.Windows.Input.ApplicationCommands.Copy
- uid: System.Windows.Input.ApplicationCommands.CorrectionList
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
  fullName: System.Windows.Input.ApplicationCommands.CorrectionList
- uid: System.Windows.Input.ApplicationCommands.Cut
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Cut
  nameWithType: ApplicationCommands.Cut
  fullName: System.Windows.Input.ApplicationCommands.Cut
- uid: System.Windows.Input.ApplicationCommands.Delete
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Delete
  nameWithType: ApplicationCommands.Delete
  fullName: System.Windows.Input.ApplicationCommands.Delete
- uid: System.Windows.Input.ApplicationCommands.Find
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Find
  nameWithType: ApplicationCommands.Find
  fullName: System.Windows.Input.ApplicationCommands.Find
- uid: System.Windows.Input.ApplicationCommands.Help
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Help
  nameWithType: ApplicationCommands.Help
  fullName: System.Windows.Input.ApplicationCommands.Help
- uid: System.Windows.Input.ApplicationCommands.New
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: New
  nameWithType: ApplicationCommands.New
  fullName: System.Windows.Input.ApplicationCommands.New
- uid: System.Windows.Input.ApplicationCommands.NotACommand
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
  fullName: System.Windows.Input.ApplicationCommands.NotACommand
- uid: System.Windows.Input.ApplicationCommands.Open
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Open
  nameWithType: ApplicationCommands.Open
  fullName: System.Windows.Input.ApplicationCommands.Open
- uid: System.Windows.Input.ApplicationCommands.Paste
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Paste
  nameWithType: ApplicationCommands.Paste
  fullName: System.Windows.Input.ApplicationCommands.Paste
- uid: System.Windows.Input.ApplicationCommands.Print
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Print
  nameWithType: ApplicationCommands.Print
  fullName: System.Windows.Input.ApplicationCommands.Print
- uid: System.Windows.Input.ApplicationCommands.PrintPreview
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
  fullName: System.Windows.Input.ApplicationCommands.PrintPreview
- uid: System.Windows.Input.ApplicationCommands.Properties
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Properties
  nameWithType: ApplicationCommands.Properties
  fullName: System.Windows.Input.ApplicationCommands.Properties
- uid: System.Windows.Input.ApplicationCommands.Redo
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Redo
  nameWithType: ApplicationCommands.Redo
  fullName: System.Windows.Input.ApplicationCommands.Redo
- uid: System.Windows.Input.ApplicationCommands.Replace
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Replace
  nameWithType: ApplicationCommands.Replace
  fullName: System.Windows.Input.ApplicationCommands.Replace
- uid: System.Windows.Input.ApplicationCommands.Save
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Save
  nameWithType: ApplicationCommands.Save
  fullName: System.Windows.Input.ApplicationCommands.Save
- uid: System.Windows.Input.ApplicationCommands.SaveAs
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
  fullName: System.Windows.Input.ApplicationCommands.SaveAs
- uid: System.Windows.Input.ApplicationCommands.SelectAll
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
  fullName: System.Windows.Input.ApplicationCommands.SelectAll
- uid: System.Windows.Input.ApplicationCommands.Stop
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Stop
  nameWithType: ApplicationCommands.Stop
  fullName: System.Windows.Input.ApplicationCommands.Stop
- uid: System.Windows.Input.ApplicationCommands.Undo
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Undo
  nameWithType: ApplicationCommands.Undo
  fullName: System.Windows.Input.ApplicationCommands.Undo
- uid: System.Windows.Input.ApplicationCommands.CancelPrint*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CancelPrint
  nameWithType: ApplicationCommands.CancelPrint
- uid: System.Windows.Input.ApplicationCommands.Close*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Close
  nameWithType: ApplicationCommands.Close
- uid: System.Windows.Input.ApplicationCommands.ContextMenu*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: ContextMenu
  nameWithType: ApplicationCommands.ContextMenu
- uid: System.Windows.Input.ApplicationCommands.Copy*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Copy
  nameWithType: ApplicationCommands.Copy
- uid: System.Windows.Input.ApplicationCommands.CorrectionList*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: CorrectionList
  nameWithType: ApplicationCommands.CorrectionList
- uid: System.Windows.Input.ApplicationCommands.Cut*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Cut
  nameWithType: ApplicationCommands.Cut
- uid: System.Windows.Input.ApplicationCommands.Delete*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Delete
  nameWithType: ApplicationCommands.Delete
- uid: System.Windows.Input.ApplicationCommands.Find*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Find
  nameWithType: ApplicationCommands.Find
- uid: System.Windows.Input.ApplicationCommands.Help*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Help
  nameWithType: ApplicationCommands.Help
- uid: System.Windows.Input.ApplicationCommands.New*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: New
  nameWithType: ApplicationCommands.New
- uid: System.Windows.Input.ApplicationCommands.NotACommand*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: NotACommand
  nameWithType: ApplicationCommands.NotACommand
- uid: System.Windows.Input.ApplicationCommands.Open*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Open
  nameWithType: ApplicationCommands.Open
- uid: System.Windows.Input.ApplicationCommands.Paste*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Paste
  nameWithType: ApplicationCommands.Paste
- uid: System.Windows.Input.ApplicationCommands.Print*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Print
  nameWithType: ApplicationCommands.Print
- uid: System.Windows.Input.ApplicationCommands.PrintPreview*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: PrintPreview
  nameWithType: ApplicationCommands.PrintPreview
- uid: System.Windows.Input.ApplicationCommands.Properties*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Properties
  nameWithType: ApplicationCommands.Properties
- uid: System.Windows.Input.ApplicationCommands.Redo*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Redo
  nameWithType: ApplicationCommands.Redo
- uid: System.Windows.Input.ApplicationCommands.Replace*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Replace
  nameWithType: ApplicationCommands.Replace
- uid: System.Windows.Input.ApplicationCommands.Save*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Save
  nameWithType: ApplicationCommands.Save
- uid: System.Windows.Input.ApplicationCommands.SaveAs*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SaveAs
  nameWithType: ApplicationCommands.SaveAs
- uid: System.Windows.Input.ApplicationCommands.SelectAll*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: SelectAll
  nameWithType: ApplicationCommands.SelectAll
- uid: System.Windows.Input.ApplicationCommands.Stop*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Stop
  nameWithType: ApplicationCommands.Stop
- uid: System.Windows.Input.ApplicationCommands.Undo*
  parent: System.Windows.Input.ApplicationCommands
  isExternal: false
  name: Undo
  nameWithType: ApplicationCommands.Undo
