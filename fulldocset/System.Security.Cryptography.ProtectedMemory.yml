### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ProtectedMemory
  id: ProtectedMemory
  children:
  - System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  - System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  langs:
  - csharp
  name: ProtectedMemory
  nameWithType: ProtectedMemory
  fullName: System.Security.Cryptography.ProtectedMemory
  type: Class
  summary: "提供方法來保護和解除記憶體。 這個類別無法被繼承。"
  remarks: "This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems. This is a service that is provided by the operating system and does not require additional libraries. It provides encryption for sensitive data in memory.  \n  \n The class consists of two wrappers for the unmanaged DPAPI, [Protect(Byte\\[\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True) and [Unprotect(Byte\\[\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True). These two methods can be used to encrypt and decrypt data in memory."
  example:
  - "The following example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/t-system.security.crypto_26_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/t-system.security.crypto_26_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/t-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public static class ProtectedMemory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  id: Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  langs:
  - csharp
  name: Protect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "保護指定的資料。"
  remarks: "這個方法可以用來保護在記憶體中的資料。 請注意，方法不會一份資料，但會加密位元組陣列中的位置。 `userData`參數必須是 16 個位元組長度或 16 個位元組的倍數。       可在 Windows XP 和更新版本的作業系統支援這個方法。"
  example:
  - "The following code example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/6df72062-ece3-4989-a6e7-_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/6df72062-ece3-4989-a6e7-_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/6df72062-ece3-4989-a6e7-_1.cpp)]"
  syntax:
    content: public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "位元組陣列，包含要保護的記憶體中的資料。 陣列必須是 16 位元組的倍數。"
    - id: scope
      type: System.Security.Cryptography.MemoryProtectionScope
      description: "其中一個列舉值，指定記憶體保護範圍。"
  overload: System.Security.Cryptography.ProtectedMemory.Protect*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>userData</code>必須是 16 個位元組的長度或 16 個位元組的倍數。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "作業系統不支援這個方法。 這個方法只能搭配 Windows 2000 或更新版本的作業系統。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  id: Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  langs:
  - csharp
  name: Unprotect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "取消保護使用保護的記憶體中的資料<xref:System.Security.Cryptography.ProtectedMemory.Protect*>方法。</xref:System.Security.Cryptography.ProtectedMemory.Protect*>"
  remarks: "這個方法可以用來解密已加密使用的記憶體中的資料<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>方法。</xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>       可在 Windows XP 和更新版本的作業系統支援這個方法。"
  example:
  - "The following example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/c4cde6bb-28e8-4233-bae1-_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/c4cde6bb-28e8-4233-bae1-_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/c4cde6bb-28e8-4233-bae1-_1.cpp)]"
  syntax:
    content: public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "記憶體中要解密的位元組陣列。"
    - id: scope
      type: System.Security.Cryptography.MemoryProtectionScope
      description: "其中一個列舉值，指定記憶體保護範圍。"
  overload: System.Security.Cryptography.ProtectedMemory.Unprotect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "作業系統不支援這個方法。 這個方法只能搭配 Windows 2000 或更新版本的作業系統。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptedData </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>encryptedData </code>是空的。       -或者-此呼叫未實作。       -或者-NTSTATUS 包含錯誤。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Protect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.MemoryProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: MemoryProtectionScope
  nameWithType: MemoryProtectionScope
  fullName: System.Security.Cryptography.MemoryProtectionScope
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Unprotect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
- uid: System.Security.Cryptography.ProtectedMemory.Protect*
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Protect
  nameWithType: ProtectedMemory.Protect
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect*
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Unprotect
  nameWithType: ProtectedMemory.Unprotect
