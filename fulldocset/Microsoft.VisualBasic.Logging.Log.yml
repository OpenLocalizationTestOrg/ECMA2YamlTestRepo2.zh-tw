### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.Log
  id: Log
  children:
  - Microsoft.VisualBasic.Logging.Log.#ctor
  - Microsoft.VisualBasic.Logging.Log.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  langs:
  - csharp
  name: Log
  nameWithType: Log
  fullName: Microsoft.VisualBasic.Logging.Log
  type: Class
  summary: "提供屬性和事件和例外狀況資訊寫入應用程式的記錄檔接聽程式的方法。"
  remarks: "`My.Application.Log`物件提供直接的進入點從中存取[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]的記錄服務。 `WriteEntry`和`WriteException`方法會將訊息寫入應用程式的記錄檔接聽程式。 接聽程式可以由應用程式的組態檔設定。 如需詳細資訊，請參閱[逐步解說︰ 變更位置 My.Application.Log 寫入資訊](~/add/includes/ajax-current-ext-md.md)和[使用應用程式記錄檔](~/add/includes/ajax-current-ext-md.md)。       `My.Application.Log`物件是僅供用戶端應用程式。 Web 應用程式，使用`My.Log`。 如需詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.AspLog>.</xref:Microsoft.VisualBasic.Logging.AspLog>       下表列出包含工作的範例`My.Application.Log`物件。      |若要 |請參閱 |  |--------|---------|  |事件資訊寫入至應用程式的記錄檔接聽程式 |[如何︰ 寫入記錄訊息](~/add/includes/ajax-current-ext-md.md)|  |例外狀況資訊寫入應用程式的記錄檔接聽程式 |[How to︰ 記錄例外狀況](~/add/includes/ajax-current-ext-md.md)|  |決定在何處`My.Application.Log`將資訊寫入 |[逐步解說︰ 判斷 My.Application.Log 寫入資訊的位置](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: public class Log
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: Log()
  nameWithType: Log.Log()
  fullName: Microsoft.VisualBasic.Logging.Log.Log()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.Log&quot;></xref>類別。"
  syntax:
    content: public Log ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.Log.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: Log(String)
  nameWithType: Log.Log(String)
  fullName: Microsoft.VisualBasic.Logging.Log.Log(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Logging.Log&quot;></xref>類別。"
  syntax:
    content: public Log (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> 提供給名稱<xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>屬性物件。</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>"
  overload: Microsoft.VisualBasic.Logging.Log.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  id: DefaultFileLogWriter
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: DefaultFileLogWriter
  nameWithType: Log.DefaultFileLogWriter
  fullName: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "取得檔案<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>構成物件<xref uid=&quot;langword_csharp_Log&quot; name=&quot;Log&quot; href=&quot;&quot;></xref>物件。"
  remarks: "您可以使用這個屬性來判斷目前的組態<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>物件。</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       在用戶端應用程式，`Log`物件是透過`My.Application.Log`物件。 在 Web 應用程式，`Log`物件是透過`My.Log`物件。"
  syntax:
    content: public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }
    return:
      type: Microsoft.VisualBasic.Logging.FileLogTraceListener
      description: "傳回<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>構成物件<xref uid=&quot;langword_csharp_Log&quot; name=&quot;Log&quot; href=&quot;&quot;></xref>物件。"
  overload: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: Log.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "建立新<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>物件，並將它加入至<xref:System.Diagnostics.TraceSource.Listeners*>集合。</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "這個方法會建立新<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>，將其名稱設定為`FileLog`，並將它設定為記錄訊息嚴重性層級<xref:System.Diagnostics.SourceLevels>和更新版本。</xref:System.Diagnostics.SourceLevels> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 新<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>物件接著會新增至<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>呼叫的方法，如果<xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>屬性尚未設定。</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> </xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> 可以在應用程式的組態檔中設定追蹤來源。"
  syntax:
    content: protected virtual void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.TraceSource
  id: TraceSource
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: TraceSource
  nameWithType: Log.TraceSource
  fullName: Microsoft.VisualBasic.Logging.Log.TraceSource
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "若要取得<xref href=&quot;System.Diagnostics.TraceSource&quot;></xref>構成物件<xref uid=&quot;langword_csharp_Log&quot; name=&quot;Log&quot; href=&quot;&quot;></xref>物件。"
  remarks: "您可以使用這個屬性來判斷目前的組態`Log`物件。       在用戶端應用程式，`Log`物件是透過`My.Application.Log`物件。 在 Web 應用程式，`Log`物件是透過`My.Log`物件。       這是進階的成員;它不會顯示在 IntelliSense 中除非您選取**所有** 索引標籤。       下表列出的工作，包含範例`TraceSource`屬性。      |若要 |請參閱 |  |--------|---------|  |取得每個資訊`Log`物件的記錄檔接聽程式。 |[疑難排解︰ 記錄接聽程式](~/add/includes/ajax-current-ext-md.md)|     # # 可用性專案類型 |專案類型 |可用 |  |------------------|---------------|  |Windows 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |**Yes**|"
  syntax:
    content: public System.Diagnostics.TraceSource TraceSource { get; }
    return:
      type: System.Diagnostics.TraceSource
      description: "傳回<xref href=&quot;System.Diagnostics.TraceSource&quot;></xref>構成物件<xref uid=&quot;langword_csharp_Log&quot; name=&quot;Log&quot; href=&quot;&quot;></xref>物件。"
  overload: Microsoft.VisualBasic.Logging.Log.TraceSource*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  id: WriteEntry(System.String)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteEntry(String)
  nameWithType: Log.WriteEntry(String)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "您可以將訊息寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteEntry` method writes a message to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteEntry` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications."
  syntax:
    content: public void WriteEntry (string message);
    parameters:
    - id: message
      type: System.String
      description: "必要。 要記錄的訊息。 如果`message`是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，會使用空的字串。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteEntry*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  id: WriteEntry(System.String,System.Diagnostics.TraceEventType)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteEntry(String,TraceEventType)
  nameWithType: Log.WriteEntry(String,TraceEventType)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String,TraceEventType)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "您可以將訊息寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteEntry` method writes a message to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteEntry` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications."
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);
    parameters:
    - id: message
      type: System.String
      description: "必要。 要記錄的訊息。 如果`message`是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，會使用空的字串。"
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "訊息類型。 根據預設， <xref uid=&quot;langword_csharp_TraceEventType.Information&quot; name=&quot;TraceEventType.Information&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteEntry*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "訊息類型不是其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteEntry(String,TraceEventType,Int32)
  nameWithType: Log.WriteEntry(String,TraceEventType,Int32)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String,TraceEventType,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "您可以將訊息寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteEntry` method writes a message to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteEntry` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications."
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);
    parameters:
    - id: message
      type: System.String
      description: "必要。 要記錄的訊息。 如果`message`是<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>，會使用空的字串。"
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "訊息類型。 根據預設， <xref uid=&quot;langword_csharp_TraceEventType.Information&quot; name=&quot;TraceEventType.Information&quot; href=&quot;&quot;> </xref>。"
    - id: id
      type: System.Int32
      description: "訊息識別項，通常用來相互關聯。 根據預設，與`entryType`資料表中所述。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteEntry*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "訊息類型不是其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  id: WriteException(System.Exception)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteException(Exception)
  nameWithType: Log.WriteException(Exception)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "例外狀況資訊寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteException` method writes the information contained in an exception to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteException` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write exception information to the application's event log listeners.|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information.|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteException` method to log exceptions. Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception. For more information, see [How to: Log Exceptions](../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#10](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#10)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications."
  syntax:
    content: public void WriteException (Exception ex);
    parameters:
    - id: ex
      type: System.Exception
      description: "必要。 要記錄的例外狀況。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteException*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ex</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  id: WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteException(Exception,TraceEventType,String)
  nameWithType: Log.WriteException(Exception,TraceEventType,String)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception,TraceEventType,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "例外狀況資訊寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteException` method writes the information contained in an exception to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteException` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write exception information to the application's event log listeners.|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information.|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteException` method to log exceptions. Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception. For more information, see [How to: Log Exceptions](../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#10](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#10)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications."
  syntax:
    content: public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);
    parameters:
    - id: ex
      type: System.Exception
      description: "必要。 要記錄的例外狀況。"
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "訊息類型。 根據預設， <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>。"
    - id: additionalInfo
      type: System.String
      description: "要附加至訊息的字串。 根據預設，這會是空字串。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteException*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ex</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "訊息類型不是其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  id: WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  parent: Microsoft.VisualBasic.Logging.Log
  langs:
  - csharp
  name: WriteException(Exception,TraceEventType,String,Int32)
  nameWithType: Log.WriteException(Exception,TraceEventType,String,Int32)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception,TraceEventType,String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "例外狀況資訊寫入應用程式的記錄檔接聽程式。"
  remarks: "The `WriteException` method writes the information contained in an exception to the application's event log listeners.  \n  \n In client applications, the `Log` object is available through the `My.Application.Log` object. In Web applications, the `Log` object is available through the `My.Log` object.  \n  \n To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md). You can change default log listeners. For more information, see [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \n  \n For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.  \n  \n|`severity`|Default `id`|  \n|----------------|------------------|  \n|<xref:System.Diagnostics.TraceEventType>|0|  \n|<xref:System.Diagnostics.TraceEventType>|1|  \n|<xref:System.Diagnostics.TraceEventType>|2|  \n|<xref:System.Diagnostics.TraceEventType>|3|  \n|<xref:System.Diagnostics.TraceEventType>|4|  \n|<xref:System.Diagnostics.TraceEventType>|5|  \n|<xref:System.Diagnostics.TraceEventType>|6|  \n|<xref:System.Diagnostics.TraceEventType>|7|  \n|<xref:System.Diagnostics.TraceEventType>|8|  \n|<xref:System.Diagnostics.TraceEventType>|9|  \n  \n The following table lists examples of tasks involving the `WriteException` method.  \n  \n|To|See|  \n|--------|---------|  \n|Write exception information to the application's event log listeners.|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|  \n|Determine where `Log` writes information.|[Walkthrough: Determining Where My.Application.Log Writes Information](../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20\\(Visual%20Basic\\).md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteException` method to log exceptions. Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception. For more information, see [How to: Log Exceptions](../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#10](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#10)]  \n  \n This code example can run only within a client application. Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications."
  syntax:
    content: public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);
    parameters:
    - id: ex
      type: System.Exception
      description: "必要。 要記錄的例外狀況。"
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "訊息類型。 根據預設， <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>。"
    - id: additionalInfo
      type: System.String
      description: "要附加至訊息的字串。 根據預設，這會是空字串。"
    - id: id
      type: System.Int32
      description: "訊息識別項，通常用來相互關聯。 根據預設，與`entryType`< 備註 > 一節中的表格中所述。"
  overload: Microsoft.VisualBasic.Logging.Log.WriteException*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ex</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "訊息類型不是其中一個<xref href=&quot;System.Diagnostics.TraceEventType&quot;></xref>列舉值。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分信任的程式碼呼叫方法時，但寫入事件記錄檔接聽程式需要完全信任。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.Logging.Log.#ctor
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Log()
  nameWithType: Log.Log()
  fullName: Microsoft.VisualBasic.Logging.Log.Log()
- uid: Microsoft.VisualBasic.Logging.Log.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Log(String)
  nameWithType: Log.Log(String)
  fullName: Microsoft.VisualBasic.Logging.Log.Log(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: DefaultFileLogWriter
  nameWithType: Log.DefaultFileLogWriter
  fullName: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: Log.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.Log.TraceSource
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: TraceSource
  nameWithType: Log.TraceSource
  fullName: Microsoft.VisualBasic.Logging.Log.TraceSource
- uid: System.Diagnostics.TraceSource
  parent: System.Diagnostics
  isExternal: false
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteEntry(String)
  nameWithType: Log.WriteEntry(String)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String)
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteEntry(String,TraceEventType)
  nameWithType: Log.WriteEntry(String,TraceEventType)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String,TraceEventType)
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteEntry(String,TraceEventType,Int32)
  nameWithType: Log.WriteEntry(String,TraceEventType,Int32)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteEntry(String,TraceEventType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteException(Exception)
  nameWithType: Log.WriteException(Exception)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteException(Exception,TraceEventType,String)
  nameWithType: Log.WriteException(Exception,TraceEventType,String)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception,TraceEventType,String)
- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteException(Exception,TraceEventType,String,Int32)
  nameWithType: Log.WriteException(Exception,TraceEventType,String,Int32)
  fullName: Microsoft.VisualBasic.Logging.Log.WriteException(Exception,TraceEventType,String,Int32)
- uid: Microsoft.VisualBasic.Logging.Log.#ctor*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Log
  nameWithType: Log.Log
- uid: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: DefaultFileLogWriter
  nameWithType: Log.DefaultFileLogWriter
- uid: Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: Log.InitializeWithDefaultsSinceNoConfigExists
- uid: Microsoft.VisualBasic.Logging.Log.TraceSource*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: TraceSource
  nameWithType: Log.TraceSource
- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteEntry
  nameWithType: Log.WriteEntry
- uid: Microsoft.VisualBasic.Logging.Log.WriteException*
  parent: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: WriteException
  nameWithType: Log.WriteException
