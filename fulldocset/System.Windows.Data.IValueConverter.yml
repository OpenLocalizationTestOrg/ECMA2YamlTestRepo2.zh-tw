### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.IValueConverter
  id: IValueConverter
  children:
  - System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
  type: Interface
  summary: "提供將自訂邏輯套用至繫結的方法。"
  remarks: "如果您想要與繫結產生關聯的值轉換器，建立實作 IValueConverter 介面的類別，然後實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> 轉換器可以從一種類型變更資料、 轉譯資料根據文化特性資訊，或修改展示檔的其他層面。 一些典型的轉換器案例的範例，請參閱 「 資料轉換 」，在[資料繫結概觀](~/add/includes/ajax-current-ext-md.md)。       值轉換器會感知文化特性。 同時<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法有`culture`參數，指出文化特性資訊。</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> 如果轉換的文化特性資訊無關，您可以在您自訂轉換子中忽略該參數。       <xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法也會有參數，呼叫`parameter`，讓您可以使用不同的參數使用相同的執行個體的轉換器。</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> 例如，您可以撰寫會產生不同格式的資料是根據您使用的輸入參數的格式轉換子。 您可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>的<xref:System.Windows.Data.Binding>類別傳遞參數做為引數至<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ConverterParameter%2A>"
  syntax:
    content: public interface IValueConverter
  implements: []
  platform:
  - net462
- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: IValueConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Data.IValueConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "轉換值。"
  remarks: "資料繫結引擎在傳播到繫結目標的繫結來源的值時呼叫這個方法。       資料繫結引擎不會攔截例外狀況擲回由使用者提供的轉換器。 轉換方法，所擲回任何例外狀況或方法呼叫轉換方法，所擲回任何無法攔截例外狀況會視為執行階段錯誤。 藉由傳回<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>處理預期的問題       傳回值為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>表示轉換器會產生任何值，並繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話的預設值改為或。</xref:System.Windows.Data.BindingBase.FallbackValue%2A> </xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>       傳回值為<xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName>表示繫結不會不傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。</xref:System.Windows.Data.BindingBase.FallbackValue%2A> </xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName>"
  syntax:
    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "繫結來源所產生的值。"
    - id: targetType
      type: System.Type
      description: "繫結目標屬性的型別。"
    - id: parameter
      type: System.Object
      description: "要使用的轉換子參數。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要轉換程式中使用的文化特性。"
    return:
      type: System.Object
      description: "轉換的值。 如果此方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，會使用有效的 null 值。"
  overload: System.Windows.Data.IValueConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: IValueConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Data.IValueConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "轉換值。"
  remarks: "資料繫結引擎在傳播到繫結來源對繫結目標的值時呼叫這個方法。       這個方法的實作必須是函數的反函數<xref:System.Windows.Data.IValueConverter.Convert%2A>方法。</xref:System.Windows.Data.IValueConverter.Convert%2A>       資料繫結引擎不會攔截例外狀況擲回由使用者提供的轉換器。 ConvertBack 方法中，所擲回任何例外狀況或方法的 ConvertBack 方法呼叫時，所擲回任何無法攔截例外狀況會視為執行階段錯誤。 處理預期的問題，藉由傳回<xref:System.Windows.DependencyProperty>。<xref:System.Windows.DependencyProperty.UnsetValue>.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>       傳回值為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>表示轉換器會產生任何值，並繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話的預設值改為或。</xref:System.Windows.Data.BindingBase.FallbackValue%2A> </xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>       傳回值為<xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName>表示繫結不會不傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。</xref:System.Windows.Data.BindingBase.FallbackValue%2A> </xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName>"
  syntax:
    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "繫結目標所產生的值。"
    - id: targetType
      type: System.Type
      description: "要轉換的類型。"
    - id: parameter
      type: System.Object
      description: "要使用的轉換子參數。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "要轉換程式中使用的文化特性。"
    return:
      type: System.Object
      description: "轉換的值。 如果此方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，會使用有效的 null 值。"
  overload: System.Windows.Data.IValueConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: IValueConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Data.IValueConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: IValueConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Data.IValueConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Windows.Data.IValueConverter.Convert*
  parent: System.Windows.Data.IValueConverter
  isExternal: false
  name: Convert
  nameWithType: IValueConverter.Convert
- uid: System.Windows.Data.IValueConverter.ConvertBack*
  parent: System.Windows.Data.IValueConverter
  isExternal: false
  name: ConvertBack
  nameWithType: IValueConverter.ConvertBack
