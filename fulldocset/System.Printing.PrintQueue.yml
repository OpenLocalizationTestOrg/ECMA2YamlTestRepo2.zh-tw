### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueue
  id: PrintQueue
  children:
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.AddJob
  - System.Printing.PrintQueue.AddJob(System.String)
  - System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AveragePagesPerMinute
  - System.Printing.PrintQueue.ClientPrintSchemaVersion
  - System.Printing.PrintQueue.Comment
  - System.Printing.PrintQueue.Commit
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CurrentJobSettings
  - System.Printing.PrintQueue.DefaultPrintTicket
  - System.Printing.PrintQueue.DefaultPriority
  - System.Printing.PrintQueue.Description
  - System.Printing.PrintQueue.FullName
  - System.Printing.PrintQueue.GetJob(System.Int32)
  - System.Printing.PrintQueue.GetPrintCapabilities
  - System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintJobInfoCollection
  - System.Printing.PrintQueue.HasPaperProblem
  - System.Printing.PrintQueue.HasToner
  - System.Printing.PrintQueue.HostingPrintServer
  - System.Printing.PrintQueue.InPartialTrust
  - System.Printing.PrintQueue.InternalDispose(System.Boolean)
  - System.Printing.PrintQueue.IsBidiEnabled
  - System.Printing.PrintQueue.IsBusy
  - System.Printing.PrintQueue.IsDevQueryEnabled
  - System.Printing.PrintQueue.IsDirect
  - System.Printing.PrintQueue.IsDoorOpened
  - System.Printing.PrintQueue.IsHidden
  - System.Printing.PrintQueue.IsInError
  - System.Printing.PrintQueue.IsInitializing
  - System.Printing.PrintQueue.IsIOActive
  - System.Printing.PrintQueue.IsManualFeedRequired
  - System.Printing.PrintQueue.IsNotAvailable
  - System.Printing.PrintQueue.IsOffline
  - System.Printing.PrintQueue.IsOutOfMemory
  - System.Printing.PrintQueue.IsOutOfPaper
  - System.Printing.PrintQueue.IsOutputBinFull
  - System.Printing.PrintQueue.IsPaperJammed
  - System.Printing.PrintQueue.IsPaused
  - System.Printing.PrintQueue.IsPendingDeletion
  - System.Printing.PrintQueue.IsPowerSaveOn
  - System.Printing.PrintQueue.IsPrinting
  - System.Printing.PrintQueue.IsProcessing
  - System.Printing.PrintQueue.IsPublished
  - System.Printing.PrintQueue.IsQueued
  - System.Printing.PrintQueue.IsRawOnlyEnabled
  - System.Printing.PrintQueue.IsServerUnknown
  - System.Printing.PrintQueue.IsShared
  - System.Printing.PrintQueue.IsTonerLow
  - System.Printing.PrintQueue.IsWaiting
  - System.Printing.PrintQueue.IsWarmingUp
  - System.Printing.PrintQueue.IsXpsDevice
  - System.Printing.PrintQueue.KeepPrintedJobs
  - System.Printing.PrintQueue.Location
  - System.Printing.PrintQueue.MaxPrintSchemaVersion
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  - System.Printing.PrintQueue.Name
  - System.Printing.PrintQueue.NeedUserIntervention
  - System.Printing.PrintQueue.NumberOfJobs
  - System.Printing.PrintQueue.PagePunt
  - System.Printing.PrintQueue.Pause
  - System.Printing.PrintQueue.PrintingIsCancelled
  - System.Printing.PrintQueue.Priority
  - System.Printing.PrintQueue.Purge
  - System.Printing.PrintQueue.QueueAttributes
  - System.Printing.PrintQueue.QueueDriver
  - System.Printing.PrintQueue.QueuePort
  - System.Printing.PrintQueue.QueuePrintProcessor
  - System.Printing.PrintQueue.QueueStatus
  - System.Printing.PrintQueue.Refresh
  - System.Printing.PrintQueue.Resume
  - System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  - System.Printing.PrintQueue.SeparatorFile
  - System.Printing.PrintQueue.ShareName
  - System.Printing.PrintQueue.StartTimeOfDay
  - System.Printing.PrintQueue.UntilTimeOfDay
  - System.Printing.PrintQueue.UserPrintTicket
  langs:
  - csharp
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
  type: Class
  summary: "管理印表機和列印工作。"
  remarks: "PrintQueue 物件的某些屬性表示執行的電腦，列印佇列公用程式的特性，但其他項目代表功能或在印表機本身的狀態。 例如，<xref:System.Printing.PrintQueue.NumberOfJobs%2A>是列印佇列中，特性，但<xref:System.Printing.PrintQueue.Location%2A>是印表機的屬性。</xref:System.Printing.PrintQueue.Location%2A> </xref:System.Printing.PrintQueue.NumberOfJobs%2A> 許多印表機，例如是否需要使用者注意屬性需要傳遞，透過的方式<xref:System.Printing.PrintQueue.Refresh%2A>方法，從印表機本身 PrintQueue 物件。</xref:System.Printing.PrintQueue.Refresh%2A> 這應該對應的屬性之前 (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) 讀取您的程式。</xref:System.Printing.PrintQueue.NeedUserIntervention%2A> 同樣地，當您的程式變更 PrintQueue 物件的一或多個屬性的值，變更必須寫入到實際的列印佇列公用程式的電腦上。 這樣做與<xref:System.Printing.PrintQueue.Commit%2A>方法。</xref:System.Printing.PrintQueue.Commit%2A>      > [!CAUTION] > 類別內<xref:System.Printing>命名空間不支援為 Windows 服務或 ASP.NET 應用程式或服務中使用。</xref:System.Printing> 嘗試使用這些類別時，這些應用程式類型的其中一個內可能會產生無法預期的問題，例如會受到影響服務的效能和執行階段例外狀況。       如果您想要從 Windows Form 應用程式列印，請參閱<xref:System.Drawing.Printing>命名空間。</xref:System.Drawing.Printing>"
  syntax:
    content: 'public class PrintQueue : System.Printing.PrintSystemObject'
  inheritance:
  - System.Object
  - System.Printing.PrintSystemObject
  implements: []
  inheritedMembers:
  - System.Printing.PrintSystemObject.BaseAttributeNames
  - System.Printing.PrintSystemObject.Dispose
  - System.Printing.PrintSystemObject.Dispose(System.Boolean)
  - System.Printing.PrintSystemObject.Initialize
  - System.Printing.PrintSystemObject.IsDisposed
  - System.Printing.PrintSystemObject.Parent
  - System.Printing.PrintSystemObject.PropertiesCollection
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  id: '#ctor(System.Printing.PrintServer,System.String)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;></xref>和佇列名稱。"
  remarks: "<xref:System.Printing.PrintQueue>建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess>存取。</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控件列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>、 佇列名稱，並列印結構描述版本。"
  remarks: "<xref:System.Printing.PrintQueue>建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess>存取。</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       [列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本是&quot;1&quot;。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: printSchemaVersion
      type: System.Int32
      description: "若要使用的列印結構描述版本。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>，佇列名稱，以及陣列的<xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref>值以初始化。"
  remarks: "<xref:System.Printing.PrintQueue>建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess>存取。</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       建構函式使用`propertyFilter`參數可改善效能。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "陣列<xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref>值，指定要初始化的屬性值。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>、 佇列名稱，且想要存取。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "其中一個<xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>值，指定您的程式需要的列印佇列的存取類型。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>是值，可以只套用到<xref href=&quot;System.Printing.PrintServer&quot;></xref>物件，不<xref href=&quot;System.Printing.PrintQueue&quot;></xref>物件。 例如， <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>，佇列名稱，以及初始化的屬性名稱的陣列。"
  remarks: "<xref:System.Printing.PrintQueue>建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess>存取。</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       建構函式使用`propertyFilter`參數可改善效能。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: propertyFilter
      type: System.String[]
      description: "要初始化的屬性名稱的陣列。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>、 佇列名稱、 列印結構描述版本，以及所需的存取。"
  remarks: "[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本是&quot;1&quot;。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: printSchemaVersion
      type: System.Int32
      description: "若要使用的列印結構描述版本。"
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "其中一個<xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>值，指定您的程式需要的列印佇列的存取類型。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>是值，可以只套用到<xref href=&quot;System.Printing.PrintServer&quot;></xref>物件，不<xref href=&quot;System.Printing.PrintQueue&quot;></xref>物件。 例如， <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別具有指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>，佇列名稱、 的陣列<xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref>初始化，且可存取所需的值。"
  remarks: "建構函式使用`propertyFilter`參數可改善效能。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "陣列<xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref>值，指定要初始化的屬性。"
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "其中一個<xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>值，指定您的程式需要的列印佇列的存取類型。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>是值，可以只套用到<xref href=&quot;System.Printing.PrintServer&quot;></xref>物件，不<xref href=&quot;System.Printing.PrintQueue&quot;></xref>物件。 例如， <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "初始化的新執行個體<xref href=&quot;System.Printing.PrintQueue&quot;></xref>類別使用指定<xref href=&quot;System.Printing.PrintServer&quot;> </xref>、 佇列名稱、 內容篩選器，且想要存取。"
  remarks: "建構函式使用`propertyFilter`參數可改善效能。"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "主控列印佇列列印伺服器。"
    - id: printQueueName
      type: System.String
      description: "列印佇列的名稱。"
    - id: propertyFilter
      type: System.String[]
      description: "要初始化的屬性名稱的陣列。"
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "其中一個<xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>值，指定您的程式需要的列印佇列的存取類型。"
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>是值，可以只套用到<xref href=&quot;System.Printing.PrintServer&quot;></xref>物件，不<xref href=&quot;System.Printing.PrintQueue&quot;></xref>物件。 例如， <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob
  id: AddJob
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "插入新 （以一般方式命名） 的列印工作，其內容是<xref:System.Byte>陣列、 排入佇列。</xref:System.Byte>"
  remarks: "使用這個方法來寫入多工緩衝處理檔案，不會自動包含的裝置特定資訊，[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]多工緩衝處理器。 當然，您需要知道多工緩衝處理檔案是否[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]或[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]。 如果您想要使用<xref:System.IO.Stream>[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]，您可以使用<xref:System.Printing.PrintQueueStream>類別，而不是此方法。</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       在呼叫 AddJob 方法之後，您必須撰寫<xref:System.Byte>陣列<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>屬性<xref:System.Printing.PrintSystemJobInfo>AddJob 所傳回，或沒有列印工作時。</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> 這個陣列會是什麼列印如果印表機可運作，且未暫停。      > [!CAUTION] > 如果<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>不會關閉與<xref:System.IO.Stream.Close%2A>結束的執行緒中呼叫 AddJob 之前, 則<xref:System.InvalidOperationException>該執行緒結束，因為多工緩衝處理器執行緒無法取得控制項上時，會擲回<xref:System.IO.Stream>物件。</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       列印佇列中[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]，此作業具有 「 列印系統文件 」 的名稱。 若要為工作指定不同的名稱，使用<xref:System.Printing.PrintQueue.AddJob%28System.String%29>多載。</xref:System.Printing.PrintQueue.AddJob%28System.String%29>       其他的方式來列印[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]包含<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>方法，可以使用或不開啟對話方塊，並有許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>的<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter>和<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A></xref:System.Windows.Xps.XpsDocumentWriter.Write%2A></xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to send a <xref:System.Byte> array to a print queue. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addunnamedjob)]\n [!code-cs[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addunnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob ();
    parameters: []
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> ，表示列印工作，並且它的狀態。"
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String)
  id: AddJob(System.String)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "插入新的列印工作，其內容是<xref:System.Byte>陣列、 排入佇列。</xref:System.Byte>"
  remarks: "使用這個方法來寫入多工緩衝處理檔案，不會自動包含的裝置特定資訊，[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]多工緩衝處理器。 當然，您需要知道多工緩衝處理檔案是否[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]或[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]。 如果您想要使用<xref:System.IO.Stream>[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]，您可以使用<xref:System.Printing.PrintQueueStream>類別，而不是此方法。</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       之後<xref:System.Printing.PrintQueue.AddJob%2A>已呼叫方法，您必須撰寫<xref:System.Byte>陣列<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>屬性<xref:System.Printing.PrintSystemJobInfo>AddJob 所傳回，或沒有列印工作時。</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> </xref:System.Printing.PrintQueue.AddJob%2A> 這個陣列會是什麼列印如果印表機可運作，且未暫停。      > [!CAUTION] > 如果<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>不會關閉與<xref:System.IO.Stream.Close%2A>所在的執行緒結束之前<xref:System.Printing.PrintQueue.AddJob%2A>呼叫時，則<xref:System.InvalidOperationException>該執行緒結束，因為多工緩衝處理器執行緒無法取得控制項上時，會擲回<xref:System.IO.Stream>物件。</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.Printing.PrintQueue.AddJob%2A> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       其他的方式來列印[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]包含<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>方法，可以使用或不開啟對話方塊，並有許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>的<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter>和<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A></xref:System.Windows.Xps.XpsDocumentWriter.Write%2A></xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to read a file into a <xref:System.Byte> array and send the array to a print queue. This code assumes that there is a file called test.txt in the root of the C: drive. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addnamedjob)]\n [!code-cs[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName);
    parameters:
    - id: jobName
      type: System.String
      description: "列印工作的名稱。"
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> ，表示列印工作，並且它的狀態。"
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  id: AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "插入新的列印工作，如[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]至的佇列中的文件，並讓它的設定與指定的名稱。"
  remarks: "如需詳細資訊，請參閱<xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%29>"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "路徑和正在列印的文件名稱。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "列印工作的設定。"
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> ，表示列印工作，並且它的狀態。"
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  id: AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "插入新的列印工作，如[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]文件到佇列，讓它指定的名稱，並指定是否應驗證。"
  remarks: "如果`fastCopy`是`true`，則必須是印表機[列印概觀](~/add/includes/ajax-current-ext-md.md)。 如果不是，AddJob 方法會擲回例外狀況。       如果`fastCopy`是`false`，則不需要使用 XPSDrv 印表機。 [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]印表機頁面描述語言，例如 PCL 或 Postscript 轉換正在加入佇列的檔案。 不過，這種列印會呼叫[!INCLUDE[TLA#tla_com](~/add/includes/ajax-current-ext-md.md)]。 呼叫[!INCLUDE[TLA2#tla_com](~/add/includes/tla2sharptla-com-md.md)]要求呼叫的執行緒具有單一執行緒 apartment (<xref:System.Threading.ApartmentState>) 而不是多執行緒 apartment (<xref:System.Threading.ApartmentState>)，這是在預設[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]2.0 和更新版本。</xref:System.Threading.ApartmentState> </xref:System.Threading.ApartmentState> (如需執行緒和 apartment 狀態的詳細資訊，請參閱[Managed 與 Unmanaged 執行緒處理](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5)，和<xref:System.Threading.ApartmentState>。)</xref:System.Threading.ApartmentState>有兩種方式執行這項處理:-最簡單方式是將加入<xref:System.STAThreadAttribute>(也就是 「`[System.STAThreadAttribute()]`」) 正上方的應用程式的第一行`Main`方法 (通常 」`static void Main(string[] args)`」)。</xref:System.STAThreadAttribute>      -如果您需要您`Main`，<xref:System.Threading.ApartmentState>您可以儲存在個別執行緒的 apartment 狀態設定為<xref:System.Threading.ApartmentState>與<xref:System.Threading.Thread.SetApartmentState%2A>.</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.Threading.ApartmentState> AddJob 呼叫</xref:System.Threading.ApartmentState>執行緒的 apartment 狀態 下列範例會示範這個第二項技術。      > [!NOTE] > 無法套用<xref:System.STAThreadAttribute>以外的任何方法`Main`而且不能使用<xref:System.Threading.Thread.SetApartmentState%2A>如`Main`執行緒。</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.STAThreadAttribute>       其他的方式來列印[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]包含<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>方法，可以使用或不開啟對話方塊，並有許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>的<xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter>和<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A></xref:System.Windows.Xps.XpsDocumentWriter.Write%2A></xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to batch print all the [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] files in a directory.  \n  \n [!code-cs[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/csharp/BatchPrintXPSFiles/Program.cs#batchprintxpsfiles)]\n [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/visualbasic/batchprintxpsfiles/program.vb#batchprintxpsfiles)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);
    parameters:
    - id: jobName
      type: System.String
      description: "列印工作的名稱。"
    - id: documentPath
      type: System.String
      description: "路徑和正在列印的文件名稱。"
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>多工緩衝處理快速進度 頁面的回應而不會驗證檔案有效[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> ，表示列印工作，並且它的狀態。"
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  id: AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "插入新的列印工作，如[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]文件到佇列，因而提供給它的指定的名稱和設定，並指定是否應驗證。"
  remarks: "如需詳細資訊，請參閱<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "路徑和正在列印的文件名稱。"
    - id: documentPath
      type: System.String
      description: "路徑和正在列印的文件名稱。"
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>多工緩衝處理快速進度 頁面的回應而不會驗證檔案有效[!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "列印工作的設定。"
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> ，表示列印工作，並且它的狀態。"
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  id: AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得以每分鐘列印頁數為單位的印表機的速度。"
  syntax:
    content: public virtual int AveragePagesPerMinute { get; }
    return:
      type: System.Int32
      description: "每分鐘的印表機列印的平均頁數。"
  overload: System.Printing.PrintQueue.AveragePagesPerMinute*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  id: ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得版本[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)。"
  remarks: "[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本為 1。"
  syntax:
    content: public int ClientPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "版本[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)使用中。"
  overload: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Comment
  id: Comment
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定印表機的相關註解。"
  remarks: "在 Windows 印表機清單中，Windows 通用列印對話方塊上的使用者看見註解。 它可以提供資訊未包含在印表機的名稱、 模型或位置的屬性，也是顯示在相同的位置。例如，&quot;保留供薪資部門下午 3 和 4 pm 之間。 」 (<xref:System.Printing.PrintQueue.Description%2A>屬性可讓您儲存使用者無法檢視，除非您的應用程式會顯示的資訊。)</xref:System.Printing.PrintQueue.Description%2A>"
  syntax:
    content: public virtual string Comment { get; set; }
    return:
      type: System.String
      description: "印表機的相關註解。"
  overload: System.Printing.PrintQueue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Commit
  id: Commit
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "寫入的目前屬性<xref href=&quot;System.Printing.PrintQueue&quot;></xref>實際列印佇列列印伺服器上的物件。"
  remarks: "您的程式所產生的屬性變更<xref:System.Printing.PrintQueue>物件沒有實際生效之前執行 Commit 方法。</xref:System.Printing.PrintQueue>       方法需要<xref:System.Printing.PrintQueue>，建立物件<xref:System.Printing.PrintSystemDesiredAccess>權限。</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Printing.PrintQueue.Commit*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "部分屬性無法認可。"
  - type: System.Printing.PrintCommitAttributesException
    commentId: T:System.Printing.PrintCommitAttributesException
    description: "Some of the properties could not be committed.  \n  \n \\- or -  \n  \n The <xref href=\"System.Printing.PrintQueue\"></xref> object was not created with sufficient rights."
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>物件、 開啟 Windows 通用列印對話方塊，並傳回<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，表示可做為影像的區域和維度的媒體資訊的參數。"
  remarks: "許多印表機需要沾周圍的空間邊緣的每個頁面至紙張英吋的四分之一並將它移到印表機。 否則碳粉可能會破壞紙張流程機制。 可列印的區域是 「 可做為影像區域 」。       型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</xref:System.Printing.PrintDocumentImageableArea> 因此，變數`documentImageableArea`必須宣告並指派給`null`，則只會傳遞給方法。 這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</xref:System.Windows.Controls.PrintDialog> 使用者在選取印表機、 紙張大小和方向，並關閉對話方塊之後`documentImageableArea`指向實際的物件和其屬性會初始化。       如果使用者取消，或關閉對話方塊，傳回值是`null`。 因此，傳回的值必須檢查`null`您的應用程式。"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "包含裝置可以在其上列印的頁面區域的維度物件的參考。 因為其資料類型沒有公用建構函式，這個參數未初始化便傳遞。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 資料寫入資料流。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 (參數<code> documentImageableArea </code>是<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic] 項目傳回初始化方法，讓它代表第二個參數。)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  id: CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>物件，並將它與指定的列印佇列產生關聯。"
  remarks: ''
  example:
  - "The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.  \n  \n [!code-cs[XpsPrint#PrintQueueSnip](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#printqueuesnip)]\n [!code-vb[XpsPrint#PrintQueueSnip](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#printqueuesnip)]"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "列印 XPS 文件的列印佇列。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref>寫入 XPS 資料流。"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  id: CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>具有指定的維度物件。"
  remarks: "這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</xref:System.Windows.Controls.PrintDialog> 如果使用者取消，或關閉對話方塊，傳回值是`null`。 因此，傳回的值必須檢查`null`您的應用程式。"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);
    parameters:
    - id: width
      type: System.Double
      description: "XPS 文件的寬度。"
    - id: height
      type: System.Double
      description: "XPS 文件的高度。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref>寫入 XPS 資料流。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>物件、 開啟 Windows 通用列印對話方塊 （然後將其提供作業描述），並傳回<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，表示可做為影像的區域和維度的媒體資訊的參數。"
  remarks: "許多印表機需要沾周圍的空間邊緣的每個頁面至紙張英吋的四分之一並將它移到印表機。 否則碳粉可能會破壞紙張流程機制。 可列印的區域是 「 可做為影像區域 」。       型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</xref:System.Printing.PrintDocumentImageableArea> 因此，變數`documentImageableArea`必須宣告並指派給`null`，則只會傳遞給方法。 這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</xref:System.Windows.Controls.PrintDialog> 使用者在選取印表機、 紙張大小和方向，並關閉對話方塊之後`documentImageableArea`初始化至實際的物件和其屬性的點。       如果使用者取消，或關閉對話方塊，傳回值是`null`。 因此，傳回的值必須檢查`null`您的應用程式。"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: jobDescription
      type: System.String
      description: "列印工作的名稱。 它會出現在 Windows 列印使用者介面。"
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "包含裝置可以在其上列印的頁面區域的維度物件的參考。 因為其資料類型沒有公用建構函式，這個參數未初始化便傳遞。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 資料寫入資料流。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 (參數<code> documentImageableArea </code>是<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic] 項目傳回初始化方法，讓它代表第二個參數。)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>物件，會開啟 Windows 通用列印對話方塊、 列印工作，描述頁面範圍與提供的對話方塊，並傳回<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，表示可做為影像的區域和維度的媒體資訊的參數。"
  remarks: "許多印表機需要沾周圍的空間邊緣的每個頁面至紙張英吋的四分之一並將它移到印表機。 否則碳粉可能會破壞紙張流程機制。 可列印的區域是 「 可做為影像區域 」。       型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</xref:System.Printing.PrintDocumentImageableArea> 因此，變數`documentImageableArea`必須宣告並指派給`null`，則只會傳遞給方法。 這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</xref:System.Windows.Controls.PrintDialog> 使用者設定其列印工作 （包括選取印表機、 紙張大小、 方向與頁面範圍） 對話方塊。 在關閉對話方塊時`pageRangeSelection`和`pageRange`有值，和`documentImageableArea`指向實際物件其屬性會初始化。       如果使用者取消，或關閉對話方塊，傳回值是`null`。 因此，傳回的值必須檢查`null`您的應用程式。"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "包含裝置可以在其上列印的頁面區域的維度物件的參考。 因為其資料類型沒有公用建構函式，這個參數未初始化便傳遞。"
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "值，指定是否要列印的所有網頁或使用者所指定的範圍。"
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "列印的頁面範圍。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 資料寫入資料流。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 (參數<code> documentImageableArea </code>， <code> pageRangeSelection </code>，和<code> pageRange </code>全部<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic] 參數，是由使用者初始化並傳回在關閉對話方塊時，因此每個代表其他項目傳回。)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref>物件，開啟 Windows 通用列印對話方塊，提供的對話方塊中的頁面範圍，並傳回<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，表示可做為影像的區域和維度的媒體資訊的參數。"
  remarks: "許多印表機需要沾周圍的空間邊緣的每個頁面至紙張英吋的四分之一並將它移到印表機。 否則碳粉可能會破壞紙張流程機制。 可列印的區域是 「 可做為影像區域 」。       型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</xref:System.Printing.PrintDocumentImageableArea> 因此，變數`documentImageableArea`必須宣告並指派給`null`，則只會傳遞給方法。 這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</xref:System.Windows.Controls.PrintDialog> 使用者設定其列印工作 （包括選取印表機、 紙張大小、 方向與頁面範圍） 對話方塊。 在關閉對話方塊時`pageRangeSelection`和`pageRange`有值，和`documentImageableArea`指向實際物件其屬性會初始化。       如果使用者取消，或關閉對話方塊，傳回值是`null`。 因此，傳回的值必須檢查`null`您的應用程式。"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: jobDescription
      type: System.String
      description: "列印工作的名稱。 它會出現在 Windows 列印使用者介面。"
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "包含裝置可以在其上列印的頁面區域的維度物件的參考。 因為其資料類型沒有公用建構函式，這個參數未初始化便傳遞。"
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "值，指定是否要列印的所有網頁或使用者所指定的範圍。"
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "列印的頁面範圍。"
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 資料寫入資料流。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 (參數<code> documentImageableArea </code>， <code> pageRangeSelection </code>，和<code> pageRange </code>全部<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref>在 Visual Basic] 參數，是由使用者初始化並傳回在關閉對話方塊時，因此每個代表其他項目傳回。)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CurrentJobSettings
  id: CurrentJobSettings
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得物件，包含目前的列印工作的組態設定。"
  syntax:
    content: public System.Printing.PrintJobSettings CurrentJobSettings { get; }
    return:
      type: System.Printing.PrintJobSettings
      description: "A <xref href=&quot;System.Printing.PrintJobSettings&quot;> </xref>保存目前列印工作設定的值。 這些設定包括作業和作業的參考的描述<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>。"
  overload: System.Printing.PrintQueue.CurrentJobSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  id: DefaultPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定與此相關聯的預設印表機選項<xref href=&quot;System.Printing.PrintQueue&quot;> </xref>。"
  remarks: "預設值<xref:System.Printing.PrintTicket>指定列印工作選項，例如<xref:System.Printing.PrintTicket.CopyCount%2A>， <xref:System.Printing.PrintTicket.PageOrientation%2A>， <xref:System.Printing.PrintTicket.Duplexing%2A>， <xref:System.Printing.PrintTicket.Stapling%2A>，和其他人。</xref:System.Printing.PrintTicket.Stapling%2A> </xref:System.Printing.PrintTicket.Duplexing%2A> </xref:System.Printing.PrintTicket.PageOrientation%2A> </xref:System.Printing.PrintTicket.CopyCount%2A> </xref:System.Printing.PrintTicket>       每個<xref:System.Printing.PrintQueue>維護自己 DefaultPrintTicket。</xref:System.Printing.PrintQueue>       在正常作業中 DefaultPrintTicket 屬性會傳回<xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket>  如果<xref:System.Printing.PrintQueue>會偵測到無效的狀態，DefaultPrintTicket 傳回`null`。</xref:System.Printing.PrintQueue>  如果傳回 DefaultPrintTicket `null`、 應用程式應該會顯示發生錯誤的資訊的使用者 對話方塊上此列印佇列，並應該重新啟動並將輸出導向至不同的列印佇列列印的作業。       取得或設定 DefaultPrintTicket 屬性不會驗證<xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket>  <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法可以用來驗證<xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  example:
  - "The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "預設值<xref href=&quot;System.Printing.PrintTicket&quot;></xref>列印佇列中; 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果列印佇列中發生錯誤。"
  overload: System.Printing.PrintQueue.DefaultPrintTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPriority
  id: DefaultPriority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定提供給每個新的列印工作加入佇列的預設優先權。"
  remarks: "使用者可以變更列印工作的優先順序之後即會進入列印佇列。"
  syntax:
    content: public virtual int DefaultPriority { get; set; }
    return:
      type: System.Int32
      description: "加入佇列的列印工作預設的優先權。 可能的值從 1 到 99 的範圍。 預設為 1。"
  overload: System.Printing.PrintQueue.DefaultPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Description
  id: Description
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得列印佇列的描述。"
  remarks: "建立佇列時，描述會預設為佇列名稱、 模型和以逗號分隔的位置所組成的三部分字串。 作為對比與 [描述] 屬性<xref:System.Printing.PrintQueue.Comment%2A>通用列印對話方塊和印表機和傳真清單中的使用者都可以看到其中的屬性。</xref:System.Printing.PrintQueue.Comment%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "列印佇列的描述。"
  overload: System.Printing.PrintQueue.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.FullName
  id: FullName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得佇列的完整名稱。"
  remarks: "對於本機列印伺服器上的列印佇列，這個屬性的值就等於<xref:System.Printing.PrintQueue.Name%2A>，否則它會包含完整的 UNC （通用命名慣例） 名稱。</xref:System.Printing.PrintQueue.Name%2A>       <xref:System.Printing.PrintQueue>物件也有可寫入<xref:System.Printing.PrintQueue.Name%2A>和<xref:System.Printing.PrintQueue.ShareName%2A>屬性。</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "列印佇列的完整名稱。"
  overload: System.Printing.PrintQueue.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  id: GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得具有指定識別碼的列印工作。"
  remarks: "您也可以使用<xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>達成相同目的的方法。</xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use this method when diagnosing a problem with a print job.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo GetJob (int jobId);
    parameters:
    - id: jobId
      type: System.Int32
      description: "在佇列中的工作數目。"
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref>可指定工作和其狀態的屬性。"
  overload: System.Printing.PrintQueue.GetJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  id: GetPrintCapabilities
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得<xref href=&quot;System.Printing.PrintCapabilities&quot;></xref>物件，可識別印表機的功能。"
  remarks: ''
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities ();
    parameters: []
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref>物件，指定哪些印表機可以和無法進行，例如雙面複製或自動裝訂。"
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref>無法擷取物件。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  id: GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得<xref href=&quot;System.Printing.PrintCapabilities&quot;></xref>物件，可識別印表機的功能。"
  remarks: "<xref:System.Printing.PrintTicket>參數用來做為基礎建構<xref:System.Printing.PrintCapabilities>物件。</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintTicket> 例如，假設印表機支援媒體類型 A 和 B 的輸入紙匣 1，而且只支援輸入紙匣 2 的媒體類型 C。 如果`printTicket`參數指定輸入紙匣 1，則<xref:System.Printing.PrintCapabilities>傳回的物件會包含所有這三個媒體類型，但它會報告類型 C 」 的限制。 」</xref:System.Printing.PrintCapabilities> 如果`printTicket`參數指定輸入紙匣 2，則<xref:System.Printing.PrintCapabilities>傳回的物件會包含所有這三個媒體類型，但它會報告類型 A 和 B 做為 「 受限於 」。</xref:System.Printing.PrintCapabilities> 請參閱[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)如條件約束的詳細資訊。       如果`printTicket`是`null`、<xref:System.Printing.PrintQueue.UserPrintTicket%2A>用。</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "提供列印功能會報告所在的基礎的 print ticket。"
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref>物件，指定哪些印表機可以和無法進行，例如雙面複製或自動裝訂。"
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref>無法擷取物件。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>格式不正確。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  id: GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得<xref:System.IO.MemoryStream>指定印表機的功能，做為 XML 資料流，物件遵守[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)。</xref:System.IO.MemoryStream>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();
    parameters: []
    return:
      type: System.IO.MemoryStream
      description: "A<xref:System.IO.MemoryStream>使用 XML 結構描述 」 PrintCapabilities，&quot;的一部分來指定印表機的功能[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)系統。</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "無法擷取列印功能。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  id: GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得<xref:System.IO.MemoryStream>物件，指定在 XML 中的印表機的功能格式符合[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)。</xref:System.IO.MemoryStream>"
  remarks: "<xref:System.Printing.PrintTicket>參數作為要建構 XML 的列印功能的基礎。</xref:System.Printing.PrintTicket> 例如，假設印表機支援媒體類型 A 和 B 的輸入紙匣 1，而且只支援輸入紙匣 2 的媒體類型 C。 如果`printTicket`參數指定輸入紙匣 1，則列印功能傳回的 XML 會包含所有這三個媒體類型，但它會報告類型 C 做為 「 受限於 」。 如果`printTicket`參數指定輸入紙匣 2，然後列印功能傳回的 XML 會包含所有這三個媒體類型，但它會報告類型 A 和 B 做為 「 條件約束。 」 請參閱[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)如條件約束的詳細資訊。       如果`printTicket`是`null`、<xref:System.Printing.PrintQueue.UserPrintTicket%2A>用。</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "提供列印功能會報告所在的基礎的 print ticket。"
    return:
      type: System.IO.MemoryStream
      description: "A<xref:System.IO.MemoryStream>使用 XML 結構描述 」 PrintCapabilities，&quot;的一部分來指定印表機的功能[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)系統。</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "無法擷取列印功能。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>格式不正確。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  id: GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "建立集合，其中包含<xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref>佇列中每個作業的物件。"
  remarks: ''
  example:
  - "The following example shows how to use this method when performing the same action on every job in a queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();
    parameters: []
    return:
      type: System.Printing.PrintJobInfoCollection
      description: "傳回<xref href=&quot;System.Printing.PrintJobInfoCollection&quot;></xref>的<xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref>物件。 有一個佇列中每一個工作。"
  overload: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasPaperProblem
  id: HasPaperProblem
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機發生未指定的紙張問題。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。       <xref:System.Printing.PrintQueue>物件也有<xref:System.Printing.PrintQueue.IsPaperJammed%2A>和<xref:System.Printing.PrintQueue.IsOutOfPaper%2A>屬性。</xref:System.Printing.PrintQueue.IsOutOfPaper%2A> </xref:System.Printing.PrintQueue.IsPaperJammed%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasPaperProblem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有發生未指定的紙張問題;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.HasPaperProblem*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasToner
  id: HasToner
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機有碳粉。"
  remarks: "某些印表機製造商可能會使用此訊號，來指出碳粉不低。 其他人可能會使用它來表示碳粉匣時使用已存在且正確插入<xref:System.Printing.PrintQueue.IsTonerLow%2A>表示碳粉不足。</xref:System.Printing.PrintQueue.IsTonerLow%2A>       如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasToner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前的印表機有碳粉;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.HasToner*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HostingPrintServer
  id: HostingPrintServer
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定 （受保護） 控制列印佇列列印伺服器。"
  remarks: "這個屬性可以設定只會由衍生自類別<xref:System.Printing.PrintQueue>屬性 setter，所以`protected`。</xref:System.Printing.PrintQueue>"
  syntax:
    content: public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }
    return:
      type: System.Printing.PrintServer
      description: "名稱和其他屬性<xref href=&quot;System.Printing.PrintServer&quot;></xref>裝載列印佇列。"
  overload: System.Printing.PrintQueue.HostingPrintServer*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InPartialTrust
  id: InPartialTrust
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定值，指出佇列是否正以部分信任模式下，較高的信任等級。"
  remarks: "當 InPartialTrust 屬性是`true`，無法建立您的程式<xref:System.Printing.PrintQueue>物件，代表此印表機，除非使用者具有完整的印表機的列印權限。</xref:System.Printing.PrintQueue>"
  syntax:
    content: public bool InPartialTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果佇列部分信任模式中運作否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.InPartialTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  id: InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Printing.PrintQueue&quot;></xref>並選擇性釋放 managed 的資源。"
  syntax:
    content: protected override sealed void InternalDispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Printing.PrintQueue.InternalDispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBidiEnabled
  id: IsBidiEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否已啟用與印表機的雙向通訊。"
  syntax:
    content: public bool IsBidiEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用與印表機的雙向通訊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsBidiEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBusy
  id: IsBusy
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出列印裝置是否忙碌中。"
  remarks: "忙碌不一定表示它正在處理列印工作。 如果裝置已組合印表機/傳真/影印機，然後它可能是傳真或複製。 與比較<xref:System.Printing.PrintQueue.IsProcessing%2A>屬性。</xref:System.Printing.PrintQueue.IsProcessing%2A>       如果裝置不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsBusy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果裝置正在使用中。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsBusy*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  id: IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出佇列是否包含文件，當文件與印表機的組態不相符。"
  syntax:
    content: public bool IsDevQueryEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果佇列擁有不相符的組態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsDevQueryEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDirect
  id: IsDirect
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否佇列直接列印至印表機 」 或 「 多工緩衝處理的文件的第一個，然後列印。"
  remarks: "這個屬性可以設定只能透過 Windows 通用列印對話方塊。"
  syntax:
    content: public bool IsDirect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果佇列是直接列印至印表機。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsDirect*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDoorOpened
  id: IsDoorOpened
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否在印表機上開啟媒體櫃門。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsDoorOpened { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果媒體櫃門已開啟。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsDoorOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsHidden
  id: IsHidden
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否在您的應用程式使用者介面中隱藏列印佇列。"
  remarks: "您未自動隱藏列印佇列時，您將此屬性設定為`true`。 您的程式仍必須採取步驟來確定它不會出現在任何程式的介面中的佇列清單。       列印佇列無法在 Windows 使用者介面，例如印表機和傳真清單中隱藏。"
  syntax:
    content: public bool IsHidden { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列印佇列在 Windows 使用者介面中隱藏，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsHidden*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInError
  id: IsInError
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出的印表機或裝置是否在錯誤狀況。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsInError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果裝置不在錯誤狀況。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInitializing
  id: IsInitializing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機正在初始化本身。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsInitializing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機正在初始化。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsInitializing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsIOActive
  id: IsIOActive
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否接收或傳送資料或信號印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsIOActive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機已接收或傳送。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsIOActive*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  id: IsManualFeedRequired
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否需要手動送紙目前的列印工作的印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsManualFeedRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機必須手動送紙;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsManualFeedRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsNotAvailable
  id: IsNotAvailable
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否可以使用印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsNotAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機功能;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsNotAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOffline
  id: IsOffline
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出印表機是否為離線。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOffline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機已離線。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsOffline*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfMemory
  id: IsOutOfMemory
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機用完記憶體。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfMemory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機用完記憶體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsOutOfMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfPaper
  id: IsOutOfPaper
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否需要重新載入目前的工作所需大小的紙張的印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfPaper { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機需要重新載入。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsOutOfPaper*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutputBinFull
  id: IsOutputBinFull
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出輸出區域的印表機是否即將溢位。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutputBinFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機的輸出區域已滿。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsOutputBinFull*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaperJammed
  id: IsPaperJammed
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出目前的工作表的紙張會陷入印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaperJammed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果紙張是否陷入停滯。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPaperJammed*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaused
  id: IsPaused
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否已暫停的列印佇列。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已暫停的列印佇列。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPendingDeletion
  id: IsPendingDeletion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機正在刪除列印工作。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsPendingDeletion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機已刪除工作。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPendingDeletion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  id: IsPowerSaveOn
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機處於省電模式。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsPowerSaveOn { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機電源，省電模式;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPowerSaveOn*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPrinting
  id: IsPrinting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否要列印工作。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsPrinting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果列印工作。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPrinting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsProcessing
  id: IsProcessing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出印表機是否正在處理列印工作。"
  remarks: "某些印表機製造商支援此信號，而不是小於特定<xref:System.Printing.PrintQueue.IsBusy%2A>.</xref:System.Printing.PrintQueue.IsBusy%2A>       如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsProcessing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機的處理列印工作。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPublished
  id: IsPublished
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否可以看到其他網路使用者的印表機。"
  syntax:
    content: public bool IsPublished { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機使用者都可以看到其他網路。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsPublished*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsQueued
  id: IsQueued
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機可以支援多個列印工作的佇列中一次。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsQueued { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機可支援佇列的多個列印工作。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsQueued*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  id: IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出列印佇列是否可以使用 EMF （增強型中繼檔），可讓不同的視窗多工緩衝處理器列印應用程式更快速的資料流程。"
  syntax:
    content: public bool IsRawOnlyEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機無法使用 EMF 列印。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsRawOnlyEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsServerUnknown
  id: IsServerUnknown
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出印表機是否處於錯誤狀態。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsServerUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在印表機是否處於錯誤狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsServerUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsShared
  id: IsShared
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否可供網路上的其他電腦的印表機。"
  remarks: "這個屬性只可以設定與 Windows 通用列印對話方塊。"
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機已共用。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsTonerLow
  id: IsTonerLow
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機碳粉不足。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。       <xref:System.Printing.PrintQueue>物件也有<xref:System.Printing.PrintQueue.HasToner%2A>屬性。</xref:System.Printing.PrintQueue.HasToner%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsTonerLow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機完碳粉;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsTonerLow*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWaiting
  id: IsWaiting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出佇列是否等待加入工作。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsWaiting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果佇列正在等候作業;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsWaiting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWarmingUp
  id: IsWarmingUp
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否熱機印表機。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsWarmingUp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果熱機印表機。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsWarmingUp*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsXpsDevice
  id: IsXpsDevice
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否根據印表機的驅動程式[列印概觀](~/add/includes/ajax-current-ext-md.md)因此它會使用[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]做為頁面描述的語言。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool IsXpsDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機使用[列印概觀](../Topic/Printing%20Overview.md)，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.IsXpsDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  id: KeepPrintedJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出佇列是否正在儲存印表機語言檔案，而不是刪除它的後面列印。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool KeepPrintedJobs { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果佇列儲存印表機語言檔案。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.KeepPrintedJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Location
  id: Location
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定印表機的實體位置。"
  remarks: ''
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public virtual string Location { get; set; }
    return:
      type: System.String
      description: "印表機的實體位置。"
  overload: System.Printing.PrintQueue.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  id: MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得最近可能的版本號碼的[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)，佇列可使用。"
  remarks: "版本[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行為 1。"
  syntax:
    content: public static int MaxPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "最新版本號碼的[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)，佇列可使用。"
  overload: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "合併兩個<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s 和可確保產生<xref href=&quot;System.Printing.PrintTicket&quot;></xref>有效，而且不會要求您的印表機不支援任何列印功能。"
  remarks: "方法會產生可行的 print ticket。也就是沒有要求的列印功能的票證印表機不支援。 方法首先會驗證針對兩個輸入列印票證[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)。 如果其中一個無效，則會擲回例外狀況。       接著會合併兩個的票證。 如果它們有不同的值在特定屬性然後產生合併的票證一開始會使用值差異票證。       合併的票證然後會針對實際的印表機功能檢查。 如果有的話，票證中的設定不相容於印表機的功能，則印表機驅動程式來使用任何邏輯變更這些設定，它想。 通常，它會替代設定的使用者或印表機的預設值。 替代值的驅動程式的來源並不相同票證來當做`basePrintTicket`，則合併的票證可能會有一些設定不同於這兩個輸入的票證。 如果印表機驅動程式已變更任何設定然後這項事實會報告<xref:System.Printing.ValidationResult.ConflictStatus%2A><xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult>屬性</xref:System.Printing.ValidationResult.ConflictStatus%2A>中       合併並驗證根據列印佇列的預設設定，應將`basePrintTicket`<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>或<xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       `deltaPrintTicket`參數可以是`null`的情況下`basePrintTicket`會驗證，檢查的可行性，並傳回，可能的變更。       使用這個多載的 MergeAndValidatePrintTicket，同時`deltaPrintTicket`和<xref:System.Printing.PrintTicket>中<xref:System.Printing.ValidationResult>傳回具有工作的整個範圍。</xref:System.Printing.ValidationResult> </xref:System.Printing.PrintTicket> 若要指定不同的範圍，請使用此方法的其他多載。"
  example:
  - "The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "第一個的 print ticket。"
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "第二個的 print ticket。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> ，其中包含合併<xref href=&quot;System.Printing.PrintTicket&quot;></xref>和指示的設定值是否必須變更為保證可行性。"
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "至少一個輸入列印票證無效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "驗證、 合併和可用性檢查作業失敗。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "合併兩個<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s 和可確保產生<xref href=&quot;System.Printing.PrintTicket&quot;></xref>是否有效，不會要求任何列印功能，印表機不支援，且僅限於指定的範圍。"
  remarks: "方法會產生可行的 print ticket。也就是沒有要求的列印功能的票證印表機不支援。 方法首先會驗證針對兩個輸入列印票證[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)。 如果其中一個無效，則會擲回例外狀況。       接著會合併兩個的票證。 如果它們有不同的值在特定屬性然後產生合併的票證一開始會使用值差異票證。       合併的票證然後會針對實際的印表機功能檢查。 如果有的話，票證中的設定不相容於印表機的功能，則印表機驅動程式來使用任何邏輯變更這些設定，它想。 通常，它會替代設定的使用者或印表機的預設值。 替代值的驅動程式的來源並不相同票證來當做`basePrintTicket`，則合併的票證可能會有一些設定不同於這兩個輸入的票證。 如果印表機驅動程式已變更任何設定然後這項事實會報告<xref:System.Printing.ValidationResult.ConflictStatus%2A><xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult>屬性</xref:System.Printing.ValidationResult.ConflictStatus%2A>中       合併並驗證根據列印佇列的預設設定，應將`basePrintTicket`<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>或<xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       `deltaPrintTicket`參數可以是`null`的情況下`basePrintTicket`會驗證，檢查的可行性，並傳回，可能的變更。       如果`scope`是工作，則在傳回的 print ticket<xref:System.Printing.ValidationResult>可以包含[列印結構描述](http://go.microsoft.com/fwlink/?LinkId=186397)作業、 文件，以及頁面的前置詞的參數。</xref:System.Printing.ValidationResult> 如果`scope`是文件，則在每個作業設定`deltaPrintTicket`會被忽略，並傳回的票證可以包含參數，與文件和頁面的前置詞。 如果`scope`是頁面上，則每個作業設定以及個別文件中的設定`deltaPrintTicket`會被忽略，並傳回的票證可以包含頁面前置詞的參數。"
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "第一個的 print ticket。"
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "第二個的 print ticket。 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: scope
      type: System.Printing.PrintTicketScope
      description: "值，指出是否範圍`deltaPrintTicket`，及的範圍中傳回的 print ticket <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>，網頁、 文件，或整個作業。"
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> ，其中包含合併<xref href=&quot;System.Printing.PrintTicket&quot;></xref>和指示的設定值是否必須變更為保證可行性。"
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "至少一個輸入列印票證無效。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> scope </code>參數沒有有效<xref href=&quot;System.Printing.PrintTicketScope&quot;></xref>值。"
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "驗證、 合併和可用性檢查作業失敗。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.Name
  id: Name
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定列印佇列的名稱。"
  remarks: "<xref:System.Printing.PrintQueue>物件也有唯讀<xref:System.Printing.PrintQueue.FullName%2A>屬性和可寫入<xref:System.Printing.PrintQueue.ShareName%2A>屬性。</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue>       針對本機列印伺服器上的佇列名稱和<xref:System.Printing.PrintQueue.FullName%2A>都相同。</xref:System.Printing.PrintQueue.FullName%2A>"
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public override sealed string Name { get; set; }
    return:
      type: System.String
      description: "列印佇列的名稱。"
  overload: System.Printing.PrintQueue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NeedUserIntervention
  id: NeedUserIntervention
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出印表機是否需要使用者互動的注意。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool NeedUserIntervention { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機需要人力注意;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.NeedUserIntervention*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NumberOfJobs
  id: NumberOfJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得排列列印佇列中的工作總數。"
  syntax:
    content: public virtual int NumberOfJobs { get; }
    return:
      type: System.Int32
      description: "佇列中的工作數目。"
  overload: System.Printing.PrintQueue.NumberOfJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.PagePunt
  id: PagePunt
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，指出是否印表機無法列印目前頁面。"
  remarks: "如果印表機不支援這個意義，信號，則屬性一律會是`false`。"
  syntax:
    content: public bool PagePunt { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機無法列印目前的頁面。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.PagePunt*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Pause
  id: Pause
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "暫停列印佇列。 它維持暫停狀態，直到<xref:System.Printing.PrintQueue.Resume*>執行。</xref:System.Printing.PrintQueue.Resume*>"
  syntax:
    content: public virtual void Pause ();
    parameters: []
  overload: System.Printing.PrintQueue.Pause*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "無法暫停的印表機。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  id: PrintingIsCancelled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定值，指出是否正在取消目前的列印工作。"
  syntax:
    content: public bool PrintingIsCancelled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果正在取消列印工作。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.PrintingIsCancelled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Priority
  id: Priority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定相對於其他由相同的列印伺服器所裝載，並使用相同的實體印表機的列印佇列列印佇列的優先權。"
  remarks: "比較這個屬性與<xref:System.Printing.PrintQueue.DefaultPriority%2A>屬性這是在佇列中的列印工作的優先順序有關。</xref:System.Printing.PrintQueue.DefaultPriority%2A>"
  syntax:
    content: public virtual int Priority { get; set; }
    return:
      type: System.Int32
      description: "列印佇列的優先權。 可能的值為 1 到 99 之間。 預設為 1。"
  overload: System.Printing.PrintQueue.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Purge
  id: Purge
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "列印佇列中移除所有的工作。"
  syntax:
    content: public virtual void Purge ();
    parameters: []
  overload: System.Printing.PrintQueue.Purge*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "無法從佇列中移除一些列印工作。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueAttributes
  id: QueueAttributes
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得列印佇列的屬性。"
  syntax:
    content: public System.Printing.PrintQueueAttributes QueueAttributes { get; }
    return:
      type: System.Printing.PrintQueueAttributes
      description: "位元組合<xref href=&quot;System.Printing.PrintQueueAttributes&quot;></xref>列舉值。"
  overload: System.Printing.PrintQueue.QueueAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueDriver
  id: QueueDriver
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定佇列的印表機驅動程式。"
  syntax:
    content: public virtual System.Printing.PrintDriver QueueDriver { get; set; }
    return:
      type: System.Printing.PrintDriver
      description: "<xref href=&quot;System.Printing.PrintDriver&quot;> </xref>佇列使用。"
  overload: System.Printing.PrintQueue.QueueDriver*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePort
  id: QueuePort
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定佇列使用的連接埠。"
  syntax:
    content: public virtual System.Printing.PrintPort QueuePort { get; set; }
    return:
      type: System.Printing.PrintPort
      description: "<xref href=&quot;System.Printing.PrintPort&quot;> </xref> ，指派給列印佇列。"
  overload: System.Printing.PrintQueue.QueuePort*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  id: QueuePrintProcessor
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定佇列使用的列印處理器。"
  syntax:
    content: public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }
    return:
      type: System.Printing.PrintProcessor
      description: "<xref href=&quot;System.Printing.PrintProcessor&quot;> </xref>佇列使用，例如 WinPrint 或 ModiPrint。"
  overload: System.Printing.PrintQueue.QueuePrintProcessor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueStatus
  id: QueueStatus
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得值，表示印表機的狀態。 這些包括 「 暖機時發生，&quot;「 初始化，」 「 列印 」 以及其他項目。"
  remarks: ''
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueattributes)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueattributes)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueattributes)]"
  syntax:
    content: public System.Printing.PrintQueueStatus QueueStatus { get; }
    return:
      type: System.Printing.PrintQueueStatus
      description: "目前<xref href=&quot;System.Printing.PrintQueueStatus&quot;></xref>值。"
  overload: System.Printing.PrintQueue.QueueStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Refresh
  id: Refresh
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "更新的屬性<xref href=&quot;System.Printing.PrintQueue&quot;></xref>值從 印表機和列印佇列公用程式的電腦上執行的物件。"
  remarks: "變更您的程式對<xref:System.Printing.PrintQueue>物件的屬性都會遺失，重新整理執行時，除非已寫入至印表機及列印佇列<xref:System.Printing.PrintQueue.Commit%2A>.</xref:System.Printing.PrintQueue.Commit%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this method as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#surveyqueues)]\n [!code-vb[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#surveyqueues)]\n [!code-cs[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#surveyqueues)]"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Printing.PrintQueue.Refresh*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "無法更新某些屬性。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.Resume
  id: Resume
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "重新啟動已暫停的列印佇列。"
  remarks: ''
  example:
  - "The following example shows how to use this method to resume a paused print queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#handlepausedjob)]\n [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#handlepausedjob)]\n [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#handlepausedjob)]"
  syntax:
    content: public virtual void Resume ();
    parameters: []
  overload: System.Printing.PrintQueue.Resume*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "印表機無法繼續。"
  platform:
  - net462
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  id: ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得第一個值，指出是否印表機列印多工緩衝處理程序，在有不完整多工緩衝處理即使後者進入佇列的工作之前完成的作業或較高的優先順序。"
  syntax:
    content: public bool ScheduleCompletedJobsFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果印表機列印多工緩衝處理程序，在有不完整多工緩衝處理; 的工作之前完成的作業否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.SeparatorFile
  id: SeparatorFile
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定每一個列印工作的開頭插入的檔案路徑和檔案名稱。"
  remarks: "這通常是用來更輕鬆地分隔不同的列印工作的輸出的單一頁面檔案。"
  syntax:
    content: public virtual string SeparatorFile { get; set; }
    return:
      type: System.String
      description: "分隔檔路徑和檔案名稱。"
  overload: System.Printing.PrintQueue.SeparatorFile*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ShareName
  id: ShareName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定使用者可看到網路共用印表機的名稱。"
  remarks: "<xref:System.Printing.PrintQueue>物件也有唯讀<xref:System.Printing.PrintQueue.FullName%2A>屬性和可寫入<xref:System.Printing.PrintQueue.Name%2A>屬性。</xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue> 對於本機列印伺服器上的佇列，這些屬性具有相同的值。"
  syntax:
    content: public virtual string ShareName { get; set; }
    return:
      type: System.String
      description: "共用印表機的公用名稱。"
  overload: System.Printing.PrintQueue.ShareName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.StartTimeOfDay
  id: StartTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定最早的時間，以國際標準時間 (UTC) （也稱為格林威治標準時間 [GMT]），印表機將列印工作午夜之後的分鐘數表示。"
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set StartTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int StartTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "印表機第一次便可使用的一天的時間以表示午夜 (UTC) 之後的分鐘數。 最大值為 1439年。 使用已先安裝印表機[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]新增印表機精靈，印表機預設已可用的時間，而且這個屬性會傳回 0，所有時區的時間。"
  overload: System.Printing.PrintQueue.StartTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  id: UntilTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定的最晚的時間，以國際標準時間 (UTC) （也稱為格林威治標準時間 [GMT]），印表機將列印工作午夜之後的分鐘數表示。"
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set UntilTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after the 24th hour (the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int UntilTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "印表機已無法再使用，以在午夜過後 (UTC) 的分鐘數表示的一天的時間。 最大值為 1439年。 使用已先安裝印表機[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]新增印表機精靈，印表機預設已可用的時間，而且這個屬性會傳回 0，所有時區的時間。"
  overload: System.Printing.PrintQueue.UntilTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UserPrintTicket
  id: UserPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "取得或設定目前使用者的預設<xref href=&quot;System.Printing.PrintTicket&quot;></xref>包含列印工作的詳細的資訊的物件。"
  remarks: "每個使用者都可以有他或她自己的預設<xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket>       這個屬性可以是`null`。"
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "<xref href=&quot;System.Printing.PrintTicket&quot;> </xref>目前的使用者，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果使用者<xref href=&quot;System.Printing.PrintTicket&quot;></xref>尚未指定。"
  overload: System.Printing.PrintQueue.UserPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Printing.PrintSystemObject
  isExternal: false
  name: System.Printing.PrintSystemObject
- uid: System.Printing.PrintQueueException
  parent: System.Printing
  isExternal: false
  name: PrintQueueException
  nameWithType: PrintQueueException
  fullName: System.Printing.PrintQueueException
- uid: System.Printing.PrintSystemException
  parent: System.Printing
  isExternal: false
  name: PrintSystemException
  nameWithType: PrintSystemException
  fullName: System.Printing.PrintSystemException
- uid: System.Printing.PrintCommitAttributesException
  parent: System.Printing
  isExternal: false
  name: PrintCommitAttributesException
  nameWithType: PrintCommitAttributesException
  fullName: System.Printing.PrintCommitAttributesException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
- uid: System.Printing.PrintServer
  parent: System.Printing
  isExternal: false
  name: PrintServer
  nameWithType: PrintServer
  fullName: System.Printing.PrintServer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
- uid: System.Printing.PrintQueueIndexedProperty[]
  parent: System.Printing
  isExternal: false
  name: PrintQueueIndexedProperty
  nameWithType: PrintQueueIndexedProperty
  fullName: System.Printing.PrintQueueIndexedProperty[]
  spec.csharp:
  - uid: System.Printing.PrintQueueIndexedProperty
    name: PrintQueueIndexedProperty
    nameWithType: PrintQueueIndexedProperty
    fullName: PrintQueueIndexedProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
- uid: System.Printing.PrintSystemDesiredAccess
  parent: System.Printing
  isExternal: false
  name: PrintSystemDesiredAccess
  nameWithType: PrintSystemDesiredAccess
  fullName: System.Printing.PrintSystemDesiredAccess
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.AddJob
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
- uid: System.Printing.PrintSystemJobInfo
  parent: System.Printing
  isExternal: false
  name: PrintSystemJobInfo
  nameWithType: PrintSystemJobInfo
  fullName: System.Printing.PrintSystemJobInfo
- uid: System.Printing.PrintQueue.AddJob(System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
- uid: System.Windows.Xps.XpsDocumentWriter
  parent: System.Windows.Xps
  isExternal: false
  name: XpsDocumentWriter
  nameWithType: XpsDocumentWriter
  fullName: System.Windows.Xps.XpsDocumentWriter
- uid: System.Printing.PrintDocumentImageableArea
  parent: System.Printing
  isExternal: false
  name: PrintDocumentImageableArea
  nameWithType: PrintDocumentImageableArea
  fullName: System.Printing.PrintDocumentImageableArea
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Windows.Controls.PageRangeSelection
  parent: System.Windows.Controls
  isExternal: false
  name: PageRangeSelection
  nameWithType: PageRangeSelection
  fullName: System.Windows.Controls.PageRangeSelection
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Printing.PrintQueue.CurrentJobSettings
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintJobSettings
  parent: System.Printing
  isExternal: false
  name: PrintJobSettings
  nameWithType: PrintJobSettings
  fullName: System.Printing.PrintJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
- uid: System.Printing.PrintCapabilities
  parent: System.Printing
  isExternal: false
  name: PrintCapabilities
  nameWithType: PrintCapabilities
  fullName: System.Printing.PrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
- uid: System.Printing.PrintJobInfoCollection
  parent: System.Printing
  isExternal: false
  name: PrintJobInfoCollection
  nameWithType: PrintJobInfoCollection
  fullName: System.Printing.PrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
- uid: System.Printing.PrintQueue.IsBidiEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
- uid: System.Printing.PrintTicketScope
  parent: System.Printing
  isExternal: false
  name: PrintTicketScope
  nameWithType: PrintTicketScope
  fullName: System.Printing.PrintTicketScope
- uid: System.Printing.PrintQueue.Name
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
- uid: System.Printing.PrintQueue.QueueAttributes
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueueAttributes
  parent: System.Printing
  isExternal: false
  name: PrintQueueAttributes
  nameWithType: PrintQueueAttributes
  fullName: System.Printing.PrintQueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
- uid: System.Printing.PrintDriver
  parent: System.Printing
  isExternal: false
  name: PrintDriver
  nameWithType: PrintDriver
  fullName: System.Printing.PrintDriver
- uid: System.Printing.PrintQueue.QueuePort
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
- uid: System.Printing.PrintPort
  parent: System.Printing
  isExternal: false
  name: PrintPort
  nameWithType: PrintPort
  fullName: System.Printing.PrintPort
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintProcessor
  parent: System.Printing
  isExternal: false
  name: PrintProcessor
  nameWithType: PrintProcessor
  fullName: System.Printing.PrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
- uid: System.Printing.PrintQueueStatus
  parent: System.Printing
  isExternal: false
  name: PrintQueueStatus
  nameWithType: PrintQueueStatus
  fullName: System.Printing.PrintQueueStatus
- uid: System.Printing.PrintQueue.Refresh
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
- uid: System.Printing.PrintQueue.Resume
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
- uid: System.Printing.PrintQueue.#ctor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue.PrintQueue
- uid: System.Printing.PrintQueue.AddJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob
  nameWithType: PrintQueue.AddJob
- uid: System.Printing.PrintQueue.AveragePagesPerMinute*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit
  nameWithType: PrintQueue.Commit
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter
  nameWithType: PrintQueue.CreateXpsDocumentWriter
- uid: System.Printing.PrintQueue.CurrentJobSettings*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob
  nameWithType: PrintQueue.GetJob
- uid: System.Printing.PrintQueue.GetPrintCapabilities*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities
  nameWithType: PrintQueue.GetPrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection
  nameWithType: PrintQueue.GetPrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose
  nameWithType: PrintQueue.InternalDispose
- uid: System.Printing.PrintQueue.IsBidiEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket
  nameWithType: PrintQueue.MergeAndValidatePrintTicket
- uid: System.Printing.PrintQueue.Name*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause
  nameWithType: PrintQueue.Pause
- uid: System.Printing.PrintQueue.PrintingIsCancelled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge
  nameWithType: PrintQueue.Purge
- uid: System.Printing.PrintQueue.QueueAttributes*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
- uid: System.Printing.PrintQueue.QueuePort*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
- uid: System.Printing.PrintQueue.QueuePrintProcessor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
- uid: System.Printing.PrintQueue.Refresh*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh
  nameWithType: PrintQueue.Refresh
- uid: System.Printing.PrintQueue.Resume*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume
  nameWithType: PrintQueue.Resume
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
