### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "封裝記憶體位置來儲存本機資料。 這個類別無法被繼承。"
  remarks: ".NET Framework 提供兩種機制使用執行緒區域儲存區 (TLS): 執行緒相關的靜態欄位和資料位置。      -執行緒相關的靜態欄位是`static`欄位 (`Shared`在 Visual Basic 中的欄位)，以標記<xref:System.ThreadStaticAttribute>屬性。</xref:System.ThreadStaticAttribute> 可提供更佳的效能比資料位置，並且可編譯時間型別檢查。      資料位置較慢，更難以使用以外的執行緒相關的靜態欄位。 此外，資料會儲存為類型<xref:System.Object>，因此您必須先轉換成正確的類型，才能使用它。</xref:System.Object> 不過，您可以使用資料位置，當您有足夠的資訊，在編譯時期配置的靜態欄位。       如需有關如何使用 TLS 的詳細資訊，請參閱[執行緒區域儲存區︰ 執行緒相關的靜態欄位和資料位置](~/add/includes/ajax-current-ext-md.md)。       同樣地，.NET Framework 提供兩種機制使用內容的本機儲存體︰ 內容的相對靜態欄位和資料位置。 內容相關的靜態欄位都是靜態的欄位，以標記<xref:System.ContextStaticAttribute>屬性。</xref:System.ContextStaticAttribute> 使用這兩個機制之間的取捨的類似於使用相對執行緒的靜態欄位和資料位置之間的利弊。       LocalDataStoreSlot 結構做為執行緒本機存放區記憶體機制，並分別儲存執行緒特定與特定內容相關的資料，可以使用的內容。 建立時，common language runtime 會配置每個處理序的多位置資料存放區陣列。 執行緒或內容物件就會過期之後，重複使用不同的函式來配置資料存放區中的資料位置、 儲存和擷取資料中的值位置，以及釋放資料位置的執行緒或內容呼叫。       每個執行緒或內容; 獨有的資料位置未在執行緒或內容物件之間共用它們的值。 依名稱或索引編號，就可以配置資料位置。       如需儲存本機資料的詳細資訊，請參閱<xref:System.Threading.Thread>或<xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Threading.Thread> 這類的 LocalDataStoreSlot 類別使用的方法<xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>， <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>， <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>，和<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; 它沒有任何您需要使用它自己的方法。</xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName> </xref:System.Threading.Thread.GetData%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName> </xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "確認釋出資源，並在記憶體回收行程回收時執行其他清除作業<xref href=&quot;System.LocalDataStoreSlot&quot;></xref>物件。"
  remarks: "記憶體回收行程呼叫 Finalize 準備最終處理而目前的物件時。"
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
