### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.Grid
  id: Grid
  children:
  - System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  - System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  - System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  langs:
  - csharp
  name: Grid
  nameWithType: Grid
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid
  type: Class
  summary: "提供方法和屬性來管理主要和次要格線的<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.Axis&quot;></xref>物件。"
  remarks: "這個類別圖表上的方格中提供的功能，而且會公開使用<xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A>的每個屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>物件。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A>       根據預設，主要格線並沒有其<xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>，和<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>屬性集。</xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A> 當未設定這些屬性主要格線時，<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項會自動決定適當的格線值。</xref:System.Windows.Forms.DataVisualization.Charting.Chart>       軸和其預設的次要格線有其<xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>，和<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>屬性設定為**自動**(0)。</xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A> 如果啟用軸標籤或次要格線，而不會修改這些屬性，<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項會自動決定通常繪製的次要格線的方式。</xref:System.Windows.Forms.DataVisualization.Charting.Chart>       座標軸格線:-您可以啟用或停用。      -擁有決定它們會先繪製位置的起點。      -顯示您可以將樣式、 寬度和色彩的線條。      -可以有自動間隔或手動設定的間隔。"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Enabled")]

      public class Grid
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Grid()
  nameWithType: Grid.Grid()
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Grid()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.Grid&quot;></xref>類別。"
  syntax:
    content: public Grid ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  id: Enabled
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Enabled
  nameWithType: Grid.Enabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定判斷是否啟用主要或次要格線的旗標。"
  remarks: "主要和次要格線會顯示啟用時，並停用時不可見。       如果停用，則不顯示刻度標記。       您可以藉由設定<xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A>至<xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle>。</xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle>屬性</xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A>停用刻度"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果啟用， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果停用。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>主要格線物件和<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>次要格線物件。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Interval
  nameWithType: Grid.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定主要或次要格線的間隔。"
  remarks: "依預設這個屬性未設定軸標籤、 主要刻度和主要格線。 如果未設定 — 是根據預設，明確地使用<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>在設計階段，或將值指派為<xref:System.Double.NaN>在執行階段，取決於這個屬性的實際值<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>物件所屬的圖表項目，例如格線列或刻度標記，。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> </xref:System.Double.NaN> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>       次要刻度和格線的間隔永遠不會受到<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>屬性值。</xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>       間隔為單位來測量的軸，並決定適用的圖表項目繪製的頻率。 例如，假設 直條圖有 1 的 X 軸步驟 （也就是 1、 2、 3、 4 和其他等等）;如果您設定<xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A>屬性為 2 X 軸，軸標籤將會顯示每個其他資料行。</xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A>       同樣適用於所有適用的圖表項目。 換句話說，如果區域中的前一個範例已使用行，與<xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A>為 0.5，及其<xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A>屬性是 2、 帶狀線會顯示在 0.5、 2.5、 4.5、 等等。</xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> </xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A>       如果您將圖表元素`Interval`屬性為零，間隔將會自動決定<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項。</xref:System.Windows.Forms.DataVisualization.Charting.Chart>"
  syntax:
    content: public double Interval { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;> </xref>表示格線之間間隔的值。 根據預設，未設定值 (<xref:System.Double>) 的主要格線。</xref:System.Double> 次要格線的預設值是零 (0)。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定格線的位移。"
  remarks: "依預設這個屬性未設定軸標籤、 主要刻度和主要格線。 如果未設定 — 根據預設，明確指定 「 未設定 」 在設計階段，或將其指派的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>在執行階段，取決於這個屬性的實際值<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>圖表元素，例如格線或刻度標記，屬於物件。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>       值永遠不會影響上次要刻度和格線的間隔位移<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>物件。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>       <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>屬性設定會定義位移的度量單位。</xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>       Intervaloffset 的單位可以是負數值。"
  syntax:
    content: public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;> </xref>表示間隔位移值。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定主要和次要格線的間隔位移的類型。"
  remarks: "依預設這個屬性未設定軸標籤、 主要刻度和主要格線。 如果未設定 — 根據預設，明確指定 「 未設定 」 在設計階段，或將其指派的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>在執行階段，取決於這個屬性的實際值<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>物件圖表元素 — 格線或刻度標記，例如 — 屬於。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>       次要刻度和格線的間隔位移的類型永遠不會受到<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>屬性值。</xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>       如果此間隔位移類型會設定為<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>、<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>屬性可用。</xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>列舉值，表示間隔類型。 依預設它未設定的主要格線。 次要格線的預設值是<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalType
  nameWithType: Grid.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定主要或次要格線的間隔類型。"
  remarks: "依預設這個屬性未設定軸標籤、 主要刻度和主要格線。 如果未設定 — 根據預設，明確使用 「 未設定 」 在設計階段，或將其指派的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>在執行階段 — 取決於這個屬性的實際值<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>物件的圖表項目 — 格線或刻度標記，例如 — 屬於。</xref:System.Windows.Forms.DataVisualization.Charting.Axis> </xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>       次要刻度和格線的間隔類型永遠不會受到值<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A>       間隔類型可以設定為<xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType>; 間隔的類型就會根據 X 值或 Y 值繪製的<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>物件，根據哪個座標軸適用的項目屬於。</xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> </xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType>       值軸只會影響如果資料點的值設定 IntervalType 屬性<xref:System.DateTime>或`double`值。</xref:System.DateTime> 此外，<xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A><xref:System.Windows.Forms.DataVisualization.Charting.Series>必須設定為<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType>或<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType>.</xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType></xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType></xref:System.Windows.Forms.DataVisualization.Charting.Series>繪製的屬性</xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A></xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>       設定類別目錄軸只會影響如果 IntervalType 屬性<xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>屬性 (或<xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A>屬性，視軸有問題而定) 的<xref:System.Windows.Forms.DataVisualization.Charting.Series>物件是其中一個<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType>或<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType>.</xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType></xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType></xref:System.Windows.Forms.DataVisualization.Charting.Series>繪製</xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A></xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>      > [!NOTE] > 星期日會被視為一週的第一天。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>列舉值，表示間隔類型。 根據預設，它將不會設定軸標籤、 主要刻度和主要格線，藉由使用<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref>列舉值。 次要刻度和格線的預設值是<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  id: LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineColor
  nameWithType: Grid.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定格線的線條色彩。"
  remarks: "LineColor 屬性用來指定主要和次要刻度標記或格線的色彩。"
  syntax:
    content: public System.Drawing.Color LineColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> object. 預設值是<xref:System.Drawing.Color.Black*>.</xref:System.Drawing.Color.Black*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  id: LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定格線的線條樣式。"
  remarks: "LineDashStyle 屬性可以用來指定主要和次要刻度標記或格線的線條樣式。 可以是實線、 虛線，等等。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartDashStyle&quot;> </xref>列舉值。 預設值是<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartDashStyle&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  id: LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineWidth
  nameWithType: Grid.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定主要和次要格線的線條寬度。"
  remarks: "LineWidth 屬性可以用來指定線條寬度，以像素的主要和次要刻度標記或資料格中。"
  syntax:
    content: public int LineWidth { get; set; }
    return:
      type: System.Int32
      description: "I<xref uid=&quot;langword_csharp_nteger&quot; name=&quot;nteger&quot; href=&quot;&quot;> </xref>表示線條寬度，單位為像素。 預設值是一 (1)。"
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Grid()
  nameWithType: Grid.Grid()
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Grid()
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Enabled
  nameWithType: Grid.Enabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Interval
  nameWithType: Grid.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalType
  nameWithType: Grid.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineColor
  nameWithType: Grid.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineWidth
  nameWithType: Grid.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Grid
  nameWithType: Grid.Grid
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Enabled
  nameWithType: Grid.Enabled
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Interval
  nameWithType: Grid.Interval
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalType
  nameWithType: Grid.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineColor
  nameWithType: Grid.LineColor
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineWidth
  nameWithType: Grid.LineWidth
