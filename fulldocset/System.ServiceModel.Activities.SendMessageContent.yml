### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.SendMessageContent
  id: SendMessageContent
  children:
  - System.ServiceModel.Activities.SendMessageContent.#ctor
  - System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  - System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  - System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  - System.ServiceModel.Activities.SendMessageContent.Message
  - System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  langs:
  - csharp
  name: SendMessageContent
  nameWithType: SendMessageContent
  fullName: System.ServiceModel.Activities.SendMessageContent
  type: Class
  summary: "用來傳送單一項目 （訊息），或從工作流程服務的類別。 項目可以是內建的型別，例如基本型別<xref:System.ServiceModel.Channels.Message>，或<xref:System.Xml.Linq.XElement>; 或應用程式定義的資料合約、 訊息合約或 XML 可序列化型別。</xref:System.Xml.Linq.XElement> </xref:System.ServiceModel.Channels.Message>"
  remarks: "當使用這個類別，在網路上序列化的訊息會解除包裝，除非資料是訊息合約型別或型別<xref:System.ServiceModel.Channels.Message>.</xref:System.ServiceModel.Channels.Message>"
  example:
  - "The following example shows how to use a SendMessageContent instance with a <xref:System.ServiceModel.Activities.Send> activity.  \n  \n [!code-cs[ContentBasedCorrelation#0](~/add/codesnippet/csharp/t-system.servicemodel.ac_13_1.cs)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Message")]

      public sealed class SendMessageContent : System.ServiceModel.Activities.SendContent
  inheritance:
  - System.Object
  - System.ServiceModel.Activities.SendContent
  implements: []
  inheritedMembers:
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)
  - System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent()
  nameWithType: SendMessageContent.SendMessageContent()
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;></xref>類別。"
  syntax:
    content: public SendMessageContent ();
    parameters: []
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  id: '#ctor(System.Activities.InArgument)'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent(InArgument)
  nameWithType: SendMessageContent.SendMessageContent(InArgument)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument)
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;></xref>傳送指定的資料類別。"
  remarks: ''
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-cs[ContentBasedCorrelation#0](~/add/codesnippet/csharp/792c8b8f-2654-4888-aef4-_1.cs)]"
  syntax:
    content: public SendMessageContent (System.Activities.InArgument message);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "要傳送的資料。"
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  id: '#ctor(System.Activities.InArgument,System.Type)'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent(InArgument,Type)
  nameWithType: SendMessageContent.SendMessageContent(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument,Type)
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;></xref>與指定的訊息和訊息類型的類別。"
  syntax:
    content: public SendMessageContent (System.Activities.InArgument message, Type declaredMessageType);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "要傳送的資料。"
    - id: declaredMessageType
      type: System.Type
      description: "會出現在服務描述資料型別。 它必須是相同的型別`message`或任何基底類型的`message`。"
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  id: DeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
  fullName: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "取得或設定宣告的訊息類型。"
  remarks: "DeclaredMessageTypeis 會出現在服務描述和 WSDL 的資料類型。 您可能想要能夠傳送及在執行階段服務接收各種衍生的類別包含基底類別類型的服務描述。 DeclaredMessageType 必須是相同的訊息屬性的引數類型或是其基底類型。"
  syntax:
    content: public Type DeclaredMessageType { get; set; }
    return:
      type: System.Type
      description: "宣告的訊息類型。"
  overload: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.Message
  id: Message
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: Message
  nameWithType: SendMessageContent.Message
  fullName: System.ServiceModel.Activities.SendMessageContent.Message
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "取得或設定要傳送的資料。"
  syntax:
    content: public System.Activities.InArgument Message { get; set; }
    return:
      type: System.Activities.InArgument
      description: "要傳送的資料。"
  overload: System.ServiceModel.Activities.SendMessageContent.Message*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  id: ShouldSerializeDeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: ShouldSerializeDeclaredMessageType()
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType()
  fullName: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType()
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "取得值，指出是否<xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*>屬性應 XAML 序列化。</xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*>"
  syntax:
    content: public bool ShouldSerializeDeclaredMessageType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性應該序列化。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: System.ServiceModel.Activities.SendContent
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent()
  nameWithType: SendMessageContent.SendMessageContent()
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent()
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent(InArgument)
  nameWithType: SendMessageContent.SendMessageContent(InArgument)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument)
- uid: System.Activities.InArgument
  parent: System.Activities
  isExternal: false
  name: InArgument
  nameWithType: InArgument
  fullName: System.Activities.InArgument
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent(InArgument,Type)
  nameWithType: SendMessageContent.SendMessageContent(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
  fullName: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
- uid: System.ServiceModel.Activities.SendMessageContent.Message
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: Message
  nameWithType: SendMessageContent.Message
  fullName: System.ServiceModel.Activities.SendMessageContent.Message
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: ShouldSerializeDeclaredMessageType()
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType()
  fullName: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent
  nameWithType: SendMessageContent.SendMessageContent
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
- uid: System.ServiceModel.Activities.SendMessageContent.Message*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: Message
  nameWithType: SendMessageContent.Message
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: ShouldSerializeDeclaredMessageType
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType
