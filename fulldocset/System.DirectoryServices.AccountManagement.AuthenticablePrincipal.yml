### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  id: AuthenticablePrincipal
  children:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  langs:
  - csharp
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  type: Class
  summary: "封裝可以驗證的主體共通的帳戶和連絡資料。"
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class AuthenticablePrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>類別使用指定的內容。 這個建構函式由衍生類別建構函式來初始化基底類別呼叫，並不適合直接從程式碼使用。"
  remarks: "從衍生的類別建構函式來初始化基底類別，衍生自這個類別的自訂延伸模組類別可以呼叫這個建構函式。 如需詳細資訊，請參閱[主體延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)概觀主題。"
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>類別使用指定的內容、 SAM 帳戶名稱、 密碼，並啟用值。 這個建構函式由衍生類別建構函式來初始化基底類別呼叫，並不適合直接從程式碼使用。"
  remarks: "從衍生的類別建構函式來初始化基底類別，衍生自這個類別的自訂延伸模組類別可以呼叫這個建構函式。 如需詳細資訊，請參閱[主體延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)概觀主題。"
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: samAccountName
      type: System.String
      description: "這個主體的 SAM 帳戶名稱。"
    - id: password
      type: System.String
      description: "此帳戶的密碼。"
    - id: enabled
      type: System.Boolean
      description: "布林值，指定是否已啟用的帳戶。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  id: AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定可為 Null<xref:System.DateTime>指定的日期和時間，並在帳戶到期。</xref:System.DateTime>"
  remarks: "如同所有<xref:System.DateTime>中的屬性<xref:System.DirectoryServices.AccountManagement>，傳回的時間為 UTC 格式。</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  若要將它轉換為本地時間，呼叫<xref:System.DateTime.ToLocalTime%2A>方法傳回的物件上。</xref:System.DateTime.ToLocalTime%2A>       當您設定 AccountExpirationDate 時，時間會預設為 UTC。  如果您想要撰寫以本地時間，然後指定<xref:System.DateTime.Kind%2A>的<xref:System.DateTime>物件做為<xref:DateTimeKind.Local>.</xref:DateTimeKind.Local></xref:System.DateTime>屬性</xref:System.DateTime.Kind%2A>"
  syntax:
    content: public Nullable<DateTime> AccountExpirationDate { get; set; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A<xref:System.DateTime>指定的日期和時間，並在帳戶到期或為 null 時帳戶永久有效。</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  id: AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得可為 Null<xref:System.DateTime>指定的日期和時間的帳戶已鎖定。</xref:System.DateTime>"
  remarks: "帳戶鎖定的時間系統而定，但無法設定帳戶管理 api。 若要解除鎖定帳戶，使用<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>方法。</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>       可能的帳戶可能不會鎖定時<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>傳回非 null 值。</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> 應用程式應該使用<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>方法，以判斷是否有此帳戶已鎖定。</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>       如同所有<xref:System.DateTime>中的屬性<xref:System.DirectoryServices.AccountManagement>，傳回的時間為 UTC 格式。</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  若要將它轉換為本地時間，呼叫<xref:System.DateTime.ToLocalTime%2A>方法傳回的物件上。</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> AccountLockoutTime { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A<xref:System.DateTime>指定的日期和時間的帳戶已鎖定或為 null 時設定帳戶上沒有鎖定的時間。</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回<xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>物件，用於[查詢 By Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e)將物件傳遞至之前，先設定唯讀屬性<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;> </xref>。</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  remarks: "請參閱[查詢 By Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e)範例文件。"
  syntax:
    content: public virtual System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: "<xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>物件。</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  id: AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定布林值，指定此帳戶是否已啟用可回復密碼加密。"
  syntax:
    content: public bool AllowReversiblePasswordEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個帳戶已啟用可回復密碼加密否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  id: BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得針對此帳戶使用不正確的認證登入嘗試次數。"
  syntax:
    content: public int BadLogonCount { get; }
    return:
      type: System.Int32
      description: "針對此帳戶使用不正確的認證時，嘗試登入次數。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  id: Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;></xref>包含 X509 憑證，此帳戶。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref>包含 X509 憑證，此帳戶。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "從舊密碼的帳戶密碼變更為新的密碼。 無法將其搭配<xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>。"
  remarks: "這個方法不是針對電腦原則。 呼叫此與<xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>會導致<xref:System.NotSupportedException>擲回。</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public void ChangePassword (string oldPassword, string newPassword);
    parameters:
    - id: oldPassword
      type: System.String
      description: "變更密碼。"
    - id: newPassword
      type: System.String
      description: "新密碼。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主體不會保存。"
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "新的密碼不符合複雜性需求。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "主體不是使用者。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  id: DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定可為 Null 的布林值，指定是否可以委派的帳戶。"
  syntax:
    content: public bool DelegationPermitted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果帳戶可以委派。，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  id: Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定可為 Null 的布林值，指定是否啟用此帳戶進行驗證。"
  remarks: "如果主體未保存存放區中，這個屬性會傳回 null。 保存主體之後，預設啟用的設定取決於存放區。 AD DS 和 AD LDS 存放區時停用新的主體會將它們保存，而 SAM 時將它們保存可讓新的主體。 應用程式只能設定此屬性的值之後已保存存放區中。"
  syntax:
    content: public Nullable<bool> Enabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主體是已啟用，或如果帳戶尚未保存，則為 null否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "應用程式嘗試設定此屬性的 null 值。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  id: ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "此帳戶的密碼到期。 這會強制使用者變更其密碼，在下次登入時。"
  remarks: "呼叫這個方法，以強制要求使用者在下次登入時變更密碼。"
  syntax:
    content: public void ExpirePasswordNow ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "將變更儲存至存放區時發生例外狀況。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回驗證擁有不正確的密碼再試一次記錄在指定的日期和時間範圍內的主體物件的集合。"
  remarks: "時間會預設為 UTC。  如果您想要以本地時間中指定的時間，然後指定<xref:System.DateTime.Kind%2A>屬性`time`物件做為<xref:DateTimeKind.Local>.</xref:DateTimeKind.Local> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>的伺服器或網域作業將會針對指定的物件。"
    - id: time
      type: System.DateTime
      description: "A<xref:System.DateTime>物件，可識別的日期和時間不正確的密碼再試一次。</xref:System.DateTime> 此參數搭配型別參數，以判斷其中傳回的物件具有不正確的登入再試一次記錄的時間範圍。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>列舉值，指定套用至符合的項目類型`time`參數。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; ，其中包含一或多個<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>物件，則為空的集合，如果找不到任何結果。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByBadPasswordAttempt<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "即將加入。"
    - id: time
      type: System.DateTime
      description: "即將加入。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "即將加入。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "即將加入。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回驗證有帳戶到期時間記錄在指定的日期和時間範圍內的主體物件的集合。"
  remarks: "時間會預設為 UTC。 如果您想要以本地時間中指定的時間，然後指定<xref:System.DateTime.Kind%2A>屬性`time`物件做為<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: time
      type: System.DateTime
      description: "A<xref:System.DateTime>物件，可識別的日期和時間的帳戶到期日。</xref:System.DateTime> 這個參數用於型別參數以決定中傳回的物件有帳戶過期記錄的時間範圍。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>列舉值，指定套用至符合的項目類型`time`參數。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; ，其中包含一或多個<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByExpirationTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "即將加入。"
    - id: time
      type: System.DateTime
      description: "即將加入。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "即將加入。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "即將加入。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回驗證有帳戶鎖定時間記錄在指定的日期和時間範圍內的主體物件的集合。"
  remarks: "時間會預設為 UTC。  如果您想要以本地時間中指定的時間，然後指定<xref:System.DateTime.Kind%2A>屬性`time`物件做為<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: time
      type: System.DateTime
      description: "A<xref:System.DateTime>識別的日期和時間，帳戶鎖定的物件。</xref:System.DateTime> 這個參數用於型別參數以決定中傳回的物件有記錄帳戶鎖定的時間範圍。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>列舉值，指定套用至符合的項目類型`time`參數。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; ，其中包含一或多個<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLockoutTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "即將加入。"
    - id: time
      type: System.DateTime
      description: "即將加入。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "即將加入。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "即將加入。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回的驗證已記錄在指定的日期和時間範圍內的帳戶登入的主體物件的集合。"
  remarks: "時間會預設為 UTC。 如果您想要以本地時間中指定的時間，然後指定<xref:System.DateTime.Kind%2A>屬性`time`物件做為<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  example:
  - "The following code connects to the ADAM instance hosted by the server \"adamHost1.fabrikam.com\" on port number \"5000.\" The username (adamAdmin), and password (SecretPwd123) are specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed for all authenticable principals under the container \"DC=adamApp1,DC=fabrikam,DC=com\" that have not logged on to this ADAM instance for the last 45 days. The principals returned by the search are then deleted.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(  \n                                      ContextType.ApplicationDirectory,   \n                                      \"adamHost1.fabrikam.com:5000\",   \n                                      \"DC=adamApp1,DC=fabrikam,DC=com\",   \n                                      \"adamAdmin\", \"SecretPwd123\");  \n  \nPrincipalSearchResult<AuthenticablePrincipal> oldPrincipals =   \n                     AuthenticablePrincipal.FindByLogonTime(ctx,   \n                            (DateTime.Now - new TimeSpan(45, 0, 0, 0)),   \n                            MatchType.LessThan);  \n  \nforeach (Principal p in oldPrincipals)  \n{  \n    p.Delete();  \n}  \n  \noldPrincipals.Dispose();  \nctx.Dispose();  \n  \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: time
      type: System.DateTime
      description: "A<xref:System.DateTime>物件，可識別的日期和時間的登入記錄。</xref:System.DateTime> 此參數搭配型別參數，來判斷傳回的物件擁有的帳戶登入記錄中的時間範圍。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>列舉值，指定套用至符合的項目類型`time`參數。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; ，其中包含一或多個<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLogonTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "即將加入。"
    - id: time
      type: System.DateTime
      description: "即將加入。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "即將加入。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "即將加入。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回的驗證集合有設定中指定的日期和時間範圍內的 記錄帳戶密碼的主體物件。"
  remarks: "時間會預設為 UTC。 如果您想要以本地時間中指定的時間，然後指定<xref:System.DateTime.Kind%2A>屬性`time`物件做為<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: time
      type: System.DateTime
      description: "A<xref:System.DateTime>物件，可識別的日期和時間設定密碼。</xref:System.DateTime> 這個參數用於型別參數以決定中傳回的物件有密碼，設定記錄的時間範圍。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>列舉值，指定套用至符合的項目類型`time`參數。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; ，其中包含一或多個<xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByPasswordSetTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "即將加入。"
    - id: time
      type: System.DateTime
      description: "即將加入。"
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "即將加入。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "即將加入。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  id: HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定此帳戶的主目錄。"
  syntax:
    content: public string HomeDirectory { get; set; }
    return:
      type: System.String
      description: "主目錄，此帳戶，或如果沒有主目錄則為 null。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  id: HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定此帳戶的主磁碟機。"
  syntax:
    content: public string HomeDrive { get; set; }
    return:
      type: System.String
      description: "家用磁碟機的帳戶或為 null，如果沒有主磁碟機。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  id: IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回布林值，指定是否在帳戶目前已鎖定。"
  remarks: "可能的帳戶可能不會鎖定時<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>傳回非 null 值。</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> 這個方法會計算來判斷是否有此帳戶已鎖定的正確存放區特有鎖定值。"
  syntax:
    content: public bool IsAccountLockedOut ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果帳戶已鎖定。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  id: LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得可為 Null <xref:System.DateTime>，此帳戶上指定的日期和時間的上一次不正確的密碼嘗試。</xref:System.DateTime>"
  remarks: "如同所有<xref:System.DateTime>中的屬性<xref:System.DirectoryServices.AccountManagement>，傳回的時間為 UTC 格式。</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  若要將它轉換為本地時間，呼叫<xref:System.DateTime.ToLocalTime%2A>方法傳回的物件上。</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastBadPasswordAttempt { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable <xref:System.DateTime>，此帳戶時，在指定的日期和時間的上一次不正確的密碼嘗試，或不正確的密碼嘗試會記錄如果沒有則為 null。</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  id: LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得可為 Null<xref:System.DateTime>指定的日期和時間的最後一個登入此帳戶。</xref:System.DateTime>"
  remarks: "如同所有<xref:System.DateTime>中的屬性<xref:System.DirectoryServices.AccountManagement>，傳回的時間為 UTC 格式。</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  若要將它轉換為本地時間，呼叫<xref:System.DateTime.ToLocalTime%2A>方法傳回的物件上。</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastLogon { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable<xref:System.DateTime>指定的日期和時間的最後一個登入此帳戶。</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  id: LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得可為 Null<xref:System.DateTime>指定最後一個日期和時間已設定此帳戶的密碼。</xref:System.DateTime>"
  remarks: "如同所有<xref:System.DateTime>中的屬性<xref:System.DirectoryServices.AccountManagement>，傳回的時間為 UTC 格式。</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  若要將它轉換為本地時間，呼叫<xref:System.DateTime.ToLocalTime%2A>方法傳回的物件上。</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastPasswordSet { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable<xref:System.DateTime>指定最後一個日期和時間已設定此帳戶的密碼。</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  id: PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定布林值，指定此帳戶是否過期的密碼。"
  syntax:
    content: public bool PasswordNeverExpires { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個帳戶的密碼過期否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  id: PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定布林值，指定是否需要此帳戶的密碼。"
  syntax:
    content: public bool PasswordNotRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果需要此帳戶中; 密碼否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  id: PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定主體可以登入的時間。"
  syntax:
    content: public byte[] PermittedLogonTimes { get; set; }
    return:
      type: System.Byte[]
      description: "此帳戶允許的登入的時間。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  id: PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得這個主體允許登入的工作站的清單。"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalValueCollection<string> PermittedWorkstations { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
      description: "這個主體允許登入的工作站可變動清單。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  id: RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "重新整理過期的密碼。"
  syntax:
    content: public void RefreshExpiredPassword ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "將變更儲存至存放區時發生例外狀況。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  id: ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定此帳戶的指令碼路徑。"
  syntax:
    content: public string ScriptPath { get; set; }
    return:
      type: System.String
      description: "此帳戶或如果沒有指令碼路徑為 null 的指令碼的路徑。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "帳戶密碼設定為指定的值。"
  syntax:
    content: public void SetPassword (string newPassword);
    parameters:
    - id: newPassword
      type: System.String
      description: "新密碼。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "如果呼叫端沒有適當的權限、 新的密碼不符合密碼複雜性需求，或變更密碼為基礎存放區拒絕任何其他原因，就會擲回例外狀況。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  id: SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定布林值，指定是否需要智慧卡來登入帳戶。"
  syntax:
    content: public bool SmartcardLogonRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果智慧卡需要登入此帳戶。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  id: UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "如果它目前已鎖定，解除鎖定帳戶。"
  remarks: ''
  example:
  - "The following example code connects to the LDAP domain \"fabrikam.com\" with the username (administrator) and password (SecretPwd123) initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the user with name \"John Smith\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  If the user is found, a check is performed to determine whether this user's account has been locked out. If the account has been locked out, the code example unlocks the account.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,   \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",   \n                                         \"administrator\",   \n                                         \"SecretPwd123\");  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx, \"John Smith\");  \nif (usr != null)  \n{  \n    if (usr.IsAccountLockedOut())  \n        usr.UnlockAccount();  \n  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public void UnlockAccount ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "將變更儲存至存放區時發生例外狀況。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  id: UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定布林值，指定使用者是否可以變更此帳戶的密碼。 無法將其搭配<xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>。"
  remarks: "這個方法不是針對電腦原則。 呼叫此與<xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>會導致<xref:System.NotSupportedException>擲回。</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public bool UserCannotChangePassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果不允許使用者變更密碼。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "這個主體的物件不是使用者。"
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
    name: AuthenticablePrincipal
    nameWithType: AuthenticablePrincipal
    fullName: AuthenticablePrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalValueCollection<String>
  nameWithType: PrincipalValueCollection<String>
  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<System.String>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1
    name: PrincipalValueCollection
    nameWithType: PrincipalValueCollection
    fullName: PrincipalValueCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword
  nameWithType: AuthenticablePrincipal.ChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt<T>
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: AuthenticablePrincipal.FindByExpirationTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime<T>
  nameWithType: AuthenticablePrincipal.FindByExpirationTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: AuthenticablePrincipal.FindByLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime<T>
  nameWithType: AuthenticablePrincipal.FindByLockoutTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: AuthenticablePrincipal.FindByLogonTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime<T>
  nameWithType: AuthenticablePrincipal.FindByLogonTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime<T>
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword
  nameWithType: AuthenticablePrincipal.SetPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount
  nameWithType: AuthenticablePrincipal.UnlockAccount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
