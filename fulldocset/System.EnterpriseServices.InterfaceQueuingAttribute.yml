### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.InterfaceQueuingAttribute
  id: InterfaceQueuingAttribute
  children:
  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  - System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  - System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  langs:
  - csharp
  name: InterfaceQueuingAttribute
  nameWithType: InterfaceQueuingAttribute
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute
  type: Class
  summary: "啟用佇列支援標記的介面。 這個類別無法被繼承。"
  remarks: "此介面上的呼叫將會使用訊息佇列排入佇列。       若要為佇列標記的介面，這個屬性套用至介面，使用下列語法︰ `[InterfaceQueuing]`。       排入佇列的介面的成員方法必須滿足的要求排入佇列的方法呼叫，例如不`out`或`ref`參數。       如需屬性用法的詳細資訊，請參閱[屬性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example shows how to use the `InterfaceQueuingAttribute` attribute.  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/cpp/t-system.enterpriseservi_38_1.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/csharp/t-system.enterpriseservi_38_1.cs)]  \n  \n The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/cpp/t-system.enterpriseservi_38_2.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/csharp/t-system.enterpriseservi_38_2.cs)]  \n  \n The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/cpp/t-system.enterpriseservi_38_3.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/csharp/t-system.enterpriseservi_38_3.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class InterfaceQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: InterfaceQueuingAttribute()
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新執行個體<xref href=&quot;System.EnterpriseServices.InterfaceQueuingAttribute&quot;></xref>類別設定<> *> 和<> *> 成為其預設值的屬性。"
  remarks: "下表顯示<xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</xref:System.EnterpriseServices.InterfaceQueuingAttribute>的執行個體的初始屬性值      |屬性 |值 |  |--------------|-----------|  |啟用 |`true`|  |介面 |`null`|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \n  \n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/cpp/m-system.enterpriseservi_8_1.cpp)]\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_8_1.vb)]\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_8_1.cs)]"
  syntax:
    content: public InterfaceQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: InterfaceQueuingAttribute(Boolean)
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新執行個體<xref href=&quot;System.EnterpriseServices.InterfaceQueuingAttribute&quot;></xref>類別，選擇性地停用佇列支援。"
  remarks: ''
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \n  \n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/cpp/m-system.enterpriseservi_21_1.cpp)]\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/visualbasic/m-system.enterpriseservi_21_1.vb)]\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/csharp/m-system.enterpriseservi_21_1.cs)]"
  syntax:
    content: public InterfaceQueuingAttribute (bool enabled);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用佇列支援;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得或設定值，指出是否啟用佇列支援。"
  remarks: "這個屬性會對應至`Queuing-Enabled`COM + 中的屬性。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果啟用佇列支援;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  id: Interface
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得或設定的介面啟用佇列的名稱。"
  syntax:
    content: public string Interface { get; set; }
    return:
      type: System.String
      description: "介面啟用佇列的名稱。"
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute()
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute(Boolean)
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
