### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor
  id: Cursor
  children:
  - System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  langs:
  - csharp
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor
  type: Class
  summary: "表示沿著軸的位置會定義水平或垂直列。"
  remarks: "資料指標是水平或垂直列會定義沿著軸的位置。 選取範圍是沿座標軸定義依開始和結束的位置，並顯示使用半透明效果的色彩範圍。       資料指標和範圍選取項目都由實作資料指標類別，其會公開為<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>物件。</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>物件可用於 X 軸的圖表區域中，而<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>物件可用於 Y 軸。</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>這些物件的屬性會決定相關聯的軸是主要或次要。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>       只有一個資料指標和範圍選取項目功能找到的資料指標類別外事件相關根目錄中的資料指標和範圍選取範圍<xref:System.Windows.Forms.DataVisualization.Charting.Chart>物件。</xref:System.Windows.Forms.DataVisualization.Charting.Chart>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Enabled")]

      public class Cursor : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.Cursor&quot;></xref>類別。"
  syntax:
    content: public Cursor ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  id: AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定判斷是否捲動會發生當超出界限的圖表區域的範圍選取作業的旗標。"
  remarks: "若資料檢視不會顯示繪製數列中的所有資料點和使用者選取範圍，自動捲動檢視便會發生這個屬性是`true`和滑鼠，而因此的資料指標 — 圖表區域界限之外移動。       捲動才會沿著軸可用來檢視詳細資料。       如果使用者拉近到資料的子集，就會造成資料檢視，通常不會顯示所有資料。 <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>類別</xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>實作檢視和縮放"
  syntax:
    content: public bool AutoScroll { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果自動; 可捲動資料檢視否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  id: AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標連接的軸的類型。"
  remarks: "有兩個集合的座標軸︰ 主要和次要。 主座標軸的橫條圖以外的所有圖表位於底部 （主要 x 軸） 及左 （主要 y 軸） 的圖表區域的框線。       次要軸位於的權限 （次要 x 軸） 和圖表區域的頂端 （次要 y 軸） 框線。      > [!NOTE] > 如果繪製內的所有數列的圖表區域使用軸 （例如，在主要 x 軸），只有一個類型則設定此屬性座標軸 （在此情況下，次要 x 軸） 的數列未使用的型別將沒有效果; 資料指標會自動附加至唯一用來繪製數列的座標軸。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.AxisType
      description: "<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.AxisType&quot;> </xref>列舉值，表示是否在軸附加到主要或次要軸。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  id: Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "執行應用程式定義的工作，釋出、 釋放，或重設 unmanaged 的資源。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "釋放 unmanaged 資源並，或者，managed 資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標間隔。"
  remarks: "[間隔] 屬性會決定資料指標如何通常及在何處可以繪製使用者，以及何處可以繪製的開頭和結束點的選取範圍。 值為零，也就是預設值，表示資料指標或範圍的選取項目可以任何位置繪製在圖表區域中。 為非零值表示的資料指標或開頭和/或之選取範圍的結束點將只應該繪製在指定當使用者互動所設定的間隔。       度量單位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>       這個屬性也可以用於搭配<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>屬性，可讓您指定的位移，從指定的時間間隔。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 比方說，若要允許的資料指標才會顯示每個星期六，間隔為 1 週應指定，以及為 6 天的間隔位移。 在.NET Framework 中，會星期日視為一週的第一天。       如果資料指標使用者介面來設定啟用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>屬性，而且滑鼠按一下圖表區域內部，游標的位置將會設定為最接近可允許的位置。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>      > [!IMPORTANT] > 間隔屬性沒有任何作用，如果您設定資料指標的位置，或以程式設計方式選取範圍的範圍。"
  syntax:
    content: public double Interval { get; set; }
    return:
      type: System.Double
      description: "資料指標的間隔。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定的間隔位移，其中繪製資料指標和範圍選取項目時由使用者設定的影響。"
  remarks: "IntervalOffset 屬性決定間隔位移的資料指標和開始及/或選取範圍的結束點。 搭配<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>屬性，這個屬性會決定在資料指標和範圍可以顯示在圖表區域中。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 值為零，也就是預設值，表示沒有位移。       度量單位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>       位移會影響的資料指標和的開頭和/或選取範圍的結束點可以繪製的位置。 比方說，若要允許的資料指標才會顯示每個星期六，間隔為 1 週應指定，以及為 6 天的間隔位移。 在.NET Framework 中，會星期日視為一週的第一天。       如果資料指標使用者介面來設定啟用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>屬性，而且滑鼠按一下圖表區域內部，游標的位置將會設定為最接近可允許的位置。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>      > [!IMPORTANT] > 間隔相關屬性都不會影響當選取範圍或資料指標位置會以程式設計方式設定。"
  syntax:
    content: public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: "間隔位移。 預設值是零，表示沒有限制，並允許負數值。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標和軸的選取的範圍 」 的間隔位移的類型。"
  remarks: "IntervalOffsetType 屬性決定間隔位移，使用指定的型別<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>       如果 IntervalOffsetType 屬性設定為<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>、 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>，會使用屬性設定。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>      > [!NOTE] > 間隔相關屬性都不會影響當選取範圍或資料指標位置會以程式設計方式設定。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>列舉值，決定的間隔位移的度量單位。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標和軸的選取的範圍的間隔類型。"
  remarks: "IntervalType 屬性決定的間隔，使用指定的型別<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>       如果間隔類型為<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>，間隔的度量單位會被視為`double`，這相當於一天時<xref:System.DateTime>指定的值。</xref:System.DateTime> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>      > [!NOTE] > 間隔相關屬性都不會影響當選取範圍，或以程式設計方式設定資料指標位置。       如果軸間隔類型代表時間 — 比方說，小時、 分鐘等等，然後才能正確縮放函式，IntervalType 也必須設定為時間值。 例如，如果 ChartArea1.AxisX.IntervalType 會表示小時，則 ChartArea1.CursorX.IntervalType 無法設為分鐘。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "資料指標和軸的選取的範圍的間隔類型。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  id: IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定旗標，啟用或停用資料指標使用者介面。"
  syntax:
    content: public bool IsUserEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果資料指標使用者介面已啟用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  id: IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定旗標，啟用或停用範圍選取使用者介面。"
  syntax:
    content: public bool IsUserSelectionEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用範圍選取使用者介面。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  id: LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標線條色彩。"
  syntax:
    content: public System.Drawing.Color LineColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "資料指標的線條色彩。 預設值是<xref:System.Drawing.Color.Red*>.</xref:System.Drawing.Color.Red*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  id: LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標線的樣式。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: "資料指標線的樣式。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  id: LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定線條的寬度，單位為像素資料指標"
  remarks: "使用這個屬性來指定線條寬度，單位為像素資料指標。"
  syntax:
    content: public int LineWidth { get; set; }
    return:
      type: System.Int32
      description: "線條寬度 （單位為像素為單位）。 預設值是一 (1)。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  id: Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定游標的位置。"
  remarks: "這個屬性可以用來取得游標的位置，以及以程式設計方式設定資料指標位置。       位置以表示軸的值屬於資料指標，是由決定<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>屬性。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> 例如，如果資料指標屬於主要 X 軸，然後將此屬性設定為 2000 年 1 月 1 日的值會導致在 2000 年 1 月 1 日位置沿著軸繪製 x 軸資料指標。 如果此軸的值不存在，將不會顯示資料指標。       請注意，如果您設定此屬性，則<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>屬性將沒有效果; 也就是資料指標將會顯示在此指定的位置。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>       設定這個屬性將不會引發<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>或<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>事件。</xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> </xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>       或者，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>方法可以用來設定資料指標。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>       若要以程式設計方式移除資料指標，請使用這個屬性來設定至<xref:System.Double.NaN>。</xref:System.Double.NaN>游標的位置"
  syntax:
    content: public double Position { get; set; }
    return:
      type: System.Double
      description: "資料指標的位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  id: SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定半透明效果的色彩反白顯示的資料範圍。"
  remarks: "這個屬性會決定範圍選取區的色彩，您可以將任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值。 如果 alpha 值判斷透明度，未提供，則會使用預設 alpha 值是 120。       選取的色彩可以設定 X 和 Y 軸資料指標，這使用實作<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>屬性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>物件，分別。</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> 如果沿著 x 軸只能選取範圍，則會使用 x 軸資料指標的 SelectionColor 值;如果沿著 y 軸只能選取範圍，則會使用 y 軸資料指標的 SelectionColor 值。 如果選取範圍時，沿著兩個座標軸，y 軸資料指標的 SelectionColor 值也會使用選取的色彩。"
  syntax:
    content: public System.Drawing.Color SelectionColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "反白顯示範圍的色彩。 預設值是<xref:System.Drawing.Color.LightGray*>，alpha 值為 120。</xref:System.Drawing.Color.LightGray*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  id: SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定選取範圍的結束位置。"
  remarks: "使用者可以選取範圍，以在圖表區域中的按一下滑鼠左鍵並拖曳滑鼠。 請注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>屬性也必須設定為`true`。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 此外，選取範圍可以設定以程式設計方式使用任一 SelectionEnd 和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>屬性，或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>       選取範圍的結束位置計算為軸資料指標所屬的值。 比方說，如果資料指標屬於主要 x 軸，而且您 SelectionEnd 將屬性設定為 2000 年 12 月 31 日的值選取區域的一端會在 2000 年 12 月 31 日沿著主要 X 軸。       若要以程式設計方式移除選取範圍，設定開始和結束點之範圍的<xref:System.Double.NaN>使用 SelectionEnd 和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>屬性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> </xref:System.Double.NaN>"
  syntax:
    content: public double SelectionEnd { get; set; }
    return:
      type: System.Double
      description: "選取範圍結束位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  id: SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得或設定資料指標的選取範圍的開始位置。"
  remarks: "使用者可以選取範圍上滑鼠左鍵按一下，然後拖曳滑鼠移動游標位置。 請注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>屬性也必須設定為`true`。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 此外，選取範圍可以設定以程式設計方式使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>和 SelectionStart 屬性或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>       選取範圍的開始位置計算為軸資料指標所屬的值。 例如，如果資料指標屬於主要 x 軸，而且您 SelectionStart 將屬性設定為 2000 年 1 月 1 日的值所選區域的開頭會在 2000 年 1 月 1 日沿著主要 X 軸。       若要以程式設計方式移除選取範圍，設定開始和結束點之範圍的<xref:System.Double.NaN>使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>及 SelectionStart 屬性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> </xref:System.Double.NaN>"
  syntax:
    content: public double SelectionStart { get; set; }
    return:
      type: System.Double
      description: "資料指標的選取範圍的開始位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  id: SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "顯示指定位置處的資料指標。 以像素為單位。"
  syntax:
    content: public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>結構，指定要繪製游標。"
    - id: roundToBoundary
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，游標會繪製最接近的圖表區域界限，如果指定的位置不是落在<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;></xref>物件。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  id: SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "在指定的軸值在圖表區域中設定資料指標的位置。"
  syntax:
    content: public void SetCursorPosition (double newPosition);
    parameters:
    - id: newPosition
      type: System.Double
      description: "資料指標的新位置。 以相關軸的值。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  id: SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "設定選取範圍的開始和結束位置。"
  syntax:
    content: public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);
    parameters:
    - id: startPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>結構，指定選取範圍的開始位置。"
    - id: endPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>結構，指定選取範圍的結束位置。"
    - id: roundToBoundary
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，開始和結束點將會捨入到最接近的圖表區域界限如果指定的位置不落<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;></xref>物件。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  id: SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "設定在指定的軸值在圖表區域中的選取範圍的位置。"
  syntax:
    content: public void SetSelectionPosition (double newStart, double newEnd);
    parameters:
    - id: newStart
      type: System.Double
      description: "新的起始位置的選取範圍。 以相關軸的值。"
    - id: newEnd
      type: System.Double
      description: "選取範圍的新結束位置。 以相關軸的值。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: AxisType
  nameWithType: AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor
  nameWithType: Cursor.Cursor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose
  nameWithType: Cursor.Dispose
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition
  nameWithType: Cursor.SetCursorPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition
  nameWithType: Cursor.SetCursorPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition
  nameWithType: Cursor.SetSelectionPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition
  nameWithType: Cursor.SetSelectionPosition
