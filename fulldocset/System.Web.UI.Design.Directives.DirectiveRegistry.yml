### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.Directives.DirectiveRegistry
  id: DirectiveRegistry
  children:
  - System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)
  langs:
  - csharp
  name: DirectiveRegistry
  nameWithType: DirectiveRegistry
  fullName: System.Web.UI.Design.Directives.DirectiveRegistry
  type: Class
  summary: "建立在執行階段指示詞 IntelliSense 時提供支援。"
  syntax:
    content: public static class DirectiveRegistry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)
  id: GetDirectives(System.Version,System.String)
  parent: System.Web.UI.Design.Directives.DirectiveRegistry
  langs:
  - csharp
  name: GetDirectives(Version,String)
  nameWithType: DirectiveRegistry.GetDirectives(Version,String)
  fullName: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(Version,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.Directives
  summary: "傳回指示詞為基礎的集合<code> frameworkVersion </code>參數和<code> extension </code>參數。"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<Type> GetDirectives (Version frameworkVersion, string extension);
    parameters:
    - id: frameworkVersion
      type: System.Version
      description: ".NET Framework 版本。"
    - id: extension
      type: System.String
      description: "副檔名。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
      description: "唯讀的集合。"
  overload: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)
  parent: System.Web.UI.Design.Directives.DirectiveRegistry
  isExternal: false
  name: GetDirectives(Version,String)
  nameWithType: DirectiveRegistry.GetDirectives(Version,String)
  fullName: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(Version,String)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Type>
  nameWithType: ReadOnlyCollection<Type>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives*
  parent: System.Web.UI.Design.Directives.DirectiveRegistry
  isExternal: false
  name: GetDirectives
  nameWithType: DirectiveRegistry.GetDirectives
