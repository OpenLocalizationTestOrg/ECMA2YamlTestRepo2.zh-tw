### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.RotateTransform
  id: RotateTransform
  children:
  - System.Windows.Media.RotateTransform.#ctor
  - System.Windows.Media.RotateTransform.#ctor(System.Double)
  - System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  - System.Windows.Media.RotateTransform.Angle
  - System.Windows.Media.RotateTransform.AngleProperty
  - System.Windows.Media.RotateTransform.CenterX
  - System.Windows.Media.RotateTransform.CenterXProperty
  - System.Windows.Media.RotateTransform.CenterY
  - System.Windows.Media.RotateTransform.CenterYProperty
  - System.Windows.Media.RotateTransform.Clone
  - System.Windows.Media.RotateTransform.CloneCurrentValue
  - System.Windows.Media.RotateTransform.CreateInstanceCore
  - System.Windows.Media.RotateTransform.Value
  langs:
  - csharp
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
  type: Class
  summary: "將物件中的指定點進行順時針旋轉[!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)]x，y 座標系統。"
  remarks: "Rotatetransform 旋轉所指定<xref:System.Windows.Media.RotateTransform.Angle%2A>的點<xref:System.Windows.Media.RotateTransform.CenterX%2A>、 <xref:System.Windows.Media.RotateTransform.CenterY%2A>.</xref:System.Windows.Media.RotateTransform.CenterY%2A></xref:System.Windows.Media.RotateTransform.CenterX%2A></xref:System.Windows.Media.RotateTransform.Angle%2A>旋轉物件       當您使用 rotatetransform 旋轉時，了解轉換旋轉 （0，0） 以點為特定物件的座標系統。 因此，根據物件的位置，可能不旋轉就地 （大約是對其中心）。 例如，如果物件是從 0 沿著 x 軸位於 200 個單位，30 度旋轉會將物件圓弧 30 度沿著圓形的半徑為 200，原點周圍繪製的。 若要旋轉的位置中的物件，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的物件的中心 rotatetransform 旋轉，旋轉。</xref:System.Windows.Media.RotateTransform.CenterY%2A> </xref:System.Windows.Media.RotateTransform.CenterX%2A>       **可凍結的功能︰**因為它繼承自<xref:System.Windows.Freezable>類別 rotatetransform 旋轉類別提供數個特殊功能︰ rotatetransform 旋轉物件可以宣告為多個物件之間共用，變成唯讀，以改善效能、 複製，而進行安全執行緒。</xref:System.Windows.Freezable> 如需有關所提供的不同功能<xref:System.Windows.Freezable>物件，請參閱[Freezable 物件概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.Freezable>"
  syntax:
    content: 'public sealed class RotateTransform : System.Windows.Media.Transform'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.GeneralTransform
  - System.Windows.Media.Transform
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.ToString
  - System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)
  - System.Windows.Media.Transform.Identity
  - System.Windows.Media.Transform.Inverse
  - System.Windows.Media.Transform.Parse(System.String)
  - System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)
  - System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor
  id: '#ctor'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>類別。"
  syntax:
    content: public RotateTransform ();
    parameters: []
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>類別具有指定的角度，以度為單位，順時針旋轉。 旋轉內置原點 (0，0)。"
  syntax:
    content: public RotateTransform (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "順時針旋轉的角度，以度為單位。"
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>擁有指定的角度和中心點的類別。"
  syntax:
    content: public RotateTransform (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "順時針旋轉的角度，以度為單位。 如需詳細資訊，請參閱<xref:System.Windows.Media.RotateTransform.Angle*>屬性。</xref:System.Windows.Media.RotateTransform.Angle*>"
    - id: centerX
      type: System.Double
      description: "中心點的 x 座標<xref href=&quot;System.Windows.Media.RotateTransform&quot;> </xref>。 如需詳細資訊，請參閱<xref:System.Windows.Media.RotateTransform.CenterX*>屬性。</xref:System.Windows.Media.RotateTransform.CenterX*>"
    - id: centerY
      type: System.Double
      description: "中心點的 y 座標<xref href=&quot;System.Windows.Media.RotateTransform&quot;> </xref>。 如需詳細資訊，請參閱<xref:System.Windows.Media.RotateTransform.CenterY*>屬性。</xref:System.Windows.Media.RotateTransform.CenterY*>"
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Angle
  id: Angle
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定旋轉的角度，以度為單位，順時針旋轉。"
  remarks: "當您使用<xref:System.Windows.Media.RotateTransform>，實現轉換旋轉 （0，0） 以點為特定物件的座標系統。</xref:System.Windows.Media.RotateTransform> 因此，根據物件的位置，可能不旋轉就地 （大約是對其中心）。 例如，如果物件是從 0 沿著 x 軸位於 200 個單位，30 度旋轉會將物件圓弧 30 度沿著圓形的半徑為 200，原點周圍繪製的。 若要旋轉的位置中的物件，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterY%2A> </xref:System.Windows.Media.RotateTransform.CenterX%2A>      <a name=&quot;dependencyPropertyInfo_Angle&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.RotateTransform.AngleProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.RotateTransform.AngleProperty>"
  syntax:
    content: public double Angle { get; set; }
    return:
      type: System.Double
      description: "以度為單位，順時針旋轉角度。 預設值為 0。"
  overload: System.Windows.Media.RotateTransform.Angle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.AngleProperty
  id: AngleProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "識別<xref:System.Windows.Media.RotateTransform.Angle*>相依性屬性。</xref:System.Windows.Media.RotateTransform.Angle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterX
  id: CenterX
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定旋轉中心點的 x 座標。"
  remarks: "當您使用<xref:System.Windows.Media.RotateTransform>，實現轉換旋轉 （0，0） 以點為特定物件的座標系統。</xref:System.Windows.Media.RotateTransform> 因此，根據物件的位置，可能不旋轉就地 （大約是對其中心）。 例如，如果物件是從 0 沿著 x 軸位於 200 個單位，30 度旋轉會將物件圓弧 30 度沿著圓形的半徑為 200，原點周圍繪製的。 若要旋轉的位置中的物件，設定 CenterX 和<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterY%2A>      <a name=&quot;dependencyPropertyInfo_CenterX&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.RotateTransform.CenterXProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.RotateTransform.CenterXProperty>"
  syntax:
    content: public double CenterX { get; set; }
    return:
      type: System.Double
      description: "旋轉中心的 x 座標。 預設值是`0`。"
  overload: System.Windows.Media.RotateTransform.CenterX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  id: CenterXProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "識別<xref:System.Windows.Media.RotateTransform.CenterX*>相依性屬性。</xref:System.Windows.Media.RotateTransform.CenterX*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterXProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterY
  id: CenterY
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得或設定旋轉中心點的 y 座標。"
  remarks: "當您使用<xref:System.Windows.Media.RotateTransform>，實現轉換旋轉 （0，0） 以點為特定物件的座標系統。</xref:System.Windows.Media.RotateTransform> 因此，根據物件的位置，可能不旋轉就地 （大約是對其中心）。 例如，如果物件是從 0 沿著 x 軸位於 200 個單位，30 度旋轉會將物件圓弧 30 度沿著圓形的半徑為 200，原點周圍繪製的。 若要旋轉的位置中的物件，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>和 CenterY 的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。</xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.RotateTransform.CenterX%2A>      <a name=&quot;dependencyPropertyInfo_CenterY&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.RotateTransform.CenterYProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.RotateTransform.CenterYProperty>"
  syntax:
    content: public double CenterY { get; set; }
    return:
      type: System.Double
      description: "旋轉中心的 y 座標。 預設值是`0`。"
  overload: System.Windows.Media.RotateTransform.CenterY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  id: CenterYProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "識別<xref:System.Windows.Media.RotateTransform.CenterY*>相依性屬性。</xref:System.Windows.Media.RotateTransform.CenterY*>"
  remarks: "識別項<xref:System.Windows.Media.RotateTransform.CenterY%2A>相依性屬性。</xref:System.Windows.Media.RotateTransform.CenterY%2A>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterYProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Clone
  id: Clone
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "建立的可修改的複本<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>藉由其值的深層複本。"
  remarks: "使用這個方法來產生可修改複本的唯讀<xref:System.Windows.Freezable>物件。</xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       當這個方法會複製相依性屬性時，會複製資源參考和資料繫結，但可能已不能再解析也一樣。 它不會複製動畫或它們目前的值。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.RotateTransform Clone ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "目前物件的可修改深層複本。 <> </> *> 複製物件的屬性會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使<> *> 的來源屬性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.RotateTransform.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "建立的可修改的複本<xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>物件藉由其值的深層複本。 這個方法不會複製資源參考、 資料繫結或動畫，但是會複製其目前值。"
  remarks: "使用這個方法來產生可修改複本的唯讀<xref:System.Windows.Freezable>物件。</xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.RotateTransform CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "目前物件的可修改深層複本。 <> </> *> 複製物件的屬性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使<> *> 的來源屬性是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.RotateTransform.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "即將加入。"
  overload: System.Windows.Media.RotateTransform.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Value
  id: Value
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得目前旋轉轉換為<xref href=&quot;System.Windows.Media.Matrix&quot;></xref>物件。"
  syntax:
    content: public override System.Windows.Media.Matrix Value { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "目前旋轉轉換為<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>。"
  overload: System.Windows.Media.RotateTransform.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Transform
  isExternal: false
  name: System.Windows.Media.Transform
- uid: System.Windows.Media.RotateTransform.#ctor
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
- uid: System.Windows.Media.RotateTransform.Angle
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.AngleProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.RotateTransform.CenterX
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
- uid: System.Windows.Media.RotateTransform.CenterY
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
- uid: System.Windows.Media.RotateTransform.Clone
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
- uid: System.Windows.Media.RotateTransform
  parent: System.Windows.Media
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.RotateTransform.Value
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.RotateTransform.#ctor*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform.RotateTransform
- uid: System.Windows.Media.RotateTransform.Angle*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.CenterX*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterY*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.Clone*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone
  nameWithType: RotateTransform.Clone
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue
  nameWithType: RotateTransform.CloneCurrentValue
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore
  nameWithType: RotateTransform.CreateInstanceCore
- uid: System.Windows.Media.RotateTransform.Value*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
