### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ISynchronizeInvoke
  id: ISynchronizeInvoke
  children:
  - System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  - System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  langs:
  - csharp
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
  type: Interface
  summary: "提供以同步或非同步方式執行委派。"
  remarks: "The ISynchronizeInvoke interface provides synchronous and asynchronous communication between objects about the occurrence of an event. Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event. In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.  \n  \n The ISynchronizeInvoke class provides two ways to invoke a process:  \n  \n1.  Asynchronously, by using the [BeginInvoke(Delegate, Object\\[\\])](assetId:///M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])?qualifyHint=False&autoUpgrade=True) method. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately. Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.  \n  \n2.  Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns. Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource> &#124; <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ISynchronizeInvoke
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: BeginInvoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "以非同步方式建立此物件的執行緒上執行委派。"
  remarks: "`method`委派會在建立物件，而非 BeginInvoke 已在其呼叫執行緒的執行緒上執行。       會以非同步方式呼叫的委派，這個方法會立即傳回。 您可以從任何執行緒呼叫這個方法。 如果您需要使用此方法啟動的處理序的傳回值，呼叫<xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>要取得其值。</xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>       如果您要以同步方式呼叫委派時，請使用<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>方法而。</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "A<xref:System.Delegate>採用相同的數字和中所包含的型別參數的方法`args`。</xref:System.Delegate>"
    - id: args
      type: System.Object[]
      description: "類型的陣列<xref:System.Object>做為引數傳遞至指定的方法。</xref:System.Object> 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不需要任何引數。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>藉由呼叫這個方法已啟動，表示非同步作業的介面。</xref:System.IAsyncResult>"
  overload: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: System.ComponentModel.ISynchronizeInvoke.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "等候處理程序才能啟動藉由呼叫<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>完成時，便會傳回處理序所產生的值。</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>"
  remarks: "這個方法會取得代表非同步作業的傳回值<xref:System.IAsyncResult>傳遞此介面。</xref:System.IAsyncResult> 如果尚未完成非同步作業，這個方法會等候直到得到結果為止。"
  syntax:
    content: public object EndInvoke (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，代表所呼叫<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>.</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>啟動非同步作業的介面</xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "<xref:System.Object>，表示非同步作業產生的傳回值。</xref:System.Object>"
  overload: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  id: Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: Invoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.Invoke(Delegate,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "在建立此物件及要建立的執行緒呼叫封送處理的執行緒上，以同步方式執行委派。"
  remarks: "不同於<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>，這個方法會以同步方式運作，也就是說，它會等候處理程序完成後再傳回。</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> 在呼叫時引發的例外狀況會傳播回到呼叫端。       使用此方法時從另一個執行緒呼叫的方法來封送處理至適當的執行緒呼叫。"
  syntax:
    content: public object Invoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "A <xref:System.Delegate>，其中包含要呼叫，控制項的執行緒內容中的方法。</xref:System.Delegate>"
    - id: args
      type: System.Object[]
      description: "類型的陣列<xref:System.Object>，代表傳遞至指定方法的引數。</xref:System.Object> 這可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不需要任何引數。"
    return:
      type: System.Object
      description: "<xref:System.Object>表示所叫用，委派的傳回值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果委派沒有傳回值。</xref:System.Object>"
  overload: System.ComponentModel.ISynchronizeInvoke.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  id: InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出是否必須呼叫<xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>呼叫物件時實作此介面。</xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>"
  remarks: "此屬性會決定是否必須呼叫<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>當建立物件的方法呼叫會實作這個介面。</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> 這類物件會繫結至特定的執行緒，並不是安全執行緒。 如果您從不同的執行緒呼叫的方法，您必須使用<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>方法來封送處理至適當的執行緒呼叫。</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>"
  syntax:
    content: public bool InvokeRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果呼叫端必須呼叫<xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>"
  overload: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: System.ComponentModel.ISynchronizeInvoke.EndInvoke(IAsyncResult)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.Invoke(Delegate,Object[])
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke
  nameWithType: ISynchronizeInvoke.BeginInvoke
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke
  nameWithType: ISynchronizeInvoke.EndInvoke
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke
  nameWithType: ISynchronizeInvoke.Invoke
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
