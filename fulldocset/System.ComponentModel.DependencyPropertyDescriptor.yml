### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DependencyPropertyDescriptor
  id: DependencyPropertyDescriptor
  children:
  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.Attributes
  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.Category
  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  - System.ComponentModel.DependencyPropertyDescriptor.Converter
  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  - System.ComponentModel.DependencyPropertyDescriptor.Description
  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  - System.ComponentModel.DependencyPropertyDescriptor.Metadata
  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  - System.ComponentModel.DependencyPropertyDescriptor.ToString
  langs:
  - csharp
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
  type: Class
  summary: "提供的延伸模組<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>負責相依性屬性的其他屬性特性。"
  remarks: "這個類別主要是由設計工具的應用程式使用。 這些應用程式可能需要透過屬性視窗或其他工具，用來編輯屬性值的相依性屬性特性的報表。       若要檢查特定的屬性，以判斷它是否有可用做為 DependencyPropertyDescriptor <xref:System.ComponentModel.PropertyDescriptor>，呼叫<xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>，或<xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>.</xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName> </xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor> 如果任一個方法會傳回`null`，則屬性不是相依性屬性。 如果此方法會傳回有效的 DependencyPropertyDescriptor，屬性是相依性屬性。"
  syntax:
    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  - System.ComponentModel.PropertyDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "可讓其他物件，這個屬性變更時收到通知。"
  syntax:
    content: public override void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "要加入的處理常式的元件。"
    - id: handler
      type: System.EventHandler
      description: "要加入做為接聽程式的委派。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得這個成員的屬性集合。"
  syntax:
    content: public override System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref>屬性集合。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回是否重設物件變更其值。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "要測試重設功能的元件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果重設此元件會變更其值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  id: Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得之成員所屬的分類名稱中所指定<xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Category { get; }
    return:
      type: System.String
      description: "成員所屬的類別的名稱。 如果沒有任何<xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>，類別名稱設定為預設分類， <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得這個屬性繫結至元件的類型。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override Type ComponentType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>表示這個屬性繫結元件型別。</xref:System.Type> 當<> *> 或<> *> 會叫用指定的物件可能是此類型的執行個體。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得這個屬性的型別轉換子。"
  remarks: "這個屬性可能是`null`案例中，<xref:System.ComponentModel.TypeConverter>是不公用類別。</xref:System.ComponentModel.TypeConverter>使用屬性"
  syntax:
    content: public override System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> ，用來轉換<xref:System.Type>這個屬性。</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  id: DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回相依性屬性的識別項。"
  remarks: "這個屬性可能是`null`如果<xref:System.ComponentModel.DependencyPropertyDescriptor>建立執行個體不是相依性屬性的屬性。</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "相依性屬性的識別項。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  id: Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得的成員，如中所指定的描述<xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Description { get; }
    return:
      type: System.String
      description: "之成員的描述。 如果沒有任何<xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>，屬性值設為預設值為空字串 (&quot;&quot;)。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  id: DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得或設定回呼，設計工具使用的相依性屬性的值儲存在相依性屬性引擎之前，請修改相依性屬性的有效值。"
  syntax:
    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }
    return:
      type: System.Windows.CoerceValueCallback
      description: "回呼設計工具使用的相依性屬性的值儲存在相依性屬性引擎之前，請修改相依性屬性的有效值。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得這個成員應該只能在設計階段，如中所指定設定是否<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個成員應該只能在設計階段設定<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果成員可以設定在執行階段。 如果沒有任何<xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>，則傳回值是為預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得可在視窗中，例如 [屬性] 視窗中顯示的名稱。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string DisplayName { get; }
    return:
      type: System.String
      description: "若要顯示的屬性名稱。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "比較兩個<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>執行個體是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>要與目前的執行個體相比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果值相等。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  id: FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供的屬性名稱。"
  remarks: "`name`可能會參考相依性屬性或附加的屬性，而且`name`參數傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>呼叫定義所討論的屬性。</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`做為一次擁有屬性的物件類型傳遞給<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A></xref:System.Windows.DependencyProperty.Register%2A>嗎 `targetType`是您想要設定的屬性物件類型。 相依性屬性`ownerType`和`targetType`類型相同。 它們通常是不同的附加屬性。"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);
    parameters:
    - id: name
      type: System.String
      description: "相依性屬性或附加的屬性的已註冊的名稱。"
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>擁有屬性定義的物件。</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>您想要設定屬性 for...in 物件</xref:System.Type>"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "要求<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  id: FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供的屬性名稱。"
  remarks: "`name`可能會參考相依性屬性或附加的屬性，而且`name`參數傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>呼叫定義所討論的屬性。</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`做為一次擁有屬性的物件類型傳遞給<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A></xref:System.Windows.DependencyProperty.Register%2A>嗎 `targetType`是您想要設定的屬性物件類型。 相依性屬性`ownerType`和`targetType`類型相同。 它們通常是不同的附加屬性。"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);
    parameters:
    - id: name
      type: System.String
      description: "相依性屬性或附加的屬性的已註冊的名稱。"
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>擁有屬性定義的物件。</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>您想要設定屬性 for...in 物件</xref:System.Type>"
    - id: ignorePropertyType
      type: System.Boolean
      description: "指定要忽略的屬性類型。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "要求<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  id: FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>如提供<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>。"
  remarks: "這個方法是用來取得<xref:System.ComponentModel.DependencyPropertyDescriptor>檢查所有的屬性。<xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.PropertyDescriptor>基礎</xref:System.ComponentModel.DependencyPropertyDescriptor>設計工具的應用程式的主要方法"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>檢查。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "如果所描述的屬性<code> property </code>是相依性屬性，傳回有效<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。 反之則傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  id: FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;></xref>提供之相依性屬性和目標類型。"
  remarks: "`dependencyProperty`可能會參考相依性屬性或附加的屬性。 `targetType`是您想要設定的屬性物件類型。 相依性屬性的型別就相當於<xref:System.Windows.DependencyProperty.OwnerType%2A>如`dependencyProperty`。</xref:System.Windows.DependencyProperty.OwnerType%2A> 為附加屬性`targetType`通常是其他<xref:System.Windows.DependencyObject>型別。</xref:System.Windows.DependencyObject>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);
    parameters:
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "相依性屬性的識別項。"
    - id: targetType
      type: System.Type
      description: "物件的屬性設的類型。"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>提供相依性屬性。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "要取得屬性的元件。"
    - id: filter
      type: System.Attribute[]
      description: "類型的陣列<xref:System.Attribute>要做為篩選條件。</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>符合指定的元件指定的屬性的屬性。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得指定之型別的編輯器。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "編輯器中，用來區分某個屬性支援的多個編輯器的基底類型。"
    return:
      type: System.Object
      description: "要求的編輯器類型的執行個體或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到編輯器。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回這個雜湊程式碼<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>。"
  remarks: "雜湊碼<xref:System.ComponentModel.DependencyPropertyDescriptor>相依性屬性的識別項與設定所在的型別上為基礎。</xref:System.ComponentModel.DependencyPropertyDescriptor> 這個實作可確保<xref:System.ComponentModel.DependencyPropertyDescriptor>不當不會傳回相同的雜湊碼許多可能的衍生類別，會繼承的屬性或屬性，否則透過屬性系統重新指派。</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "傳回目前在元件上的屬性值。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "元件的執行個體。"
    return:
      type: System.Object
      description: "要求的值。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  id: IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得值，指出屬性註冊為附加的屬性，並正透過附加使用方式使用。"
  syntax:
    content: public bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性為附加的屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得值，指出值<xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;></xref>屬性。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;></xref>指定的屬性; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得值，指出是否應該當地語系化此屬性，如同在中指定<xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成員已標記<xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;></xref>建構函式的值為 true，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得值，表示這個屬性為唯讀。"
  remarks: "這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>       相依性屬性會註冊為以唯讀狀態使用的特定方法呼叫，並依照慣例[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]反映和描述元所檢視的屬性的包裝函式屬性也必須是唯讀狀態。 不過，因為這是一項慣例，並不需要進行編譯，您可能想要檢查相依性屬性的識別項 「 唯讀 」 狀態。 若要這樣做，請取得識別項 (<xref:System.Windows.DependencyProperty>) 此值<xref:System.ComponentModel.DependencyPropertyDescriptor>，然後檢查  <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</xref:System.Windows.DependencyProperty.ReadOnly%2A>值</xref:System.ComponentModel.DependencyPropertyDescriptor></xref:System.Windows.DependencyProperty> 請注意，<xref:System.Windows.DependencyProperty.ReadOnly%2A>上的識別項本身，不是中繼資料。</xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  id: Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得與相依性屬性相關聯的中繼資料。"
  remarks: "這個值可以是`null`如果沒有中繼資料或屬性不是相依性屬性。       中繼資料具有相符的概念[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]屬性是做為屬性中重新公開<xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>集合。</xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>"
  syntax:
    content: public System.Windows.PropertyMetadata Metadata { get; }
    return:
      type: System.Windows.PropertyMetadata
      description: "相依性屬性中繼資料。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得表示<xref:System.Type>相依性屬性。</xref:System.Type>"
  remarks: "這個屬性會傳回<xref:System.Type>已註冊之相依性屬性。</xref:System.Type>"
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>相依性屬性。</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "可讓其他物件，這個屬性變更時收到通知。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "要加入的處理常式的元件。"
    - id: handler
      type: System.EventHandler
      description: "要加入做為接聽程式的委派。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "將元件的這個屬性的值重設為預設值。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "具有要重設為預設值的屬性值的元件。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "設定元件的值不同的值。"
  remarks: "這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "要設定屬性值的元件。"
    - id: value
      type: System.Object
      description: "新的值。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "表示這個屬性的值是否需要保存序列化程序。"
  syntax:
    content: public override bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "具有要檢查的持續性屬性的元件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該保存的屬性。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "指出是否對此屬性的值變更通知可能來自外部的屬性描述元，例如與元件本身，或通知只能從直接呼叫對<xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>源自"
  remarks: "例如，對於`true`的情況下，元件可以實作<xref:System.ComponentModel.INotifyPropertyChanged>介面，或可能有明確的`propertyName``Changed`這個屬性的事件。</xref:System.ComponentModel.INotifyPropertyChanged>       這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個屬性的通知可能來自外部的屬性描述項，例如與元件本身。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果通知只會來自<xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>的直接呼叫"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  id: ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "這個執行個體的值轉換為其相等字串表示。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "傳回<xref:System.ComponentModel.MemberDescriptor.Name*>值。</xref:System.ComponentModel.MemberDescriptor.Name*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: DependencyPropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: DependencyPropertyDescriptor.CanResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyDescriptor.Equals
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName
  nameWithType: DependencyPropertyDescriptor.FromName
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty
  nameWithType: DependencyPropertyDescriptor.FromProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: DependencyPropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: DependencyPropertyDescriptor.GetEditor
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyDescriptor.GetHashCode
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: DependencyPropertyDescriptor.GetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: DependencyPropertyDescriptor.ResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: DependencyPropertyDescriptor.SetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString
  nameWithType: DependencyPropertyDescriptor.ToString
