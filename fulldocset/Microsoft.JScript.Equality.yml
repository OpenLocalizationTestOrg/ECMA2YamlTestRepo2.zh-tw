### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.Equality
  id: Equality
  children:
  - Microsoft.JScript.Equality.#ctor(System.Int32)
  - Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)
  - Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)
  langs:
  - csharp
  name: Equality
  nameWithType: Equality
  fullName: Microsoft.JScript.Equality
  type: Class
  summary: "執行比較作業。 這個類別屬於抽象語法樹狀目錄類別。"
  syntax:
    content: 'public class Equality : Microsoft.JScript.BinaryOp'
  inheritance:
  - System.Object
  - Microsoft.JScript.AST
  - Microsoft.JScript.BinaryOp
  implements: []
  inheritedMembers:
  - Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)
  - Microsoft.JScript.BinaryOp.operand1
  - Microsoft.JScript.BinaryOp.operand2
  - Microsoft.JScript.BinaryOp.operatorMeth
  - Microsoft.JScript.BinaryOp.operatorTok
  - Microsoft.JScript.BinaryOp.type1
  - Microsoft.JScript.BinaryOp.type2
  platform:
  - net462
- uid: Microsoft.JScript.Equality.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.JScript.Equality
  langs:
  - csharp
  name: Equality(Int32)
  nameWithType: Equality.Equality(Int32)
  fullName: Microsoft.JScript.Equality.Equality(Int32)
  type: Constructor
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.JScript.Equality&quot;></xref>類別。"
  syntax:
    content: public Equality (int operatorTok);
    parameters:
    - id: operatorTok
      type: System.Int32
      description: "其中一個<xref href=&quot;Microsoft.JScript.JSToken&quot;></xref>列舉值。 指定要執行的比較。"
  overload: Microsoft.JScript.Equality.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)
  id: EvaluateEquality(System.Object,System.Object)
  parent: Microsoft.JScript.Equality
  langs:
  - csharp
  name: EvaluateEquality(Object,Object)
  nameWithType: Equality.EvaluateEquality(Object,Object)
  fullName: Microsoft.JScript.Equality.EvaluateEquality(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "執行比較作業。"
  remarks: "這個方法會執行相等和不等比較運算。"
  syntax:
    content: public bool EvaluateEquality (object v1, object v2);
    parameters:
    - id: v1
      type: System.Object
      description: "在第一個運算元。"
    - id: v2
      type: System.Object
      description: "第二個運算元。"
    return:
      type: System.Boolean
      description: "運算的結果。"
  overload: Microsoft.JScript.Equality.EvaluateEquality*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)
  id: JScriptEquals(System.Object,System.Object)
  parent: Microsoft.JScript.Equality
  langs:
  - csharp
  name: JScriptEquals(Object,Object)
  nameWithType: Equality.JScriptEquals(Object,Object)
  fullName: Microsoft.JScript.Equality.JScriptEquals(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "執行比較作業。"
  syntax:
    content: public static bool JScriptEquals (object v1, object v2);
    parameters:
    - id: v1
      type: System.Object
      description: "在第一個運算元。"
    - id: v2
      type: System.Object
      description: "第二個運算元。"
    return:
      type: System.Boolean
      description: "運算的結果。"
  overload: Microsoft.JScript.Equality.JScriptEquals*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.BinaryOp
  isExternal: false
  name: Microsoft.JScript.BinaryOp
- uid: Microsoft.JScript.Equality.#ctor(System.Int32)
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: Equality(Int32)
  nameWithType: Equality.Equality(Int32)
  fullName: Microsoft.JScript.Equality.Equality(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: EvaluateEquality(Object,Object)
  nameWithType: Equality.EvaluateEquality(Object,Object)
  fullName: Microsoft.JScript.Equality.EvaluateEquality(Object,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: JScriptEquals(Object,Object)
  nameWithType: Equality.JScriptEquals(Object,Object)
  fullName: Microsoft.JScript.Equality.JScriptEquals(Object,Object)
- uid: Microsoft.JScript.Equality.#ctor*
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: Equality
  nameWithType: Equality.Equality
- uid: Microsoft.JScript.Equality.EvaluateEquality*
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: EvaluateEquality
  nameWithType: Equality.EvaluateEquality
- uid: Microsoft.JScript.Equality.JScriptEquals*
  parent: Microsoft.JScript.Equality
  isExternal: false
  name: JScriptEquals
  nameWithType: Equality.JScriptEquals
