### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AesCng
  id: AesCng
  children:
  - System.Security.Cryptography.AesCng.#ctor
  - System.Security.Cryptography.AesCng.#ctor(System.String)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.AesCng.CreateDecryptor
  - System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.CreateEncryptor
  - System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  - System.Security.Cryptography.AesCng.GenerateIV
  - System.Security.Cryptography.AesCng.GenerateKey
  - System.Security.Cryptography.AesCng.Key
  - System.Security.Cryptography.AesCng.KeySize
  langs:
  - csharp
  name: AesCng
  nameWithType: AesCng
  fullName: System.Security.Cryptography.AesCng
  type: Class
  summary: "提供的進階加密標準 (AES) 演算法的 Cryptography Next Generation (CNG) 實作。"
  syntax:
    content: 'public sealed class AesCng : System.Security.Cryptography.Aes'
  inheritance:
  - System.Security.Cryptography.Aes
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng()
  nameWithType: AesCng.AesCng()
  fullName: System.Security.Cryptography.AesCng.AesCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>類別暫時金鑰。"
  syntax:
    content: public AesCng ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String)
  nameWithType: AesCng.AesCng(String)
  fullName: System.Security.Cryptography.AesCng.AesCng(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>類別指定的索引鍵名稱，表示現有保存 AES 金鑰。"
  remarks: "這個建構函式會使用預設<xref:System.Security.Cryptography.CngKeyOpenOptions>值<xref:System.Security.Cryptography.CngKeyOpenOptions>和<xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>作為預設金鑰儲存提供者 (KSP) 來開啟金鑰。</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> </xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public AesCng (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "索引鍵的名稱。"
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "此系統上不支援 cryptography Next Generation (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他錯誤。"
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String,CngProvider)
  nameWithType: AesCng.AesCng(String,CngProvider)
  fullName: System.Security.Cryptography.AesCng.AesCng(String,CngProvider)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>類別指定的索引鍵名稱，表示現有保存 AES 金鑰，以及指定的金鑰儲存提供者 (KSP)。"
  remarks: "預設值<xref:System.Security.Cryptography.CngKeyOpenOptions>值<xref:System.Security.Cryptography.CngKeyOpenOptions>用來開啟金鑰。</xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "索引鍵的名稱。"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP 包含索引鍵。"
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "此系統上不支援 cryptography Next Generation (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他錯誤。"
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: AesCng.AesCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.AesCng.AesCng(String,CngProvider,CngKeyOpenOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>類別指定的索引鍵名稱，表示現有保存 AES 金鑰、 金鑰與指定的金鑰儲存提供者 (KSP) 開啟 [選項]。"
  syntax:
    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: "索引鍵的名稱。"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP 包含索引鍵。"
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "指定開啟金鑰，例如 （電腦或使用者存放裝置） 從開啟的機碼的位置，以及是否要隱藏 UI 提示選項的列舉值的位元組合。"
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "此系統上不支援 cryptography Next Generation (CNG)。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "所有其他錯誤。"
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: AesCng.CreateDecryptor()
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "建立對稱的 AES 解密子物件與目前的金鑰和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "這個方法會解密加密的訊息建立使用<xref:System.Security.Cryptography.AesCng.CreateEncryptor>多載相同的簽章。</xref:System.Security.Cryptography.AesCng.CreateEncryptor>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱的 AES 解密子物件。"
  overload: System.Security.Cryptography.AesCng.CreateDecryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: AesCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用指定的索引鍵和初始化向量 (IV) 建立對稱的 AES 解密子物件。"
  remarks: "This method decrypts an encrypted message created using the [CreateEncryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=False) overload with the same signature.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "使用 AES 演算法的祕密金鑰。 金鑰大小必須是 128、 192 或 256 位元。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用 AES 演算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱的 AES 解密子物件。"
  overload: System.Security.Cryptography.AesCng.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>不是此演算法的有效大小。       -或-<code>rgbIV</code>大小不符合此演算法的區塊大小。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>是此演算法的已知弱式金鑰和無法使用。       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: AesCng.CreateEncryptor()
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "建立對稱的 AES 加密子物件使用目前的金鑰和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)。</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "使用這個方法來加密訊息，然後使用<xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A>多載相同的簽章來解密此方法的結果。</xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱的 AES 加密子物件。"
  overload: System.Security.Cryptography.AesCng.CreateEncryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: AesCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "使用指定的索引鍵和初始化向量 (IV) 建立對稱的 AES 加密子物件。"
  remarks: "使用這個方法來加密訊息，然後使用<xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A>多載相同的簽章來解密此方法的結果。</xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A>      > [!NOTE] > 如果您已建立<xref:System.Security.Cryptography.AesCng>物件使用的現有保存索引鍵和您想要使用的金鑰加密的訊息時，您想要設定<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性並無參數然後呼叫<xref:System.Security.Cryptography.AesCng.CreateEncryptor>相反地，否則為多載中，使用這個方法會建立暫時的金鑰所指定`rgbKey`參數。</xref:System.Security.Cryptography.AesCng.CreateEncryptor> </xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.AesCng>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "使用 AES 演算法的祕密金鑰。 金鑰大小必須是 128、 192 或 256 位元。"
    - id: rgbIV
      type: System.Byte[]
      description: "要使用 AES 演算法的初始化向量。"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "對稱的 AES 加密子物件。"
  overload: System.Security.Cryptography.AesCng.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>不是此演算法的有效大小。       -或-<code>rgbIV</code>大小不符合此演算法的區塊大小。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>是此演算法的已知弱式金鑰和無法使用。       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AesCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.AesCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "即將加入。"
  overload: System.Security.Cryptography.AesCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: AesCng.GenerateIV()
  fullName: System.Security.Cryptography.AesCng.GenerateIV()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "產生的隨機初始化向量 (IV) 來使用 AES 演算法。"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: AesCng.GenerateKey()
  fullName: System.Security.Cryptography.AesCng.GenerateKey()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "產生要使用 AES 演算法的隨機金鑰。"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.Key
  id: Key
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: Key
  nameWithType: AesCng.Key
  fullName: System.Security.Cryptography.AesCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得或設定的索引鍵<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>演算法。"
  remarks: "如果您已建立<xref:System.Security.Cryptography.AesCng>物件使用的現有保存金鑰，當您讀取會進行索引鍵屬性，而嘗試將金鑰匯出的值。</xref:System.Security.Cryptography.AesCng> 在此情況下，如果索引鍵不是可匯出、<xref:System.Security.Cryptography.CryptographicException>就會擲回。</xref:System.Security.Cryptography.CryptographicException>       所，如果您設定索引鍵屬性的值時，保存的金鑰將無法再使用，將改為使用暫存索引鍵。 如果您需要使用一次，持續性索引鍵的新執行個體<xref:System.Security.Cryptography.AesCng>類別必須先建立。</xref:System.Security.Cryptography.AesCng>"
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "索引鍵<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>演算法。"
  overload: System.Security.Cryptography.AesCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AesCng.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: System.Security.Cryptography.AesCng.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得或設定大小，以位元，所使用之祕密金鑰<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>演算法。"
  remarks: "如果您已建立<xref:System.Security.Cryptography.AesCng>物件使用的現有保存金鑰和設定 KeySize 屬性的值、 將不再使用的持續性索引鍵和暫時的金鑰將改為使用。</xref:System.Security.Cryptography.AesCng> 如果您需要使用一次，持續性索引鍵的新執行個體<xref:System.Security.Cryptography.AesCng>類別必須先建立。</xref:System.Security.Cryptography.AesCng>"
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: "大小，以位元，所使用之祕密金鑰<xref href=&quot;System.Security.Cryptography.AesCng&quot;></xref>演算法。"
  overload: System.Security.Cryptography.AesCng.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Aes
  isExternal: false
  name: System.Security.Cryptography.Aes
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.AesCng.#ctor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng()
  nameWithType: AesCng.AesCng()
  fullName: System.Security.Cryptography.AesCng.AesCng()
- uid: System.Security.Cryptography.AesCng.#ctor(System.String)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String)
  nameWithType: AesCng.AesCng(String)
  fullName: System.Security.Cryptography.AesCng.AesCng(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String,CngProvider)
  nameWithType: AesCng.AesCng(String,CngProvider)
  fullName: System.Security.Cryptography.AesCng.AesCng(String,CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: AesCng.AesCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.AesCng.AesCng(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.AesCng.CreateDecryptor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor()
  nameWithType: AesCng.CreateDecryptor()
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: AesCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AesCng.CreateEncryptor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor()
  nameWithType: AesCng.CreateEncryptor()
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor()
- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: AesCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AesCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.AesCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AesCng.GenerateIV
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateIV()
  nameWithType: AesCng.GenerateIV()
  fullName: System.Security.Cryptography.AesCng.GenerateIV()
- uid: System.Security.Cryptography.AesCng.GenerateKey
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateKey()
  nameWithType: AesCng.GenerateKey()
  fullName: System.Security.Cryptography.AesCng.GenerateKey()
- uid: System.Security.Cryptography.AesCng.Key
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Key
  nameWithType: AesCng.Key
  fullName: System.Security.Cryptography.AesCng.Key
- uid: System.Security.Cryptography.AesCng.KeySize
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: System.Security.Cryptography.AesCng.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AesCng.#ctor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng
  nameWithType: AesCng.AesCng
- uid: System.Security.Cryptography.AesCng.CreateDecryptor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor
  nameWithType: AesCng.CreateDecryptor
- uid: System.Security.Cryptography.AesCng.CreateEncryptor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor
  nameWithType: AesCng.CreateEncryptor
- uid: System.Security.Cryptography.AesCng.Dispose*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Dispose
  nameWithType: AesCng.Dispose
- uid: System.Security.Cryptography.AesCng.GenerateIV*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateIV
  nameWithType: AesCng.GenerateIV
- uid: System.Security.Cryptography.AesCng.GenerateKey*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateKey
  nameWithType: AesCng.GenerateKey
- uid: System.Security.Cryptography.AesCng.Key*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Key
  nameWithType: AesCng.Key
- uid: System.Security.Cryptography.AesCng.KeySize*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: KeySize
  nameWithType: AesCng.KeySize
