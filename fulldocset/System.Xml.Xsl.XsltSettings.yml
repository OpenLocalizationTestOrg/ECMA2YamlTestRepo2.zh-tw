### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XsltSettings
  id: XsltSettings
  children:
  - System.Xml.Xsl.XsltSettings.#ctor
  - System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  - System.Xml.Xsl.XsltSettings.Default
  - System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  - System.Xml.Xsl.XsltSettings.EnableScript
  - System.Xml.Xsl.XsltSettings.TrustedXslt
  langs:
  - csharp
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
  type: Class
  summary: "指定的 XSLT 功能以支援執行 XSLT 樣式表的期間。"
  remarks: "內嵌指令碼區塊和 XSLT`document()`函式是<xref:System.Xml.Xsl.XslCompiledTransform>類別</xref:System.Xml.Xsl.XslCompiledTransform>上的選擇性功能 預設為停用這些功能。 XsltSettings 類別指定的支援這些選擇性功能。 啟用或停用 使用類別內容的功能。 XsltSettings 物件接著傳遞至<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=fullName>方法。</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=fullName>      > [!IMPORTANT] > XSLT 樣式表可以包含其他檔案參考和內嵌指令碼區塊。 惡意使用者可以利用這一點，藉由提供您資料或樣式表執行時可能會導致您的系統處理，直到電腦資源不足。 未啟用指令碼或`document()`作用，除非樣式表來自受信任的來源。 如果您無法驗證樣式表中的來源，或如果樣式表不是來自受信任的來源，使用預設的 XSLT 設定。"
  example:
  - "The following example loads a style sheet and enables XSLT script support.  \n  \n [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltset_1.vb)]\n [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/t-system.xml.xsl.xsltset_1.cs)]"
  syntax:
    content: public sealed class XsltSettings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: XsltSettings()
  nameWithType: XsltSettings.XsltSettings()
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref>類別以預設設定。"
  remarks: "新<xref:System.Xml.Xsl.XsltSettings>物件不支援 XSLT`document()`函式或內嵌指令碼區塊。</xref:System.Xml.Xsl.XsltSettings>      > [!IMPORTANT] > 應啟用 XSLT 指令碼，只有當需要指令碼支援且在完全受信任的環境中運作。 如果您啟用`document()`函式，您可以限制可以藉由傳遞存取的資源<xref:System.Xml.XmlSecureResolver>物件<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlSecureResolver>"
  syntax:
    content: public XsltSettings ();
    parameters: []
  overload: System.Xml.Xsl.XsltSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: XsltSettings(Boolean,Boolean)
  nameWithType: XsltSettings.XsltSettings(Boolean,Boolean)
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref>類別，以指定的設定。"
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  example:
  - "The following example loads a style sheet and enables XSLT script support.  \n  \n [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltset_1.vb)]\n [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/m-system.xml.xsl.xsltset_1.cs)]"
  syntax:
    content: public XsltSettings (bool enableDocumentFunction, bool enableScript);
    parameters:
    - id: enableDocumentFunction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用 XSLT 的支援`document()`函式; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: enableScript
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要啟用的內嵌指令碼區塊; 支援否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Xsl.XsltSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.Default
  id: Default
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: Default
  nameWithType: XsltSettings.Default
  fullName: System.Xml.Xsl.XsltSettings.Default
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref>物件以預設設定。 XSLT 支援`document()`函式和內嵌指令碼區塊會停用。"
  remarks: ''
  example:
  - "The following example loads a style sheet with default XSLT settings.  \n  \n [!code-vb[XslCompiledTransform.Load#7](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_1_1.vb)]\n [!code-cs[XslCompiledTransform.Load#7](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_1_1.cs)]"
  syntax:
    content: public static System.Xml.Xsl.XsltSettings Default { get; }
    return:
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>物件<> *> 和<> *> 屬性設定為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Xsl.XsltSettings.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  id: EnableDocumentFunction
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
  fullName: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得或設定值，指出是否啟用支援 XSLT`document()`函式。"
  remarks: >-
    > [!IMPORTANT]

    >  If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  syntax:
    content: public bool EnableDocumentFunction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要支援 XSLT`document()`函式; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Xsl.XsltSettings.EnableDocumentFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.EnableScript
  id: EnableScript
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
  fullName: System.Xml.Xsl.XsltSettings.EnableScript
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得或設定值，指出是否啟用支援內嵌指令碼區塊。"
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.
  syntax:
    content: public bool EnableScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要支援指令碼區塊在 XSLT 樣式表。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Xsl.XsltSettings.EnableScript*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt
  id: TrustedXslt
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
  fullName: System.Xml.Xsl.XsltSettings.TrustedXslt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;></xref>物件，可讓支援 XSLT`document()`函式和內嵌指令碼區塊。"
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  example:
  - "The following example loads a style sheet with support for the XSLT `document()` function and embedded script blocks features enabled.  \n  \n [!code-vb[XslCompiledTransform.Load#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_0_1.vb)]\n [!code-cs[XslCompiledTransform.Load#8](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_0_1.cs)]"
  syntax:
    content: public static System.Xml.Xsl.XsltSettings TrustedXslt { get; }
    return:
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>物件<> *> 和<> *> 屬性設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Xsl.XsltSettings.TrustedXslt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltSettings.#ctor
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings()
  nameWithType: XsltSettings.XsltSettings()
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings()
- uid: System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings(Boolean,Boolean)
  nameWithType: XsltSettings.XsltSettings(Boolean,Boolean)
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings(Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Xsl.XsltSettings.Default
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: Default
  nameWithType: XsltSettings.Default
  fullName: System.Xml.Xsl.XsltSettings.Default
- uid: System.Xml.Xsl.XsltSettings
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
  fullName: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
- uid: System.Xml.Xsl.XsltSettings.EnableScript
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
  fullName: System.Xml.Xsl.XsltSettings.EnableScript
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
  fullName: System.Xml.Xsl.XsltSettings.TrustedXslt
- uid: System.Xml.Xsl.XsltSettings.#ctor*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings.XsltSettings
- uid: System.Xml.Xsl.XsltSettings.Default*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: Default
  nameWithType: XsltSettings.Default
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
- uid: System.Xml.Xsl.XsltSettings.EnableScript*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
