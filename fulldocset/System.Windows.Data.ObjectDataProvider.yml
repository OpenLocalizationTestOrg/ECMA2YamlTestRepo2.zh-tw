### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.ObjectDataProvider
  id: ObjectDataProvider
  children:
  - System.Windows.Data.ObjectDataProvider.#ctor
  - System.Windows.Data.ObjectDataProvider.BeginQuery
  - System.Windows.Data.ObjectDataProvider.ConstructorParameters
  - System.Windows.Data.ObjectDataProvider.IsAsynchronous
  - System.Windows.Data.ObjectDataProvider.MethodName
  - System.Windows.Data.ObjectDataProvider.MethodParameters
  - System.Windows.Data.ObjectDataProvider.ObjectInstance
  - System.Windows.Data.ObjectDataProvider.ObjectType
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  - System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  langs:
  - csharp
  name: ObjectDataProvider
  nameWithType: ObjectDataProvider
  fullName: System.Windows.Data.ObjectDataProvider
  type: Class
  summary: "包裝並建立可作為繫結來源物件。"
  remarks: "> [!IMPORTANT]> 當沒有權限來執行反映指定的型別或成員時，就會失敗 ObjectDataProvider。 如需詳細資訊，請參閱中的權限需求[繫結來源概觀](~/add/includes/ajax-current-ext-md.md)。       有許多方法可以建立要做為繫結來源物件。 比方說，您可以建立您的物件中的資源區段您[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 頁面上，或者您可以在程式碼中建立您的物件，並將它做為`DataContext`您的視窗。       ObjectDataProvider 可讓您建立您的物件中[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]並使其可做為繫結來源。 它提供下列屬性可讓您在物件上執行查詢，並繫結至結果。      -使用<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>將參數傳遞給建構函式物件的屬性。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>      -使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>屬性呼叫的方法，並使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>將參數傳遞給方法的屬性。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> </xref:System.Windows.Data.ObjectDataProvider.MethodName%2A> 然後，您可以繫結至方法的結果。       您也可以使用<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>屬性來指定是否要在背景工作執行緒或作用中的內容中執行物件的建立。</xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>       當您想要取代您目前的繫結來源物件與另一個物件，並已更新所有相關聯的繫結時，這個類別也很有用。       ObjectDataProvider 提供便利的方式來建立和使用作為繫結來源物件中的物件[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]，但不取代現有的資料模型。       如果您要實作您自己的資料繫結的物件，請參閱[繫結來源概觀](../Topic/Binding%20Sources%20Overview.md)資訊和建議。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]

      public class ObjectDataProvider : System.Windows.Data.DataSourceProvider
  inheritance:
  - System.Object
  - System.Windows.Data.DataSourceProvider
  implements: []
  inheritedMembers:
  - System.Windows.Data.DataSourceProvider.BeginInit
  - System.Windows.Data.DataSourceProvider.Data
  - System.Windows.Data.DataSourceProvider.DataChanged
  - System.Windows.Data.DataSourceProvider.DeferRefresh
  - System.Windows.Data.DataSourceProvider.Dispatcher
  - System.Windows.Data.DataSourceProvider.EndInit
  - System.Windows.Data.DataSourceProvider.Error
  - System.Windows.Data.DataSourceProvider.InitialLoad
  - System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled
  - System.Windows.Data.DataSourceProvider.IsRefreshDeferred
  - System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)
  - System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)
  - System.Windows.Data.DataSourceProvider.PropertyChanged
  - System.Windows.Data.DataSourceProvider.Refresh
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.#ctor
  id: '#ctor'
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectDataProvider()
  nameWithType: ObjectDataProvider.ObjectDataProvider()
  fullName: System.Windows.Data.ObjectDataProvider.ObjectDataProvider()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>類別。"
  syntax:
    content: public ObjectDataProvider ();
    parameters: []
  overload: System.Windows.Data.ObjectDataProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery
  id: BeginQuery
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: BeginQuery()
  nameWithType: ObjectDataProvider.BeginQuery()
  fullName: System.Windows.Data.ObjectDataProvider.BeginQuery()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "開始建立要求的物件，可以立即執行或在背景執行緒，根據值的<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous*>屬性。</xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous*>"
  remarks: "會呼叫這個方法<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>的基底類別和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>方法</xref:System.Windows.Data.DataSourceProvider.Refresh%2A></xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>"
  syntax:
    content: protected override void BeginQuery ();
    parameters: []
  overload: System.Windows.Data.ObjectDataProvider.BeginQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  id: ConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
  fullName: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得要傳遞給建構函式參數清單。"
  remarks: "以隱含方式變更這個集合會導致<xref:System.Windows.Data.ObjectDataProvider>重新整理。</xref:System.Windows.Data.ObjectDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlPropertyElementUsage_ConstructorParameters&quot;></a># # XAML 屬性項目用法```   <object>     <object.ConstructorParameters>       parameterValues     </object.ConstructorParameters>   </object>   ```"
  example:
  - "The following example shows how to use this property:  \n  \n [!code-xml[SimpleBinding#ODPCP](~/add/codesnippet/xaml/SimpleBinding_VB/Page1.xaml#odpcp)]"
  syntax:
    content: public System.Collections.IList ConstructorParameters { get; }
    return:
      type: System.Collections.IList
      description: "要傳遞給建構函式參數清單。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ConstructorParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  id: IsAsynchronous
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
  fullName: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定值，指出是否要在背景工作執行緒或作用中的內容中執行物件的建立。"
  remarks: "這個屬性相當實用，如果您要繫結慢可供使用的外部資料物件。"
  syntax:
    content: public bool IsAsynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在背景工作執行緒中執行物件的建立否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.IsAsynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.MethodName
  id: MethodName
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
  fullName: System.Windows.Data.ObjectDataProvider.MethodName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定要呼叫之方法的名稱。"
  remarks: "您可以使用這個屬性在物件上呼叫的方法，並使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>將參數傳遞給方法的屬性。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> 然後，您可以繫結至方法的結果。"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "要呼叫的方法名稱。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters
  id: MethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
  fullName: System.Windows.Data.ObjectDataProvider.MethodParameters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得要傳遞至方法的參數清單。"
  remarks: "您可以使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>物件上呼叫的方法，並使用 MethodParameters 屬性，將參數傳遞給方法的屬性。</xref:System.Windows.Data.ObjectDataProvider.MethodName%2A> 然後，您可以繫結至方法的結果。       以隱含方式變更這個集合會導致<xref:System.Windows.Data.ObjectDataProvider>重新整理的物件。</xref:System.Windows.Data.ObjectDataProvider> 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。</xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlPropertyElementUsage_MethodParameters&quot;></a># # XAML 屬性項目用法```   <object>     <object.MethodParameters>       parameterValues     </object.MethodParameters>   </object>   ```"
  syntax:
    content: public System.Collections.IList MethodParameters { get; }
    return:
      type: System.Collections.IList
      description: "要傳遞至方法的參數清單。 預設為空的清單。"
  overload: System.Windows.Data.ObjectDataProvider.MethodParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance
  id: ObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
  fullName: System.Windows.Data.ObjectDataProvider.ObjectInstance
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定作為繫結來源使用的物件。"
  remarks: "當<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>設定為非 null 值，屬性會保存<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>。</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>指定類型的物件</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 如果使用者所指派的 ObjectInstance<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>屬性會傳回指定物件的類型。</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 如果設為 ObjectInstance <xref:System.Windows.Data.DataSourceProvider>、<xref:System.Windows.Data.ObjectDataProvider>使用<xref:System.Windows.Data.DataSourceProvider.Data%2A>指派的來源提供者做為有效的 ObjectInstance。</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.ObjectDataProvider> </xref:System.Windows.Data.DataSourceProvider>       如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>是使用，ObjectInstance 和<xref:System.Windows.Data.DataSourceProvider.Data%2A>不會更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>稱為。</xref:System.Windows.Data.DataSourceProvider.Refresh%2A> </xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "從建構的物件執行個體<> *> 和<> *>，或<xref href=&quot;System.Windows.Data.DataSourceProvider&quot;></xref>其中<xref:System.Windows.Data.DataSourceProvider.Data*>做的 ObjectInstance。</xref:System.Windows.Data.DataSourceProvider.Data*>"
  overload: System.Windows.Data.ObjectDataProvider.ObjectInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>同時指派<xref:System.Windows.Data.ObjectDataProvider.ObjectType*>和 ObjectInstance; 只允許一個。</xref:System.Windows.Data.ObjectDataProvider.ObjectType*>"
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ObjectType
  id: ObjectType
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
  fullName: System.Windows.Data.ObjectDataProvider.ObjectType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得或設定要建立的執行個體的物件類型。"
  remarks: "如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用時，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>和<xref:System.Windows.Data.DataSourceProvider.Data%2A>不會更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>稱為。</xref:System.Windows.Data.DataSourceProvider.Refresh%2A> </xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A> </xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>      <a name=&quot;xamlAttributeUsage_ObjectType&quot;></a># # XAML 屬性使用方式```   <object ObjectType=&quot;myDataType&quot;/>   ``` <a name=&quot;xamlValues_ObjectType&quot;> </a> # # XAML 值*myDataType*来建立的執行個體的資料類型。       使用[X:type 標記延伸](~/add/includes/ajax-current-ext-md.md)設定類型。"
  syntax:
    content: public Type ObjectType { get; set; }
    return:
      type: System.Type
      description: "這個屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>時<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>是未初始化或明確設定為 null。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>是指派，ObjectType 傳回的物件或為 null 的類型如果物件是 null。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*> 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ObjectType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Data.ObjectDataProvider&quot;></xref>指定這兩個 ObjectType 和<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>，但只允許其中一個。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>"
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  id: ShouldSerializeConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeConstructorParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters*>屬性必須永續性。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeConstructorParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  id: ShouldSerializeMethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeMethodParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.ObjectDataProvider.MethodParameters*>屬性必須永續性。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeMethodParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  id: ShouldSerializeObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeObjectInstance()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>屬性必須永續性。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeObjectInstance ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  id: ShouldSerializeObjectType
  parent: System.Windows.Data.ObjectDataProvider
  langs:
  - csharp
  name: ShouldSerializeObjectType()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指出是否<xref:System.Windows.Data.ObjectDataProvider.ObjectType*>屬性必須永續性。</xref:System.Windows.Data.ObjectDataProvider.ObjectType*>"
  remarks: "這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>屬性並沒有簡單的預設值。</xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A> 這個方法會指出屬性是否已變更其預設值。 如果您開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或開發您自己的 control 納入<xref:System.Windows.Data.ObjectDataProvider>.</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.ObjectDataProvider>通常呼叫這個方法"
  syntax:
    content: public bool ShouldSerializeObjectType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果屬性值已經從其預設值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.DataSourceProvider
  isExternal: false
  name: System.Windows.Data.DataSourceProvider
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ObjectDataProvider.#ctor
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectDataProvider()
  nameWithType: ObjectDataProvider.ObjectDataProvider()
  fullName: System.Windows.Data.ObjectDataProvider.ObjectDataProvider()
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: BeginQuery()
  nameWithType: ObjectDataProvider.BeginQuery()
  fullName: System.Windows.Data.ObjectDataProvider.BeginQuery()
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
  fullName: System.Windows.Data.ObjectDataProvider.ConstructorParameters
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
  fullName: System.Windows.Data.ObjectDataProvider.IsAsynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ObjectDataProvider.MethodName
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
  fullName: System.Windows.Data.ObjectDataProvider.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
  fullName: System.Windows.Data.ObjectDataProvider.MethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
  fullName: System.Windows.Data.ObjectDataProvider.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ObjectDataProvider.ObjectType
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
  fullName: System.Windows.Data.ObjectDataProvider.ObjectType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeConstructorParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeMethodParameters()
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectInstance()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance()
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectType()
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType()
  fullName: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType()
- uid: System.Windows.Data.ObjectDataProvider.#ctor*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectDataProvider
  nameWithType: ObjectDataProvider.ObjectDataProvider
- uid: System.Windows.Data.ObjectDataProvider.BeginQuery*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: BeginQuery
  nameWithType: ObjectDataProvider.BeginQuery
- uid: System.Windows.Data.ObjectDataProvider.ConstructorParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ConstructorParameters
  nameWithType: ObjectDataProvider.ConstructorParameters
- uid: System.Windows.Data.ObjectDataProvider.IsAsynchronous*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: IsAsynchronous
  nameWithType: ObjectDataProvider.IsAsynchronous
- uid: System.Windows.Data.ObjectDataProvider.MethodName*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodName
  nameWithType: ObjectDataProvider.MethodName
- uid: System.Windows.Data.ObjectDataProvider.MethodParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: MethodParameters
  nameWithType: ObjectDataProvider.MethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ObjectInstance*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataProvider.ObjectInstance
- uid: System.Windows.Data.ObjectDataProvider.ObjectType*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ObjectType
  nameWithType: ObjectDataProvider.ObjectType
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeConstructorParameters
  nameWithType: ObjectDataProvider.ShouldSerializeConstructorParameters
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeMethodParameters
  nameWithType: ObjectDataProvider.ShouldSerializeMethodParameters
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectInstance
  nameWithType: ObjectDataProvider.ShouldSerializeObjectInstance
- uid: System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType*
  parent: System.Windows.Data.ObjectDataProvider
  isExternal: false
  name: ShouldSerializeObjectType
  nameWithType: ObjectDataProvider.ShouldSerializeObjectType
