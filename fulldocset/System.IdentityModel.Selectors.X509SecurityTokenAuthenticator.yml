### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  id: X509SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  type: Class
  summary: "驗證<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>。"
  remarks: "使用 X509SecurityTokenAuthenticator 類別來驗證<xref:System.IdentityModel.Tokens.X509SecurityToken>安全性權杖。</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;></xref>類別。"
  remarks: "當<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>呼叫方法來驗證權杖、 X.509 憑證未對應至 Windows 身分識別和憑證會使用憑證鏈結進行驗證。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;></xref>類別使用指定的憑證驗證程式。"
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>類別提供一組預先定義的憑證驗證模式，例如<xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>屬性。</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 這些驗證模式可以傳遞至`validator`參數。 當應用程式需要自訂驗證方法時，衍生自<xref:System.IdentityModel.Selectors.X509CertificateValidator>並覆寫<xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法。</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法透過呼叫<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       根據預設，<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>未對應至 Windows 身分識別的 X.509 憑證。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref>來檢查憑證是否有效。"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;></xref>類別使用指定的憑證驗證方法，並指出憑證的身分識別是否對應至 Windows 身分識別。"
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>類別提供一組預先定義的憑證驗證模式，例如<xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>屬性。</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 這些驗證模式可以傳遞至`validator`參數。 當應用程式需要自訂驗證方法時，衍生自<xref:System.IdentityModel.Selectors.X509CertificateValidator>並覆寫<xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法。</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法透過呼叫<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       當<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>呼叫方法來驗證權杖和`mapToWindows`是`true`、 X.509 憑證對應至 Windows 帳戶和宣告會新增至<xref:System.IdentityModel.Policy.EvaluationContext>使用者所屬之 Windows 群組。</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> X.509 憑證如何對應至 Windows 帳戶的安全性權杖類型而定:-的安全性權杖的型別時<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>，X.509 憑證對應使用<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>屬性。</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>      -當安全性權杖屬於型別`X509SecurityToken`，X.509 憑證對應至 Windows 帳戶，使用其使用者主要名稱 (UPN)。"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref>來檢查憑證是否有效。"
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>憑證的身分識別對應至 Windows 身分識別，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;></xref>類別使用指定的憑證驗證方法，並指出憑證的身分識別是否對應至 Windows 身分識別以及使用者所屬 Windows 群組。"
  remarks: "傳遞`false`至`includeWindowsGroups`Windows 群組資訊的參數不需要以改善效能。       <xref:System.IdentityModel.Selectors.X509CertificateValidator>類別有數個靜態屬性，例如<xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>屬性可以傳遞至`validator`參數。</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 這些屬性會提供常用的 X.509 憑證驗證方法。 必要的自訂驗證方法時，衍生自<xref:System.IdentityModel.Selectors.X509CertificateValidator>並覆寫<xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法。</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法透過呼叫<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       當`true`傳入`mapToWindows`參數的 X.509 憑證對應至 Windows 帳戶和相關的宣告會新增至<xref:System.IdentityModel.Policy.EvaluationContext>，例如 Windows 群組的使用者所屬。</xref:System.IdentityModel.Policy.EvaluationContext> 當安全性權杖屬於型別<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>、<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>屬性會使用指定之權杖中的身分識別; 否則 X.509 憑證對應至 Windows 身分識別的 X.509 憑證之使用者主要名稱 SubjectAltNames 延伸為基礎的 Kerberos S4U 登入。</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref>來檢查憑證是否有效。"
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>憑證的身分識別對應至 Windows 身分識別，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>包含群組的 Windows 使用者所屬中<xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>是建構在驗證程序，否則屬性<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得值，指出這個安全性權杖驗證器是否可以驗證指定的安全性權杖。"
  remarks: "CanValidateTokenCore 方法不會驗證安全性權杖。由執行<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>方法。</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>進行驗證。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>當<code> token </code>是<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>安全性權杖或衍生自類別<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  id: MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得值，指出是否要將 X.509 憑證對應至 Windows 帳戶。"
  remarks: "MapCertificateToWindowsAccount 屬性只能設定建構函式中。       如果正在使用傳輸層級 SSL 或 HTTPS 安全性，而且由基礎安全性通道或網際網路資訊服務 (IIS) 已經提供對應，而且不會鏈結驗證會套用該對應。 否則，在執行之前的對應，使用憑證鏈結，驗證憑證，憑證必須鏈結至 NT_AUTHORITY 身分識別。 使用鏈結結構會對應到 CERT_CHAIN_POLICY_NT_AUTH，如中所定義`CertVerifyCertificateChainPolicy`函式 (請參閱[CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570)密碼編譯 SDK 中的函式)。 將憑證對應至 Windows 帳戶時，才會發生這種行為。"
  syntax:
    content: public bool MapCertificateToWindowsAccount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要將 X.509 憑證對應至 Windows 帳戶。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "驗證指定的安全性權杖，並傳回安全性權杖的授權原則集合。"
  remarks: "ValidateTokenCore 方法覆寫時，請遵循這些指導方針:-當安全性權杖傳遞至`token`參數不可以是經過驗證，會擲回<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外狀況。</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -當沒有任何作用中的此應用程式授權原則，則傳回空<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的型別<xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       當`null`會使用這個方法，傳回[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]會擲回<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外狀況。</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       ValidateTokenCore 方法呼叫<xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>方法來驗證建構函式中指定的驗證方法`token`參數。</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>進行驗證。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型別的<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> ，其中包含作用中對此應用程式的授權原則集合。"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore
