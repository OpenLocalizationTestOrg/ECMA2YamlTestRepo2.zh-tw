### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  id: StringWithQualityHeaderValue
  children:
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  - System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  - System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  langs:
  - csharp
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
  type: Class
  summary: "代表具有選擇性品質的字串標頭值。"
  remarks: "StringWithQualityHeaderValue 類別提供的支援字串以用於某些標頭中所定義的品質因數[RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) IETF 根據。       品質因素允許使用者代理程式，以指出喜好設定的各種標頭包括 Accept、 Accept-charset、 Accept-encoding、 和 Accept-encoding 標頭中的各種選項的相對程度。 品質會使用範圍從 0 到 1。 預設值是 q =&1;。"
  syntax:
    content: 'public class StringWithQualityHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>類別。"
  syntax:
    content: public StringWithQualityHeaderValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "用來初始化新執行個體的字串。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "初始化的新執行個體<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>類別。"
  syntax:
    content: public StringWithQualityHeaderValue (string value, double quality);
    parameters:
    - id: value
      type: System.String
      description: "用來初始化新執行個體的字串。"
    - id: quality
      type: System.Double
      description: "品質因素，用來初始化新執行個體。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "判斷指定的物件是否等於目前<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要與目前物件比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref:System.Object>等於目前的物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Object>"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "做為雜湊函式<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  remarks: "雜湊程式碼是用來識別物件在等號比較測試期間的數值。 它也可做為集合中物件的索引。       GetHashCode 方法適合用於雜湊演算法和資料結構，例如雜湊表。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前物件的雜湊程式碼。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "將字串轉換成<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>執行個體。"
  syntax:
    content: public static System.Net.Http.Headers.StringWithQualityHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "表示品質標頭值資訊的字串。"
    return:
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref>執行個體。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>參考。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>不是有效的字串，品質標頭值的資訊。"
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  id: Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得從品質因數<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  syntax:
    content: public Nullable<double> Quality { get; }
    return:
      type: System.Nullable{System.Double}
      description: "從的品質因數<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "建立新的物件目前的複本<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>執行個體。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "目前的執行個體的複本。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "傳回字串，代表目前<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "表示目前物件的字串。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "判斷字串是否為有效<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>資訊。"
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.StringWithQualityHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "要驗證的字串。"
    - id: parsedValue
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref>的字串版本。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  id: Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "取得字串值，從<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "從字串值<xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref>物件。"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals
  nameWithType: StringWithQualityHeaderValue.Equals
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: StringWithQualityHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse
  nameWithType: StringWithQualityHeaderValue.Parse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString
  nameWithType: StringWithQualityHeaderValue.ToString
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: StringWithQualityHeaderValue.TryParse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
