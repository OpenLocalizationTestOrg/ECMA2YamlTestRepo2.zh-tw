### YamlMime:ManagedReference
items:
- uid: System.Globalization.IdnMapping
  id: IdnMapping
  children:
  - System.Globalization.IdnMapping.#ctor
  - System.Globalization.IdnMapping.AllowUnassigned
  - System.Globalization.IdnMapping.Equals(System.Object)
  - System.Globalization.IdnMapping.GetAscii(System.String)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.GetHashCode
  - System.Globalization.IdnMapping.GetUnicode(System.String)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.UseStd3AsciiRules
  langs:
  - csharp
  name: IdnMapping
  nameWithType: IdnMapping
  fullName: System.Globalization.IdnMapping
  type: Class
  summary: "支援使用非 ASCII 字元的網際網路網域名稱。 這個類別無法被繼承。"
  remarks: "網際網路網域名稱是由一或多個部分，稱為標籤分隔符號所分隔的網域名稱標籤所組成。 例如，網域名稱 」 www.proseware.com 」 包含標籤、&quot;www&quot;、&quot;proseware，」 和 「 com 」，以句號分隔。 標準的網域名稱包含在 US ASCII （或基本拉丁文） 字元範圍中，從 U +&0021; U +&007;E 至指定的字元。 為了在不使用 US-ASCII 字元組，國際化網域名稱的應用程式 (IDNA) 的文化特性的網際網路使用量 2003 以支援包含 US-ASCII 字元範圍以外的 Unicode 字元的採用標準。 不過，名稱伺服器和網域名稱解析繼續依賴 US-ASCII 字元範圍內的字元。       IDNA 機制會使用 Punycode 對應國際化的網域名稱包含網域名稱系統所支援的 US-ASCII 字元範圍以 US-ASCII 字元範圍以外的 Unicode 字元。 IDNA 機制用來轉換僅網域名稱，不透過網際網路傳輸的資料。      > [!IMPORTANT] > 中[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]，IdnMapping 類別支援不同版本的 IDNA 標準，根據使用中的作業系統: >>-在上執行時[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]，它支援 2008年版的所述的 IDNA 標準[RFC 5891︰ 國際化網域名稱中的應用程式 (IDNA): 通訊協定](http://go.microsoft.com/fwlink/?LinkId=231875)。   >-舊版的 Windows 作業系統上執行時，它支援 2003年版本的所述的標準[RFC 3490︰ 國際化網域名稱的應用程式 (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110)。   >> 看到[Unicode 的技術標準 #46: IDNA 相容性處理](http://go.microsoft.com/fwlink/?LinkId=232459)的方式有些差異這些標準處理特定字元集。       <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=fullName>方法標準化每個標籤的網域名稱，轉換成包含可顯示 Unicode 表示法標準化的名稱字元在 US-ASCII 字碼指標範圍 (U +&0020; 到 U +&007;E)，和前面加上 ASCII 相容編碼 (ACE) 前置詞 (「 y2...xn-&quot;)。</xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=fullName> <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=fullName>方法還原轉換的網域名稱標籤<xref:System.Globalization.IdnMapping.GetAscii%2A>方法。</xref:System.Globalization.IdnMapping.GetAscii%2A> </xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=fullName>       如果要轉換的字串包含標籤分隔符號字元表意完全停止 (U +&3002;)，設為全形完全停止 (U + FF0E) 和半形表意完全停止 (U + FF61)<xref:System.Globalization.IdnMapping.GetAscii%2A>方法將它們轉換成標籤分隔符號完全停止 (週期、 U +&002;E)。</xref:System.Globalization.IdnMapping.GetAscii%2A> <xref:System.Globalization.IdnMapping.GetUnicode%2A>方法，不過，不會還原原始標籤分隔字元。</xref:System.Globalization.IdnMapping.GetUnicode%2A>"
  example:
  - "The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to convert an array of internationalized domain names to Punycode. The <xref:System.Globalization.IdnMapping.GetUnicode%2A> method then converts the Punycode domain name back to the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.i_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/t-system.globalization.i_1.cs)]"
  syntax:
    content: public sealed class IdnMapping
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.#ctor
  id: '#ctor'
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: IdnMapping()
  nameWithType: IdnMapping.IdnMapping()
  fullName: System.Globalization.IdnMapping.IdnMapping()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新執行個體<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>類別。"
  remarks: "<xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=fullName>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=fullName>屬性會初始化為`false`。</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=fullName> </xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=fullName> 一小部分的 ASCII 字元 A-Z、 0-9、 連字號 （-） 以外的字元 (U + 002D)，和網域名稱中允許的句號 （.） 字元，但不是未指定的 Unicode 字碼指標。"
  syntax:
    content: public IdnMapping ();
    parameters: []
  overload: System.Globalization.IdnMapping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.AllowUnassigned
  id: AllowUnassigned
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
  fullName: System.Globalization.IdnMapping.AllowUnassigned
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得或設定值，指出未指定的 Unicode 字碼指標是否要在目前的成員所執行的作業使用<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>物件。"
  remarks: "已註冊的網域名稱不能包含未指派的字碼指標。 因此，AllowUnassigned 屬性的預設值是`false`。 IDNA 規格允許只在查詢進行比對字串中未指定的字碼指標 (也就是在網域名稱查閱)。 如需有關使用網域名稱中未指定的字碼指標，請參閱[RFC 3454、 「 準備的國際化字串 (stringprep) 」](http://go.microsoft.com/fwlink/?LinkId=231873)和[RFC 5891、 「 國際化網域名稱中的應用程式 (IDNA):: 通訊協定 」](http://go.microsoft.com/fwlink/?LinkId=231875)。      > [!IMPORTANT] > TheAllowUnassigned 屬性是否`false`，與屬性相關聯的行為取決於基礎作業系統。 在[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]、<xref:System.Globalization.IdnMapping>類別符合 IDNA 2008，Unicode 6.0 標準為基礎。</xref:System.Globalization.IdnMapping> 在舊版 Windows 中，<xref:System.Globalization.IdnMapping>類別根據 IDNA 2003，以 Unicode 3 為基礎。*x*.</xref:System.Globalization.IdnMapping> IDNA 2008 中支援和字元已指派給已指派 IDNA 2003 中的一些字碼指標。 例如，U + 0221年中引進了 Unicode 4.0。 在[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]，編碼為&quot;y2...xn —&6;la&quot;。 舊版 Windows 中，它會擲回<xref:System.ArgumentException>例外狀況。</xref:System.ArgumentException>"
  syntax:
    content: public bool AllowUnassigned { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果未指定的字碼指標作業中所使用;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.IdnMapping.AllowUnassigned*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdnMapping.Equals(Object)
  fullName: System.Globalization.IdnMapping.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指出是否指定的物件和目前<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>物件是否相等。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要與目前物件比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果所指定的物件<code> obj </code>參數衍生自<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>及其<> *> 和<> *> 屬性都相等，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.IdnMapping.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String)
  id: GetAscii(System.String)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String)
  nameWithType: IdnMapping.GetAscii(String)
  fullName: System.Globalization.IdnMapping.GetAscii(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "編碼字串的 Unicode 字元，可顯示在 US-ASCII 字元範圍中的 Unicode 字元的字串組成的網域名稱標籤。 根據 IDNA 標準格式化字串。"
  remarks: "`unicode`參數指定有效的 Unicode 字元所組成的一或多個標籤的字串。 標籤會以分隔符號標籤分隔。 `unicode`參數開頭不可以為標籤分隔符號，但它可以包括以及選擇性地以分隔符號結束。 標籤分隔符號會完全停止 (週期、 U +&002;E)、 表意文字全文停止 (U +&3002;)，設為全形完全停止 (U + FF0E) 和半形表意完全停止 (U + FF61)。 例如，網域名稱 」 www.adatum.com 」 包含標籤、&quot;www&quot;、&quot;adatum，」 和 「 com 」，以句號分隔。       標籤不能包含任何下列字元:-從 U +&001;f 範圍和 U +&007;F 到 U +&0001; Unicode 控制字元。      未指定的 Unicode 字元，如果值<xref:System.Globalization.IdnMapping.AllowUnassigned%2A>屬性是`false`。</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -非標準字元以 US-ASCII 字元範圍，例如空格 (U +&0020;) 中驚嘆號標記 (U +&0021;)，和低 (U +&005;F) 字元，如果值<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>屬性是`true`。</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      為特定版本的 IDNA 標準禁止的字元。 如需禁止的字元的詳細資訊，請參閱[RFC 3454︰ 準備的國際化字串 (&quot;stringprep 」)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 和[RFC 5982: Unicode 字碼指標和應用程式的國際化網域名稱](http://go.microsoft.com/fwlink/?LinkId=231877)IDNA 2008。       <xref:System.Globalization.IdnMapping.GetAscii%2A>方法會將完全停止 (週期、 U +&002;E) 中的所有標籤的分隔符號。</xref:System.Globalization.IdnMapping.GetAscii%2A>       如果`unicode`未包含任何外部 US-ASCII 字元會禁止的字元範圍和 US-ASCII 字元範圍內的任何字元，則方法會傳回`unicode`不變。"
  example:
  - "The following example uses the GetAscii method to convert an array of internationalized domain names to Punycode, which is an encoded equivalent that consists of characters in the US-ASCII character range. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/m-system.globalization.i_0_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/m-system.globalization.i_0_1.cs)]"
  syntax:
    content: public string GetAscii (string unicode);
    parameters:
    - id: unicode
      type: System.String
      description: "要轉換的字串，其中包含以分隔符號標籤分隔的一個或多個網域名稱標籤。"
    return:
      type: System.String
      description: "所指定之字串的對等<code> unicode </code>參數，可顯示在 US ASCII 的 Unicode 字元所組成的字元範圍 (U +&0020; 到 U +&007;E)，並根據 IDNA 標準格式。"
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  id: GetAscii(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "將編碼網域名稱標籤包含 US-ASCII 字元範圍以外的 Unicode 字元的子的字串。 子字串轉換成可顯示在 US-ASCII 字元範圍中的 Unicode 字元的字串，而且會根據 IDNA 標準格式化。"
  remarks: "`unicode`和`index`參數定義具有有效的 Unicode 字元所組成的一或多個標籤的子字串。 標籤會以分隔符號標籤分隔。 子字串的第一個字元不能以標籤分隔字元開頭，但它可以包括以及選擇性地以分隔符號結束。 標籤分隔符號會完全停止 (週期、 U +&002;E)、 表意文字全文停止 (U +&3002;)，設為全形完全停止 (U + FF0E) 和半形表意完全停止 (U + FF61)。 例如，網域名稱 」 www.adatum.com 」 包含標籤、&quot;www&quot;、&quot;adatum，」 和 「 com 」，以句號分隔。       標籤不能包含任何下列字元:-從 U +&001;f 範圍和 U +&007;F 到 U +&0001; Unicode 控制字元。      -未指派的值而定的 Unicode 字元，<xref:System.Globalization.IdnMapping.AllowUnassigned%2A>屬性。</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -非標準字元以 US-ASCII 字元範圍，例如空格 (U +&0020;) 中驚嘆號標記 (U +&0021;)，和低列 (U +&005;F) 字元，根據的值<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>屬性。</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      為特定版本的 IDNA 標準禁止的字元。 如需禁止的字元的詳細資訊，請參閱[RFC 3454︰ 準備的國際化字串 (&quot;stringprep 」)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 和[RFC 5982: Unicode 字碼指標和應用程式的國際化網域名稱](http://go.microsoft.com/fwlink/?LinkId=231877)IDNA 2008。       <xref:System.Globalization.IdnMapping.GetAscii%2A>方法會將完全停止 (週期、 U +&002;E) 中的所有標籤的分隔符號。</xref:System.Globalization.IdnMapping.GetAscii%2A>       如果`unicode`未包含任何外部 US-ASCII 字元會禁止的字元範圍和 US-ASCII 字元範圍內的任何字元，則方法會傳回`unicode`不變。"
  example:
  - "The following example removes the local part and the @ character from an email address, and passes the resulting domain name to the GetAscii method to create a Punycode domain name, which is an encoded equivalent that consists of characters in the US-ASCII character range. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-cs[System.Globalization.IdnMapping.GetAscii#2](~/add/codesnippet/csharp/m-system.globalization.i_3_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/add/codesnippet/visualbasic/m-system.globalization.i_3_1.vb)]"
  syntax:
    content: public string GetAscii (string unicode, int index);
    parameters:
    - id: unicode
      type: System.String
      description: "要轉換的字串，其中包含以分隔符號標籤分隔的一個或多個網域名稱標籤。"
    - id: index
      type: System.Int32
      description: "中以零為起始的位移`unicode`，指定要轉換的子字串的開頭。 結尾的轉換作業會繼續`unicode`字串。"
    return:
      type: System.String
      description: "所指定的子字串的對等<code> unicode </code>和<code> index </code>參數，可顯示在 US ASCII 的 Unicode 字元所組成的字元範圍 (U +&0020; 到 U +&007;E)，並根據 IDNA 標準格式。"
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零。       -<code>index</code>大於的長度<code>unicode</code>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  id: GetAscii(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String,Int32,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "編碼指定的網域名稱標籤包含 US-ASCII 字元範圍以外的 Unicode 字元的子字串中的字元數。 子字串轉換成可顯示在 US-ASCII 字元範圍中的 Unicode 字元的字串，而且會根據 IDNA 標準格式化。"
  remarks: "`Unicode`， `index`，和`count`參數定義具有有效的 Unicode 字元所組成的一或多個標籤的子字串。 標籤會以分隔符號標籤分隔。 子字串的第一個字元不能以標籤分隔字元開頭，但它可以包括以及選擇性地以分隔符號結束。 標籤分隔符號會完全停止 (週期、 U +&002;E)、 表意文字全文停止 (U +&3002;)，設為全形完全停止 (U + FF0E) 和半形表意完全停止 (U + FF61)。 例如，網域名稱 」 www.adatum.com 」 包含標籤、&quot;www&quot;、&quot;adatum，」 和 「 com 」，以句號分隔。       標籤不能包含任何下列字元:-從 U +&001;f 範圍和 U +&007;F 到 U +&0001; Unicode 控制字元。      -未指派的值而定的 Unicode 字元，<xref:System.Globalization.IdnMapping.AllowUnassigned%2A>屬性。</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -非標準字元以 US-ASCII 字元範圍，例如空格 (U +&0020;) 中驚嘆號標記 (U +&0021;)，和低列 (U +&005;F) 字元，根據的值<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>屬性。</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      為特定版本的 IDNA 標準禁止的字元。 如需禁止的字元的詳細資訊，請參閱[RFC 3454︰ 準備的國際化字串 (&quot;stringprep 」)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 和[RFC 5982: Unicode 字碼指標和應用程式的國際化網域名稱](http://go.microsoft.com/fwlink/?LinkId=231877)IDNA 2008。       <xref:System.Globalization.IdnMapping.GetAscii%2A>方法會將完全停止 (週期、 U +&002;E) 中的所有標籤的分隔符號。</xref:System.Globalization.IdnMapping.GetAscii%2A> 如果子字串未包含 US-ASCII 字元範圍，以外的任何字元，而且禁止使用 US-ASCII 字元範圍內的任何字元，則方法會傳回未變更的子字串。"
  example:
  - "The following example uses the GetAscii method to convert an internationalized domain name to a domain name that complies with the IDNA standard. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the standardized domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[IdnMapping.GetX#1](~/add/codesnippet/visualbasic/9eb31a8b-c677-4c73-81bb-_1.vb)]\n [!code-cs[IdnMapping.GetX#1](~/add/codesnippet/csharp/9eb31a8b-c677-4c73-81bb-_1.cs)]"
  syntax:
    content: public string GetAscii (string unicode, int index, int count);
    parameters:
    - id: unicode
      type: System.String
      description: "要轉換的字串，其中包含以分隔符號標籤分隔的一個或多個網域名稱標籤。"
    - id: index
      type: System.Int32
      description: "中以零為起始的位移`unicode`指定子字串的開頭。"
    - id: count
      type: System.Int32
      description: "要轉換中所指定的位置開始算的子字串的字元數`index`中`unicode`字串。"
    return:
      type: System.String
      description: "所指定的子字串的對等<code> unicode </code>， <code> index </code>，和<code> count </code>參數，可顯示在 US ASCII 的 Unicode 字元所組成的字元範圍 (U +&0020; 到 U +&007;E)，並根據 IDNA 標準格式。"
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>或<code>count</code>小於零。       -<code>index</code>大於的長度<code>unicode</code>。       -<code>index</code>大於的長度<code>unicode</code>減去<code>count</code>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetHashCode
  id: GetHashCode
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdnMapping.GetHashCode()
  fullName: System.Globalization.IdnMapping.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回這個雜湊程式碼<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>物件。"
  remarks: "如果您的應用程式必須實作的有意義的雜湊程式碼演算法，請覆寫 GetHashCode 方法。"
  example:
  - "The following example assumes that a single string can contain multiple email addresses separated by spaces. It removes the local part and the @ character from each email address, and passes the resulting domain name to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> or <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to create a Punycode domain name. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name.  \n  \n [!code-cs[System.Globalization.IdnMapping.GetAscii#3](~/add/codesnippet/csharp/m-system.globalization.i_2_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/add/codesnippet/visualbasic/m-system.globalization.i_2_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "四個 32 位元帶正負號的常數的其中一個衍生自的屬性<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>物件。  傳回的值沒有特殊意義，並不適合用於雜湊程式碼演算法。"
  overload: System.Globalization.IdnMapping.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String)
  id: GetUnicode(System.String)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String)
  nameWithType: IdnMapping.GetUnicode(String)
  fullName: System.Globalization.IdnMapping.GetUnicode(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "解碼的一或多個網域名稱標籤，根據 IDNA 標準，Unicode 字元的字串編碼的字串。"
  remarks: "如需網域名稱、 標籤和標籤分隔符號的詳細資訊，請參閱備註<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>方法。</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  example:
  - "The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method to convert an array of internationalized domain names to Punycode. The GetUnicode method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/m-system.globalization.i_1_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/m-system.globalization.i_1_1.cs)]"
  syntax:
    content: public string GetUnicode (string ascii);
    parameters:
    - id: ascii
      type: System.String
      description: "要解碼的字串，其中包含根據 IDNA 標準編碼 US-ASCII 字元範圍 (U +&0020; 到 U +&007;E) 中的一個或多個標籤。"
    return:
      type: System.String
      description: "IDNA 子字串所指定的相等 Unicode <code> ascii </code>參數。"
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  id: GetUnicode(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "將解碼一或多個網域名稱標籤，根據 IDNA 標準，Unicode 字元的字串編碼子的字串。"
  remarks: "如需網域名稱、 標籤和標籤分隔符號的詳細資訊，請參閱備註<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>方法。</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  syntax:
    content: public string GetUnicode (string ascii, int index);
    parameters:
    - id: ascii
      type: System.String
      description: "要解碼的字串，其中包含根據 IDNA 標準編碼 US-ASCII 字元範圍 (U +&0020; 到 U +&007;E) 中的一個或多個標籤。"
    - id: index
      type: System.Int32
      description: "中以零為起始的位移`ascii`，指定要解碼的子字串的開頭。 解碼作業會繼續結尾`ascii`字串。"
    return:
      type: System.String
      description: "IDNA 子字串所指定的相等 Unicode <code> ascii </code>和<code> index </code>參數。"
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>小於零。       -<code>index</code>大於的長度<code>ascii</code>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  id: GetUnicode(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String,Int32,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "解碼指定的長度，其中包含一或多個網域名稱標籤，根據 IDNA 標準，Unicode 字元的字串編碼的子字串。"
  remarks: "如需網域名稱、 標籤和標籤分隔符號的詳細資訊，請參閱備註<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>方法。</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  syntax:
    content: public string GetUnicode (string ascii, int index, int count);
    parameters:
    - id: ascii
      type: System.String
      description: "要解碼的字串，其中包含根據 IDNA 標準編碼 US-ASCII 字元範圍 (U +&0020; 到 U +&007;E) 中的一個或多個標籤。"
    - id: index
      type: System.Int32
      description: "中以零為起始的位移`ascii`指定子字串的開頭。"
    - id: count
      type: System.Int32
      description: "要轉換中所指定的位置開始算的子字串的字元數`index`中`ascii`字串。"
    return:
      type: System.String
      description: "IDNA 子字串所指定的相等 Unicode <code> ascii </code>， <code> index </code>，和<code> count </code>參數。"
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>或<code>count</code>小於零。       -<code>index</code>大於的長度<code>ascii</code>。       -<code>index</code>大於的長度<code>ascii</code>減去<code>count</code>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>無效的基礎<xref:System.Globalization.IdnMapping.AllowUnassigned*>和<xref:System.Globalization.IdnMapping.UseStd3AsciiRules*>屬性和 IDNA 標準。"
  platform:
  - net462
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules
  id: UseStd3AsciiRules
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
  fullName: System.Globalization.IdnMapping.UseStd3AsciiRules
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得或設定值，指出是否在目前的成員所執行的作業中使用標準或寬鬆的方式命名慣例<xref href=&quot;System.Globalization.IdnMapping&quot;></xref>物件。"
  remarks: "遵循標準命名規則的網域名稱包含 US-ASCII 字元範圍中的字元的特定子集。 字元是字母 A 到 Z、 0 到 9 的數字、 連字號 （-） 字元 (U + 002D)，以及句號 （.） 字元。 字元的大小寫並不重要。 比較不嚴謹的命名慣例允許使用更廣泛範圍的 ASCII 字元，包括空格字元 (U +&0020;)、 驚嘆號字元 (U +&0021;)，和上方橫線字元 (U +&005;F)。 如果是 UseStd3AsciiRules `true`，標準的字元可出現在所傳回的標籤<xref:System.Globalization.IdnMapping.GetAscii%2A>方法。</xref:System.Globalization.IdnMapping.GetAscii%2A>       根據預設，UseStd3AsciiRules 屬性的值是`false`，並展開的 ASCII 字元子集允許在標籤中。      > [!NOTE] ><xref:System.Globalization.IdnMapping>類別禁止使用雙位元字元 U +&0000; 到 U +&001;f 範圍，和 U +&007;F 網域名稱標籤不論 UseStd3AsciiRules 屬性的設定。</xref:System.Globalization.IdnMapping> 這項限制可降低受到安全性攻擊，例如名稱詐騙的風險。"
  example:
  - "The following example generates URLs that contain characters in the ASCII range from U+0000 to U+007F and passes them to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method of two <xref:System.Globalization.IdnMapping> objects. One object has its UseStd3AsciiRules property set to `true`, and the other object has it set to `false`. The output displays the characters that are invalid when the UseStd3AsciiRules property is `true` but valid when it is `false`.  \n  \n [!code-cs[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/add/codesnippet/csharp/p-system.globalization.i_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/add/codesnippet/visualbasic/p-system.globalization.i_1.vb)]"
  syntax:
    content: public bool UseStd3AsciiRules { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果作業; 中使用的標準命名慣例否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.IdnMapping.UseStd3AsciiRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.IdnMapping.#ctor
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: IdnMapping()
  nameWithType: IdnMapping.IdnMapping()
  fullName: System.Globalization.IdnMapping.IdnMapping()
- uid: System.Globalization.IdnMapping.AllowUnassigned
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
  fullName: System.Globalization.IdnMapping.AllowUnassigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.IdnMapping.Equals(System.Object)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: Equals(Object)
  nameWithType: IdnMapping.Equals(Object)
  fullName: System.Globalization.IdnMapping.Equals(Object)
- uid: System.Globalization.IdnMapping.GetAscii(System.String)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String)
  nameWithType: IdnMapping.GetAscii(String)
  fullName: System.Globalization.IdnMapping.GetAscii(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String,Int32,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32,Int32)
- uid: System.Globalization.IdnMapping.GetHashCode
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetHashCode()
  nameWithType: IdnMapping.GetHashCode()
  fullName: System.Globalization.IdnMapping.GetHashCode()
- uid: System.Globalization.IdnMapping.GetUnicode(System.String)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String)
  nameWithType: IdnMapping.GetUnicode(String)
  fullName: System.Globalization.IdnMapping.GetUnicode(String)
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32)
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String,Int32,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32,Int32)
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
  fullName: System.Globalization.IdnMapping.UseStd3AsciiRules
- uid: System.Globalization.IdnMapping.#ctor*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: IdnMapping
  nameWithType: IdnMapping.IdnMapping
- uid: System.Globalization.IdnMapping.AllowUnassigned*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
- uid: System.Globalization.IdnMapping.Equals*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: Equals
  nameWithType: IdnMapping.Equals
- uid: System.Globalization.IdnMapping.GetAscii*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii
  nameWithType: IdnMapping.GetAscii
- uid: System.Globalization.IdnMapping.GetHashCode*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetHashCode
  nameWithType: IdnMapping.GetHashCode
- uid: System.Globalization.IdnMapping.GetUnicode*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode
  nameWithType: IdnMapping.GetUnicode
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
