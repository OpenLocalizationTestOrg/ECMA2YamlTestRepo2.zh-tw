### YamlMime:ManagedReference
items:
- uid: System.Configuration.LocalFileSettingsProvider
  id: LocalFileSettingsProvider
  children:
  - System.Configuration.LocalFileSettingsProvider.#ctor
  - System.Configuration.LocalFileSettingsProvider.ApplicationName
  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider
  fullName: System.Configuration.LocalFileSettingsProvider
  type: Class
  summary: "提供持續性應用程式設定類別。"
  remarks: "設定提供者會定義用來儲存應用程式設定架構所使用的組態資料的機制。 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]包含單一的預設設定提供者，LocalFileSettingsProvider，它會儲存到本機檔案系統的組態資料。 應用程式設定屬性或一組屬性都已關聯到特定的設定提供者透過使用<xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       一般而言，用戶端程式不會明確地存取此類別; 事件類別相反地，應用程式設定架構自動叫用適當的設定提供者時所需的服務。 例如，有許多成員<xref:System.Configuration.ApplicationSettingsBase>它們的工作委派給相關聯的設定提供者。</xref:System.Configuration.ApplicationSettingsBase>       LocalFileSettingsProvider 保存設定組態檔的副檔名為`.config`。 組態檔的內容會結構化成 XML 文件。 根據是否設定的範圍是在應用程式層級或使用者層級，設定資料會儲存為中的項目`<applicationSettings>`或`<userSettings>`分別區段群組。 每個區段群組由對應<xref:System.Configuration.AppSettingsSection>或<xref:System.Configuration.ClientSettingsSection>分別。</xref:System.Configuration.ClientSettingsSection> </xref:System.Configuration.AppSettingsSection> 擁有和組態區段處理常式，也就是<xref:System.Configuration.IConfigurationSectionHandler>.</xref:System.Configuration.IConfigurationSectionHandler>類型的物件由管理 > 一節中的每個物件       應用程式範圍的設定和預設使用者範圍的設定會儲存在名為`application.exe.config`，與可執行檔相同的目錄中建立的所在。 應用程式組態設定是唯讀的。 特定的使用者資料會儲存在名為`user.config`、 預存使用者的主目錄下。 如果啟用漫遊設定檔，則可能存在兩個使用者設定檔的版本。 在這種情況下，漫遊的版本中的項目優先於本機使用者設定檔中的重複項目。       如需應用程式設定的詳細資訊，請參閱[適用於 Windows Form 應用程式設定](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements:
  - System.Configuration.IApplicationSettingsProvider
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.LocalFileSettingsProvider&quot;></xref>類別。"
  remarks: "預設建構函式設定<xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>至<xref:System.String.Empty>。</xref:System.String.Empty>屬性</xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>"
  syntax:
    content: public LocalFileSettingsProvider ();
    parameters: []
  overload: System.Configuration.LocalFileSettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定目前執行的應用程式的名稱。"
  remarks: "ApplicationName 和<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性有助於釐清同樣的具名的設定不同的應用程式的屬性。</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "字串，包含應用程式的顯示名稱。"
  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "傳回相同的應用程式的先前版本的具名的設定屬性的值。"
  remarks: "GetPreviousVersion 方法通常用於搭配<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>方法在移轉期間新版應用程式安裝的應用程式設定。</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 如需詳細資訊，請參閱<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>方法。</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述使用應用程式設定屬性的位置。"
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>值會傳回。"
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref>代表應用程式設定如有找到則為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "傳回屬性值設定為指定的應用程式執行個體和設定屬性群組的集合。"
  remarks: "GetPropertyValues 方法也會管理<xref:System.Configuration.SpecialSetting>.</xref:System.Configuration.SpecialSetting>的特殊應用程式設定類型 連接字串會儲存在組態檔項目所分隔的特殊區段`<connectionstrings>`。      > [!CAUTION] ><xref:System.Configuration.LocalFileSettingsProvider>不使用加密來保存任何設定。</xref:System.Configuration.LocalFileSettingsProvider> 因此，不要儲存純文字密碼或其他機密資訊，而不採取其他措施，例如分別加密資訊的組態檔中使用此提供者。 如需詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含要擷取其值的設定屬性群組。"
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>包含指定的設定屬性群組的值。"
  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "遇到使用者範圍的設定，但目前的設定只支援應用程式範圍的設定。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化提供者。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);
    parameters:
    - id: name
      type: System.String
      description: "提供者的易記名稱。"
    - id: values
      type: System.Collections.Specialized.NameValueCollection
      description: "代表在此提供者組態中指定的提供者特定屬性的名稱/值組的集合。"
  overload: System.Configuration.LocalFileSettingsProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "與指定的應用程式成為其預設值相關聯的所有應用程式設定屬性重設。"
  remarks: "重設方法還原指定的應用程式設定群組中的預存的值。 重設的動作取決於應用程式設定屬性的範圍:-應用程式範圍的設定不會受到影響。      -使用者範圍的設定會重設為預設值為唯讀應用程式組態檔中的項目儲存`application.exe.config`。 如果使用漫遊設定檔，在漫遊設定檔中的任何應用程式設定值優先於本機設定檔中找到重複的項目。       請注意，是否使用漫遊設定檔，可能會有兩個`user.config`檔案、 一個本機設定，一個用於漫遊設定檔。"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
  overload: System.Configuration.LocalFileSettingsProvider.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "遇到使用者範圍的設定，但目前的設定只支援應用程式範圍的設定。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "設定指定之群組的屬性設定的值。"
  remarks: "設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>，包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，呼叫以保存所有其設定屬性的值。</xref:System.Configuration.ApplicationSettingsBase.Save%2A> </xref:System.Configuration.ApplicationSettingsBase> 此方法透過所有的設定會列舉其設定屬性和呼叫相關聯的提供者<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>每個方法<xref:System.Configuration.SettingsProvider>執行實際的序列化作業。</xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       SetPropertyValues 個別序列化其對應的應用程式中適當設定每個使用者範圍的應用程式設定屬性`user.config`組態檔。       根據預設，SetPropertyValues 方法會使用下列邏輯順序來判斷序列化配置，根據設定屬性的型別︰ 1。  如果類型具有相關聯<xref:System.ComponentModel.TypeConverter>與<xref:System.ComponentModel.TypeConverter.ConvertToString%2A>方法實作中，這項轉換會使用。</xref:System.ComponentModel.TypeConverter.ConvertToString%2A> </xref:System.ComponentModel.TypeConverter>      2.  會使用 XML 序列化。       不過，您可以指定慣用的序列化機制使用<xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> <xref:System.Configuration.LocalFileSettingsProvider>不支援二進位序列化[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]。</xref:System.Configuration.LocalFileSettingsProvider>       如果使用者範圍的設定屬性設回其預設值明確，本機檔案設定提供者會從使用者設定檔移除相關聯的設定項目。 下一步的讀取權限，此屬性只會使用預設值。      > [!CAUTION] ><xref:System.Configuration.LocalFileSettingsProvider>不使用加密來保存任何設定。</xref:System.Configuration.LocalFileSettingsProvider> 因此，不要儲存純文字密碼或其他機密資訊，而不採取其他措施，例如分別加密資訊的組態檔中使用此提供者。 如需詳細資訊，請參閱[加密組態資訊使用受保護的組態](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: values
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>代表要設定的屬性設定的群組。"
  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "遇到使用者範圍的設定，但目前的設定只支援應用程式範圍的設定。       -或者-時發生一般失敗，將設定儲存到組態檔。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "嘗試從相同的應用程式的先前版本移轉先前使用者範圍的設定。"
  remarks: "<xref:System.Configuration.LocalFileSettingsProvider>移轉個別的作業中的本機和漫遊設定。</xref:System.Configuration.LocalFileSettingsProvider>       已<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>套用到它，或整個設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase></xref:System.Configuration.NoSettingsVersionUpgradeAttribute>的每個應用程式設定為隱藏的升級方法       這個方法會呼叫這種方式取決於正在升級的應用程式的類型:-每個版本的[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式會儲存在自己獨立的安裝目錄。 新版本之後[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式已安裝，且第一次執行新版本時，內部邏輯會自動呼叫所有常見的應用程式設定移轉到新的版本升級。 如需詳細資訊，請參閱[ClickOnce 和應用程式設定](~/add/includes/ajax-current-ext-md.md)。      -標準的 Windows Form 和主控台應用程式必須以手動方式呼叫升級，因為不是以一般、 自動方式，判斷這類應用程式第一次執行時。 兩個常見方法是從安裝程式，或使用來自應用程式本身使用保存的屬性，通常名為類似`IsFirstRun`。       請注意，若要移轉的應用程式設定為較新版本，它必須能夠同時載入並讀取較舊版本的應用程式設定。 因此，它必須包含與應用程式的新的和先前版本相容的包裝函式類別。"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>描述目前的應用程式使用情形。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>包含要擷取其值的設定屬性群組。"
  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "遇到使用者範圍的設定，但目前的設定只支援應用程式範圍的設定。       -或者-無法存取舊版的組態檔。"
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.LocalFileSettingsProvider.#ctor*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: LocalFileSettingsProvider.GetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Initialize*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize
  nameWithType: LocalFileSettingsProvider.Initialize
- uid: System.Configuration.LocalFileSettingsProvider.Reset*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: LocalFileSettingsProvider.Reset
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: LocalFileSettingsProvider.SetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: LocalFileSettingsProvider.Upgrade
