### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ViewStateException
  id: ViewStateException
  children:
  - System.Web.UI.ViewStateException.#ctor
  - System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.ViewStateException.IsConnected
  - System.Web.UI.ViewStateException.Message
  - System.Web.UI.ViewStateException.Path
  - System.Web.UI.ViewStateException.PersistedState
  - System.Web.UI.ViewStateException.Referer
  - System.Web.UI.ViewStateException.RemoteAddress
  - System.Web.UI.ViewStateException.RemotePort
  - System.Web.UI.ViewStateException.UserAgent
  langs:
  - csharp
  name: ViewStateException
  nameWithType: ViewStateException
  fullName: System.Web.UI.ViewStateException
  type: Class
  summary: "表示無法載入或驗證檢視狀態時，會擲回的例外狀況。 這個類別無法被繼承。"
  remarks: "頁面載入檢視狀態資訊的頁面時，就會發生的例外狀況，建立 ViewStateException 物件，並將它當做內部例外狀況中傳遞<xref:System.Web.HttpException>例外狀況。</xref:System.Web.HttpException> <xref:System.Web.HttpException>是重新擲回至應用程式處理的例外狀況。</xref:System.Web.HttpException>       ViewStateException 類別儲存中的例外狀況的相關資訊<xref:System.Web.UI.ViewStateException.Message%2A>屬性。</xref:System.Web.UI.ViewStateException.Message%2A> 如果要求具備存取權限<xref:System.Web.HttpRequest.ServerVariables%2A>屬性，則<xref:System.Web.UI.ViewStateException.Message%2A>屬性包含從傳回的值<xref:System.Web.UI.ViewStateException.RemoteAddress%2A>， <xref:System.Web.UI.ViewStateException.RemotePort%2A>， <xref:System.Web.UI.ViewStateException.UserAgent%2A>， <xref:System.Web.UI.ViewStateException.PersistedState%2A>， <xref:System.Web.UI.ViewStateException.Referer%2A>，和<xref:System.Web.UI.ViewStateException.Path%2A>屬性，否則<xref:System.Web.UI.ViewStateException.Message%2A>屬性包含檢視狀態的一般錯誤訊息。</xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A> </xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.HttpRequest.ServerVariables%2A>       檢視狀態例外狀況可以是訊息驗證碼 (MAC) 驗證錯誤的結果。 如果頁面屬性`enableViewStateMac`設`true`，檢視狀態資訊編碼與 MAC 的識別項。 當檢視狀態資訊回傳至伺服器時，頁面會驗證以確保，它未被改變由使用者編碼方式。 如果頁面無法驗證檢視狀態資訊的 MAC 編碼，則會擲回<xref:System.Web.HttpException>ViewStateException 物件做為內部的例外狀況的例外狀況。</xref:System.Web.HttpException>       MAC 驗證成功，如檢視狀態資訊必須是雜湊依相同的索引鍵時傳送和接收。 Web 伺服陣列中每部伺服器上的電腦金鑰應該設定為 共同索引鍵。"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a ViewStateException object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the ViewStateException object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/t-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/t-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: 'public sealed class ViewStateException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.#ctor
  id: '#ctor'
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.ViewStateException&quot;></xref>類別。"
  syntax:
    content: public ViewStateException ();
    parameters: []
  overload: System.Web.UI.ViewStateException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.ViewStateException&quot;></xref>使用序列化資料的類別。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "保存序列化的物件資料的物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "關於來源或目的端內容資訊。"
  overload: System.Web.UI.ViewStateException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.IsConnected
  id: IsConnected
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出用戶端目前是否已連接到伺服器。"
  remarks: "這個屬性會傳回相同的值與呼叫<xref:System.Web.HttpResponse.IsClientConnected%2A>屬性。</xref:System.Web.HttpResponse.IsClientConnected%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: public bool IsConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用戶端仍然連接到伺服器;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.ViewStateException.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Message
  id: Message
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得偵錯檢視狀態例外狀況造成的 HTTP 要求的相關資訊。"
  remarks: "如果要求不包含伺服器變數的存取權限，這個屬性會傳回一般的檢視狀態錯誤訊息。 如果要求沒有權限來存取伺服器的變數，訊息屬性會包含從傳回的值<xref:System.Web.UI.ViewStateException.RemoteAddress%2A>， <xref:System.Web.UI.ViewStateException.RemotePort%2A>， <xref:System.Web.UI.ViewStateException.UserAgent%2A>， <xref:System.Web.UI.ViewStateException.PersistedState%2A>， <xref:System.Web.UI.ViewStateException.Referer%2A>，和<xref:System.Web.UI.ViewStateException.Path%2A>屬性。</xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A>"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含例外狀況的相關資訊格式化的訊息。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Path
  id: Path
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得 HTTP 要求的檢視狀態例外狀況所導致的路徑。"
  remarks: "這個屬性會傳回相同的值`PATH_INFO`變數中<xref:System.Web.HttpRequest.ServerVariables%2A>屬性。</xref:System.Web.HttpRequest.ServerVariables%2A> 主機名稱之後，它就會傳回路徑的一部分。 例如，在 URL http://www.contoso.com/virdir/page.html，路徑會傳回 /virdir/page.html。"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_2_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_2_1.vb)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含要求中的路徑。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.PersistedState
  id: PersistedState
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得檢視狀態字串，讀取時，造成例外狀況的檢視狀態的內容。"
  syntax:
    content: public string PersistedState { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含檢視狀態的值造成檢視狀態例外狀況。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.PersistedState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Referer
  id: Referer
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得連結至 [檢視狀態例外狀況的發生位置] 頁面上的網頁 URL。"
  remarks: "這個屬性會傳回相同的值`HTTP_REFERER`變數中<xref:System.Web.HttpRequest.ServerVariables%2A>屬性。</xref:System.Web.HttpRequest.ServerVariables%2A> 值為空字串 (&quot;&quot;) 如果沒有上一個要求連結至分頁。"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_3_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_3_1.vb)]"
  syntax:
    content: public string Referer { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含 HTTP 查閱者。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Referer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemoteAddress
  id: RemoteAddress
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得 HTTP 要求的檢視狀態例外狀況所導致的 IP 位址。"
  remarks: "這個屬性會傳回相同的值`REMOTE_ADDR`變數中<xref:System.Web.HttpRequest.ServerVariables%2A>屬性。</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemoteAddress { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含用戶端的遠端 IP 位址。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemotePort
  id: RemotePort
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得導致檢視狀態的例外狀況的 HTTP 要求的通訊埠編號。"
  remarks: "這個屬性會傳回相同的值`REMOTE_PORT`變數中<xref:System.Web.HttpRequest.ServerVariables%2A>屬性。</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemotePort { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含遠端連接埠號碼。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemotePort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.UserAgent
  id: UserAgent
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得 HTTP 要求的檢視狀態例外狀況所導致的瀏覽器類型。"
  remarks: "這個屬性會傳回相同的值`HTTP_USER_AGENT`變數中<xref:System.Web.HttpRequest.ServerVariables%2A>屬性。</xref:System.Web.HttpRequest.ServerVariables%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_1_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_1_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "A<xref:System.String>包含使用者代理程式，這通常是瀏覽器類型。</xref:System.String>"
  overload: System.Web.UI.ViewStateException.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.ViewStateException.#ctor
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.ViewStateException.IsConnected
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ViewStateException.Message
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ViewStateException.Path
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
- uid: System.Web.UI.ViewStateException.#ctor*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException
  nameWithType: ViewStateException.ViewStateException
- uid: System.Web.UI.ViewStateException.GetObjectData*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData
  nameWithType: ViewStateException.GetObjectData
- uid: System.Web.UI.ViewStateException.IsConnected*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
- uid: System.Web.UI.ViewStateException.Message*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
- uid: System.Web.UI.ViewStateException.Path*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
