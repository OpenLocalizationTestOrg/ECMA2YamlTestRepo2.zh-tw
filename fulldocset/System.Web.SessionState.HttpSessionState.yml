### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "提供存取工作階段狀態值，以及工作階段層級的設定和生命週期管理方法。"
  remarks: "ASP.NET 提供了工作階段狀態管理，可讓您儲存在多個要求相關聯的唯一瀏覽器工作階段的資訊。 您可以儲存參考索引鍵的名稱或數值索引值的集合。 存取工作階段值和功能，可使用 HttpSessionState 類別，也就是可透過存取<xref:System.Web.HttpContext.Session%2A>屬性的目前<xref:System.Web.HttpContext>，或<xref:System.Web.UI.Page.Session%2A>屬性的<xref:System.Web.UI.Page>。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       工作階段資料使用的唯一識別碼的特定瀏覽器工作階段都會關聯。 根據預設，這個識別碼會儲存在不會過期的工作階段 cookie，在瀏覽器中，但是您也可以設定您的應用程式儲存在 URL 中的工作階段識別項，藉由設定`cookieless`屬性`true`或<xref:System.Web.HttpCookieMode>元素中的應用程式組態。</xref:System.Web.HttpCookieMode> 您可以判斷是否瀏覽器是否支援 cookie 所指定的值是 ASP.NET<xref:System.Web.HttpCookieMode>如`cookieless`屬性。</xref:System.Web.HttpCookieMode> 您也可以判斷是否啟用 cookie 的瀏覽器所指定的值是 ASP.NET<xref:System.Web.HttpCookieMode>如`cookieless`屬性。</xref:System.Web.HttpCookieMode> 如果支援 cookie，則當<xref:System.Web.HttpCookieMode>已指定，或已啟用時<xref:System.Web.HttpCookieMode>指定，則工作階段識別碼會儲存在 cookie 中; 否則為將在 URL 中儲存的工作階段識別碼。</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       在第一個要求已啟動工作階段和工作階段值會保存下來，只要瀏覽器建立新的要求之前的<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>成功屬性</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>中指定的分鐘數 新的工作階段開始時，則工作階段<xref:System.Web.SessionState.SessionStateModule.Start>就會引發事件。</xref:System.Web.SessionState.SessionStateModule.Start> 您可以使用此事件執行任何額外的工作，工作階段，例如，設定預設工作階段值的開頭。 當工作階段逾時時，<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>呼叫方法時，或 ASP.NET 應用程式關閉時，工作階段<xref:System.Web.SessionState.SessionStateModule.End>就會引發事件。</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 您可以使用此事件執行任何必要的清除。 <xref:System.Web.SessionState.SessionStateModule.End>就會引發事件時，才將工作階段狀態`mode`設<xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       若要改善效能，就會使用 cookie 的工作階段未配置工作階段儲存直到資料實際上儲存在<xref:System.Web.UI.Page.Session%2A>物件。</xref:System.Web.UI.Page.Session%2A> 如需詳細資訊，請參閱<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>屬性。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       工作階段狀態不會保存跨 ASP.NET 應用程式界限。 如果瀏覽器瀏覽至其他應用程式，工作階段資訊不適用於新的應用程式。       根據預設，工作階段值會儲存在 Web 伺服器上，記憶體中。 您也可以儲存在 SQL Server 資料庫、 ASP.NET 狀態伺服器或自訂伺服器的工作階段值。 這可讓您保留工作階段值，在其中的 ASP.NET 或 IIS 程序或 ASP.NET 應用程式重新啟動的情況下，並使工作階段值可供 Web 伺服陣列中的所有伺服器。 此行為設定，藉由設定`mode`屬性設為有效<xref:System.Web.SessionState.SessionStateMode>的應用程式組態項目中的值。</xref:System.Web.SessionState.SessionStateMode> 如需詳細資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。       工作階段狀態的替代方案包括應用程式狀態 （請參閱<xref:System.Web.HttpApplication.Application%2A>屬性） 和 ASP.NET 快取 （請參閱<xref:System.Web.Caching>命名空間），其中儲存的變數，ASP.NET 應用程式; 所有的使用者可以存取 ASP.NET 設定檔 （請參閱<xref:System.Web.Profile>命名空間），其中保存資料存放區中的使用者值沒有到期使用逾時;ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>，保存<xref:System.Web.UI.Control.ViewState%2A>; 中的控制項值<xref:System.Web.HttpResponse.Cookies%2A>;<xref:System.Web.HttpRequest.QueryString%2A>屬性; 和 HTML 表單上的欄位，您可以從 HTTP`POST`使用<xref:System.Web.HttpRequest.Form%2A>集合。</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> 如需工作階段狀態和其他狀態管理替代項目之間的差異的詳細資訊，請參閱[ASP.NET 狀態管理建議](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取消目前的工作階段。"
  remarks: "一旦呼叫放棄方法時，目前工作階段已不再有效，而且可以啟動新的工作階段。 放棄原因<xref:System.Web.SessionState.SessionStateModule.End>會引發事件。</xref:System.Web.SessionState.SessionStateModule.End> 新<xref:System.Web.SessionState.SessionStateModule.Start>會引發事件，在下一個要求。</xref:System.Web.SessionState.SessionStateModule.Start>       已放棄，或已過期的工作階段的工作階段識別項會回收預設。 也就是提出要求的已過期或已放棄的工作階段包含的工作階段識別碼，如果新的工作階段就會啟動使用相同的工作階段識別項。 您可以藉由設定停用此`regenerateExpiredSessionId`屬性的組態項目`true`。 如需詳細資訊，請參閱[工作階段識別元](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.SessionState.SessionStateModule.End>支援事件時，才<xref:System.Web.SessionState.HttpSessionState.Mode%2A>屬性設定為<xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將新的項目加入至工作階段狀態集合。"
  remarks: "如果`name`參數參考現有的工作階段狀態項目時，現有的項目會覆寫具有指定`value`。"
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "要加入至工作階段狀態集合的項目名稱。"
    - id: value
      type: System.Object
      description: "要加入至工作階段狀態集合的項目值。"
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態集合中移除所有索引鍵和值。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定目前工作階段的字元集識別項。"
  remarks: "字元集 （字碼頁） 用來解譯多位元組字元資料，判斷字元值，並排序次序。 字碼頁設定僅適用於多位元組字元資料，而無法 Unicode 字元資料。       這<xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>提供屬性為了與 ASP 的舊版本只有相容性。</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> 如果您不需要維護回溯相容性的 ASP 頁面，使用<xref:System.Web.HttpResponse.ContentEncoding%2A>屬性改為。</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "目前的工作階段的字元集識別項。"
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得目前工作階段狀態物件的參考。"
  remarks: "內容屬性會提供與 ASP 的舊版本的相容性。"
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "目前<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否針對無 cookie 工作階段設定應用程式。"
  remarks: "當<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>是`true`，CookieMode 屬性傳回，<xref:System.Web.HttpCookieMode>否則 CookieMode 屬性會傳回<xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "其中一個<xref href=&quot;System.Web.HttpCookieMode&quot;></xref>值，指出是否針對無 cookie 工作階段設定應用程式。 預設值是<xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將工作階段狀態值集合複製到一維陣列，陣列中指定索引處開始。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>接收工作階段值。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中以零為起始的索引`array`從複製開始的位置。"
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得工作階段狀態集合中的項目數目。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "集合中的項目數目。"
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "傳回可以用來讀取目前的工作階段中的所有工作階段狀態變數名稱的列舉值。"
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可逐一查看工作階段狀態集合中之變數名稱。</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否在 URL 中內嵌或 HTTP cookie 中儲存的工作階段識別碼。"
  remarks: "ASP.NET 專門用來識別工作階段與每個瀏覽器。 根據預設，在瀏覽器中不會過期的工作階段 cookie 中儲存工作階段的唯一識別碼。 您可以指定，工作階段識別項不會儲存在 cookie 中設定`cookieless`屬性`true`中的組態項目。      > [!NOTE] > 來改進您的應用程式的安全性，您的應用程式應該允許的使用者登出，此時它應該呼叫<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>方法。</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 這會減少潛在的不必要的來源，在 URL 中使用的唯一識別碼，以擷取儲存在使用者工作階段中的私用資料。       ASP.NET 會維護無 cookie 工作階段狀態，藉由自動將唯一的工作階段識別碼插入頁面的 URL。 例如，下列 URL 已經修改包含唯一的工作階段識別碼 lit3py55t21z5v55vlm25s55 ASP.NET: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET 修改內嵌連結中的工作階段識別碼值之前傳送至瀏覽器的每個頁面包含所有要求的頁面的連結。 維護工作階段狀態，只要使用者依照站台提供的連結路徑。 不過，如果使用者代理程式重寫 URL，工作階段狀態的執行個體將會遺失。       應用程式名稱會遵循的斜線之後和任何剩餘的檔案或虛擬目錄識別項之前在 URL 中內嵌工作階段識別碼。 這可讓 ASP.NET 應用程式名稱解析之前涉及<xref:System.Web.SessionState.SessionStateModule>要求中。</xref:System.Web.SessionState.SessionStateModule>       根據預設，在已經回收無 cookie 工作階段中所使用的工作階段識別碼。 也就是提出要求時已過期的工作階段 id，如果新的工作階段會使用啟動要求所提供的工作階段識別碼。 這種行為可能會導致不必要的工作階段資料共用時包含無 cookie 工作階段識別碼的連結共用的多個瀏覽器中，可能是透過搜尋引擎或其他程式。 您可以降低共用多個用戶端停用工作階段識別項的循環的工作階段資料的可能性。 若要這樣做，請設定`regenerateExpiredSessionId`屬性的組態項目`true`。 這將導致過期的工作階段 id 進行無 cookie 工作階段要求產生新的工作階段識別碼 請注意，如果過期的工作階段識別碼所提出之要求使用 HTTP`POST`方法，則任何張貼的資料將會遺失時`regenerateExpiredSessionId`是`true`，因為 ASP.NET 執行重新導向，以確保瀏覽器 URL 中有新的工作階段識別項。      > [!NOTE] > 時設定`regenerateExpiredSessionId`屬性`true`降低的可能性不想要共用的工作階段資料，它無法防止不必要的來源存取另一位使用者的工作階段取得<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值並將其納入中伺服器的要求。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 如果您在工作階段狀態儲存私人或機密資訊，建議您搭配使用 SSL 來加密任何瀏覽器和伺服器，其中包含<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>之間的通訊"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果工作階段嵌入 URL;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否以目前的要求建立工作階段。"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果與目前的要求; 已建立工作階段否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出該工作階段是否唯讀。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>工作階段是否唯讀。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否對工作階段狀態值集合的存取為同步 （安全執行緒）。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果對集合的存取為同步 （安全執行緒），否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定工作階段值的數字索引。"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "工作階段值的數值索引。"
    return:
      type: System.Object
      description: "儲存於指定索引處的階段值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果項目不存在。"
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定工作階段值的名稱。"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "工作階段值的索引鍵的名稱。"
    return:
      type: System.Object
      description: "具有指定名稱的工作階段狀態值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果項目不存在。"
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得儲存在工作階段狀態集合中的所有值的索引鍵的集合。"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "<xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>，其中包含所有工作階段金鑰。</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定目前工作階段的地區設定識別碼 (LCID)。"
  remarks: "為了與 ASP 的舊版本只相容提供 LCID 屬性。 如果您不需要維護回溯相容性的 ASP 頁面，使用<xref:System.Globalization.CultureInfo.LCID%2A>屬性改為。</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET 不會在工作階段狀態儲存的地區設定識別碼。 LCID 屬性存取<xref:System.Globalization.CultureInfo.LCID%2A>屬性以取得設定的識別碼。</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A<xref:System.Globalization.CultureInfo>指定目前的工作階段的文化特性的執行個體。</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得目前工作階段狀態模式。"
  remarks: "如需如何設定伺服器供<xref:System.Web.SessionState.SessionStateMode>或<xref:System.Web.SessionState.SessionStateMode>工作階段狀態儲存體，請參閱[ASP.NET 工作階段狀態概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "其中一個<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>值。"
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態集合中刪除項目。"
  remarks: "如果工作階段狀態集合中未包含具有指定的項目`name`，維持不變的集合。 擲不回任何例外狀況。"
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "要從工作階段狀態集合中刪除的項目名稱。"
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態集合中移除所有索引鍵和值。"
  remarks: "RemoveAll 執行<xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>相同的功能"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態集合中刪除指定索引處的項目。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要從工作階段狀態集合中移除之項目的索引。"
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得工作階段的唯一識別碼。"
  remarks: "SessionID 屬性用來唯一識別與伺服器上的工作階段資料的 瀏覽器。 工作階段識別碼值隨機 ASP.NET 所產生，並儲存在瀏覽器中不會過期的工作階段 cookie。 在 ASP.NET 應用程式的每個要求的 cookie，然後會傳送工作階段識別碼值。       如果您想要停用的 cookie，ASP.NET 應用程式中使用，仍能使用的工作階段狀態，您可以設定您的應用程式的 URL，而不是 cookie 中儲存的工作階段識別項，藉由設定`cookieless`屬性的組態項目`true`，或<xref:System.Web.HttpCookieMode>，在您的應用程式的 Web.config 檔案中。</xref:System.Web.HttpCookieMode> 您可以判斷是否瀏覽器是否支援 cookie 所指定的值是 ASP.NET<xref:System.Web.HttpCookieMode>如`cookieless`屬性。</xref:System.Web.HttpCookieMode> 您也可以判斷是否啟用 cookie 的瀏覽器所指定的值是 ASP.NET<xref:System.Web.HttpCookieMode>如`cookieless`屬性。</xref:System.Web.HttpCookieMode> 如果支援 cookie，則當<xref:System.Web.HttpCookieMode>已指定，或已啟用時<xref:System.Web.HttpCookieMode>指定，則工作階段識別碼會儲存在 cookie 中; 否則為將在 URL 中儲存的工作階段識別碼。</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> 如需詳細資訊，請參閱<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>屬性。</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       SessionID 會以純文字格式在 cookie 或 URL 中傳送伺服器與瀏覽器之間。 如此一來，不必要的來源無法存取其他使用者工作階段取得的工作階段識別碼值，並包含在伺服器的要求。 如果您在工作階段狀態儲存私人或機密資訊，建議您搭配使用 SSL 來加密任何瀏覽器和伺服器，其中包含工作階段識別碼之間的通訊。       使用 cookie 架構工作階段狀態，ASP.NET 不會配置儲存體的工作階段資料，直到<xref:System.Web.UI.Page.Session%2A>物件使用。</xref:System.Web.UI.Page.Session%2A> 如此一來，新的工作階段識別碼產生的每個頁面要求，直到存取工作階段物件。 如果您的應用程式需要整個工作階段的靜態的工作階段 ID，您可以實作`Session_Start`應用程式的 Global.asax 檔案和存放區中的資料中的方法<xref:System.Web.UI.Page.Session%2A>物件修正的工作階段識別碼，或您也可以在應用程式的另一個組件中使用程式碼，明確地將資料儲存在<xref:System.Web.UI.Page.Session%2A>物件。</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       如果您的應用程式使用無 cookie 工作階段狀態，工作階段識別碼所產生的第一個頁面檢視和維護整個工作階段。"
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "唯一的工作階段識別項。"
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得所宣告的物件的集合<xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> ASP.NET 應用程式 Global.asax 檔案中的標記。"
  remarks: "如果頁面上的物件不支援序列化和<xref:System.Web.SessionState.HttpSessionState.Mode%2A>是跨處理序 (<xref:System.Web.SessionState.SessionStateMode>或<xref:System.Web.SessionState.SessionStateMode>)，將不會建立物件，並將不會加入至這個集合。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       StaticObjects 屬性會提供與 ASP 的舊版本的相容性。"
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Global.asax 檔中包含物件宣告。"
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得可用以同步存取工作階段狀態值集合的物件。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "物件，可用來對集合進行同步存取。"
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得與設定的時間，以分鐘為單位，允許要求的工作階段狀態提供者就會終止工作階段之間。"
  remarks: "Timeout 屬性可以設定應用程式使用 Web.config 檔案中`timeout`屬性的組態項目，或者您可以設定直接使用應用程式程式碼的逾時屬性值。       Timeout 屬性無法設定的值大於 525,600 分鐘 （1 年）。 預設值是 20 分鐘。"
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "逾時期限 （以分鐘為單位）。"
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
