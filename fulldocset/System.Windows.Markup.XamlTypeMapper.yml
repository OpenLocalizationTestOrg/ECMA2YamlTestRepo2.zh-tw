### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlTypeMapper
  id: XamlTypeMapper
  children:
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  - System.Windows.Markup.XamlTypeMapper.DefaultMapper
  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  langs:
  - csharp
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
  type: Class
  summary: "將 XAML 項目名稱對應至適當的 CLR<xref:System.Type>組件中。</xref:System.Type>"
  remarks: "XamlTypeMapper 是進階的 WPF 案例，提供替代的內容和<xref:System.Windows.Markup.XamlReader><xref:System.Windows.Markup.XamlWriter>.</xref:System.Windows.Markup.XamlWriter></xref:System.Windows.Markup.XamlReader>的一部分 如[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]WPF 應用程式，您應該考慮覆寫<xref:System.Xaml.XamlSchemaContext>此案例中，而不是嘗試使用 XamlTypeMapper。</xref:System.Xaml.XamlSchemaContext>       XamlTypeMapper 可以用來提供更直接的技術的應用程式比透過自訂的對應資訊的 XAML 剖析器<xref:System.Windows.Markup.XmlnsDefinitionAttribute>組譯程式碼的值。</xref:System.Windows.Markup.XmlnsDefinitionAttribute> 這可能是適用於組件中的所有 CLR 命名空間的彙總或參考型別，是為了增加而不必重新編譯時的現有組件中的 XAML 已備妥<xref:System.Windows.Markup.XmlnsDefinitionAttribute>屬性設定。</xref:System.Windows.Markup.XmlnsDefinitionAttribute>       您通常會以指定<xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A><xref:System.Windows.Markup.ParserContext>。</xref:System.Windows.Markup.ParserContext>屬性值</xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>建立 XamlTypeMapper 執行個體 <xref:System.Windows.Markup.ParserContext>依次可用做為環境<xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>呼叫。</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName> </xref:System.Windows.Markup.ParserContext>      ## 預設對應程式您可以使用預設對應程式來取得<xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>靜態屬性。</xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 預設對應工具只適用於預設組件清單。 沒有特定組件 （如 XamlTypeMapper 建構函式中指定） 會使用相關資訊。      <a name=&quot;xamlTextUsage_XamlTypeMapper&quot;></a># # XAML 文字用法"
  syntax:
    content: public class XamlTypeMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>藉由指定的組件陣列的類別名稱<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>應該使用。"
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "組件名稱陣列<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>應該使用。"
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>類別，使用指定的組件名稱陣列，並將對應指定的命名空間。"
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "組件名稱陣列<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>應該使用。"
    - id: namespaceMaps
      type: System.Windows.Markup.NamespaceMapEntry[]
      description: "命名空間對應陣列<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>應該使用。"
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  id: AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "定義 XML 命名空間與 CLR 命名空間之間的對應中的組件，並加入這些<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>資訊。"
  remarks: "AddMappingProcessingInstruction 是程式設計方式來新增對應。  例如，下列 XAML 對應指令的不同部分對應到 AddMappingProcessingInstruction 的參數︰ ```   <Window xmlns:SDK=&quot;clr-namespace:Samples;assembly=SDKSamples&quot;>   ...   ``` `xmlNamespace`是`SDK`、`clrNamespace`是`Samples`，和`assemblyName`是`SDKSamples`。"
  syntax:
    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "XML 命名空間前置詞..."
    - id: clrNamespace
      type: System.String
      description: "包含要對應的型別之 CLR 命名空間。"
    - id: assemblyName
      type: System.String
      description: "包含 CLR 命名空間的組件。"
  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>clrNamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  id: AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "要求的權限<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>衍生型別在完全信任來存取特定的內部型別下所呼叫。"
  remarks: "如果未覆寫由子類別，AllowInternalType 一律會傳回`false`。       行為時的子類別覆寫，應該是應傳回 AllowInternalType`true`內部型別可存取; 否則如果`false`。"
  syntax:
    content: protected virtual bool AllowInternalType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "存取類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以存取內部型別。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  id: DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "取得執行個體<xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;></xref>使用其中一個尚未指定。"
  remarks: "預設對應工具只適用於預設組件清單。 沒有組件的特定資訊 (如中所指定<xref:System.Windows.Markup.XamlTypeMapper>建構函式) 會使用。</xref:System.Windows.Markup.XamlTypeMapper> 在目前的實作是預設組件清單︰ `WindowsBase`， `PresentationCore`， `PresentationFramework`。       使用預設對應工具並不表示您無法使用自訂的組件類型在 XAML 中完全。 它僅表示如果您使用自訂類型/組件，您必須再使用傳統的 XAML 技巧，建立做為對應的`xmlns`每個類型/組件所參考位置，而不是型別對應器應用程式開發介面的 XAML 頁面中的屬性。 如需詳細資訊，請參閱[XAML 命名空間和 WPF XAML 命名空間對應](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }
    return:
      type: System.Windows.Markup.XamlTypeMapper
      description: "預設的型別對應器。"
  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "取得在 CLR<xref:System.Type>給定的 XAML 項目對應到，使用指定的 XML 命名空間前置詞和項目名稱。</xref:System.Type>"
  remarks: "如果型別無法對應至提供的資訊，找到`null`傳回。       一部分，不包含前置詞`localName`。 針對任何前置 XAML 項目資訊時，區隔到`xmlNamespace`和`localName`此應用程式開發介面呼叫的元件。"
  syntax:
    content: public Type GetType (string xmlNamespace, string localName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "指定的 XML 命名空間前置詞。"
    - id: localName
      type: System.String
      description: "若要取得對應的<xref:System.Type>for...in</xref:System.Type> XAML 項目 「 本機 」 名稱 在此內容中的本機表示因為對應與提供`xmlNamespace`。"
    return:
      type: System.Type
      description: "<xref:System.Type>物件，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有對應可加以解析。</xref:System.Type>"
  overload: System.Windows.Markup.XamlTypeMapper.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>localName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  id: SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "指定要載入的組件時所使用的路徑。"
  syntax:
    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);
    parameters:
    - id: assemblyName
      type: System.String
      description: "未經擴充或指定路徑的組件的簡短名稱 (相當於&lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;)。"
    - id: assemblyPath
      type: System.String
      description: "組件的檔案路徑。 組件路徑必須包含副檔名的完整檔案路徑。"
  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyPath</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Windows.Markup.XamlParseException
    commentId: T:System.Windows.Markup.XamlParseException
    description: "<code>assemblyName</code>是<xref:System.String>-<code>assemblyPath</code>是<xref:System.String>-或-<code>assemblyPath</code>不包含副檔名的完整檔案路徑。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.XamlParseException
  parent: System.Windows.Markup
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Windows.Markup.XamlParseException
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
- uid: System.Windows.Markup.NamespaceMapEntry[]
  parent: System.Windows.Markup
  isExternal: false
  name: NamespaceMapEntry
  nameWithType: NamespaceMapEntry
  fullName: System.Windows.Markup.NamespaceMapEntry[]
  spec.csharp:
  - uid: System.Windows.Markup.NamespaceMapEntry
    name: NamespaceMapEntry
    nameWithType: NamespaceMapEntry
    fullName: NamespaceMapEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper
  parent: System.Windows.Markup
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.#ctor*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType
  nameWithType: XamlTypeMapper.AllowInternalType
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType
  nameWithType: XamlTypeMapper.GetType
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath
  nameWithType: XamlTypeMapper.SetAssemblyPath
