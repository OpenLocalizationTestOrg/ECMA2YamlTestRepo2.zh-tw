### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepBase
  id: WizardStepBase
  children:
  - System.Web.UI.WebControls.WizardStepBase.#ctor
  - System.Web.UI.WebControls.WizardStepBase.AllowReturn
  - System.Web.UI.WebControls.WizardStepBase.EnableTheming
  - System.Web.UI.WebControls.WizardStepBase.ID
  - System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WizardStepBase.Name
  - System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WizardStepBase.StepType
  - System.Web.UI.WebControls.WizardStepBase.Title
  - System.Web.UI.WebControls.WizardStepBase.Wizard
  langs:
  - csharp
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
  type: Class
  summary: "實作中的步驟所需的基本功能<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制項。"
  remarks: "您無法直接建立 WizardStepBase 類別的執行個體。 相反地，此類別會繼承由<xref:System.Web.UI.WebControls.WizardStep>類別和<xref:System.Web.UI.WebControls.TemplatedWizardStep>類別提供的步驟，以做為精靈的控制項中的基本功能。</xref:System.Web.UI.WebControls.TemplatedWizardStep> </xref:System.Web.UI.WebControls.WizardStep>       您可以衍生自 WizardStepBase 類別來建立自訂的類別，表示精靈控制項中的唯一步驟。"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]

      public abstract class WizardStepBase : System.Web.UI.WebControls.View
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.View
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.View.Activate
  - System.Web.UI.WebControls.View.Deactivate
  - System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  - System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  - System.Web.UI.WebControls.View.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>類別。"
  syntax:
    content: protected WizardStepBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  id: AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否允許使用者在後續步驟中傳回目前的步驟<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>集合。"
  remarks: "AllowReturn 屬性可以用來強制執行線性瀏覽方式<xref:System.Web.UI.WebControls.Wizard>控制項。</xref:System.Web.UI.WebControls.Wizard> 如果每個步驟都有其 AllowReturn 屬性設定為`false`，使用者不能已存取之後，回到的步驟。 您可以使用這項功能的其中一個案例是不允許使用者回到的步驟，因為您會將資料保存到資料庫，為每個步驟完成之後完成。 如果您將資料儲存在每個步驟之後，允許使用者返回步驟，變更後已儲存的資訊已儲存的資料可能會損毀。 AllowReturn 屬性設定為`false`，一旦使用者已離開步驟，他或她將無法返回並變更任何值。       AllowReturn 屬性決定如何及何時**上一步**不呈現 按鈕。 下表描述**上一步**按鈕呈現行為。      |案例 |行為 |  |--------------|--------------|  |線性︰ 步驟 1 已設定為 AllowReturn`false`移至步驟 2 的使用者動作。 |步驟 2 不會顯示**上一步** 按鈕。 |  |非線性︰ 步驟 1 已設定為 AllowReturn`false`使用者動作移至步驟 3。 |步驟 3 不會顯示**上一步** 按鈕。 |  |提要欄位按鈕︰ 步驟 2 已設定為 AllowReturn `false` ，<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>設`true`，使用者按一下 資訊看板 按鈕。 |按鈕會自動停用 資訊看板 設為 AllowReturn 時`false`。</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 如果使用者按一下按鈕時，會忽略的動作。 |  |線性 & 非線性具有自訂範本︰ 此步驟中有自訂巡覽樣板。 |沒有自動隱藏或顯示發生如果 AllowReturn 設`false`當您使用範本瀏覽。 **上一步**按鈕應該選用的範本。 |  |使用 Visual Studio 設計工具和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>︰ 控制項有 5 個步驟，您在步驟 4，處理和執行網頁。 |步驟 4 時<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>，然後在**上一步**按鈕會呈現。</xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> </xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> **上一步**按鈕只隱藏的<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType>歷程記錄中的上一個步驟時已設為 AllowReturn `false`。</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 步驟 4 會先轉譯並在歷程記錄中沒有任何步驟，因為**上一步**按鈕不會隱藏。 |  |啟動步驟並非線性導覽︰ 使用者造訪步驟 3 和步驟 4 和步驟 1 已設定為<xref:System.Web.UI.WebControls.WizardStepType><xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>。 |精靈不會新增**上一步**按鈕<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>不論使用者如何巡覽至該步驟設定為<xref:System.Web.UI.WebControls.WizardStepType>時。 |  |歷程記錄中的相同步驟︰ 使用者造訪步驟 3 其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType>和使用者不會認可它們的動作。</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> </xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>  </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A></xref:System.Web.UI.WebControls.WizardStepType> 它們然後按一下 [上一步] 按鈕步驟 3。 |精靈控制項會檢查是否要**上一步**歷程記錄中的步驟是使用者目前是在 「 相同 」 步驟。 如果步驟相同，精靈控制項往回查看歷程記錄來判斷上述的 「 其他 」 步驟，與基底的顯示**上一步**按鈕和目的地取決於 「 不同逐步 」 記錄中。 |     > [!NOTE] > 時 AllowReturn 屬性設定為`false`，但<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>屬性的父控制項<xref:System.Web.UI.WebControls.WizardStepBase>設`true`，按一下 [資訊看板] 區域中的按鈕沒有任何作用。</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> [資訊看板] 區域通常會顯示提供非線性導覽，所以如果您未使用的非線性導覽功能，您可能想要設定<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>屬性`false`。</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates using the AllowReturn property to stop the user from returning to a step in the <xref:System.Web.UI.WebControls.Wizard> control after it has been accessed. In the example, the `Step1` step has its AllowReturn property set to `false`. After the user leaves the `Step1` step, no Previous button appears on the `Step2` step.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_10_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_10_1.aspx)]"
  syntax:
    content: public virtual bool AllowReturn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用者被允許傳回目前的步驟。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，表示主題是否適用於此控制項。"
  remarks: "EnableTheming 屬性會指出是否啟用佈景主題，以供<xref:System.Web.UI.WebControls.WizardStepBase>控制項。</xref:System.Web.UI.WebControls.WizardStepBase> 是否啟用佈景主題的控制項集合中包含的控制項，也會影響 EnableTheming 屬性。 當 EnableTheming 屬性是`true`，要套用的控制項面板會搜尋應用程式的佈景主題目錄。 如果特定的控制項面板佈景主題目錄中，未套用面板。 EnableTheming 屬性時`false`，不會搜尋主題目錄和值<xref:System.Web.UI.Control.SkinID%2A>屬性不使用。</xref:System.Web.UI.Control.SkinID%2A>       控制項可以覆寫其父控制項或將包含頁面設定 EnableTheming 值。 比方說，如果<xref:System.Web.UI.WebControls.WizardStepBase>控制項有 EnableTheming 設`false`，您可以選擇性地將佈景主題套用至內含精靈步驟，藉由設定子控制項<xref:System.Web.UI.Control.EnableTheming%2A>屬性`true`上個別子控制項。</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要使用佈景主題。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  id: ID
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指派給伺服器控制項的程式設計識別項。"
  remarks: "找出並參考特定精靈步驟中的控制項的 Web Form 網頁使用的 ID 屬性。 識別碼值會變成頁面; 中的控制項執行個體的名稱這可讓您輕鬆地存取特定的步驟，在該頁面的程式碼。 例如，如果您設定的 ID 屬性<xref:System.Web.UI.WebControls.WizardStepBase>控制項至 「 步驟&1; 」 中，您可以參考在該頁面的程式碼精靈步驟的子控制項`Step1.Controls`。</xref:System.Web.UI.WebControls.WizardStepBase>       <xref:System.Web.UI.WebControls.WizardStepBase>控制項可確保每個步驟<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>步驟是新增或修改設計階段時，控制項具有有效的唯一識別碼。</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.WebControls.WizardStepBase> 例如，當您在設計階段設定步驟的識別碼，它無法符合另一個步驟中所包含的識別項<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控制項，而且無法符合<xref:System.Web.UI.Control.ID%2A>包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控制項。</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>"
  example:
  - "The following code example defines three wizard steps for a <xref:System.Web.UI.WebControls.Wizard> control in a Web Forms page. In code for the page, the wizard step instances are named by their ID values, and they can be referenced in the code as `WizardStep1`, `WizardStep2`, and `WizardStep3`.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_480_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_480_1.aspx)]"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "指派給控制項的程式設計識別項。"
  overload: System.Web.UI.WebControls.WizardStepBase.ID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在設計階段，屬性已設為無效的識別項字串。       -或-屬性已設為包含相同的識別項<> *> 控制項在設計階段。      -或-屬性已設定為相同的識別碼中包含的另一個步驟<> *> 控制項在設計階段。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "從所儲存的先前頁面要求還原檢視狀態資訊<xref:System.Web.UI.WebControls.WebControl.SaveViewState*>方法。</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>，代表所要還原的控制項狀態。</xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  id: Name
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得做為精靈的控制項中的步驟與相關聯的名稱。"
  remarks: "Name 屬性會傳回字串，識別精靈控制項中的步驟。 如果指定的值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性，[名稱] 屬性會傳回該值。</xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 如果未不指定任何值，如<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性的名稱屬性傳回的值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 如果未指定任何值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>或<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性，[名稱] 屬性會傳回`null`。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "做為精靈的控制項中的步驟與關聯的名稱。"
  overload: System.Web.UI.WebControls.WizardStepBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "引發<xref:System.Web.UI.Control.OnLoad*>事件。</xref:System.Web.UI.Control.OnLoad*>"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>物件，其中包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "內容輸出<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>控制項的子控制項的指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件，以在用戶端上寫入要轉譯的內容。"
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，代表要呈現 HTML 內容的用戶端上的輸出資料流。"
  overload: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  id: StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定巡覽使用者介面 (UI)，顯示的步驟類型<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制項。"
  remarks: "使用 StepType 屬性來指定要顯示的步驟中的導覽按鈕的型別<xref:System.Web.UI.WebControls.Wizard>控制項。</xref:System.Web.UI.WebControls.Wizard> 如果您指定這個屬性的值，任何步驟標示為<xref:System.Web.UI.WebControls.WizardStepType>會顯示在 [資訊看板] 以停用狀態。</xref:System.Web.UI.WebControls.WizardStepType>       如果您未指定此屬性的值，預設值是`WizardStepType.Auto`。       下表列出可用的設定 StepType 屬性及步驟的產生的行為︰`WizardStepType.Auto`瀏覽的步驟取決於宣告該步驟的順序呈現 UI。       `WizardStepType.Complete`步驟是要顯示的最後一個。 沒有瀏覽按鈕會呈現。       `WizardStepType.Finish`步驟是最終資料集合的步驟。 完成&5;d; 和上一步 按鈕會呈現巡覽。       `WizardStepType.Start`步驟是要顯示的第一個。 上一步按鈕不會呈現。       `WizardStepType.Step`步驟是開始和完成步驟之間的任何步驟。 瀏覽呈現上一個 和 下一步 按鈕。 這個步驟類型是用於覆寫<xref:System.Web.UI.WebControls.WizardStepType>步驟類型。</xref:System.Web.UI.WebControls.WizardStepType>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }
    return:
      type: System.Web.UI.WebControls.WizardStepType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;></xref>列舉值。 預設值是<xref uid=&quot;langword_csharp_WizardStepType.Auto&quot; name=&quot;WizardStepType.Auto&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.StepType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選取的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  id: Title
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要用於中的步驟標題<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制要啟用 [資訊看板] 功能時。"
  remarks: "使用 標題屬性來顯示使用者易記的標題中的步驟<xref:System.Web.UI.WebControls.Wizard>控制要啟用 資訊看板 功能時。</xref:System.Web.UI.WebControls.Wizard> 如果未設定 [標題] 屬性，啟用 [資訊看板] 功能時，值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性會顯示 [資訊看板] 按鈕。</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates using the Title property to display a user-friendly title for a step in the <xref:System.Web.UI.WebControls.Wizard> control. In the example, `Step1` does not have its Title property set, so it appears in the <xref:System.Web.UI.WebControls.Wizard> control as \"WizardStep1\". `Step2` does have its Title property set, so it appears as \"Step 2\".  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_149_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public virtual string Title { get; set; }
    return:
      type: System.String
      description: "使用中的步驟的標題<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>控制要啟用 [資訊看板] 功能時。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WizardStepBase.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  id: Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>物件的父控制項衍生自<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>。"
  syntax:
    content: public System.Web.UI.WebControls.Wizard Wizard { get; }
    return:
      type: System.Web.UI.WebControls.Wizard
      description: "<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>物件的父控制項衍生自<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WizardStepBase.Wizard*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.View
  isExternal: false
  name: System.Web.UI.WebControls.View
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepType
  nameWithType: WizardStepType
  fullName: System.Web.UI.WebControls.WizardStepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
- uid: System.Web.UI.WebControls.Wizard
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Wizard
  nameWithType: Wizard
  fullName: System.Web.UI.WebControls.Wizard
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState
  nameWithType: WizardStepBase.LoadViewState
- uid: System.Web.UI.WebControls.WizardStepBase.Name*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad
  nameWithType: WizardStepBase.OnLoad
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren
  nameWithType: WizardStepBase.RenderChildren
- uid: System.Web.UI.WebControls.WizardStepBase.StepType*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
