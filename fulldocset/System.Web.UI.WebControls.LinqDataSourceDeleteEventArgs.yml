### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  id: LinqDataSourceDeleteEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleting&quot;></xref>事件。"
  remarks: "LinqDataSourceDeleteEventArgs 物件傳遞至任何處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>屬性包含將一併刪除的資料。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>       如果之前先刪除的<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>屬性包含的<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>類別</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>執行個體</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>的資料物件，表示資料來源擲回驗證例外狀況 您可以擷取到的所有驗證例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>屬性。</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 如果沒有驗證擲回例外狀況，<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>屬性包含`null`。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 如果您處理驗證例外狀況，而且不想要重新擲回的例外狀況，設定<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>屬性`true`。</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>       您建立的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，以驗證資料，以檢查驗證錯誤，從 資料類別，或取消刪除作業。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 您藉由設定取消刪除作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       根據預設，<xref:System.Web.UI.WebControls.LinqDataSource>原始值的資料來源檢視中的控制存放區狀態在網頁上，除了其<xref:System.Data.Linq.Mapping.ColumnAttribute>屬性標示為`UpdateCheck.Never`。</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> LINQ to SQL 會自動檢查資料的完整性，然後再刪除資料。 它會藉由比較資料來源中的目前值與儲存在檢視狀態中的原始值。 您可以執行額外的資料驗證所建立的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_255_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_255_1.cs)]"
  syntax:
    content: 'public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;></xref>類別。"
  syntax:
    content: public LinqDataSourceDeleteEventArgs (object originalObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "在指定之類型的物件<xref:System.Web.UI.WebControls.LinqDataSource.TableName*>屬性，其中包含要刪除的資料。</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;></xref>類別具有指定的例外狀況。"
  syntax:
    content: public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "驗證要刪除的資料時所發生的例外狀況。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "取得擲回例外狀況時刪除作業之前驗證資料。"
  remarks: "如果執行刪除作業之前，會擲回驗證例外狀況，例外狀況會儲存在例外狀況屬性。 中的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，您可以擷取透過屬性將例外狀況的例外狀況。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "如果發生錯誤。 例外狀況否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，這個值，指出是否已處理的例外狀況，而且，它應該不會擲回一次。"
  remarks: "您可以建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，以檢查刪除作業之前所擲回驗證例外狀況。</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 如果您處理的例外狀況，而不想要再次擲回，ExceptionHandled 屬性設定為`true`。 如果您未設定 ExceptionHandled 屬性`true`，例外狀況會傳播至呼叫堆疊中下一個事件處理常式。"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已處理的例外狀況。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "取得物件，代表要刪除的資料。"
  remarks: "您可以使用 OriginalObject 屬性於刪除之前，與資料互動。 您可以驗證資料，或您可以藉由設定取消事件<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`。</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 您可以修改哪些記錄會被刪除，藉由變更 OriginalObject 屬性中之物件的值。"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the OriginalObject property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_196_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_196_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "在指定之類型的物件<xref:System.Web.UI.WebControls.LinqDataSource.TableName*>屬性，其中包含要刪除的資料。</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
