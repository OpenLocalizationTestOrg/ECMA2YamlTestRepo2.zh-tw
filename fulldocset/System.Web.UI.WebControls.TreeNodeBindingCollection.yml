### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  id: TreeNodeBindingCollection
  children:
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
  type: Class
  summary: "代表集合<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>中的物件<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>控制項。 這個類別無法被繼承。"
  remarks: "TreeNodeBindingCollection 類別用來儲存和管理集合的<xref:System.Web.UI.WebControls.TreeNodeBinding>中的物件<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding> <xref:System.Web.UI.WebControls.TreeView>控制項使用的 TreeNodeBindingCollection 類別其<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>屬性。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView>       <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>屬性包含<xref:System.Web.UI.WebControls.TreeNodeBinding>物件，定義資料項目及它所繫結的節點之間的關聯性。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 當繫結至資料來源，其中每個資料項目都包含多個屬性 （例如 XML 項目具有多個屬性），節點會顯示所傳回的值`ToString`資料項目的 預設的方法。 在 XML 項目，該節點會顯示項目名稱，顯示的樹狀結構的基礎結構，但沒有很有用。 您可以藉由指定樹狀節點繫結，節點繫結至特定的資料屬性。 雖然<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>以程式設計方式填入集合，則通常會以宣告方式設定。</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       若要設定樹狀節點繫結以宣告方式︰ 1。  巢狀開啟和關閉`<DataBindings>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.TreeView>控制項。</xref:System.Web.UI.WebControls.TreeView>      2.  位置`<asp:TreeNodeBinding>`開頭和結尾之間的項目`<DataBindings>`標記您想要指定每個樹狀結構節點繫結。       您可以透過程式設計方式管理 TreeNodeBindingCollection 新增和移除<xref:System.Web.UI.WebControls.TreeNodeBinding>物件。</xref:System.Web.UI.WebControls.TreeNodeBinding> 若要加入<xref:System.Web.UI.WebControls.TreeNodeBinding>物件加入至集合，使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>或<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>方法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> 若要從集合中移除節點，使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>， <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>，或<xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>       TreeNodeBindingCollection 類別支援數種方式來存取集合中的項目:-使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>索引子來擷取<xref:System.Web.UI.WebControls.TreeNode>直接在特定的以零為起始索引位置的物件。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>      -使用<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>方法，以建立可用來逐一查看集合的列舉值。</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. The second code example demonstrates how to populate a TreeNodeBindingCollection object programmatically.  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_1.aspx)]  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_2.aspx)]  \n  \n The following is the XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n       <Section Heading=\"Section 1\">  \n       </Section>  \n       <Section Heading=\"Section 2\">  \n       </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: 'public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  id: Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將指定的附加<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件的結尾<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>物件。"
  remarks: "使用 Add 方法附加指定<xref:System.Web.UI.WebControls.TreeNodeBinding>物件的結尾<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       或者，您可以插入<xref:System.Web.UI.WebControls.TreeNodeBinding>物件存放至<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>在特定的索引，使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>方法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to add a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically to a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/1c7f636a-948c-4466-bc6b-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/1c7f636a-948c-4466-bc6b-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>附加。"
    return:
      type: System.Int32
      description: "加入之位置的以零為起始索引<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>中<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  id: Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定是否指定<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件位於集合中。"
  remarks: "使用 Contains 方法來判斷是否<xref:System.Web.UI.WebControls.TreeNodeBinding>物件包含在<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> 這個方法通常用來測試是否存在<xref:System.Web.UI.WebControls.TreeNodeBinding>之前執行的工作，例如加入或移除物件<xref:System.Web.UI.WebControls.TreeNodeBinding>集合中。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>尋找。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>存在於集合中; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "從所有的項目複製<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>物件到相容的一維陣列的<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>目標陣列中指定索引處開始的物件。"
  remarks: "若要複製的內容使用 CopyTo 方法<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件插入`bindingArray`。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> 開始複製的項目`index`。 您接著可以使用陣列來存取集合中的項目。       或者，您可以使用<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>方法來建立列舉值，可以用來存取集合中的項目。</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection to an array.  \n  \n [!code-cs[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/csharp/57693c79-624a-4a4d-979f-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/57693c79-624a-4a4d-979f-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);
    parameters:
    - id: bindingArray
      type: System.Web.UI.WebControls.TreeNodeBinding[]
      description: "以零為起始的陣列<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件會接收從複製的項目<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>。"
    - id: index
      type: System.Int32
      description: "中的位置`bindingArray`開始接收複製的內容。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "即將加入。"
    return:
      type: System.Object
      description: "即將加入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "即將加入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  id: IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷指定的索引<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>集合中的物件。"
  remarks: "若要判斷指定的以零為起始的索引使用 IndexOf 方法<xref:System.Web.UI.WebControls.TreeNodeBinding>物件存放至<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> 如果節點不是在集合中，則方法會傳回-1。      > [!NOTE] > 如果指定<xref:System.Web.UI.WebControls.TreeNodeBinding>物件在集合中出現多次，就會傳回第一次出現的索引。</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>找出。"
    return:
      type: System.Int32
      description: "第一個出現的以零為起始的索引<code> binding </code>內<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>，如果找到則為-1。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將指定<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件插入<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>位於指定的索引位置的物件。"
  remarks: "使用插入方法插入指定<xref:System.Web.UI.WebControls.TreeNodeBinding>物件插入<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件`index`。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       或者，您可以將附加<xref:System.Web.UI.WebControls.TreeNodeBinding>物件的結尾<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>方法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to insert a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically into a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/b258c1b7-cd55-4993-aa16-_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/b258c1b7-cd55-4993-aa16-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "要插入的以零為起始的索引位置<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>。"
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>插入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件中指定索引處<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>物件。"
  remarks: "使用項目的索引子來存取<xref:System.Web.UI.WebControls.TreeNodeBinding>物件從<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件位於`i`使用陣列標記法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> 項目的索引子可讓您修改或取代<xref:System.Web.UI.WebControls.TreeNodeBinding>直接在集合中的物件。</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the items that are in a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. The <xref:System.Web.UI.WebControls.TreeNodeBinding> object for the third-level nodes is updated programmatically with new values. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1093_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1093_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "以零為起始的索引<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>擷取。"
    return:
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>中指定索引處<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "即將加入。"
    - id: value
      type: System.Object
      description: "即將加入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "即將加入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  id: Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "移除指定<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>物件從<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>物件。"
  remarks: "使用移除方法來移除指定<xref:System.Web.UI.WebControls.TreeNodeBinding>集合中的物件。</xref:System.Web.UI.WebControls.TreeNodeBinding> 然後遵循該節點的所有項目都會往上移，以填滿空的位置。 移動項目的索引也會更新。       或者，您可以移除位於指定索引使用的節點<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>方法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> 您也可以移除每個節點，在集合中使用<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/d829ba87-3d4f-4bb0-a238-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/d829ba87-3d4f-4bb0-a238-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>移除。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "移除<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>從指定的索引位置的物件<xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>物件。"
  remarks: "使用 RemoveAt 方法移除<xref:System.Web.UI.WebControls.TreeNodeBinding>物件位於`index`從<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>物件。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> 然後遵循該節點的所有項目都會往上移，以填滿空的位置。 移動項目的索引也會更新。       或者，您可以移除特定<xref:System.Web.UI.WebControls.TreeNodeBinding>物件使用<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>方法。</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> 您也可以移除集合中的每個節點，使用<xref:System.Web.UI.StateManagedCollection.Clear%2A>方法。</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_131_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_131_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引位置的<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>移除。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "即將加入。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
- uid: System.Web.UI.WebControls.TreeNodeBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNodeBinding
    name: TreeNodeBinding
    nameWithType: TreeNodeBinding
    fullName: TreeNodeBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeBindingCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeBindingCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: TreeNodeBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: TreeNodeBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeBindingCollection.Insert
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeBindingCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: TreeNodeBindingCollection.OnClear
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: TreeNodeBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeBindingCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: TreeNodeBindingCollection.SetDirtyObject
