### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueAccessControlEntry
  id: MessageQueueAccessControlEntry
  children:
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  langs:
  - csharp
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry
  fullName: System.Messaging.MessageQueueAccessControlEntry
  type: Class
  summary: "指定信任者 （使用者、 群組或電腦） 來執行訊息佇列工作的存取權限。"
  remarks: "Use the MessageQueueAccessControlEntry class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.  \n  \n There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.  \n  \n An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.  \n  \n The MessageQueueAccessControlEntry class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.  \n  \n To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing MessageQueueAccessControlEntry instance.  \n  \n You can then pass the MessageQueueAccessControlEntry instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>."
  syntax:
    content: 'public class MessageQueueAccessControlEntry : System.Messaging.AccessControlEntry'
  inheritance:
  - System.Object
  - System.Messaging.AccessControlEntry
  implements: []
  inheritedMembers:
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;></xref>類別，指定的訊息佇列的存取權限授與指定的信任項。"
  remarks: "若要指定信任者的權限授與使用這個多載建構函式。 您在中指定的權限`rights`參數是成員的位元組合<xref:System.Messaging.MessageQueueAccessRights>位元旗標，其中包含接收訊息、 刪除佇列，以及設定佇列內容的權限。</xref:System.Messaging.MessageQueueAccessRights> 建構函式會使用您設定這個執行個體的傳入的權限<xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>屬性。</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       將這個執行個體傳遞<xref:System.Messaging.MessageQueueAccessControlEntry>直接插入的多載<xref:System.Messaging.MessageQueue.SetPermissions%2A>方法以授與權限給此信任項目，或加入至這個執行個體<xref:System.Messaging.AccessControlList>之前先呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>授與或拒絕多個信任者的權限一次。</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> ，指定使用者、 群組、 電腦、 網域或別名。"
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "位元組合<xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;></xref>值會定義授與信任者的權限的組合。"
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;></xref>類別，以指定的信任項和訊息佇列的存取權限。 存取類型 (例如<xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;></xref>或<xref uid=&quot;langword_csharp_Deny&quot; name=&quot;Deny&quot; href=&quot;&quot;> </xref>) 由您要傳入的項目類型所定義。"
  remarks: "使用這個多載建構函式來授與或拒絕其權限指定的信任項。 您在中指定的權限`rights`參數是成員的位元組合<xref:System.Messaging.MessageQueueAccessRights>位元旗標，其中包含接收訊息、 刪除佇列，以及設定佇列內容的權限。</xref:System.Messaging.MessageQueueAccessRights> 建構函式會使用您設定這個執行個體的傳入的權限<xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>屬性。</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       如需有關授與或拒絕權限的詳細資訊，請參閱<xref:System.Messaging.AccessControlEntryType>主題。</xref:System.Messaging.AccessControlEntryType> 針對兩個成員，`Allow`和`Deny`，可能會有預先存在和又可能是存取權限，所以權限出現在佇列的判別存取控制清單 (DACL) 中的順序會影響是否為最終會授與權限。 其他兩個成員，`Set`和`Revoke`，覆寫任何現有的權限。 使用您的應用程式適用的成員。       將這個執行個體傳遞<xref:System.Messaging.MessageQueueAccessControlEntry>直接插入的多載<xref:System.Messaging.MessageQueue.SetPermissions%2A>方法，以授與或拒絕其權限給此信任項目，或加入至這個執行個體<xref:System.Messaging.AccessControlList>之前先呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>授與或拒絕多個信任者的權限一次。</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> ，指定使用者、 群組、 電腦、 網域或別名。"
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "位元組合<xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;></xref>值會定義授與信任者的權限的組合。"
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "其中一個<xref href=&quot;System.Messaging.AccessControlEntryType&quot;></xref>值，指定是否允許、 拒絕、 設定或撤銷指定的權限。"
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  id: MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定要套用至信任者的特定訊息佇列權限集。"
  remarks: "MessageQueueAccessRights 屬性可讓您指定訊息佇列接收，其內，或寫入訊息，或設定佇列屬性等特定物件的權限。 這個屬性的值是由<xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>建構函式，但是您可以變更它在任何時間，才能使用<xref:System.Messaging.MessageQueueAccessControlEntry><xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>的呼叫中</xref:System.Messaging.MessageQueueAccessControlEntry>的這個執行個體</xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>的設定"
  syntax:
    content: public System.Messaging.MessageQueueAccessRights MessageQueueAccessRights { get; set; }
    return:
      type: System.Messaging.MessageQueueAccessRights
      description: "位元組合<xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;></xref>成員。 預設值由定義<code> rights </code>參數傳遞至建構函式。"
  overload: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Messaging.AccessControlEntry
  isExternal: false
  name: System.Messaging.AccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.MessageQueueAccessRights
  parent: System.Messaging
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
