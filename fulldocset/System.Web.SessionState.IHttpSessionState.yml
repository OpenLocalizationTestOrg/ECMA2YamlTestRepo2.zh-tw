### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IHttpSessionState
  id: IHttpSessionState
  children:
  - System.Web.SessionState.IHttpSessionState.Abandon
  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.IHttpSessionState.Clear
  - System.Web.SessionState.IHttpSessionState.CodePage
  - System.Web.SessionState.IHttpSessionState.CookieMode
  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.IHttpSessionState.Count
  - System.Web.SessionState.IHttpSessionState.GetEnumerator
  - System.Web.SessionState.IHttpSessionState.IsCookieless
  - System.Web.SessionState.IHttpSessionState.IsNewSession
  - System.Web.SessionState.IHttpSessionState.IsReadOnly
  - System.Web.SessionState.IHttpSessionState.IsSynchronized
  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  - System.Web.SessionState.IHttpSessionState.Item(System.String)
  - System.Web.SessionState.IHttpSessionState.Keys
  - System.Web.SessionState.IHttpSessionState.LCID
  - System.Web.SessionState.IHttpSessionState.Mode
  - System.Web.SessionState.IHttpSessionState.Remove(System.String)
  - System.Web.SessionState.IHttpSessionState.RemoveAll
  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.IHttpSessionState.SessionID
  - System.Web.SessionState.IHttpSessionState.StaticObjects
  - System.Web.SessionState.IHttpSessionState.SyncRoot
  - System.Web.SessionState.IHttpSessionState.Timeout
  langs:
  - csharp
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
  type: Interface
  summary: "定義要實作自訂的工作階段狀態容器的合約。"
  remarks: "工作階段狀態容器會提供存取工作階段狀態值和目前工作階段的相關的資訊。 包含工作階段狀態容器中的工作階段資訊公開給應用程式程式碼，透過<xref:System.Web.SessionState.HttpSessionState>類別使用<xref:System.Web.HttpContext.Session%2A>屬性。</xref:System.Web.HttpContext.Session%2A> </xref:System.Web.SessionState.HttpSessionState> <xref:System.Web.SessionState.HttpSessionState>類別是工作階段狀態容器的包裝函式類別。</xref:System.Web.SessionState.HttpSessionState>       ASP.NET 來實作的工作階段狀態容器是<xref:System.Web.SessionState.HttpSessionStateContainer>類別。</xref:System.Web.SessionState.HttpSessionStateContainer> 在<xref:System.Web.HttpApplication.AcquireRequestState>事件、<xref:System.Web.SessionState.SessionStateModule>建立及擴展的<xref:System.Web.SessionState.HttpSessionStateContainer>物件，並將其指派給目前<xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.SessionState.HttpSessionStateContainer></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.HttpApplication.AcquireRequestState>期間的要求開頭 要求中，結尾期間<xref:System.Web.HttpApplication.ReleaseRequestState>事件，<xref:System.Web.SessionState.SessionStateModule>擷取<xref:System.Web.SessionState.HttpSessionStateContainer>物件從目前<xref:System.Web.HttpContext>並執行任何必要的工作階段工作，例如寫入工作階段存放區中的工作階段值或放棄工作階段。</xref:System.Web.HttpContext> </xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication.ReleaseRequestState> 如果要求突然終止，例如透過重新導向，<xref:System.Web.SessionState.SessionStateModule>藉由呼叫會執行相同清除<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>方法。</xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> </xref:System.Web.SessionState.SessionStateModule>       若要建立自訂的工作階段狀態容器，請建立實作 IHttpSessionState 介面的類別。 如果您正在建立您自己自訂的工作階段狀態容器，您也必須取代<xref:System.Web.SessionState.SessionStateModule>與您自己自訂的模組。</xref:System.Web.SessionState.SessionStateModule> 自訂模組將會建立自訂的工作階段狀態容器的執行個體，並將它加入至目前<xref:System.Web.HttpContext>使用<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法。</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.HttpContext> 自訂工作階段狀態模組的範例包含在<xref:System.Web.SessionState.SessionStateUtility>類別概觀。</xref:System.Web.SessionState.SessionStateUtility>"
  example:
  - "The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public interface IHttpSessionState
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "結束目前的工作階段。"
  remarks: "放棄方法用來清除工作階段資料，引發**Session_OnEnd** ASP.NET 應用程式的 Global.asax 檔中定義的事件。"
  example:
  - "The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將新的項目加入至工作階段狀態集合。"
  remarks: ''
  example:
  - "The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "要加入至工作階段狀態集合的項目名稱。"
    - id: value
      type: System.Object
      description: "要加入至工作階段狀態集合的項目值。"
  overload: System.Web.SessionState.IHttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "清除工作階段狀態項目集合中的所有值。"
  remarks: "清除執行<xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.</xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>相同的功能"
  example:
  - "The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定目前工作階段的字碼頁識別項。"
  remarks: "字元集 （字碼頁） 用來解譯多位元組字元資料，判斷字元值，並排序次序。 字碼頁設定僅適用於多位元組字元資料，而無法 Unicode 字元資料。       為了與 ASP 的舊版本只相容提供此字碼頁屬性。 如果您不需要維護回溯相容性的 ASP 頁面，使用<xref:System.Text.Encoding.CodePage%2A>屬性<xref:System.Web.HttpResponse.ContentEncoding%2A>屬性改為。</xref:System.Web.HttpResponse.ContentEncoding%2A> </xref:System.Text.Encoding.CodePage%2A>"
  example:
  - "The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "目前的工作階段的字碼頁識別項。"
  overload: System.Web.SessionState.IHttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否針對無 cookie 工作階段設定應用程式。"
  remarks: "CookieMode 屬性會傳回<xref:System.Web.HttpCookieMode>列舉值的值為基礎，`cookieless`屬性<xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>組態項目。</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.HttpCookieMode> 如果`cookieless`屬性設為`true`，則 CookieMode 屬性會傳回<xref:System.Web.HttpCookieMode>，否則 CookieMode 屬性傳回<xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>"
  example:
  - "The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState  \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "其中一個<xref href=&quot;System.Web.HttpCookieMode&quot;></xref>值，指出是否針對無 cookie 工作階段設定應用程式。 預設值是<xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>。"
  overload: System.Web.SessionState.IHttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "將工作階段狀態項目值的集合複製到一維陣列，陣列中指定索引處開始。"
  remarks: ''
  example:
  - "The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>接收工作階段值。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "中的索引`array`在複製開始的位置。"
  overload: System.Web.SessionState.IHttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得工作階段狀態項目集合中的項目數目。"
  remarks: ''
  example:
  - "The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "工作階段狀態項目集合中的項目數目。"
  overload: System.Web.SessionState.IHttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "傳回可以用來讀取目前的工作階段中的所有工作階段狀態項目值的列舉值。"
  remarks: ''
  example:
  - "The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>可逐一查看工作階段狀態項目集合中的值。</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否在 URL 中內嵌或 HTTP cookie 中儲存的工作階段識別碼。"
  remarks: "在無 cookie 工作階段的資訊，請參閱[工作階段識別元](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果工作階段嵌入 URL;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否以目前的要求建立工作階段。"
  remarks: ''
  example:
  - "The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果與目前的要求; 已建立工作階段否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出該工作階段是否唯讀。"
  remarks: "工作階段狀態會藉由設定設為唯讀<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>頁面屬性`ReadOnly`。</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - "The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>工作階段是否唯讀。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得值，指出是否對工作階段狀態值集合的存取為同步 （安全執行緒）。"
  remarks: ''
  example:
  - "The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果對集合的存取為同步 （安全執行緒），否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定工作階段狀態項目值的數字索引。"
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "工作階段狀態項目值的數值索引。"
    return:
      type: System.Object
      description: "中指定的工作階段狀態項目值<code> index </code>參數。"
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定工作階段狀態項目值的名稱。"
  remarks: ''
  example:
  - "The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "工作階段狀態項目值的索引鍵的名稱。"
    return:
      type: System.Object
      description: "中指定的工作階段狀態項目值<code> name </code>參數。"
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得儲存在工作階段狀態項目集合中的所有值的索引鍵的集合。"
  remarks: ''
  example:
  - "The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "<xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>，包含所有工作階段項目索引鍵。</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.IHttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得或設定目前工作階段的地區設定識別碼 (LCID)。"
  remarks: "這`LCID`提供屬性為了與 ASP 的舊版本只有相容性。 如果您不需要維護回溯相容性的 ASP 頁面，使用<xref:System.Globalization.CultureInfo.LCID%2A>屬性改為。</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET 不會在工作階段狀態儲存的地區設定識別碼。 LCID 屬性呼叫<xref:System.Globalization.CultureInfo.LCID%2A>取得和設定識別項。</xref:System.Globalization.CultureInfo.LCID%2A>"
  example:
  - "The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A<xref:System.Globalization.CultureInfo>指定目前的工作階段的文化特性的執行個體。</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.IHttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得目前工作階段狀態模式。"
  remarks: "如需不同工作階段狀態模式的資訊，請參閱[工作階段狀態模式](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "其中一個<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>值。"
  overload: System.Web.SessionState.IHttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態項目集合中刪除項目。"
  remarks: ''
  example:
  - "The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "要從工作階段狀態項目集合中刪除的項目名稱。"
  overload: System.Web.SessionState.IHttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "清除工作階段狀態項目集合中的所有值。"
  remarks: "RemoveAll 執行<xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.</xref:System.Web.SessionState.IHttpSessionState.Clear%2A>相同的功能"
  example:
  - "The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "從工作階段狀態項目集合中刪除指定索引處的項目。"
  remarks: ''
  example:
  - "The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要從工作階段狀態集合中移除之項目的索引。"
  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得工作階段的唯一工作階段識別碼。"
  remarks: ''
  example:
  - "The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "工作階段識別碼。"
  overload: System.Web.SessionState.IHttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得所宣告的物件的集合<xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> ASP.NET 應用程式 Global.asax 檔案中的標記。"
  remarks: '`StaticObjects`提供與 ASP 的舊版本相容性。'
  example:
  - "The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Global.asax 檔中包含物件宣告。"
  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得可用以同步存取工作階段狀態值集合的物件。"
  remarks: ''
  example:
  - "The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "物件，可用來對集合進行同步存取。"
  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得並設定工作階段狀態提供者結束工作階段之前，在要求之間所允許的逾時期間 （以分鐘為單位）。"
  remarks: ''
  example:
  - "The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "逾時期限 （以分鐘為單位）。"
  overload: System.Web.SessionState.IHttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.IHttpSessionState.Clear
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.IHttpSessionState.Count
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
- uid: System.Web.SessionState.IHttpSessionState.Keys
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.IHttpSessionState.LCID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
- uid: System.Web.SessionState.IHttpSessionState.Abandon*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: IHttpSessionState.Abandon
- uid: System.Web.SessionState.IHttpSessionState.Add*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add
  nameWithType: IHttpSessionState.Add
- uid: System.Web.SessionState.IHttpSessionState.Clear*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear
  nameWithType: IHttpSessionState.Clear
- uid: System.Web.SessionState.IHttpSessionState.CodePage*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
- uid: System.Web.SessionState.IHttpSessionState.CookieMode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: IHttpSessionState.CopyTo
- uid: System.Web.SessionState.IHttpSessionState.Count*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: IHttpSessionState.GetEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item
  nameWithType: IHttpSessionState.Item
- uid: System.Web.SessionState.IHttpSessionState.Keys*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
- uid: System.Web.SessionState.IHttpSessionState.LCID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
- uid: System.Web.SessionState.IHttpSessionState.Remove*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove
  nameWithType: IHttpSessionState.Remove
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: IHttpSessionState.RemoveAll
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: IHttpSessionState.RemoveAt
- uid: System.Web.SessionState.IHttpSessionState.SessionID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
