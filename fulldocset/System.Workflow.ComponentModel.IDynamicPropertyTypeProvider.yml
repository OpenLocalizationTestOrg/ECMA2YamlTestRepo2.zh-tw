### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  id: IDynamicPropertyTypeProvider
  children:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider
  nameWithType: IDynamicPropertyTypeProvider
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  type: Interface
  summary: "提供的繫結基礎結構的屬性型別。 它被實作的活動所包含之屬性的變數型別，可以視其他活動設定而有所不同型別。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]這個介面允許父活動，將兩個屬性和繫結基礎結構，表示要用於驗證繫結的型別。 例如，您可能必須使用兩個屬性，活動`TypeProperty`和`ValueProperty`，其中`TypeProperty`指定有效的類型值的`ValueProperty`。 在這種情況下，父活動會實作 IDynamicPropertyTypeProvider 介面。"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IDynamicPropertyTypeProvider
  implements: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  id: GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "傳回指定之屬性的存取類型。"
  remarks: "在編譯時期用來驗證屬性之間是否正確繫結至另一。 如果沒有這個介面，會直接從屬性 getter/setter 推斷這項資訊。"
  syntax:
    content: public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "物件，用於實作<xref:System.IServiceProvider>若您需要提供設計階段服務的存取。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "屬性的名稱。"
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref>代表屬性存取層級的列舉值。"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  id: GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "傳回<xref:System.Type>指定的屬性。</xref:System.Type>"
  remarks: "在編譯時期用來驗證屬性之間是否正確繫結至另一。"
  syntax:
    content: public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "物件，用於實作<xref:System.IServiceProvider>提供設計階段服務的存取權，系統會視。</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "屬性的名稱。"
    return:
      type: System.Type
      description: "<xref:System.Type>屬性的名稱會當做傳遞<code> propertyName </code>參數。</xref:System.Type>"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType
