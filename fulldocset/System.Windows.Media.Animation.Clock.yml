### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Clock
  id: Clock
  children:
  - System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Clock.Completed
  - System.Windows.Media.Animation.Clock.Controller
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Clock.CurrentGlobalTime
  - System.Windows.Media.Animation.Clock.CurrentIteration
  - System.Windows.Media.Animation.Clock.CurrentProgress
  - System.Windows.Media.Animation.Clock.CurrentState
  - System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  - System.Windows.Media.Animation.Clock.CurrentTime
  - System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  - System.Windows.Media.Animation.Clock.GetCanSlip
  - System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  - System.Windows.Media.Animation.Clock.HasControllableRoot
  - System.Windows.Media.Animation.Clock.IsPaused
  - System.Windows.Media.Animation.Clock.NaturalDuration
  - System.Windows.Media.Animation.Clock.Parent
  - System.Windows.Media.Animation.Clock.RemoveRequested
  - System.Windows.Media.Animation.Clock.SpeedChanged
  - System.Windows.Media.Animation.Clock.Stopped
  - System.Windows.Media.Animation.Clock.Timeline
  langs:
  - csharp
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
  type: Class
  summary: "會維護執行階段計時狀態<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>。"
  remarks: "A <xref:System.Windows.Media.Animation.Timeline>，單獨使用時，實際上並不進行任何項目以外描述一段時間。</xref:System.Windows.Media.Animation.Timeline> 它是從事實際作業的時間軸的時鐘物件︰ 其維持的時間軸與時間有關執行階段狀態。       在大部分情況下，時鐘會自動針對時間表建立。 當您使用動畫顯示<xref:System.Windows.Media.Animation.Storyboard>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，時鐘的自動建立時間表的動畫並套用至其目標屬性。</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> </xref:System.Windows.Media.Animation.Storyboard> 如需範例，請參閱[How to︰ 建立屬性的動畫所使用的分鏡腳本](~/add/includes/ajax-current-ext-md.md)和[如何︰ 以動畫顯示屬性而不使用分鏡腳本](~/add/includes/ajax-current-ext-md.md)。       您也可以建立時鐘明確使用<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法。</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> 需要大量效能的情況下，例如動畫執行大量的類似物件，管理您自己的時鐘使用可以提供效能優勢。       在符合的結構的樹狀目錄中排列時鐘<xref:System.Windows.Media.Animation.Timeline>物件樹狀結構會建立從。</xref:System.Windows.Media.Animation.Timeline> 這類時間樹狀結構的根時鐘可以以互動方式操作 （暫停、 繼續、 已停止，依此類推） 藉由擷取其<xref:System.Windows.Media.Animation.Clock.Controller%2A>.</xref:System.Windows.Media.Animation.Clock.Controller%2A> 無法直接控制不是根時鐘。       一旦建立，時鐘不能修改 （但可以操作）。      ## 使用事件處理常式時，只將進度計時器的時間軸的時鐘時間表與它相關聯或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。</xref:System.Windows.Media.Animation.AnimationClock> 因此 （和其他項目），不建議您改用<xref:System.Windows.Media.Animation.Timeline>做為計時器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: 'public class Clock : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  id: '#ctor(System.Windows.Media.Animation.Timeline)'
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>類別，使用指定<xref:System.Windows.Media.Animation.Clock.Timeline*>做為範本。</xref:System.Windows.Media.Animation.Clock.Timeline*> 新<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>物件有沒有子系。"
  syntax:
    content: protected Clock (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<> </> *> 從應該建構這個時鐘。時鐘不會建立任何子系<> *> 物件，如果有的話。"
  overload: System.Windows.Media.Animation.Clock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "這個時鐘完全完成播放時發生。"
  remarks: "如果這個時鐘時鐘的樹狀結構的根時鐘，它已完成播放之後到達結束其使用中的持續期間 （其中包含重複） 和所有子系已達到其作用中的持續時間的結尾。 如果這個時鐘子時鐘，認定為完全結束播放時所屬到達時鐘樹狀結構的根時鐘結束其使用中的持續時間和其所有子時鐘已完成播放。       停止時鐘不會觸發已完成的事件，但前進到其填滿期間。"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Controller
  id: Controller
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得<xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> ，可以用來啟動、 暫停、 繼續、 搜尋、 略過、 停止或移除這個<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>。"
  remarks: "只有根時鐘可以以互動方式控制。"
  syntax:
    content: public System.Windows.Media.Animation.ClockController Controller { get; }
    return:
      type: System.Windows.Media.Animation.ClockController
      description: "A <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>如果這是根時鐘; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  id: CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得的時鐘的目前行進的速率，與實際時間相比較。"
  syntax:
    content: public Nullable<double> CurrentGlobalSpeed { get; }
    return:
      type: System.Nullable{System.Double}
      description: "相較於真實世界時間此時鐘的時間是目前的行進速率。 如果已停止時鐘，則這個屬性會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "在更新時鐘的速度時，就會發生。"
  remarks: "暫停、 繼續、 反轉、 加速、 減速、 搜尋、 停止或變更時鐘的互動速度使用<xref:System.Windows.Media.Animation.ClockController>觸發此事件。</xref:System.Windows.Media.Animation.ClockController>       雖然此事件發生時<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>屬性會變成無效，不一定表示屬性已變更。</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  id: CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得目前的全域時間，所建立[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]計時系統。"
  syntax:
    content: protected TimeSpan CurrentGlobalTime { get; }
    return:
      type: System.TimeSpan
      description: "針對全域目前[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]計時系統。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  id: CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得這個時鐘目前反覆項目。"
  remarks: "時鐘的第一個反覆項目有值為 1。       如果這個時鐘時間表具有<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目是由正向反向組所組成，不只是下列其中一種區段。</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>       其目前的反覆項目，不論搜尋時鐘傳回其目前的反覆項目設為 1。 重新啟動時鐘也會傳回其目前的反覆項目設為 1。"
  syntax:
    content: public Nullable<int> CurrentIteration { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "這個時鐘在其目前作用中期間內的 目前反覆項目或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果時鐘已停止。"
  overload: System.Windows.Media.Animation.Clock.CurrentIteration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  id: CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得目前的進度<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>其目前的反覆項目中。"
  remarks: "這個屬性的值會指出<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>由<xref:System.Windows.Media.Animation.Timeline.Duration%2A>這個時鐘<xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</xref:System.Windows.Media.Animation.Clock.Timeline%2A>的</xref:System.Windows.Media.Animation.Timeline.Duration%2A>正規化</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>       是時鐘<xref:System.Windows.Media.Animation.ClockState>具有 1.0 的 CurrentProgress。</xref:System.Windows.Media.Animation.ClockState>      ## 使用事件處理常式時，只將進度計時器的時間軸的時鐘時間表與它相關聯或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。</xref:System.Windows.Media.Animation.AnimationClock> 因此 （和其他項目），不建議您改用<xref:System.Windows.Media.Animation.Timeline>做為計時器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<double> CurrentProgress { get; }
    return:
      type: System.Nullable{System.Double}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>這個時鐘<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，0.0 這個時鐘是否在作用中或及其<> *> 有<> *> 的<xref:System.Windows.Duration.Forever*>; 否則介於 0.0 到 1.0，指出其目前的反覆項目中的這個時鐘的目前進度。</xref:System.Windows.Duration.Forever*> 0.0 的值表示沒有進度，而值為 1.0 表示時鐘已在其目前的反覆項目結尾處。"
  overload: System.Windows.Media.Animation.Clock.CurrentProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentState
  id: CurrentState
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得值，指出時鐘目前<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>， <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，或<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>。"
  remarks: "請注意，時鐘的 CurrentState 屬性未告訴您是否已暫停。 若要判斷是否要暫停時鐘，請使用<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>屬性。</xref:System.Windows.Media.Animation.Clock.IsPaused%2A>       <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>當這個屬性的值變更時發生。</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>"
  syntax:
    content: public System.Windows.Media.Animation.ClockState CurrentState { get; }
    return:
      type: System.Windows.Media.Animation.ClockState
      description: '時鐘的目前狀態︰ <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>， <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，或<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>。'
  overload: System.Windows.Media.Animation.Clock.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生時的時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState*>更新屬性。</xref:System.Windows.Media.Animation.Clock.CurrentState*>"
  remarks: "使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，當您想要收到通知，如果時鐘啟動時，就會停止，或填滿。</xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> <xref:System.Object>參數<xref:System.EventHandler>事件處理常式是<xref:System.Windows.Media.Animation.Clock>其狀態已失效。</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       暫停<xref:System.Windows.Media.Animation.Clock>不會變更其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.Clock> 若要收到通知的時鐘會變成暫停時，要使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>       雖然就會發生此事件時<xref:System.Windows.Media.Animation.ClockState>會變成無效，不一定表示<xref:System.Windows.Media.Animation.ClockState>變更︰<xref:System.Windows.Media.Animation.Clock>切換從<xref:System.Windows.Media.Animation.ClockState>至<xref:System.Windows.Media.Animation.ClockState>然後再設回<xref:System.Windows.Media.Animation.ClockState>在相同刻度將會導致引發此事件，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>屬性實際上不會變更。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  id: CurrentTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得這個時鐘的目前時間其目前的反覆項目中。"
  remarks: "## 使用事件處理常式時，只將進度計時器的時間軸的時鐘時間表與它相關聯或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。</xref:System.Windows.Media.Animation.AnimationClock> 因此 （和其他項目），不建議您改用<xref:System.Windows.Media.Animation.Timeline>做為計時器。</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<TimeSpan> CurrentTime { get; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果這個時鐘<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>，否則這個時鐘的目前時間。"
  overload: System.Windows.Media.Animation.Clock.CurrentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生時這個時鐘<xref:System.Windows.Media.Animation.Clock.CurrentTime*>就會變成無效。</xref:System.Windows.Media.Animation.Clock.CurrentTime*>"
  remarks: 'A clock''s <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses. The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.'
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  id: DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "在衍生類別中實作，會叫用每當時鐘會重複，會略過，或搜尋。"
  syntax:
    content: protected virtual void DiscontinuousTimeMovement ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  id: GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "傳回是否<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>有它自己的外部時間來源，這可能需要與計時系統同步處理。"
  remarks: "媒體正在播放<xref:System.Windows.Media.MediaTimeline>的<xref:System.Windows.Media.Animation.Storyboard>是，建立<xref:System.Windows.Media.Animation.Clock>會具有外部時間來源 （例如視訊剪輯），您可能需要與其他時間軸內<xref:System.Windows.Media.Animation.Storyboard>.</xref:System.Windows.Media.Animation.Storyboard>的同步處理</xref:System.Windows.Media.Animation.Clock>的範例</xref:System.Windows.Media.Animation.Storyboard>中</xref:System.Windows.Media.MediaTimeline>，使用 請參閱<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>如需詳細資訊。</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>"
  syntax:
    content: protected virtual bool GetCanSlip ();
    parameters: []
    return:
      type: System.Boolean
      description: "傳回**true**如果<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>有它自己的外部來源時間，這可能需要同步處理與計時系統; 否則**false**。"
  overload: System.Windows.Media.Animation.Clock.GetCanSlip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  id: GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得這個時鐘的目前時間其目前的反覆項目中。"
  remarks: "這個方法用在實作<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>方法，且不應該直接從程式碼呼叫。</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>"
  syntax:
    content: protected virtual TimeSpan GetCurrentTimeCore ();
    parameters: []
    return:
      type: System.TimeSpan
      description: "如果作用中或填滿; 這個時鐘目前時間否則， <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  id: HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得值，指出是否此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>可控制時鐘的樹狀結構的一部分。"
  syntax:
    content: public bool HasControllableRoot { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個時鐘屬於與可控制根時鐘時鐘的樹狀結構，或這個時鐘本身是可控制的根目錄;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.HasControllableRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.IsPaused
  id: IsPaused
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得值，指出是否此<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>，或其父代的任何已暫停。"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>或任何其父系已暫停; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.Clock.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得這個時鐘<xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*>的自然持續期間"
  remarks: "如需自然持續期間的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>方法。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "這個時鐘，取決於其<xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*>自然持續期間"
  overload: System.Windows.Media.Animation.Clock.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Parent
  id: Parent
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得這個時鐘的父系的時鐘。"
  syntax:
    content: public System.Windows.Media.Animation.Clock Parent { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "這個時鐘的父代或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果時鐘為根目錄。"
  overload: System.Windows.Media.Animation.Clock.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "發生時<xref:System.Windows.Media.Animation.ClockController.Remove*>上呼叫方法<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>或其父時鐘的其中一個。</xref:System.Windows.Media.Animation.ClockController.Remove*>"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  id: SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "衍生類別中實作時，會叫用每當時鐘開始、 略過、 暫停、 恢復時，或當時鐘的<xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>修改。</xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>"
  syntax:
    content: protected virtual void SpeedChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.SpeedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Stopped
  id: Stopped
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "在衍生類別中實作時，就會叫用每當使用已停止時鐘<xref:System.Windows.Media.Animation.ClockController.Stop*>方法。</xref:System.Windows.Media.Animation.ClockController.Stop*>"
  syntax:
    content: protected virtual void Stopped ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.Stopped*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Timeline
  id: Timeline
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得從這個時間軸<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>所建立。"
  remarks: "修改時鐘的<xref:System.Windows.Media.MediaTimeline>不會更新時鐘; 的新時鐘必須建立從修改過的<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.MediaTimeline>"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Timeline { get; }
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "從這個時間軸<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>所建立。"
  overload: System.Windows.Media.Animation.Clock.Timeline*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Clock.Completed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Clock.Controller
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
- uid: System.Windows.Media.Animation.ClockController
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
- uid: System.Windows.Media.Animation.ClockState
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockState
  nameWithType: ClockState
  fullName: System.Windows.Media.Animation.ClockState
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Clock.Parent
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
- uid: System.Windows.Media.Animation.Clock.Stopped
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
- uid: System.Windows.Media.Animation.Clock.Timeline
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
- uid: System.Windows.Media.Animation.Clock.#ctor*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock
  nameWithType: Clock.Clock
- uid: System.Windows.Media.Animation.Clock.Controller*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
- uid: System.Windows.Media.Animation.Clock.CurrentIteration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
- uid: System.Windows.Media.Animation.Clock.CurrentProgress*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
- uid: System.Windows.Media.Animation.Clock.CurrentTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement
  nameWithType: Clock.DiscontinuousTimeMovement
- uid: System.Windows.Media.Animation.Clock.GetCanSlip*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip
  nameWithType: Clock.GetCanSlip
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore
  nameWithType: Clock.GetCurrentTimeCore
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
- uid: System.Windows.Media.Animation.Clock.Parent*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
- uid: System.Windows.Media.Animation.Clock.SpeedChanged*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged
  nameWithType: Clock.SpeedChanged
- uid: System.Windows.Media.Animation.Clock.Stopped*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped
  nameWithType: Clock.Stopped
- uid: System.Windows.Media.Animation.Clock.Timeline*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
