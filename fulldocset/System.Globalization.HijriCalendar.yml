### YamlMime:ManagedReference
items:
- uid: System.Globalization.HijriCalendar
  id: HijriCalendar
  children:
  - System.Globalization.HijriCalendar.#ctor
  - System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AlgorithmType
  - System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.HijriCalendar.Eras
  - System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - System.Globalization.HijriCalendar.HijriAdjustment
  - System.Globalization.HijriCalendar.HijriEra
  - System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.MaxSupportedDateTime
  - System.Globalization.HijriCalendar.MinSupportedDateTime
  - System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HijriCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HijriCalendar
  nameWithType: HijriCalendar
  fullName: System.Globalization.HijriCalendar
  type: Class
  summary: "代表回曆。"
  remarks: "The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).  \n  \n> [!NOTE]\n>  For information about using the HijriCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).  \n  \n In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.  \n  \n The Hijri calendar has 12 months with 29 to 30 days each:  \n  \n|GetMonth value|Month|Days in common years|Days in leap years|  \n|--------------------|-----------|--------------------------|------------------------|  \n|1|محرم (Muharram)|30|30|  \n|2|صفر (Safar)|29|29|  \n|3|‏ربيع الاول (Rabi I)|30|30|  \n|4|‏ربيع الثاني (Rabi II)|29|29|  \n|5|جمادى الاولى (Jumada I)|30|30|  \n|6|جمادى الثانية (Jumada II)|29|29|  \n|7|رجب (Rajab)|30|30|  \n|8|شعبان (Shaban)|29|29|  \n|9|رمضان (Ramadan)|30|30|  \n|10|شوال (Shawwal)|29|29|  \n|11|ذو القعدة (Zulkadah)|30|30|  \n|12|ذو الحجة (Zulhijjah)|29|30|  \n  \n Ramadan, the month of fasting in the Muslim world, officially starts and ends according to a decree that is based on the observation of the new moon. Therefore, the number of days in Shaban and the number of days in Ramadan vary.  \n  \n The date January 1, 2001 A.D. in the Gregorian calendar is roughly equivalent to the sixth day of Shawwal in the year 1421 A.H. in the Hijri calendar.  \n  \n This implementation of the HijriCalendar class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property. If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate. However, that information can change during the life of the <xref:System.AppDomain>. The HijriCalendar class does not detect changes in the system settings automatically.  \n  \n Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HijriCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: System.Globalization.HijriCalendar.HijriCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "初始化的新執行個體<xref href=&quot;System.Globalization.HijriCalendar&quot;></xref>類別。"
  syntax:
    content: public HijriCalendar ();
    parameters: []
  overload: System.Globalization.HijriCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回<xref:System.DateTime>也就是指定的月數指定<xref:System.DateTime>.</xref:System.DateTime>遠離</xref:System.DateTime>"
  remarks: "產生的日期部分<xref:System.DateTime>如果產生的日期不是有效的日期，產生結果年的月份中會受到影響。</xref:System.DateTime> 它會變更為有效的最後一天，在產生的產生的年份。 <xref:System.DateTime>如果產生的月份超出指定<xref:System.DateTime>.</xref:System.DateTime>的年份，會影響</xref:System.DateTime>結果的年份部分 這項實作支援目前的紀元。 因此，<xref:System.ArgumentException>如果產生的年份超出指定<xref:System.DateTime>.</xref:System.DateTime>紀元，會擲回</xref:System.ArgumentException> 結果<xref:System.DateTime>仍然與指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime>的日期時間組件       比方說，如果指定的月份是 Zulkadah，有 30 天，指定一天是該月第 30 天，而`months`參數為 3，產生的年份會一個以上的指定年份中，產生的月份為 Safar，而且產生的日期是第 29 天 safar 的最後一天。       如果值`months`參數是負值，<xref:System.DateTime>早於指定<xref:System.DateTime>.</xref:System.DateTime></xref:System.DateTime>產生       <xref:System.DateTime.Kind%2A>屬性的<xref:System.DateTime>值一律等於<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>傳回</xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>屬性`time`藉由呼叫參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如下列範例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.h_21_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.h_21_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_21_2.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_21_2.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_21_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>要加入的月數。</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "若要加入的月數。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>從指定的月份來指定<xref:System.DateTime>.</xref:System.DateTime>數目相加的結果</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "產生<xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>是小於-120000。       -或-<code>months</code>大於 120000。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: HijriCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回<xref:System.DateTime>也就是指定的年數指定<xref:System.DateTime>.</xref:System.DateTime>遠離</xref:System.DateTime>"
  remarks: "產生的日期部分<xref:System.DateTime>如果產生的日期不是有效的日期，產生結果年的月份中會受到影響。</xref:System.DateTime> 它會變更為有效的最後一天，在產生的產生的年份。 產生<xref:System.DateTime>仍然與指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime>的月份部分 這項實作支援目前的紀元。 因此，<xref:System.ArgumentException>如果產生的年份超出指定<xref:System.DateTime>.</xref:System.DateTime>紀元，會擲回</xref:System.ArgumentException> 結果<xref:System.DateTime>仍然與指定<xref:System.DateTime>.</xref:System.DateTime>相同</xref:System.DateTime>的日期時間組件       例如，Zulhijjah 有 29 天，除了在閏年時為 30 天期間。 如果指定的日期，而且 Zulhijjah 閏年中的第 30 天的值`years`為 1，則產生的日期會 Zulhijjah 下列目前年度第 29 天。       如果`years`是負數，<xref:System.DateTime>早於指定<xref:System.DateTime>.</xref:System.DateTime></xref:System.DateTime>產生       <xref:System.DateTime.Kind%2A>屬性的<xref:System.DateTime>值一律等於<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>傳回</xref:System.DateTime.Kind%2A> 您可以保留<xref:System.DateTime.Kind%2A>屬性`time`藉由呼叫參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>方法，如下列範例所示。</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.h_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.h_4_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_4_2.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_4_2.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_4_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>數年來加入。</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "若要加入的年數。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>新增指定的至指定<xref:System.DateTime>。</xref:System.DateTime>的年數的結果</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "產生<xref:System.DateTime>超出支援的範圍。</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: System.Globalization.HijriCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得值，指出是否將現行曆法是以陽曆為主、 以陰曆為主，或兩者的組合。"
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.h_0_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.h_0_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "一律傳回<xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>。"
  overload: System.Globalization.HijriCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得所指定年份的前一年的日數<xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>屬性。</xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>"
  remarks: "這個屬性會傳回 354 常數值。"
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "<xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>.</xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>所指定年份的前一年的日數"
  overload: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.Eras
  id: Eras
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: System.Globalization.HijriCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得清單中的紀元<xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref>。"
  remarks: '回曆辨識一個紀元︰ 紀元 (拉丁文&quot;Anno Hegirae&quot;，這表示 「 年的移轉，」 移轉的穆罕默德 (PBUH) 從一提及)。 這個屬性永遠會傳回只有一個元素的陣列。'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "表示中的紀元的整數的陣列<xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref>。"
  overload: System.Globalization.HijriCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回在指定<xref:System.DateTime>.</xref:System.DateTime>當月日期"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_16_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_16_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_16_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "從 1 到 30 表示整數指定<xref:System.DateTime>。</xref:System.DateTime>當月日期"
  overload: System.Globalization.HijriCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回在指定<xref:System.DateTime>.</xref:System.DateTime>一週天數"
  remarks: "<xref:System.DayOfWeek>值如下: |DayOfWeek 值 | 表示 |  |---------------------|---------------------|  |星期日 | الاحد (Al Ahad) |  |星期一 | الاثنين (Al Ithnayn) |  |星期二 | الثلاثاء (在 Thulaathaa&quot;) |  |星期三 | الاربعاء (Al Arbi&quot;aa&quot;) |  |星期四 | الخميس (Al Khamiis) |  |星期五 | الجمعة (Al Jumu&quot;ah) |  |星期六 | السبت (做為-Sabt) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_17_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_17_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_17_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>值，表示在指定<xref:System.DateTime>.</xref:System.DateTime>一週天數</xref:System.DayOfWeek>"
  overload: System.Globalization.HijriCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回在指定<xref:System.DateTime>.</xref:System.DateTime>年份的日期"
  remarks: "年份的日期被定義為一年的第一天中的天數。 比方說，GetDayOfYear 的第一個月的第一天，則傳回 1，並在過去一個月的最後一天的 GetDayOfYear 傳回總天數中該年份， <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>.</xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>所傳回的值相同"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_13_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_13_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_13_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "從 1 到 355 表示整數指定<xref:System.DateTime>。</xref:System.DateTime>年份的日期"
  overload: System.Globalization.HijriCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回指定的年份和紀元之指定月份中的日數。"
  remarks: "例如，這個方法傳回 29 或 30 Zulhijjah (`month` = 12)，取決於是否`year`是否為閏年。"
  example:
  - "The following code example calls `GetDaysInMonth` for the twelfth month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/4f5a9e0a-9896-4180-95b7-_1.vb)]\n [!code-cs[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/4f5a9e0a-9896-4180-95b7-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/4f5a9e0a-9896-4180-95b7-_1.cpp)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: month
      type: System.Int32
      description: "從 1 到 12 的整數，表示月份。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Int32
      description: "在指定紀元的指定年份中指定的月份天數。"
  overload: System.Globalization.HijriCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。       -或-<code>month</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回指定的年份和紀元中的日數。"
  remarks: ''
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cs[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_3_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_3_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_3_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Int32
      description: "指定的年份和紀元中的日數。 日數有 354 一般年份有 355 閏年中。"
  overload: System.Globalization.HijriCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>或<code>era</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: System.Globalization.HijriCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回在指定<xref:System.DateTime>.</xref:System.DateTime>紀元"
  remarks: '回曆辨識一個紀元︰ 紀元 (拉丁文&quot;Anno Hegirae&quot;，這表示 「 年的移轉，」 移轉的穆罕默德 (PBUH) 從一提及)。'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_14_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_14_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_14_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "表示在指定<xref:System.DateTime>.</xref:System.DateTime>紀元的整數"
  overload: System.Globalization.HijriCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "計算指定之年份和紀元的閏月。"
  remarks: "曆法，支援閏月的概念，在特定月份或任何一年中月份之後發生的閏月。 例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法傳回的數字，介於 1 到 13，表示相關聯的指定日期的月份。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法會傳回 8 閏第八個月的 9 和 10 的第九個月份的第八個月份。</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "一年。"
    - id: era
      type: System.Int32
      description: "紀元。 Specify <xref:System.Globalization.Calendar.CurrentEra> or <xref href=&quot;System.Globalization.HijriCalendar.HijriEra&quot;></xref>.</xref:System.Globalization.Calendar.CurrentEra>"
    return:
      type: System.Int32
      description: "永遠為 0 因為<xref href=&quot;System.Globalization.HijriCalendar&quot;></xref>類型不支援閏月的概念。"
  overload: System.Globalization.HijriCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>小於回曆日曆年度 1 或大於 9666 年。       -or-       <code>era</code> is not <xref:System.Globalization.Calendar.CurrentEra> or <xref href=&quot;System.Globalization.HijriCalendar.HijriEra&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回在指定<xref:System.DateTime>.</xref:System.DateTime>月份"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_19_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_19_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_19_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "從 1 到 12 的整數，表示在指定<xref:System.DateTime>.</xref:System.DateTime>月份"
  overload: System.Globalization.HijriCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回指定的年份和紀元中的月數。"
  remarks: ''
  example:
  - "The following code example calls the GetMonthsInYear method for five years in each era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_12_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_12_1.vb)]\n [!code-cs[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_12_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Int32
      description: "指定的年份和紀元中的月數。"
  overload: System.Globalization.HijriCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "在指定<xref:System.DateTime>.</xref:System.DateTime>傳回年份"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_9_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_9_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_9_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>讀取。</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "表示在指定<xref:System.DateTime>.</xref:System.DateTime>年份的整數"
  overload: System.Globalization.HijriCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  id: HijriAdjustment
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: System.Globalization.HijriCalendar.HijriAdjustment
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得或設定要加入或減去以容納在開頭和結尾開幕變異及適應日期之間的差異國家 （地區） 的行事曆的天數。"
  remarks: "這項實作<xref:System.Globalization.HijriCalendar>類別以加上或減去的值從零至兩天，以容納在開頭和結尾開幕變異和適應日期之間的差異國家 （地區） 調整的行事曆日期。</xref:System.Globalization.HijriCalendar> 該值會儲存在 HijriAdjustment 屬性。 如果 HijriAdjustment 未明確設定，它會衍生其值從 控制台 的地區及語言選項 部分中的設定，並儲存在登錄值 HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate。 不過，該資訊可以變更<xref:System.AppDomain>.</xref:System.AppDomain>的存留期間 <xref:System.Globalization.HijriCalendar>類別不會偵測系統設定中變更自動。</xref:System.Globalization.HijriCalendar>"
  example:
  - "The following code example shows how HijriAdjustment affects the date.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/cpp/p-system.globalization.h_2_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/csharp/p-system.globalization.h_2_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/visualbasic/p-system.globalization.h_2_1.vb)]"
  syntax:
    content: public int HijriAdjustment { get; set; }
    return:
      type: System.Int32
      description: "從-2 至 2 的整數，表示新增或刪減從行事曆的天數。"
  overload: System.Globalization.HijriCalendar.HijriAdjustment*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "屬性是設定為無效的值。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.HijriEra
  id: HijriEra
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: System.Globalization.HijriCalendar.HijriEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "代表目前的紀元。 這個欄位是常數。"
  remarks: "HijriEra 欄位的值為 1。       回曆辨識一個紀元︰ 紀元 (拉丁文&quot;Anno Hegirae&quot;，這表示 「 年的移轉，」 移轉的穆罕默德 (PBUH) 從一提及)。"
  syntax:
    content: public static readonly int HijriEra;
    return:
      type: System.Int32
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "判斷指定的日期是否為閏日。"
  remarks: "在被 30、 第 2、 5、 7、 第 10、 13、 16、 18、 21、 24 整除一年的結尾是每 30 年週期內，26 和 29 年都是潤年。 一般年份有 354 天，閏年有 355 天。       為閏日是閏年只會發生一天。 在回曆，Zulhijjah 第 30 天會是唯一的閏日。"
  example:
  - "The following code example calls the `IsLeapDay` method for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/csharp/6f043d10-1d5e-45a1-ab11-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/cpp/6f043d10-1d5e-45a1-ab11-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/6f043d10-1d5e-45a1-ab11-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: month
      type: System.Int32
      description: "從 1 到 12 的整數，表示月份。"
    - id: day
      type: System.Int32
      description: "從 1 到 30 之間的整數，表示一天。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的日期為閏日。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.HijriCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。       -或-<code>month</code>超出此曆法所支援的範圍。       -或-<code>day</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "判斷指定的年份和紀元中的指定的月份是否為閏月。"
  remarks: "在被 30、 第 2、 5、 7、 第 10、 13、 16、 18、 21、 24 整除一年的結尾是每 30 年週期內，26 和 29 年都是潤年。 一般年份有 354 天，閏年有 355 天。       為閏月是只發生在閏年整個月。 回曆並沒有任何閏月。"
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/ab4078b3-e91f-4cfb-8fcf-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/ab4078b3-e91f-4cfb-8fcf-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/ab4078b3-e91f-4cfb-8fcf-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: month
      type: System.Int32
      description: "從 1 到 12 的整數，表示月份。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Boolean
      description: "這個方法一律會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.HijriCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。       -或-<code>month</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "判斷指定紀元中指定的年份是否為閏年。"
  remarks: "在被 30、 第 2、 5、 7、 第 10、 13、 16、 18、 21、 24 整除一年的結尾是每 30 年週期內，26 和 29 年都是潤年。 一般年份有 354 天，閏年有 355 天。"
  example:
  - "The following code example calls the `IsLeapYear` method for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.h_0_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.h_0_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_0_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的年份為閏年;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Globalization.HijriCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得最新的日期和時間此曆法所支援。"
  remarks: "西元 9999 年 12 月 31 日 相當於在回曆 9666 年第 4 個月的第 3 天。"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_1_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_1_1.vb)]\n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_1_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最晚的日期和時間所支援<xref href=&quot;System.Globalization.HijriCalendar&quot;></xref>類型，這就相當於最後一刻的年 12 月 31 日到 9999 年 西曆。"
  overload: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得最早日期和時間此曆法所支援。"
  remarks: "Microsoft Visual Basic 中表示為支援的<xref:System.DateTime>型別，這是公元 0001 年 1 月 1 日</xref:System.DateTime>的最小日期的指定時間的時間 不過，<xref:System.Globalization.HijriCalendar>類型不支援的最小日期。</xref:System.Globalization.HijriCalendar> 因此，如果您呼叫方法來設定使用現行曆法的日期時間的格式，但是您不指定格式規範，格式就會使用 ISO 8601 可排序 (&quot;s&quot;) 日期/時間模式的格式規範，而不是預設的一般 (&quot;G&quot;) 的日期/時間模式的格式規範。 如需詳細資訊，請參閱[標準日期和時間格式字串](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_3_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_3_1.vb)]\n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_3_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最早日期和時間所支援<xref href=&quot;System.Globalization.HijriCalendar&quot;></xref>類型，這就相當於 7 月 18，指西元 622年第一個快照 西曆。"
  overload: System.Globalization.HijriCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "傳回<xref:System.DateTime>設定為指定的日期、 時間和紀元。</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "整數，表示年份。"
    - id: month
      type: System.Int32
      description: "從 1 到 12 的整數，表示月份。"
    - id: day
      type: System.Int32
      description: "從 1 到 30 之間的整數，表示一天。"
    - id: hour
      type: System.Int32
      description: "從 0 到 23 的整數，表示小時。"
    - id: minute
      type: System.Int32
      description: "從 0 到 59 的整數，表示分鐘。"
    - id: second
      type: System.Int32
      description: "從 0 到 59 的整數，表示第二個。"
    - id: millisecond
      type: System.Int32
      description: "從 0 到 999 之間的整數，表示毫秒。"
    - id: era
      type: System.Int32
      description: "整數，表示紀元。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>設定為指定的日期和時間以目前紀元。</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>超出此曆法所支援的範圍。       -或-<code>year</code>超出此曆法所支援的範圍。       -或-<code>month</code>超出此曆法所支援的範圍。       -或-<code>day</code>超出此曆法所支援的範圍。       -或-<code>hour</code>小於零或大於 23。       -或-<code>minute</code>小於零或大於 59。       -或-<code>second</code>小於零或大於 59。       -或-<code>millisecond</code>小於零或大於 999。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HijriCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "使用轉換指定的年份為四位數年份<xref:System.Globalization.HijriCalendar.TwoDigitYearMax*>屬性來判斷適當世紀。</xref:System.Globalization.HijriCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>是以兩位數年份表示時，該 100 年範圍中的最後一年。</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 世紀所找到的兩位數的唯一項目決定`year`該 100 年範圍內。 例如，如果<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>設為 1429，100 年範圍是從 1330年到 1429年; 因此，30 的 2 位數值會解譯為 1330，而 2 位數為 29 值解譯為 1429年。</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>       ToFourDigitYear 支援兩位數年份或四位數年份。 傳遞的兩位數年份值 (小於 100) 將使這個方法將值轉換為四位數的值根據<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>值，表示該適當世紀。</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 如果應用程式提供 ToFourDigitYear 支援行事曆範圍內的四位數年份值，則方法會傳回實際的輸入的值。 如果應用程式提供支援的行事曆範圍四位數值或它提供一個負數值，方法會擲回例外狀況。"
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "兩位數或四位數的整數，表示要轉換的年份。"
    return:
      type: System.Int32
      description: "整數，其中包含的四位數表示<code> year </code>。"
  overload: System.Globalization.HijriCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>超出此曆法所支援的範圍。"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: System.Globalization.HijriCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得或設定以 2 位數年份表示時，該 100 年範圍的最後一年。"
  remarks: "這個屬性允許 2 位數的年份的 4 位數年份正確轉譯。 例如，這個屬性設定為 1429年，100 年範圍是從 1330年 1429年到。 因此，30 的 2 位數值會解譯為 1330，而 2 位數為 29 值解譯為 1429年。       這個屬性的起始值被衍生自 控制台 的地區及語言選項 部分中的設定。 不過，該資訊可以變更<xref:System.AppDomain>.</xref:System.AppDomain>的存留期間 <xref:System.Globalization.HijriCalendar>類別不會偵測系統設定中變更自動。</xref:System.Globalization.HijriCalendar>       應用程式應將此值為 99，表示就其字面 2 位數的年份。 例如，這個屬性設定為 99，100 年範圍是從 0 （不是有效值大部分的行事曆） 到 99。 因此，30 的 2 位數值會解譯為 30。"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "以 2 位數年份表示時，該 100 年範圍的最後一年。"
  overload: System.Globalization.HijriCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此行事曆處於唯讀狀態。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定作業中的值是小於 100 或大於 9666。"
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.HijriCalendar.#ctor
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: System.Globalization.HijriCalendar.HijriCalendar()
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: HijriCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.HijriCalendar.AlgorithmType
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: System.Globalization.HijriCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.HijriCalendar.Eras
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: System.Globalization.HijriCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: System.Globalization.HijriCalendar.GetEra(DateTime)
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetYear(DateTime)
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: System.Globalization.HijriCalendar.HijriAdjustment
- uid: System.Globalization.HijriCalendar.HijriEra
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: System.Globalization.HijriCalendar.HijriEra
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MaxSupportedDateTime
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MinSupportedDateTime
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HijriCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: System.Globalization.HijriCalendar.TwoDigitYearMax
- uid: System.Globalization.HijriCalendar.#ctor*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar
  nameWithType: HijriCalendar.HijriCalendar
- uid: System.Globalization.HijriCalendar.AddMonths*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HijriCalendar.AddMonths
- uid: System.Globalization.HijriCalendar.AddYears*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears
  nameWithType: HijriCalendar.AddYears
- uid: System.Globalization.HijriCalendar.AlgorithmType*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.HijriCalendar.Eras*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
- uid: System.Globalization.HijriCalendar.GetDayOfMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HijriCalendar.GetDayOfMonth
- uid: System.Globalization.HijriCalendar.GetDayOfWeek*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HijriCalendar.GetDayOfWeek
- uid: System.Globalization.HijriCalendar.GetDayOfYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HijriCalendar.GetDayOfYear
- uid: System.Globalization.HijriCalendar.GetDaysInMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HijriCalendar.GetDaysInMonth
- uid: System.Globalization.HijriCalendar.GetDaysInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HijriCalendar.GetDaysInYear
- uid: System.Globalization.HijriCalendar.GetEra*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra
  nameWithType: HijriCalendar.GetEra
- uid: System.Globalization.HijriCalendar.GetLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HijriCalendar.GetLeapMonth
- uid: System.Globalization.HijriCalendar.GetMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HijriCalendar.GetMonth
- uid: System.Globalization.HijriCalendar.GetMonthsInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HijriCalendar.GetMonthsInYear
- uid: System.Globalization.HijriCalendar.GetYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear
  nameWithType: HijriCalendar.GetYear
- uid: System.Globalization.HijriCalendar.HijriAdjustment*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
- uid: System.Globalization.HijriCalendar.IsLeapDay*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HijriCalendar.IsLeapDay
- uid: System.Globalization.HijriCalendar.IsLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HijriCalendar.IsLeapMonth
- uid: System.Globalization.HijriCalendar.IsLeapYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HijriCalendar.IsLeapYear
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
- uid: System.Globalization.HijriCalendar.ToDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HijriCalendar.ToDateTime
- uid: System.Globalization.HijriCalendar.ToFourDigitYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HijriCalendar.ToFourDigitYear
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
