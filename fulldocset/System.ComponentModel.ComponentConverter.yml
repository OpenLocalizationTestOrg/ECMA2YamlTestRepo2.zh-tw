### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ComponentConverter
  id: ComponentConverter
  children:
  - System.ComponentModel.ComponentConverter.#ctor(System.Type)
  - System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ComponentConverter
  nameWithType: ComponentConverter
  fullName: System.ComponentModel.ComponentConverter
  type: Class
  summary: "提供類型轉換器，將元件與其他各種表示相互轉換。"
  remarks: "這個類別會實作<xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>，並<xref:System.ComponentModel.ComponentConverter.GetProperties%2A>傳回整個<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A><xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>方法</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>屬性</xref:System.ComponentModel.ComponentConverter.GetProperties%2A></xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>       如需型別轉換子的詳細資訊，請參閱<xref:System.ComponentModel.TypeConverter>基底類別和[How to︰ 實作類型轉換器](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > 您絕對不要建立 ComponentConverter 的執行個體。 請改為呼叫<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A><xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>方法</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 如需詳細資訊，請參閱<xref:System.ComponentModel.TypeConverter>基底類別</xref:System.ComponentModel.TypeConverter>中的範例       這個轉換器轉換的物件，用於實作<xref:System.ComponentModel.IComponent>並在 [屬性] 視窗中顯示其屬性。</xref:System.ComponentModel.IComponent>"
  syntax:
    content: 'public class ComponentConverter : System.ComponentModel.ReferenceConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ReferenceConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.ComponentConverter&quot;></xref>類別。"
  syntax:
    content: public ComponentConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>表示與這個元件轉換子的型別。</xref:System.Type>"
  overload: System.ComponentModel.ComponentConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值參數所指定元件類型的屬性集合。"
  remarks: "`context`參數可以用來擷取這個轉換子就從叫用的環境的其他資訊。 這可以是`null`，所以一定要檢查。 此外，物件上的屬性可能會傳回`null`。       `attributes`陣列將會用來篩選陣列。 `attributes`可以有混合<xref:System.Type>和<xref:System.Attribute>物件。</xref:System.Attribute> </xref:System.Type> 篩選會定義下列規則:-<xref:System.Type>物件將會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。</xref:System.Type> </xref:System.Type>      -如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。</xref:System.Attribute>      -如果此屬性是的執行個體<xref:System.Attribute>，屬性必須是完全相符，或是將不會包含傳回陣列中。</xref:System.Attribute>      -如果<xref:System.Attribute>指定執行個體和它的預設屬性，就會包含傳回陣列中即使沒有任何執行個體<xref:System.Attribute>屬性中。</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>指定要取得屬性 for...in 元件類型</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "類型的陣列<xref:System.Attribute>，將使用做為篩選條件。</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>為元件所公開的屬性或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>是否有任何屬性。"
  overload: System.ComponentModel.ComponentConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得值，指出這個物件是否支援使用指定的內容屬性。"
  remarks: "`context`參數可以用來擷取這個轉換子就從叫用的環境的其他資訊。 這可以是`null`，所以一定要檢查。 此外，物件上的屬性可能會傳回`null`。"
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> ，提供格式內容。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>因為<xref:System.ComponentModel.TypeConverter.GetProperties*>應該呼叫以尋找這個物件的屬性。</xref:System.ComponentModel.TypeConverter.GetProperties*> 這個方法不會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: System.ComponentModel.ReferenceConverter
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ComponentConverter.#ctor*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter
  nameWithType: ComponentConverter.ComponentConverter
- uid: System.ComponentModel.ComponentConverter.GetProperties*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties
  nameWithType: ComponentConverter.GetProperties
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ComponentConverter.GetPropertiesSupported
