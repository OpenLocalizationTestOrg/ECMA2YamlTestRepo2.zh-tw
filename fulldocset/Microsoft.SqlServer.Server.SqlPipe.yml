### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlPipe
  id: SqlPipe
  children:
  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  langs:
  - csharp
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
  type: Class
  summary: "可讓受管理的預存程序執行同處理序上將結果傳回呼叫端的 SQL Server 資料庫。 這個類別無法被繼承。"
  remarks: "這個類別的執行個體才可以提供給受管理的預存程序，透過<xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>屬性的<xref:Microsoft.SqlServer.Server.SqlContext>類別。</xref:Microsoft.SqlServer.Server.SqlContext> </xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]"
  syntax:
    content: public sealed class SqlPipe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "執行做為參數傳遞的命令，並將結果傳送至用戶端。"
  remarks: "除了任何實際的結果，其他訊息和錯誤也會傳送至用戶端直接。       輸出參數和傳回值不會傳送至用戶端。這些是提供給呼叫者的命令物件的參數集合。       如果命令未繫結到同處理序，<xref:System.InvalidOperationException>就會擲回。</xref:System.InvalidOperationException> 在命令中繫結至跨處理序連接不支援這個方法。       如果錯誤<xref:System.Data.SqlClient.SqlCommand>提交，例外狀況會傳送至管道，但也會傳送複本給呼叫的 managed 程式碼的物件。</xref:System.Data.SqlClient.SqlCommand> 如果呼叫程式碼不會攔截例外狀況，它會散佈到堆疊的 TRANSACT-SQL 程式碼，並在輸出中出現兩次。 如果呼叫的程式碼攔截例外狀況，管道取用者還是會看到錯誤，但不是會有重複的錯誤。"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]"
  syntax:
    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>来執行的物件。"
  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在命令中繫結至跨處理序連接不支援這個方法。"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  id: IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "取得值，指出是否<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>為單一結果集傳送回用戶端的模式。 這個屬性是唯讀的。"
  syntax:
    content: public bool IsSendingResults { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>呼叫方法和<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>中的模式將單一結果集傳回到用戶端; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "傳送單一資料列結果集，直接用戶端或目前的輸出取用者。"
  syntax:
    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: '單一資料列結果集傳送至用戶端︰ <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>物件。'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  id: Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "傳送多資料列的結果直接設定為用戶端或目前的輸出取用者。"
  remarks: "如果<xref:System.Data.SqlClient.SqlDataReader>物件傳入參數具有隱藏資料行，這些資料行不會傳播至結果集傳送至用戶端。</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public void Send (System.Data.SqlClient.SqlDataReader reader);
    parameters:
    - id: reader
      type: System.Data.SqlClient.SqlDataReader
      description: '將多重資料列的結果集傳送至用戶端︰ <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>物件。'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  id: Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "字串訊息將直接傳送至用戶端或目前的輸出取用者。"
  remarks: "訊息字串做為參考用訊息傳送至用戶端。 用戶端應用程式可以接聽訊息，透過不同的機制，根據資料存取應用程式發展介面 (API) 所使用。 例如，如果用戶端使用 ADO.NET，訊息傳輸到<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件。</xref:System.Data.SqlClient.SqlConnection.InfoMessage>"
  example:
  - "The following example uses the Send method to send a message string directly to the client.  \n  \n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]"
  syntax:
    content: public void Send (string message);
    parameters:
    - id: message
      type: System.String
      description: "要傳送至用戶端的訊息字串。"
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> message </code>大於 4000 個字元。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  id: SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "結果集，結束標記，並傳回<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>回初始狀態的執行個體。"
  remarks: "Managed 預存程序可以將結果集傳送至用戶端，不會實作<xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 這個方法中，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>，允許將自訂結果集給用戶端傳送的預存程序。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]"
  syntax:
    content: public void SendResultsEnd ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>不先前呼叫方法。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "將單一資料列的資料傳送回用戶端。"
  remarks: "Managed 預存程序可以將結果集傳送至用戶端，不會實作<xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 這個方法中，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，可讓預存程序，將自訂結果集傳送至用戶端。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>       SendResultsRow 方法會傳回給用戶端傳送單一資料列。 後續呼叫者藉由呼叫 SendResultsRow，一次傳送每個資料列的傳回資料列。 已傳送所有資料列，呼叫之後<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法無須標示結果集的結尾。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]"
  syntax:
    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>来傳送至用戶端的資料列的資料行值的物件。 記錄的結構描述必須符合的中繼資料所描述的結構描述<xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;></xref>傳遞至<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>方法。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>不先前呼叫方法。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "標記的結果集送回給用戶端，開頭，並使用記錄的參數來建構說明結果集的中繼資料。"
  remarks: "Managed 預存程序可以將結果集傳送至用戶端，不會實作<xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 這個方法中，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允許將自訂結果集給用戶端傳送的預存程序。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       SendResultsStart 方法標記開頭的結果集，並使用記錄的參數來建構說明結果集的中繼資料。 所有後續資料列，使用傳送<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，必須符合該中繼資料定義。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       請注意，之後才呼叫 SendResultsStart，<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>可以呼叫。</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> <xref:Microsoft.SqlServer.Server.SqlPipe>擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:Microsoft.SqlServer.Server.SqlPipe>相同執行個體中的任何其他方法 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>設定<xref:Microsoft.SqlServer.Server.SqlPipe>還原為初始狀態可以呼叫其他方法的位置。</xref:Microsoft.SqlServer.Server.SqlPipe></xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>       從執行 CLR 執行 TRANSACT-SQL 傳回控制項之後，請勿嘗試使用靜態或本機變數初始化為 CLR 記憶體。 例如，不要儲存在程序的執行個體類別，例如`SQLDataRecord`，用來傳回從 CLR 的控制項之後。 其中一個例外是`SQLMetaData`程序類別中。"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]"
  syntax:
    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref>物件中繼資料是從中擷取，並且用來描述結果集。"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> record </code>沒有資料行，或尚未初始化。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "以外的方法<> *> 或<> *> SendResultsStart 方法之後呼叫。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlDataRecord
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlDataRecord
  nameWithType: SqlDataRecord
  fullName: Microsoft.SqlServer.Server.SqlDataRecord
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend
  nameWithType: SqlPipe.ExecuteAndSend
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
- uid: Microsoft.SqlServer.Server.SqlPipe.Send*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send
  nameWithType: SqlPipe.Send
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd
  nameWithType: SqlPipe.SendResultsEnd
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow
  nameWithType: SqlPipe.SendResultsRow
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart
  nameWithType: SqlPipe.SendResultsStart
