### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogReader
  id: EventLogReader
  children:
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  - System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  langs:
  - csharp
  name: EventLogReader
  nameWithType: EventLogReader
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader
  type: Class
  summary: "可讓您根據 事件查詢事件記錄檔中讀取事件。 此物件所讀取的事件會傳回做為<xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref>物件。"
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'
  syntax:
    content: 'public class EventLogReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref>類別藉由指定 事件查詢。"
  remarks: "使用<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>方法來從這個物件擷取的事件。</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "用來擷取事件的事件查詢。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref>類別藉由指定 作用中的事件記錄檔，來擷取事件的來源。"
  remarks: "使用<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>方法來從這個物件擷取的事件。</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path);
    parameters:
    - id: path
      type: System.String
      description: "若要擷取的事件的事件記錄檔名稱。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref>類別藉由指定的事件查詢和書籤做為啟動查詢的位置。"
  remarks: "使用<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>方法來從這個物件擷取的事件。</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "用來擷取事件的事件查詢。"
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "書籤 （預留位置） 做為事件記錄檔或事件資料流中的開始位置。 只記錄事件之後會查詢所傳回的書籤事件。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref>藉由指定的事件記錄檔擷取事件的來源或擷取的事件記錄檔的路徑名稱的類別。"
  remarks: "使用<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>方法來從這個物件擷取的事件。</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: path
      type: System.String
      description: "事件記錄檔擷取事件的來源或擷取事件的來源的事件記錄檔的路徑名稱。"
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "指定是否使用 path 參數中的字串會指定事件記錄檔或事件記錄檔的路徑名稱。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  id: BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得或設定從每個讀取作業的事件資料流擷取的事件數目。"
  syntax:
    content: public int BatchSize { get; set; }
    return:
      type: System.Int32
      description: "傳回整數值。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  id: CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取消目前的查詢作業。"
  syntax:
    content: public void CancelReading ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "釋放這個物件所使用的所有資源。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "釋放這個物件時，所使用的 unmanaged 的資源並選擇性釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  id: LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "取得每個事件記錄檔或記錄檔與事件中的查詢此物件相關聯的狀態。"
  syntax:
    content: public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus> LogStatus { get; }
    return:
      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
      description: "會傳回一份<xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogStatus&quot;></xref>物件都包含有關事件記錄檔與事件中的查詢此物件相關聯的狀態資訊。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  id: ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "讀取事件查詢，這個物件中傳回的下一個事件。"
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069).'
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "傳回<xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref>物件。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  id: ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "讀取事件查詢，這個物件中傳回的下一個事件。"
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "允許取消作業之前，先執行讀取的作業的最大時間。"
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "傳回<xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref>物件。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "變更事件資料流讀取下一個事件來自於藉由指定書籤事件位置中的位置。 沒有記錄之前，將會擷取書籤事件的事件。"
  remarks: "您可以使用此函式只能在從系統管理員或操作通道，或從.evtx 記錄檔的結果集上。 此函式不支援分析和偵錯通道，或 etl 檔案。"
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "書籤 （預留位置） 做為事件記錄檔或事件資料流中的開始位置。 只有事件之後會查詢所傳回的書籤事件已記錄。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "變更位置在事件資料流讀取下一個事件將會來自何處藉由指定書籤事件和事件，從書籤中位移的數目。 沒有記錄之前將會擷取書籤，加上位移的事件。"
  remarks: "您可以使用此函式只能在從系統管理員或操作通道，或從.evtx 記錄檔的結果集上。 此函式不支援分析和偵錯通道，或 etl 檔案。"
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "書籤 （預留位置） 做為事件記錄檔或事件資料流中的開始位置。 只有事件之後會查詢所傳回的書籤事件已記錄。"
    - id: offset
      type: System.Int64
      description: "若要變更書籤的位置的事件數目位移。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  id: Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "變更事件資料流讀取下一個事件來自於藉由指定的開始位置和距離的開始位置的位移位置中的位置。 沒有記錄之前將擷取的開始位置加上位移的事件。"
  remarks: "您可以使用此函式只能在從系統管理員或操作通道，或從.evtx 記錄檔的結果集上。 此函式不支援分析和偵錯通道，或 etl 檔案。"
  syntax:
    content: public void Seek (System.IO.SeekOrigin origin, long offset);
    parameters:
    - id: origin
      type: System.IO.SeekOrigin
      description: "中的值<xref:System.IO.SeekOrigin>列舉會定義其中要啟動 查詢事件的事件資料流中。</xref:System.IO.SeekOrigin>"
    - id: offset
      type: System.Int64
      description: "若要加入到來源的事件位移的數目。"
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogQuery
  nameWithType: EventLogQuery
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventBookmark
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventBookmark
  nameWithType: EventBookmark
  fullName: System.Diagnostics.Eventing.Reader.EventBookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EventLogStatus>
  nameWithType: IList<EventLogStatus>
  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Eventing.Reader.EventLogStatus
    name: EventLogStatus
    nameWithType: EventLogStatus
    fullName: EventLogStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
- uid: System.Diagnostics.Eventing.Reader.EventRecord
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: System.Diagnostics.Eventing.Reader.EventRecord
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader
  nameWithType: EventLogReader.EventLogReader
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading
  nameWithType: EventLogReader.CancelReading
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose
  nameWithType: EventLogReader.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent
  nameWithType: EventLogReader.ReadEvent
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek
  nameWithType: EventLogReader.Seek
