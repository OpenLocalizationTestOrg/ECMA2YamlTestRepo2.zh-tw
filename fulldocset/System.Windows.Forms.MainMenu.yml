### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MainMenu
  id: MainMenu
  children:
  - System.Windows.Forms.MainMenu.#ctor
  - System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MainMenu.CloneMenu
  - System.Windows.Forms.MainMenu.Collapse
  - System.Windows.Forms.MainMenu.CreateMenuHandle
  - System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  - System.Windows.Forms.MainMenu.GetForm
  - System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  - System.Windows.Forms.MainMenu.RightToLeft
  - System.Windows.Forms.MainMenu.ToString
  langs:
  - csharp
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
  type: Class
  summary: "代表表單功能表結構。 雖然<xref href=&quot;System.Windows.Forms.MenuStrip&quot;></xref>取代，並將功能加入至前一版的 MainMenu 控制項，MainMenu 保留的回溯相容性及供未來使用您選擇。"
  remarks: "MainMenu 控制項代表表單功能表結構的容器。 功能表組成<xref:System.Windows.Forms.MenuItem>代表個別的功能表命令，功能表結構中的物件。</xref:System.Windows.Forms.MenuItem> 每個<xref:System.Windows.Forms.MenuItem>可以是您的應用程式的命令或其他子功能表項目的父功能表。</xref:System.Windows.Forms.MenuItem> 要繫結<xref:System.Windows.Forms.Form>，會顯示它，請指派<xref:System.Windows.Forms.Form.Menu%2A>屬性<xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Menu%2A> MainMenu</xref:System.Windows.Forms.Form> MainMenu       對於應用程式將會有多個語言的支援，您可以使用<xref:System.Windows.Forms.MainMenu.RightToLeft%2A>屬性顯示的功能表由右至左支援阿拉伯文等語言的文字。</xref:System.Windows.Forms.MainMenu.RightToLeft%2A>       您可以建立不同的 MainMenu 物件來代表不同的功能表結構，為您的表單。 如果您想要重複使用包含在特定 MainMenu 的功能表結構，您可以使用其<xref:System.Windows.Forms.MainMenu.CloneMenu%2A>方法來建立複本。</xref:System.Windows.Forms.MainMenu.CloneMenu%2A> 功能表結構的複本之後，您可以針對新的功能表結構中進行適當的修改。      > [!NOTE] > 剪下和貼上功能表項目從一個表單設計工具中的另一個可能無法如預期運作貼入的表單是否有定義任何功能表項目。"
  example:
  - "The following code example creates a MainMenu, assigns two <xref:System.Windows.Forms.MenuItem> objects to the MainMenu and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_9_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_9_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_9_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.MainMenu")]

      public class MainMenu : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>類別，而不指定任何功能表項目。"
  remarks: "這個版本的建構函式會建立<xref:System.Windows.Forms.MainMenu>不含任何指定<xref:System.Windows.Forms.MenuItem>物件。</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu> 若要加入至控制項的功能表項目會使用這個建構函式可接受的陣列中的其他版本<xref:System.Windows.Forms.MenuItem>物件做為其參數或使用<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>方法<xref:System.Windows.Forms.Menu.MenuItems%2A>屬性。</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> </xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_20_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_20_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_20_1.cpp)]"
  syntax:
    content: public MainMenu ();
    parameters: []
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>類別使用指定的容器。"
  syntax:
    content: public MainMenu (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>代表容器的<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>與指定的一組<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>物件。"
  remarks: "您可以使用這個建構函式來指派陣列<xref:System.Windows.Forms.MenuItem>物件加入至<xref:System.Windows.Forms.MainMenu>在其建立時間。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> 之後<xref:System.Windows.Forms.MainMenu>已建立您可以加入其他<xref:System.Windows.Forms.MenuItem>物件加入至<xref:System.Windows.Forms.MainMenu>使用<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>方法<xref:System.Windows.Forms.Menu.MenuItems%2A>屬性。</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, and assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> using this version of the constructor. The example then binds the <xref:System.Windows.Forms.MainMenu> to a <xref:System.Windows.Forms.Form>. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cpp[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_24_1.cpp)]\n [!code-cs[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_24_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_24_1.vb)]"
  syntax:
    content: public MainMenu (System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "陣列<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>會加入到物件<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CloneMenu
  id: CloneMenu
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "建立新<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>也就是目前的複本<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  remarks: "您可以使用這個方法來建立一份儲存<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>的功能表結構 您可以使用這個方法重複使用儲存<xref:System.Windows.Forms.MainMenu>為新的<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>基礎</xref:System.Windows.Forms.MainMenu>的功能表結構 例如，如果您想要建立功能表結構具有相同的功能表項目，為現有，<xref:System.Windows.Forms.MainMenu>但也會有其他<xref:System.Windows.Forms.MenuItem>物件加入至其中，您可以使用建立的原始複本<xref:System.Windows.Forms.MainMenu>並加入新的<xref:System.Windows.Forms.MenuItem>物件至複製<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu> CloneMenu 方法</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MainMenu>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the CloneMenu method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_21_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_21_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_21_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.MainMenu CloneMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>表示複製的功能表。"
  overload: System.Windows.Forms.MainMenu.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Collapse
  id: Collapse
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "發生於主功能表摺疊。"
  remarks: "如需處理事件的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Collapse event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MainMenu> named `MainMenu1`. Then ensure that the event handler is associated with the Collapse event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#483](~/add/codesnippet/csharp/e-system.windows.forms.m_9_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#483](~/add/codesnippet/visualbasic/e-system.windows.forms.m_9_1.vb)]"
  syntax:
    content: public event EventHandler Collapse;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  id: CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "建立新功能表的控制代碼。"
  syntax:
    content: protected override IntPtr CreateMenuHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "如果方法成功; 功能表的控制代碼否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.MainMenu.CreateMenuHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "處置的資源，所使用的記憶體以外<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  remarks: "當您完成使用<xref:System.Windows.Forms.MainMenu>.</xref:System.Windows.Forms.MainMenu>呼叫 Dispose Dispose 方法會使<xref:System.Windows.Forms.MainMenu>中無法使用的狀態。</xref:System.Windows.Forms.MainMenu> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Windows.Forms.MainMenu>讓它所佔用的記憶體可由記憶體回收收回。</xref:System.Windows.Forms.MainMenu>      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu> 否則，資源<xref:System.Windows.Forms.MainMenu>是使用之前，將不會釋放記憶體回收集合呼叫<xref:System.Windows.Forms.MainMenu>物件的解構函式。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MainMenu>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Windows.Forms.MainMenu.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.GetForm
  id: GetForm
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得<xref href=&quot;System.Windows.Forms.Form&quot;> </xref> ，其中包含此控制項。"
  remarks: "此屬性可讓您判斷特定<xref:System.Windows.Forms.MainMenu>表單成為父代。</xref:System.Windows.Forms.MainMenu> 通常是屬性時使用多個<xref:System.Windows.Forms.MainMenu>物件使用表單上，您需要判斷哪一個目前正由表單。</xref:System.Windows.Forms.MainMenu>"
  example:
  - "The following code example uses the GetForm method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to GetForm does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_11_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_11_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form GetForm ();
    parameters: []
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>也就是此控制項的容器。 傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>目前未裝載於表單。"
  overload: System.Windows.Forms.MainMenu.GetForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  id: OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.MainMenu.Collapse&quot;></xref>事件。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnCollapse 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnCollapse (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Windows.Forms.MainMenu.OnCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得或設定是否由右至左顯示控制項所顯示的文字。"
  remarks: "此屬性可讓您的功能表，以支援由右至左書寫的語言。 當這個屬性設定為`RightToLeft.Yes`，功能表項目文字會顯示由右至左，而不是預設從左到右的方法。      > [!NOTE] > 如需有關如何啟用由右至左對齊會影響 Windows Form 控制項的詳細資訊，請參閱<xref:System.Windows.Forms.Control.RightToLeft%2A>屬性。</xref:System.Windows.Forms.Control.RightToLeft%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The example code then sets the RightToLeft property to `RightToLeft.Yes` on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_36_1.cs)]\n [!code-cpp[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_36_1.cpp)]\n [!code-vb[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_36_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "其中一個<xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref>值。"
  overload: System.Windows.Forms.MainMenu.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指派給屬性的值不是有效的成員<xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref>列舉型別。"
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.ToString
  id: ToString
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "傳回字串，代表<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  remarks: "傳回字串包含的類型和所傳回的字串<xref:System.Windows.Forms.Form.ToString%2A>方法如果<xref:System.Windows.Forms.MainMenu>指派給表單。</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Form.ToString%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，代表目前<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>。"
  overload: System.Windows.Forms.MainMenu.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.MainMenu.#ctor
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.MainMenu.CloneMenu
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.MainMenu.Collapse
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.MainMenu.GetForm
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.MainMenu.RightToLeft
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.MainMenu.#ctor*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu.MainMenu
- uid: System.Windows.Forms.MainMenu.CloneMenu*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu
  nameWithType: MainMenu.CloneMenu
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle
  nameWithType: MainMenu.CreateMenuHandle
- uid: System.Windows.Forms.MainMenu.Dispose*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose
  nameWithType: MainMenu.Dispose
- uid: System.Windows.Forms.MainMenu.GetForm*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm
  nameWithType: MainMenu.GetForm
- uid: System.Windows.Forms.MainMenu.OnCollapse*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse
  nameWithType: MainMenu.OnCollapse
- uid: System.Windows.Forms.MainMenu.RightToLeft*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString
  nameWithType: MainMenu.ToString
