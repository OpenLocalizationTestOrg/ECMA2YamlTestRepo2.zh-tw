### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SecurityToken
  id: X509SecurityToken
  children:
  - System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  - System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.X509SecurityToken.Certificate
  - System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.X509SecurityToken.Dispose
  - System.IdentityModel.Tokens.X509SecurityToken.Id
  - System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  - System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  - System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  langs:
  - csharp
  name: X509SecurityToken
  nameWithType: X509SecurityToken
  fullName: System.IdentityModel.Tokens.X509SecurityToken
  type: Class
  summary: "表示 X.509 憑證為基礎的安全性權杖。"
  remarks: "取得 X.509 憑證的詳細資訊，請存取<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>"
  syntax:
    content: 'public class X509SecurityToken : System.IdentityModel.Tokens.SecurityToken, IDisposable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: X509SecurityToken(X509Certificate2)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>類別使用指定的 X.509 憑證。"
  remarks: "這個建構函式建立的唯一識別碼<xref:System.IdentityModel.Tokens.X509SecurityToken>安全性權杖，並將該值指派<xref:System.IdentityModel.Tokens.X509SecurityToken.Id%2A>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public X509SecurityToken (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含 X.509 憑證。 設定<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)'
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: X509SecurityToken(X509Certificate2,String)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初始化的新執行個體<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>類別使用指定的 X.509 憑證和唯一識別碼。"
  syntax:
    content: public X509SecurityToken (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string id);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含 X.509 憑證。 設定<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>"
    - id: id
      type: System.String
      description: "安全性權杖的唯一識別碼。 設定<xref:System.IdentityModel.Tokens.X509SecurityToken.Id*>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或-<code>id</code>為 null。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "即將加入。"
  overload: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  id: Certificate
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得與安全性權杖相關聯的 X.509 憑證。"
  remarks: "要取得 X.509 憑證的相關詳細資料的憑證屬性相關聯的使用<xref:System.IdentityModel.Tokens.X509SecurityToken>安全性權杖。</xref:System.IdentityModel.Tokens.X509SecurityToken> 例如，X.509 憑證的指紋可以使用存取<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint%2A>屬性。</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> ，其中包含 X.509 憑證。"
  overload: System.IdentityModel.Tokens.X509SecurityToken.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "即將加入。"
  overload: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose
  id: Dispose
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509SecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "所使用的資源全部釋出<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>。"
  remarks: "當您完成使用<xref:System.IdentityModel.Tokens.X509SecurityToken>.</xref:System.IdentityModel.Tokens.X509SecurityToken>呼叫 Dispose 方法 Dispose 方法會使<xref:System.IdentityModel.Tokens.X509SecurityToken>中無法使用的狀態。</xref:System.IdentityModel.Tokens.X509SecurityToken> 在呼叫 Dispose 方法之後，您必須釋放所有參考<xref:System.IdentityModel.Tokens.X509SecurityToken>讓記憶體回收行程可以回收記憶體的<xref:System.IdentityModel.Tokens.X509SecurityToken>所佔用。</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.X509SecurityToken>      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.IdentityModel.Tokens.X509SecurityToken>。</xref:System.IdentityModel.Tokens.X509SecurityToken> 否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<xref:System.IdentityModel.Tokens.X509SecurityToken>物件的`Finalize`方法。</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityToken.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: X509SecurityToken.Id
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得安全性權杖的唯一識別碼。"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "安全性權杖的唯一識別碼。"
  overload: System.IdentityModel.Tokens.X509SecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "傳回值，指出這個執行個體的金鑰識別碼是否等於指定的金鑰識別碼。"
  remarks: "MatchesKeyIdentifierClause 方法比對準則中的 X.509 憑證中<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>屬性根據類型`keyIdentifierClause`參數。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> 下表詳細說明符合的項目。      |金鑰識別碼子句型別 |符合的項目 |  |--------------------------------|---------------------|  |<xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>|<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber%2A>方法所傳回的值<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName%2A>屬性和簽發者序號。 |  |<xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>|從<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>方法傳回的資料。 |  |<xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>|<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions%2A>屬性中的主體金鑰識別碼延伸符合。 |  |<xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>|所傳回的指紋<xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A>方法。 |</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A> </xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions%2A> </xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> </xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName%2A></xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber%2A> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>要與這個執行個體相比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>keyIdentifierClause</code> is one of the <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&quot;></xref>, or <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref> types and the key identifier clauses match; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得與安全性權杖相關聯的密碼編譯金鑰。"
  remarks: "若要設定的密碼編譯金鑰來保護 SOAP 訊息的這個安全性權杖使用 SecurityKeys 屬性。 索引鍵可用，以及其他項目，來數位簽署或加密 SOAP 訊息。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型別的<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> ，其中包含與安全性權杖相關聯的索引鍵的集合。"
  overload: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  id: ThrowIfDisposed
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ThrowIfDisposed()
  nameWithType: X509SecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "如果已經對這個執行個體呼叫 ThrowIfDisposed 方法，就會擲回例外狀況。"
  syntax:
    content: protected void ThrowIfDisposed ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "這個執行個體已呼叫 ThrowIfDisposed 方法。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得這個安全性權杖無效的時間的第一個瞬間。"
  remarks: "晚於 ValidFrom 屬性指定了以國際標準時間 (UTC)，且是值<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore%2A>屬性中指定的 X.509 憑證<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore%2A>"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>表示中的這個安全性權杖有效的第一個瞬間。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得最後一個瞬間這個安全性權杖無效。"
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom%2A>屬性指定了以國際標準時間 (UTC)，且是值<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter%2A>屬性中指定的 X.509 憑證<xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>屬性。</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter%2A> </xref:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom%2A>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>表示的最後一個瞬間這個安全性權杖無效。</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken(X509Certificate2)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken(X509Certificate2,String)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Certificate
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Dispose()
  nameWithType: X509SecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Dispose()
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Id
  nameWithType: X509SecurityToken.Id
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Id
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: X509SecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed()
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken
  nameWithType: X509SecurityToken.X509SecurityToken
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Dispose
  nameWithType: X509SecurityToken.Dispose
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Id
  nameWithType: X509SecurityToken.Id
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ThrowIfDisposed
  nameWithType: X509SecurityToken.ThrowIfDisposed
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
