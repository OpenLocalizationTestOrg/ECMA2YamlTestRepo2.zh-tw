### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FieldTemplateFactory
  id: FieldTemplateFactory
  children:
  - System.Web.DynamicData.FieldTemplateFactory.#ctor
  - System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  - System.Web.DynamicData.FieldTemplateFactory.Model
  - System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory
  fullName: System.Web.DynamicData.FieldTemplateFactory
  type: Class
  summary: "建立欄位的範本。"
  remarks: "根據預設，這個類別會實作<xref:System.Web.DynamicData.IFieldTemplateFactory>介面，並使用<xref:System.Web.UI.UserControl>類別來建立欄位的範本。</xref:System.Web.UI.UserControl> </xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: 'public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory'
  inheritance:
  - System.Object
  implements:
  - System.Web.DynamicData.IFieldTemplateFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初始化的執行個體<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>類別。"
  syntax:
    content: public FieldTemplateFactory ();
    parameters: []
  overload: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建置欄位範本欄位樣板名稱和模式為基礎的虛擬路徑。"
  remarks: "根據預設，這個方法會建置至欄位樣板的虛擬路徑所使用的範本名稱，附加模式，然後將副檔名為.ascx。 比方說，如果`templateName`是 MyFieldTemplate 和`mode`為編輯的虛擬路徑會是 MyFieldTemplate_Edit.ascx，在範本資料夾的虛擬路徑所指定的資料夾中。"
  syntax:
    content: public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: templateName
      type: System.String
      description: "若要使用範本的名稱。"
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的欄位樣板只適用於資料行。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的欄位樣板的顯示模式。"
    return:
      type: System.String
      description: "欄位範本的虛擬路徑。"
  overload: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>templateName</code>為 null。"
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "建立執行個體欄位的範本使用<xref href=&quot;System.Web.DynamicData.MetaColumn&quot;></xref>類別<xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;></xref>類別和<xref:System.Web.DynamicData.MetaColumn.UIHint*>屬性。</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  syntax:
    content: public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的欄位樣板只適用於資料行。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的欄位樣板的顯示模式。"
    - id: uiHint
      type: System.String
      description: "指定要使用的欄位樣板。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "介面的執行個體， <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>類別會實作。"
  overload: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "決定欄位樣板的虛擬路徑。"
  remarks: "動態資料欄位的範本會建立在動態/FieldTemplates/資料夾，但是您可以在欄位範本建立新的資料夾。 這個方法會判斷包含使用指定的參數欄位範本資料夾的虛擬路徑。"
  syntax:
    content: public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "指定的欄位樣板只適用於資料行。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "指定的欄位樣板為唯讀模式的顯示模式、 編輯或插入。"
    - id: uiHint
      type: System.String
      description: "指定要使用的欄位樣板。 此欄位樣板的查詢參數會影響。"
    return:
      type: System.String
      description: "欄位範本的虛擬路徑。"
  overload: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "將<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>與<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  syntax:
    content: public virtual void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "指定資料模型關聯<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  id: Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>相關聯<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>類別"
  remarks: "<xref:System.Web.DynamicData.MetaModel>類別是抽象類別，表示資料庫和網域物件之間的對應。</xref:System.Web.DynamicData.MetaModel> 動態資料會提供一組代表模型的類別 （資料模型）。 類別會透過物件關聯式設計工具 （O/R 設計工具） 產生。 您可以使用 LINQ to SQL 類別範本來產生這些類別。 這個屬性用來取得和設定與<xref:System.Web.DynamicData.FieldTemplateFactory>類別</xref:System.Web.DynamicData.FieldTemplateFactory>相關聯的資料模型"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "相關聯的模型<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "變更資料行的模式。"
  remarks: "動態資料呈現在唯讀模式，插入的資料，或編輯模式。 這個方法可控制在資料行中呈現的模式。 例如，編輯模式的要求如果變更為 Read Only 資料行是主索引鍵資料行。 自動產生與外部索引鍵一部分的主索引鍵的資料行不能編輯。"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "資料行，其所需的欄位樣板。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "模式 （唯讀、 編輯或插入） 變更為。"
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "資料行呈現模式。"
  overload: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  id: TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定要在其中建立欄位範本資料夾。"
  remarks: "欄位範本建立在預設資料夾為 /DynamicData/FieldTemplates /。 此資料夾包含預設的欄位樣板和您所建立的自訂欄位樣板。 如果您建立，並指定欄位範本的其他資料夾，動態資料會在您指定的資料夾中建立欄位範本。 如需欄位範本的詳細資訊，請參閱[ASP.NET 動態資料 Scaffolding](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string TemplateFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "包含欄位範本資料夾的路徑。"
  overload: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory.FieldTemplateFactory
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath
  nameWithType: FieldTemplateFactory.BuildVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: FieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: FieldTemplateFactory.Initialize
- uid: System.Web.DynamicData.FieldTemplateFactory.Model*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode
  nameWithType: FieldTemplateFactory.PreprocessMode
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
