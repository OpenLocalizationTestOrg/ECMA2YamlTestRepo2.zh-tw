### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntryType
  id: AccessControlEntryType
  children:
  - System.Messaging.AccessControlEntryType.Allow
  - System.Messaging.AccessControlEntryType.Deny
  - System.Messaging.AccessControlEntryType.Revoke
  - System.Messaging.AccessControlEntryType.Set
  langs:
  - csharp
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
  type: Enum
  summary: "指定是否要允許、 拒絕或撤銷存取權限的信任者。"
  remarks: "當您使用的<xref:System.Messaging.AccessControlEntry>類別，即可指定新的存取權限的信任者時，設定其<xref:System.Messaging.AccessControlEntry.EntryType%2A>屬性以描述要授與權限或拒絕它。</xref:System.Messaging.AccessControlEntry.EntryType%2A> </xref:System.Messaging.AccessControlEntry> 此外，您可以定義新的權限會附加至現有的清單 （如果您要為其加入或移除存取權限的內容中已存在之信任項目） 或新的權限會覆寫，並刪除任何先前定義的權限。       當建立新`Allow`項目，可能會有預先存在`Deny`相同信任項目會優先，而且必須處理的項目。 同樣地，當建立新`Deny`項目，可能有現有`Allow`優先順序的項目。 存取權限的套用順序的相關資訊，請參閱<xref:System.Messaging.AccessControlList>.</xref:System.Messaging.AccessControlList>"
  syntax:
    content: public enum AccessControlEntryType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Messaging.AccessControlEntryType.Allow
  id: Allow
  parent: System.Messaging.AccessControlEntryType
  langs:
  - csharp
  name: Allow
  nameWithType: AccessControlEntryType.Allow
  fullName: System.Messaging.AccessControlEntryType.Allow
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "允許存取的項目，讓新的權限加入至現有的任何權限之信任項目都有。"
  syntax:
    content: Allow
    return:
      type: System.Messaging.AccessControlEntryType
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntryType.Deny
  id: Deny
  parent: System.Messaging.AccessControlEntryType
  langs:
  - csharp
  name: Deny
  nameWithType: AccessControlEntryType.Deny
  fullName: System.Messaging.AccessControlEntryType.Deny
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "拒絕存取的項目目前沒有任何的指定權限被拒絕權限之信任項目。"
  syntax:
    content: Deny
    return:
      type: System.Messaging.AccessControlEntryType
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntryType.Revoke
  id: Revoke
  parent: System.Messaging.AccessControlEntryType
  langs:
  - csharp
  name: Revoke
  nameWithType: AccessControlEntryType.Revoke
  fullName: System.Messaging.AccessControlEntryType.Revoke
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "移除所有現有的項目允許或拒絕權限指定的信任項。"
  syntax:
    content: Revoke
    return:
      type: System.Messaging.AccessControlEntryType
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntryType.Set
  id: Set
  parent: System.Messaging.AccessControlEntryType
  langs:
  - csharp
  name: Set
  nameWithType: AccessControlEntryType.Set
  fullName: System.Messaging.AccessControlEntryType.Set
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "允許存取的項目，類似於<xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>，不同之處在於新的項目允許的指定權限。 使用它，就會捨棄任何現有的權限，包括所有現有的拒絕存取的項目之信任項目。"
  syntax:
    content: Set
    return:
      type: System.Messaging.AccessControlEntryType
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Messaging.AccessControlEntryType.Allow
  parent: System.Messaging.AccessControlEntryType
  isExternal: false
  name: Allow
  nameWithType: AccessControlEntryType.Allow
  fullName: System.Messaging.AccessControlEntryType.Allow
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntryType.Deny
  parent: System.Messaging.AccessControlEntryType
  isExternal: false
  name: Deny
  nameWithType: AccessControlEntryType.Deny
  fullName: System.Messaging.AccessControlEntryType.Deny
- uid: System.Messaging.AccessControlEntryType.Revoke
  parent: System.Messaging.AccessControlEntryType
  isExternal: false
  name: Revoke
  nameWithType: AccessControlEntryType.Revoke
  fullName: System.Messaging.AccessControlEntryType.Revoke
- uid: System.Messaging.AccessControlEntryType.Set
  parent: System.Messaging.AccessControlEntryType
  isExternal: false
  name: Set
  nameWithType: AccessControlEntryType.Set
  fullName: System.Messaging.AccessControlEntryType.Set
