### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.SineEase
  id: SineEase
  children:
  - System.Windows.Media.Animation.SineEase.#ctor
  - System.Windows.Media.Animation.SineEase.CreateInstanceCore
  - System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: SineEase
  nameWithType: SineEase
  fullName: System.Windows.Media.Animation.SineEase
  type: Class
  summary: "代表建立動畫之 easing 函式加速或減速使用正弦的公式 （請參閱下面的備註）。"
  remarks: "您可以控制時的動畫加速、 減速或兩者都指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 下圖示範不同的值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>其中*f*(*t*) 表示的動畫進度和*t*代表時間。</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![使用不同 EasingMode 值的 SineEase](~/add/media/sineease-graph.png &quot;不同 EasingMode 值的 SineEase&quot;)此函式所使用的公式如下所示。       ![Sineease 的公式](~/add/media/sine-formula.png &quot;sineease 的公式&quot;)以外，您可以內容探索如何使用下列的 Silverlight 範例 SineEase 數個其他加/減速函數。       [執行此範例](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)      >  [!NOTE] > 您可以使用<xref:System.Windows.Media.Animation.PowerEase>建立相同的行為<xref:System.Windows.Media.Animation.CubicEase>， <xref:System.Windows.Media.Animation.QuadraticEase>， <xref:System.Windows.Media.Animation.QuarticEase>，和<xref:System.Windows.Media.Animation.QuinticEase>使用<xref:System.Windows.Media.Animation.PowerEase.Power%2A>屬性。</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.QuinticEase> </xref:System.Windows.Media.Animation.QuarticEase> </xref:System.Windows.Media.Animation.QuadraticEase> </xref:System.Windows.Media.Animation.CubicEase> </xref:System.Windows.Media.Animation.PowerEase> 例如，如果您想要使用<xref:System.Windows.Media.Animation.PowerEase>替換<xref:System.Windows.Media.Animation.CubicEase>，指定<xref:System.Windows.Media.Animation.PowerEase.Power%2A>值為 3。</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.CubicEase> </xref:System.Windows.Media.Animation.PowerEase>       除了使用加/減速函數包含在執行階段中，您可以透過繼承自<xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>建立您自己自訂的加/減速函數      <a name=&quot;xamlObjectElementUsage_SineEase&quot;></a># # XAML 物件項目用法```   <SineEase .../>   ```"
  example:
  - "The following example applies a SineEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[SineEase#SineEase](~/add/codesnippet/xaml/sineease/window1.xaml#sineease)]\n [!code-xml[SineEase#SineEase](~/add/codesnippet/xaml/t-system.windows.media.a_21_1.xaml)]"
  syntax:
    content: 'public class SineEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.SineEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.SineEase
  langs:
  - csharp
  name: SineEase()
  nameWithType: SineEase.SineEase()
  fullName: System.Windows.Media.Animation.SineEase.SineEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.SineEase&quot;></xref>類別。"
  syntax:
    content: public SineEase ();
    parameters: []
  overload: System.Windows.Media.Animation.SineEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.SineEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.SineEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: SineEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.SineEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立的新執行個體<xref href=&quot;System.Windows.Freezable&quot;></xref>衍生的類別。 當建立衍生的類別時，您必須覆寫這個方法。"
  remarks: "<xref:System.Windows.Freezable>.</xref:System.Windows.Freezable>間接繼承動畫類別 因此，您必須覆寫<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>建構自訂動畫物件的方法。</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新的執行個體。"
  overload: System.Windows.Media.Animation.SineEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.SineEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: SineEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.SineEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "提供您可以覆寫以產生的 easing 函式的邏輯部分<xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;></xref>自訂 easing 函式的模式。"
  remarks: "這個方法來轉換控制<xref:System.Windows.Media.Animation.EasingMode><xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>的大小寫</xref:System.Windows.Media.Animation.EasingMode>的動畫的速度的標準化的時間       您只需要指定您加/減速函數<xref:System.Windows.Media.Animation.EasingMode>因為大小寫的實作<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法轉換`normalizedTime`如<xref:System.Windows.Media.Animation.EasingMode>和<xref:System.Windows.Media.Animation.EasingMode>案例。</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "動畫的標準化的時間 （進度）。"
    return:
      type: System.Double
      description: "Double 值，表示已轉換的進度。"
  overload: System.Windows.Media.Animation.SineEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.SineEase.#ctor
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: SineEase()
  nameWithType: SineEase.SineEase()
  fullName: System.Windows.Media.Animation.SineEase.SineEase()
- uid: System.Windows.Media.Animation.SineEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: SineEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.SineEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: SineEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.SineEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.SineEase.#ctor*
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: SineEase
  nameWithType: SineEase.SineEase
- uid: System.Windows.Media.Animation.SineEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: SineEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.SineEase.EaseInCore*
  parent: System.Windows.Media.Animation.SineEase
  isExternal: false
  name: EaseInCore
  nameWithType: SineEase.EaseInCore
