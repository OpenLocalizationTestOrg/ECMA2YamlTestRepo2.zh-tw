### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute
  id: SqlMethodAttribute
  children:
  - Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  - Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  - Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  - Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  langs:
  - csharp
  name: SqlMethodAttribute
  nameWithType: SqlMethodAttribute
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute
  type: Class
  summary: "表示方法的決定性和資料存取屬性或屬性上的使用者定義的型別 (UDT)。 在屬性上的屬性會反映此類型註冊 SQL server 時所使用的實體特性。"
  remarks: "屬性，SqlMethodAttribute 應該 setter 或 getter 上直接使用。       SqlMethodAttribute 繼承自<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>，因此 SqlMethodAttribute 繼承`FillRowMethodName`和`TableDefinition`欄位從<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>.</xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> </xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> 請注意，它不可能撰寫資料表值的方法，雖然這些欄位的名稱可能很可能會建議。"
  example:
  - "The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.  \n  \n [!code-cs[DataWorks SqlMethodAttribute Sample#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_1_1.cs)]\n [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_1_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]

      public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute
  inheritance:
  - System.Attribute
  - Microsoft.SqlServer.Server.SqlFunctionAttribute
  implements: []
  inheritedMembers:
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.Name
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  id: '#ctor'
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: SqlMethodAttribute()
  nameWithType: SqlMethodAttribute.SqlMethodAttribute()
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.SqlMethodAttribute()
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "使用者定義型別 (UDT)，用來表示的決定性和資料存取屬性的方法或屬性 udt 屬性。"
  syntax:
    content: public SqlMethodAttribute ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  id: InvokeIfReceiverIsNull
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "表示 SQL Server 是否應叫用 null 執行個體上的方法。"
  remarks: "InvokeIfReceiverIsNull 屬性的預設值是`false`。       也就是說，方法是不叫用的 null 執行個體。 如果 InvokeIfReceiverIsNull 為 true，該方法的傳回值，取決於其型別。 如果該方法的傳回型別可為 null，則會傳回辨別的類型的 null 值。 如果傳回的型別不可為 null，則會傳回類型的預設 CLR 值。 參考類型的預設值為 null。 當您呼叫預設建構函式的型別時傳回的值為實值類型的預設值。"
  syntax:
    content: public bool InvokeIfReceiverIsNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 SQL Server 應叫用 null 執行個體; 上的方法否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 無法叫用此方法 （由於方法屬性），如果[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=&quot;langword_csharp_DbNull&quot; name=&quot;DbNull&quot; href=&quot;&quot;> </xref>傳回。"
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  id: IsMutator
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "指出使用者定義型別 (UDT) 上的方法是否為 mutator。"
  remarks: "如果 IsMutator 屬性設定為`true`和方法的傳回型別是`void`，SQL Server 會將標示為 mutator 方法。 Mutator 方法就是導致 UDT 執行個體的狀態變更。 Mutator 方法可以在指派陳述式或資料修改陳述式，呼叫，但不能用在查詢中。 如果方法標示為 mutator，但不會傳回 void，然後建立型別不會因發生錯誤。 即使以外傳回值`void`會引發錯誤，傳回的值無法存取，因此無法使用。       IsMutator 屬性的預設值是`false`。       如果屬性可以是 mutator <xref:Microsoft.SqlServer.Server.SqlMethodAttribute>setter 上使用和 IsMutator 設`true`。</xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 不過，屬性 setter 隱含地視為 mutator，如此就不需要設定的 IsMutator 屬性<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>至`true`。</xref:Microsoft.SqlServer.Server.SqlMethodAttribute>"
  syntax:
    content: public bool IsMutator { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果方法為 mutator。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  id: OnNullCall
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "指出是否在使用者定義型別 (UDT) 方法時，會呼叫<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>方法引動過程中指定輸入引數。"
  remarks: "L 屬性的預設值是`true`。"
  syntax:
    content: public bool OnNullCall { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法時，會呼叫<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>中的方法引動過程中，指定輸入引數<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果該方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>時有任何輸入參數的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 無法叫用此方法 （由於方法屬性），如果[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=&quot;langword_csharp_DbNull&quot; name=&quot;DbNull&quot; href=&quot;&quot;> </xref>傳回。"
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute
  isExternal: false
  name: Microsoft.SqlServer.Server.SqlFunctionAttribute
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: SqlMethodAttribute()
  nameWithType: SqlMethodAttribute.SqlMethodAttribute()
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.SqlMethodAttribute()
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: SqlMethodAttribute
  nameWithType: SqlMethodAttribute.SqlMethodAttribute
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
