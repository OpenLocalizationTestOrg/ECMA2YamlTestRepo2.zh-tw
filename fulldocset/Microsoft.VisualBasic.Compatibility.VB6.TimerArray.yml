### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  id: TimerArray
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)
  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick
  langs:
  - csharp
  name: TimerArray
  nameWithType: TimerArray
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  type: Class
  summary: "提供的控制項陣列<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>控制項"
  remarks: "`TimerArray`類別提供對等項目執行階段功能的 Visual Basic 6.0`Timer`控制項陣列。 它不提供 Visual Basic 6.0 控制項陣列的設計階段功能。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: >-
      [System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.Timer))]

      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public class TimerArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  implements:
  - System.ComponentModel.IExtenderProvider
  inheritedMembers:
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: TimerArray()
  nameWithType: TimerArray.TimerArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.TimerArray()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;></xref>類別。"
  remarks: "當您具現化<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>，您也必須呼叫<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A>方法來建立陣列中的初始項目。</xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> </xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public TimerArray ();
    parameters: []
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: TimerArray(IContainer)
  nameWithType: TimerArray.TimerArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.TimerArray(IContainer)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;></xref>類別，指定其容器。"
  remarks: "當您具現化<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>，您也必須呼叫<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A>方法來建立陣列中的初始項目。</xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> </xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public TimerArray (System.ComponentModel.IContainer Container);
    parameters:
    - id: Container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>裝載控制項陣列。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)
  id: CanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: CanExtend(Object)
  nameWithType: TimerArray.CanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "取得值，決定控制項是否為成員<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;> </xref>。"
  remarks: "`CanExtend`方法可用來判斷特定<xref:System.Windows.Forms.Timer>控制項是其他項目已從中複製的控制項陣列的基底項目。</xref:System.Windows.Forms.Timer>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public bool CanExtend (object target);
    parameters:
    - id: target
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>控制項。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> target </code>控制項陣列的成員，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType
  id: GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: GetControlInstanceType()
  nameWithType: TimerArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "覆寫<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*>.</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType*>"
  remarks: "無法從您的應用程式程式碼中呼叫這個方法。 使用<xref:System.Object.GetType%2A>方法而。</xref:System.Object.GetType%2A>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected override Type GetControlInstanceType ();
    parameters: []
    return:
      type: System.Type
      description: "<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;> </xref>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。 若要建立類別的執行個體通常不使用這個類別，因為這<xref uid=&quot;langword_csharp_Protected&quot; name=&quot;Protected&quot; href=&quot;&quot;></xref>方法通常不會直接呼叫，但而由衍生類別呼叫。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)
  id: GetIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: GetIndex(Timer)
  nameWithType: TimerArray.GetIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(Timer)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "取得索引<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>中<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;> </xref>。"
  remarks: "這個方法可以用來擷取指定<xref:System.Windows.Forms.Timer>.</xref:System.Windows.Forms.Timer>索引      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public short GetIndex (System.Windows.Forms.Timer o);
    parameters:
    - id: o
      type: System.Windows.Forms.Timer
      description: "A <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>控制項陣列中。"
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>代表指定之索引<xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)
  id: HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: HookUpControlEvents(Object)
  nameWithType: TimerArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "覆寫<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*>.</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents*>"
  remarks: "無法從您的應用程式程式碼中呼叫這個方法。 使用`AddHandler`使用所新增的任何控制項的事件連結<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: protected override void HookUpControlEvents (object o);
    parameters:
    - id: o
      type: System.Object
      description: "An <xref:System.Object>.</xref:System.Object>"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)
  id: Item(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: Item(Int16)
  nameWithType: TimerArray.Item(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(Int16)
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "取得特定的項目<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;></xref>索引。 唯讀。"
  remarks: "`Item`屬性是控制項陣列的預設屬性。 因此，下列程式碼是相等的。      ```vb#   MsgBox(CStr(TimerArray.Item(1).Text))   MsgBox(CStr(TimerArray(1).Text))   ```      > [!NOTE]> 函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public System.Windows.Forms.Timer this[short Index] { get; }
    parameters:
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref> ，指定控制項陣列中項目的位置。"
    return:
      type: System.Windows.Forms.Timer
      description: "A <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>位於指定<code> Index </code>控制項陣列中。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)
  id: ResetIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: ResetIndex(Timer)
  nameWithType: TimerArray.ResetIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(Timer)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "<xref uid=&quot;langword_csharp_ResetIndex&quot; name=&quot;ResetIndex&quot; href=&quot;&quot;> </xref>中不支援方法<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;></xref>類別。"
  remarks: "不支援這個方法，並呼叫它，則不會引發例外狀況。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public void ResetIndex (System.Windows.Forms.Timer o);
    parameters:
    - id: o
      type: System.Windows.Forms.Timer
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)
  id: SetIndex(System.Windows.Forms.Timer,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: SetIndex(Timer,Int16)
  nameWithType: TimerArray.SetIndex(Timer,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(Timer,Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "設定索引的初始<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>中<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;> </xref>。"
  remarks: "`SetIndex`控制項陣列中建立的初始項目時，應該只呼叫方法。 若要將後續項目，呼叫<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法並指定`Index`。</xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public void SetIndex (System.Windows.Forms.Timer o, short Index);
    parameters:
    - id: o
      type: System.Windows.Forms.Timer
      description: "A <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>控制項陣列中。"
    - id: Index
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;> </xref>代表指定之索引<xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)
  id: ShouldSerializeIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: ShouldSerializeIndex(Timer)
  nameWithType: TimerArray.ShouldSerializeIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(Timer)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "傳回值，指出是否<xref href=&quot;System.Windows.Forms.Timer&quot;></xref>這個成員<xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.TimerArray&quot;> </xref>。"
  remarks: "如果指定<xref:System.Windows.Forms.Timer>成員的不同<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>，`ShouldSerializeIndex`傳回`false`。</xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray> </xref:System.Windows.Forms.Timer>      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public bool ShouldSerializeIndex (System.Windows.Forms.Timer o);
    parameters:
    - id: o
      type: System.Windows.Forms.Timer
      description: "A <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>控制項陣列中。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> o </code>這個控制項陣列的成員，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick
  id: Tick
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  langs:
  - csharp
  name: Tick
  nameWithType: TimerArray.Tick
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick
  type: Event
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "發生於指定的計時器間隔已耗用，且計時器被啟用。"
  remarks: "如需如何處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。      > [!NOTE] > 函式和物件中的<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 來升級[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]。</xref:Microsoft.VisualBasic.Compatibility.VB6> 在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]實作。"
  syntax:
    content: public event EventHandler Tick;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: TimerArray()
  nameWithType: TimerArray.TimerArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.TimerArray()
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: TimerArray(IContainer)
  nameWithType: TimerArray.TimerArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.TimerArray(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: CanExtend(Object)
  nameWithType: TimerArray.CanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: GetControlInstanceType()
  nameWithType: TimerArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: GetIndex(Timer)
  nameWithType: TimerArray.GetIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(Timer)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Windows.Forms.Timer
  parent: System.Windows.Forms
  isExternal: false
  name: Timer
  nameWithType: Timer
  fullName: System.Windows.Forms.Timer
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: HookUpControlEvents(Object)
  nameWithType: TimerArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: Item(Int16)
  nameWithType: TimerArray.Item(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: ResetIndex(Timer)
  nameWithType: TimerArray.ResetIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(Timer)
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: SetIndex(Timer,Int16)
  nameWithType: TimerArray.SetIndex(Timer,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(Timer,Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: ShouldSerializeIndex(Timer)
  nameWithType: TimerArray.ShouldSerializeIndex(Timer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(Timer)
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: Tick
  nameWithType: TimerArray.Tick
  fullName: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: TimerArray
  nameWithType: TimerArray.TimerArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: CanExtend
  nameWithType: TimerArray.CanExtend
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: GetControlInstanceType
  nameWithType: TimerArray.GetControlInstanceType
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: GetIndex
  nameWithType: TimerArray.GetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: HookUpControlEvents
  nameWithType: TimerArray.HookUpControlEvents
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: Item
  nameWithType: TimerArray.Item
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: ResetIndex
  nameWithType: TimerArray.ResetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: SetIndex
  nameWithType: TimerArray.SetIndex
- uid: Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex*
  parent: Microsoft.VisualBasic.Compatibility.VB6.TimerArray
  isExternal: false
  name: ShouldSerializeIndex
  nameWithType: TimerArray.ShouldSerializeIndex
