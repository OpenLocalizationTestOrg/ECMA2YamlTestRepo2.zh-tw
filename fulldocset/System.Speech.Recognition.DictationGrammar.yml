### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "代表用於任意文字聽寫的語音辨識文法。"
  remarks: "這個類別會提供應用程式可以處理文字到語音的使用者輸入的預先定義的語言模型。 這個類別支援預設和自訂 DictationGrammar 物件。 如需選取聽寫文法的資訊，請參閱<xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>建構函式。</xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>       根據預設，DictationGrammar 語言模型是可用的內容。 不會使用特定的單字或單字順序，以識別及解譯音訊輸入。 若要加入的聽寫文法中的內容，請使用<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>方法。</xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>      > [!NOTE] > DictationGrammar 物件並不支援<xref:System.Speech.Recognition.Grammar.Priority%2A>屬性。</xref:System.Speech.Recognition.Grammar.Priority%2A> 擲回 DictationGrammar<xref:System.NotSupportedException>如果<xref:System.Speech.Recognition.Grammar.Priority%2A>設定。</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.NotSupportedException>"
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> Windows 桌面語音技術所提供的預設聽寫文法的類別。"
  remarks: "預設聽寫文法會模擬標準聽寫做法，包括標點符號。 不支援一個字的拼字。"
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;></xref>使用特定的聽寫文法的類別。"
  remarks: "語音平台會使用特定的 URI 語法來定義自訂的聽寫文法。 值`grammar:dictation`表示預設聽寫文法。 值`grammar:dictation#spelling`表示拼字聽寫文法。"
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "XML 相容通用資源識別元 (URI)，請指定聽寫文法`grammar:dictation`或`grammar:dictation#spelling`。"
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "將內容加入至已經載入的聽寫文法<xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;></xref>或<xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;></xref>物件。"
  remarks: "根據預設，聽寫文法不會使用特定的單字或單字順序，以識別及解譯音訊輸入。 當內容加入至聽寫文法時，辨識引擎會使用`precedingText`和`subsequentText`來識別時解譯為聽寫的語音。      > [!NOTE] > 聽寫文法必須載入<xref:System.Speech.Recognition.SpeechRecognizer>或<xref:System.Speech.Recognition.SpeechRecognitionEngine>物件之前，您可用來將內容加入 SetDictationContext。</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer>       下表說明如何辨識引擎會使用兩個參數來判斷何時要使用聽寫文法。      |`precedingText`|`subsequentText`|描述 |  |---------------------|----------------------|-----------------|  |not `null`|not `null`|辨識引擎會使用以括號可能的候選片語的詞彙。 |  |`null`|not `null`|辨識引擎會使用`subsequentText`完成聽寫。 |  |not `null`|`null`|辨識引擎會使用`precedingText`啟動聽寫。 |  |`null`|`null`|辨識引擎時不會使用內容使用聽寫文法。 |"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "表示聽寫內容的開頭的文字。"
    - id: subsequentText
      type: System.String
      description: "表示聽寫內容的結尾的文字。"
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
