### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.IdentityVerifier
  id: IdentityVerifier
  children:
  - System.ServiceModel.Security.IdentityVerifier.#ctor
  - System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  - System.ServiceModel.Security.IdentityVerifier.CreateDefault
  - System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  langs:
  - csharp
  name: IdentityVerifier
  nameWithType: IdentityVerifier
  fullName: System.ServiceModel.Security.IdentityVerifier
  type: Class
  summary: "<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref>基底類別可以實作驗證針對遠端端點，表示授權內容的預期身分識別，或從端點位址建立身分識別。"
  remarks: "[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]基礎結構會呼叫<xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A>方法以從訊息擷取服務的身分識別。</xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> 接下來，基礎結構會呼叫<xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A>方法的傳回<xref:System.ServiceModel.EndpointIdentity>和<xref:System.IdentityModel.Policy.AuthorizationContext>。</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.EndpointIdentity> </xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A>       如需實作該類別的詳細資訊，請參閱[How to︰ 建立自訂用戶端身分識別驗證器](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public abstract class IdentityVerifier
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: IdentityVerifier()
  nameWithType: IdentityVerifier.IdentityVerifier()
  fullName: System.ServiceModel.Security.IdentityVerifier.IdentityVerifier()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立這個類別的執行個體。"
  syntax:
    content: protected IdentityVerifier ();
    parameters: []
  overload: System.ServiceModel.Security.IdentityVerifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  id: CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: CheckAccess(EndpointIdentity,AuthorizationContext)
  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  fullName: System.ServiceModel.Security.IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "實作方法，以驗證身分識別。"
  syntax:
    content: public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);
    parameters:
    - id: identity
      type: System.ServiceModel.EndpointIdentity
      description: "<xref:System.ServiceModel.EndpointIdentity>驗證。</xref:System.ServiceModel.EndpointIdentity>"
    - id: authContext
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "<xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref>測試`identity`針對。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果驗證身分識別。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Security.IdentityVerifier.CheckAccess*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault
  id: CreateDefault
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: CreateDefault()
  nameWithType: IdentityVerifier.CreateDefault()
  fullName: System.ServiceModel.Security.IdentityVerifier.CreateDefault()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "建立這個類別的預設執行個體。"
  syntax:
    content: public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();
    parameters: []
    return:
      type: System.ServiceModel.Security.IdentityVerifier
      description: "預設執行個體<xref href=&quot;System.ServiceModel.Security.IdentityVerifier&quot;> </xref>。"
  overload: System.ServiceModel.Security.IdentityVerifier.CreateDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  id: TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: TryGetIdentity(EndpointAddress,EndpointIdentity)
  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  fullName: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "嘗試從端點建立身分識別。"
  remarks: "<xref:System.ServiceModel.Security.IdentityVerifier>建立<xref:System.ServiceModel.DnsEndpointIdentity>根據主機名稱部分，<xref:System.ServiceModel.EndpointAddress.Uri%2A>如果<xref:System.ServiceModel.EndpointIdentity>尚未指定<xref:System.ServiceModel.EndpointAddress>.</xref:System.ServiceModel.EndpointAddress>一部分</xref:System.ServiceModel.EndpointIdentity>明確</xref:System.ServiceModel.EndpointAddress.Uri%2A>的</xref:System.ServiceModel.DnsEndpointIdentity></xref:System.ServiceModel.Security.IdentityVerifier>預設值"
  syntax:
    content: public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);
    parameters:
    - id: reference
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>要用於建立身分識別。</xref:System.ServiceModel.EndpointAddress>"
    - id: identity
      type: System.ServiceModel.EndpointIdentity
      description: "<xref:System.ServiceModel.EndpointIdentity>傳回。</xref:System.ServiceModel.EndpointIdentity>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果傳回身分識別。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: IdentityVerifier()
  nameWithType: IdentityVerifier.IdentityVerifier()
  fullName: System.ServiceModel.Security.IdentityVerifier.IdentityVerifier()
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CheckAccess(EndpointIdentity,AuthorizationContext)
  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  fullName: System.ServiceModel.Security.IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.IdentityModel.Policy.AuthorizationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CreateDefault()
  nameWithType: IdentityVerifier.CreateDefault()
  fullName: System.ServiceModel.Security.IdentityVerifier.CreateDefault()
- uid: System.ServiceModel.Security.IdentityVerifier
  parent: System.ServiceModel.Security
  isExternal: false
  name: IdentityVerifier
  nameWithType: IdentityVerifier
  fullName: System.ServiceModel.Security.IdentityVerifier
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: TryGetIdentity(EndpointAddress,EndpointIdentity)
  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  fullName: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: IdentityVerifier
  nameWithType: IdentityVerifier.IdentityVerifier
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CheckAccess
  nameWithType: IdentityVerifier.CheckAccess
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CreateDefault
  nameWithType: IdentityVerifier.CreateDefault
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: TryGetIdentity
  nameWithType: IdentityVerifier.TryGetIdentity
