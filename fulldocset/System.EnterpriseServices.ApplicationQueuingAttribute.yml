### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ApplicationQueuingAttribute
  id: ApplicationQueuingAttribute
  children:
  - System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  - System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  - System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  - System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  langs:
  - csharp
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute
  type: Class
  summary: "啟用佇列支援標記的組件，並讓應用程式從訊息佇列的佇列讀取方法呼叫。 這個類別無法被繼承。"
  remarks: "如需 ApplicationQueuingAttribute 的執行個體的初始屬性值的清單，請參閱<xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>建構函式。</xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>       如需屬性用法的詳細資訊，請參閱[屬性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the ApplicationQueuingAttribute type.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ApplicationQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新執行個體<xref href=&quot;System.EnterpriseServices.ApplicationQueuingAttribute&quot;></xref>類別，啟用佇列支援組件，並初始化<> *>， <> </> *>，和<xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>。</xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>"
  remarks: "下表顯示<xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute>的執行個體的初始屬性值      |屬性 |值 |  |--------------|-----------|  |`Enabled`|`true`|  |`QueueListenerEnabled`|`false`|  |`MaxListenerThreads`|zero (0)|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public ApplicationQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得或設定值，指出是否啟用佇列支援。"
  remarks: "應用程式不能依預設會使用佇列的元件。 具現化<xref:System.EnterpriseServices.ApplicationQueuingAttribute>可讓應用程式使用佇列元件; 不過，不會啟用接聽佇列的訊息從用戶端應用程式。</xref:System.EnterpriseServices.ApplicationQueuingAttribute>"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果啟用佇列支援;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 建構函式所設定的預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  id: MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得或設定用來從佇列擷取訊息並啟動對應元件的執行緒數目。"
  remarks: "這個屬性的有效範圍是 0 到 1000 之間。 預設值是零。 新建立的應用程式中，設定會衍生自目前用來決定預設接聽程式的執行緒數目的演算法︰ 16 次的 Cpu 數目在伺服器中。       如需詳細資訊，請參閱`QcListenerMaxThreads`中[應用程式 （COM +）](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp)。"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]"
  syntax:
    content: public int MaxListenerThreads { get; set; }
    return:
      type: System.Int32
      description: "要用於處理訊息到達佇列中之執行緒的數目上限。 預設值是零。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  id: QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得或設定值，指出應用程式是否將接受來自用戶端的已佇列的元件呼叫。"
  remarks: ''
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]"
  syntax:
    content: public bool QueueListenerEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應用程式接受已佇列的元件呼叫。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
