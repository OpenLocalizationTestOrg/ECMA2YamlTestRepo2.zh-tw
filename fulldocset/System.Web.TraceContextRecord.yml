### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContextRecord
  id: TraceContextRecord
  children:
  - System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  - System.Web.TraceContextRecord.Category
  - System.Web.TraceContextRecord.ErrorInfo
  - System.Web.TraceContextRecord.IsWarning
  - System.Web.TraceContextRecord.Message
  langs:
  - csharp
  name: TraceContextRecord
  nameWithType: TraceContextRecord
  fullName: System.Web.TraceContextRecord
  type: Class
  summary: "表示 ASP.NET 追蹤訊息以及任何相關的資料。"
  remarks: "TraceContextRecord 物件會將追蹤訊息，類別目錄，任何相關聯<xref:System.Exception>，和追蹤記錄所撰寫<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法。</xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Exception>       每次呼叫<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法會產生 TraceContextRecord 物件加入至<xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName>訊息集合。</xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> 您可以存取記錄的集合，藉由處理<xref:System.Web.TraceContext.TraceFinished>事件。</xref:System.Web.TraceContext.TraceFinished>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> delegate to handle the <xref:System.Web.TraceContext.TraceFinished> event. In this example, the `OnTraceFinished` method accesses the collection of TraceContextRecord objects through the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> property, iterates through them, and writes them to the response stream.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/t-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/t-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public sealed class TraceContextRecord
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  id: '#ctor(System.String,System.String,System.Boolean,System.Exception)'
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: TraceContextRecord(String,String,Boolean,Exception)
  nameWithType: TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  fullName: System.Web.TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "初始化的新執行個體<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>類別。"
  remarks: "每次呼叫<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法會產生<xref:System.Web.TraceContextRecord>物件加入至<xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName>訊息集合。</xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=fullName> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> <xref:System.Web.TraceContext.Warn%2A>方法呼叫會設定<xref:System.Web.TraceContextRecord.IsWarning%2A>屬性`true`，雖然<xref:System.Web.TraceContext.Write%2A>方法呼叫將它設定為`false`。</xref:System.Web.TraceContext.Write%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A> </xref:System.Web.TraceContext.Warn%2A>"
  syntax:
    content: public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "接收訊息追蹤分類。"
    - id: msg
      type: System.String
      description: "追蹤訊息。"
    - id: isWarning
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此方法關聯<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>是<> *> 方法;<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>追蹤方法是否<> *> 方法。"
    - id: errorInfo
      type: System.Exception
      description: "A<xref:System.Exception>物件，其中包含其他錯誤資訊。</xref:System.Exception>"
  overload: System.Web.TraceContextRecord.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.Category
  id: Category
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: Category
  nameWithType: TraceContextRecord.Category
  fullName: System.Web.TraceContextRecord.Category
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得追蹤記錄中的使用者定義的分類。"
  remarks: "類別用來進一步將追蹤訊息組織成可辨識的群組，但可以是任何字串。 <xref:System.Web.TraceContext>類別會使用<xref:System.String.Empty?displayProperty=fullName>做為其預設類別目錄，針對這些方法會採用只有`message`參數。</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.TraceContext> 適用於 ASP.NET，寫入數個追蹤記錄，當啟用追蹤時，預設分類為&quot;aspx.page&quot;。"
  example:
  - "The following code example demonstrates how to access the Category property of a <xref:System.Web.TraceContextRecord>, and print it and its associated trace message to the `Response` stream.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/p-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public string Category { get; }
    return:
      type: System.String
      description: "字串，代表追蹤記錄目錄。"
  overload: System.Web.TraceContextRecord.Category*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.ErrorInfo
  id: ErrorInfo
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
  fullName: System.Web.TraceContextRecord.ErrorInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得<xref:System.Exception>與追蹤記錄相關，如果有的話。</xref:System.Exception>"
  remarks: "如果您使用追蹤來偵錯應用程式或疑難排解錯誤和例外狀況處理，您可以追蹤記錄中包含例外狀況。 ErrorInfo 屬性是`null`追蹤記錄時相關聯的其中一個<xref:System.Web.TraceContext>方法沒有明確`errorInfo`會提供參數或沒有例外狀況。</xref:System.Web.TraceContext>"
  syntax:
    content: public Exception ErrorInfo { get; }
    return:
      type: System.Exception
      description: "A<xref:System.Exception>與追蹤記錄相關，如果有的話，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Exception>"
  overload: System.Web.TraceContextRecord.ErrorInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.IsWarning
  id: IsWarning
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
  fullName: System.Web.TraceContextRecord.IsWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得值，指出是否要將追蹤記錄相關聯&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName&gt;方法呼叫。"
  remarks: ''
  example:
  - "The following code example demonstrates how to check the IsWarning property of a <xref:System.Web.TraceContextRecord> to determine whether the message that the record contains was written by a <xref:System.Web.TraceContext.Warn%2A> or <xref:System.Web.TraceContext.Write%2A> method call. If the trace record is a warning message, a different action is taken than if it is an error message.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/p-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public bool IsWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.TraceContextRecord&quot;></xref>聯<xref:System.Web.TraceContext.Warn*>方法呼叫，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.TraceContext.Warn*>"
  overload: System.Web.TraceContextRecord.IsWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContextRecord.Message
  id: Message
  parent: System.Web.TraceContextRecord
  langs:
  - csharp
  name: Message
  nameWithType: TraceContextRecord.Message
  fullName: System.Web.TraceContextRecord.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "取得使用者定義的追蹤訊息。"
  remarks: "訊息可以是任何字串，並用於寫入詳細的追蹤資訊。 它會對應至訊息參數傳遞給<xref:System.Web.TraceContext.Write%2A?displayProperty=fullName>和<xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName>方法。</xref:System.Web.TraceContext.Warn%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> 資訊可以是執行階段值，訊息，引導您，並引導您完成程式的執行或其他診斷資料。"
  example:
  - "The following code example demonstrates how to access the Message property of a <xref:System.Web.TraceContextRecord>, and print it to the `Response` stream.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/p-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "字串，代表追蹤記錄的訊息。"
  overload: System.Web.TraceContextRecord.Message*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: TraceContextRecord(String,String,Boolean,Exception)
  nameWithType: TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
  fullName: System.Web.TraceContextRecord.TraceContextRecord(String,String,Boolean,Exception)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContextRecord.Category
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Category
  nameWithType: TraceContextRecord.Category
  fullName: System.Web.TraceContextRecord.Category
- uid: System.Web.TraceContextRecord.ErrorInfo
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
  fullName: System.Web.TraceContextRecord.ErrorInfo
- uid: System.Web.TraceContextRecord.IsWarning
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
  fullName: System.Web.TraceContextRecord.IsWarning
- uid: System.Web.TraceContextRecord.Message
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Message
  nameWithType: TraceContextRecord.Message
  fullName: System.Web.TraceContextRecord.Message
- uid: System.Web.TraceContextRecord.#ctor*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: TraceContextRecord
  nameWithType: TraceContextRecord.TraceContextRecord
- uid: System.Web.TraceContextRecord.Category*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Category
  nameWithType: TraceContextRecord.Category
- uid: System.Web.TraceContextRecord.ErrorInfo*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: ErrorInfo
  nameWithType: TraceContextRecord.ErrorInfo
- uid: System.Web.TraceContextRecord.IsWarning*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: IsWarning
  nameWithType: TraceContextRecord.IsWarning
- uid: System.Web.TraceContextRecord.Message*
  parent: System.Web.TraceContextRecord
  isExternal: false
  name: Message
  nameWithType: TraceContextRecord.Message
