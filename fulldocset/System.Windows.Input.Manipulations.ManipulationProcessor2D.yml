### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D
  id: ManipulationProcessor2D
  children:
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  langs:
  - csharp
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D
  type: Class
  summary: "共用的座標空間中實作多個輸入、 單一輸出的複合器為二維 (2d) 轉換。"
  remarks: "ManipulationProcessor2D 物件視操作工具的集合為複合物件。 您的應用程式接著會從您不再需要追蹤和管理個別的操作工具釋出。       操作處理器本身並不會移動的項目。 您的應用程式開始操作，如有必要，但收到資訊操作處理器從透過接聽<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>，<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>事件。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> 透過這些事件接收的值可讓您變更的位置、 大小或方向所需的項目。       通知操作處理器會在允許的操作類型 （平移、 縮放、 旋轉） 藉由設定<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>屬性。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> 然後，您可以提供給受管理的項目轉換的非條件式邏輯。 比方說，而不是檢查是否循環已啟用變更方向的項目之前，您可以無條件地套用操作處理器; 從收到的循環因數如果未啟用旋轉，操作處理器會報告發生沒有旋轉的變更。       釋放所操作的項目 （所有操作工具會遭到移除），您可以使用慣性處理模擬人事而造成要在停止前逐漸減緩其移動的項目。 如需詳細資訊，請參閱<xref:System.Windows.Input.Manipulations.InertiaProcessor2D>類別。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D>"
  syntax:
    content: public class ManipulationProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "建立新<xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;></xref>物件。"
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "一組初始的受支援的操作。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> supportedManipulations </code>參數不是有效的組合<xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "建立新<xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;></xref>物件。"
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "一組初始的受支援的操作。"
    - id: pivot
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "單一操作工具旋轉的樞紐分析資訊。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> supportedManipulations </code>參數不是有效的組合<xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "操作完成時發生。"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  id: CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "會強制執行目前的操作完成，會引發<xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&quot;></xref>事件。"
  syntax:
    content: public void CompleteManipulation (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "若要完成操作，請以 100 奈秒刻度為單位的時間戳記。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "時間戳記小於目前的操作的上一個時間戳記。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "當操作原點變更，或發生了轉譯、 縮放或旋轉時，就會發生。"
  remarks: "差異事件和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName>事件都是相同的型別。</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> 一般而言，您可以使用相同的事件處理常式，兩個事件。"
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  id: MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定最小的半徑，以座標為單位，所需的參與縮放和旋轉的操作工具。"
  remarks: "如果操作工具非常接近操作工具目前正在處理中心的大量，非常小的操作工具移動可能會變得非常大變更旋轉或縮放比例。 若要避免這個問題，請設定 MinimumScaleRotateRadius 為大於零的項目。 較接近比到中央的大型距離旋轉和縮放作業中將不會包含任何操作工具。       使用一般的值應該根據&quot;意外 「 操作工具的動作可能大小。 比方說，如果此操作工人力手指觸控螢幕，對應至公分左右 radius 可能適合。       MinimumScaleRotateRadius 的值必須是有限的非負數。"
  syntax:
    content: public float MinimumScaleRotateRadius { get; set; }
    return:
      type: System.Single
      description: "最小的半徑，以座標為單位，所需的參與縮放和旋轉的操作工具。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  id: Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定操作處理器的樞紐分析資訊。"
  remarks: "樞紐屬性用來提供單一操作工具旋轉的樞紐分析資訊。 此屬性設定為 null，就會停用單一操作工具旋轉。"
  syntax:
    content: public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }
    return:
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "操作處理器的樞紐分析資訊。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  id: ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "處理指定的操作工具，以單一批次的動作。"
  remarks: "參數`manipulators`可能是空的清單或 null。 如果這導致數目達到零的操作工具<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>就會引發事件。</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>"
  example:
  - "In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the ProcessManipulators method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D> manipulators);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "批次，以 100 奈秒刻度為單位的時間戳記。"
    - id: manipulators
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
      description: "目前在範圍中的操作工具組。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "時間戳記小於目前的操作的上一個時間戳記。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "操作處理器上設定參數。"
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "若要設定的參數。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  id: Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "啟動新操作後發生。"
  remarks: ''
  example:
  - "In the following example, an event handler for the Started event checks to see if inertia processing is running and if so, stops it.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs> Started;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  id: SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "取得或設定目前資料集的支援的操作。"
  syntax:
    content: public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }
    return:
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "目前的一組支援的操作。"
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "屬性會嘗試設定的值不是有效的組合<xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;></xref>列舉值。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
- uid: System.Windows.Input.Manipulations.Manipulations2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulations2D
  nameWithType: Manipulations2D
  fullName: System.Windows.Input.Manipulations.Manipulations2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
- uid: System.Windows.Input.Manipulations.ManipulationPivot2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationPivot2D
  nameWithType: ManipulationPivot2D
  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Manipulator2D>
  nameWithType: IEnumerable<Manipulator2D>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulator2D
    name: Manipulator2D
    nameWithType: Manipulator2D
    fullName: Manipulator2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DStartedEventArgs>
  nameWithType: EventHandler<Manipulation2DStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
    name: Manipulation2DStartedEventArgs
    nameWithType: Manipulation2DStartedEventArgs
    fullName: Manipulation2DStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation
  nameWithType: ManipulationProcessor2D.CompleteManipulation
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators
  nameWithType: ManipulationProcessor2D.ProcessManipulators
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: ManipulationProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
