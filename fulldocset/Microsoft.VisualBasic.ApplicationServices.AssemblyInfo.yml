### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  id: AssemblyInfo
  children:
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  langs:
  - csharp
  name: AssemblyInfo
  nameWithType: AssemblyInfo
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  type: Class
  summary: "提供屬性，取得應用程式，例如版本號碼、 描述、 載入的組件等等的相關資訊。"
  remarks: "部分屬性所公開`My.Application.Info`物件傳回應用程式的組件資訊。 若要設定應用程式的組件中的資訊，您必須使用**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。       `My.Application.Info`物件會提供類似的功能<xref:System.Diagnostics.FileVersionInfo>類別，但範圍的最常見內容以便快速存取。</xref:System.Diagnostics.FileVersionInfo>       其他屬性，例如`LoadedAssemblies`，提供應用程式的目前狀態存取。"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public class AssemblyInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "初始化的新執行個體<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AssemblyInfo&quot;></xref>與指定的組件資訊的類別。"
  syntax:
    content: public AssemblyInfo (System.Reflection.Assembly currentAssembly);
    parameters:
    - id: currentAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> 要取得資訊的組件。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  id: AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得不含副檔名，應用程式的組件檔的名稱。"
  remarks: "`My.Application.Info.AssemblyName`屬性會取得包含資訊清單的檔案名稱。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.AssemblyName` property to display the name of the application.  \n  \n [!code-vb[VbVbalrMyApplication#20](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#20)]"
  syntax:
    content: public string AssemblyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含檔案名稱。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  id: CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式相關聯的公司名稱。"
  remarks: "`My.Application.Info.CompanyName`屬性會取得與應用程式相關聯的公司名稱。       您可以變更的值來變更公司名稱**公司**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.CompanyName` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#21](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#21)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> ，其中包含與應用程式相關聯的公司名稱。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyCompanyAttribute>屬性。</xref:System.Reflection.AssemblyCompanyAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  id: Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式相關聯的著作權注意事項。"
  remarks: "`My.Application.Info.Copyright`屬性取得與應用程式相關聯的著作權注意事項。       您可以藉由變更的值變更的著作權注意事項**著作權**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.Copyright` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#22](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#22)]"
  syntax:
    content: public string Copyright { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含應用程式相關聯的著作權注意事項。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyCopyrightAttribute>屬性。</xref:System.Reflection.AssemblyCopyrightAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  id: Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得與應用程式相關聯的描述。"
  remarks: "`My.Application.Info.Description`屬性會取得與應用程式相關聯的描述。       您可以藉由變更的值變更的描述**描述**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.Description` property to display the description associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#23](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#23)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含與應用程式相關聯的描述。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyDescriptionAttribute>屬性。</xref:System.Reflection.AssemblyDescriptionAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得儲存應用程式的目錄。"
  remarks: "`My.Application.Info.DirectoryPath`屬性會取得儲存應用程式的目錄。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.DirectoryPath` property to display the directory path where the application is stored.  \n  \n [!code-vb[VbVbalrMyApplication#24](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#24)]"
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> ，其中包含儲存應用程式的目錄。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  id: LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得集合的所有應用程式載入的組件。"
  remarks: "`My.Application.Info.LoadedAssemblies`屬性是類似於<xref:System.AppDomain.GetAssemblies%2A>方法。</xref:System.AppDomain.GetAssemblies%2A>      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.LoadedAssemblies` property to display the assemblies loaded by the application.  \n  \n [!code-vb[VbVbalrMyApplication#25](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#25)]  \n  \n This example requires that your Windows Forms application has a <xref:System.Windows.Forms.ListBox> control named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly> LoadedAssemblies { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;的<xref:System.Reflection.Assembly>應用程式所包含之所有組件載入。</xref:System.Reflection.Assembly>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  exceptions:
  - type: System.AppDomainUnloadedException
    commentId: T:System.AppDomainUnloadedException
    description: "未載入應用程式定義域。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  id: ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式相關聯的產品名稱。"
  remarks: "`My.Application.Info.ProductName`屬性會取得與應用程式相關聯的產品名稱。       您可以藉由變更的值變更的產品名稱**產品**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.ProductName` property to display the product name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#26](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#26)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含產品名稱與應用程式相關聯。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyProductAttribute>屬性。</xref:System.Reflection.AssemblyProductAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  id: StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得目前的堆疊追蹤資訊。"
  remarks: "`My.Application.Info.StackTrace`屬性會列出依反向時間順序的方法呼叫 — 也就是第一次，它會描述最新的方法呼叫，並列出每個方法呼叫，在不同行堆疊上的。 不過，`My.Application.Info.StackTrace`屬性可能不會報告為多個方法呼叫，如預期般，因為發生在最佳化期間的程式碼轉換。       一般而言，堆疊追蹤資訊會用於偵錯應用程式。       每個方法呼叫的堆疊追蹤資訊的格式如下: 「 在*FullClassName*。*MethodName*(*MethodParams*) 中*FileName*︰ 列*LineNumber* &quot;&quot;at&quot;常值前方會有三個空格，而 「 中 」 的常值和&quot;: 列 」 無法偵錯符號時，會省略。 預留位置`FullClassName`， `MethodName`， `MethodParams`， `FileName`，和`LineNumber`被定義，如下所示的實際值: |組件 |描述 |  |----------|-----------------|  |*FullClassName*|類別，包括命名空間的完整名稱。 |  |*MethodName*|方法的名稱。 |  |*MethodParams*|參數類型/名稱組的清單。 以逗號 （，） 區隔每個配對。 如果，則會忽略這項資訊*MethodName*採用零參數。 |  |*FileName*|檔案的來源名稱*MethodName*方法宣告。 如果無法使用的偵錯符號，則會忽略這項資訊。 |  |*LineNumber*|在行號*FileName* ，其中包含從原始程式碼*MethodName*呼叫堆疊上的指示。 如果無法使用的偵錯符號，則會忽略這項資訊。 |      `My.Applicaiton.Info.StackTrace`屬性會提供類似的功能<xref:System.Environment.StackTrace%2A>屬性。</xref:System.Environment.StackTrace%2A>      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.StackTrace` property to display the stack trace of the application from the point at which the code executes.  \n  \n [!code-vb[VbVbalrMyApplication#27](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#27)]"
  syntax:
    content: public string StackTrace { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含目前的堆疊追蹤資訊。 傳回的值可以是<xref:System.String>.</xref:System.String>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "要求的堆疊追蹤資訊超出範圍。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  id: Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式相關聯的標題。"
  remarks: "`My.Application.Info.Title`屬性會取得與應用程式相關聯的標題。       您可以藉由變更的值來變更此標題**標題**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.Title` property to display the title associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#28](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#28)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含<xref:System.Reflection.AssemblyTitleAttribute>應用程式相關聯。</xref:System.Reflection.AssemblyTitleAttribute>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyTitleAttribute>屬性。</xref:System.Reflection.AssemblyTitleAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  id: Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式相關聯的商標。"
  remarks: "`My.Application.Info.Trademark`屬性會取得與應用程式相關聯的商標。       您可以藉由變更的值變更商標**商標**中**組件資訊**對話方塊中，從存取**應用程式**窗格**專案設計工具**。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.Trademark` property to display the trademark information associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#29](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#29)]"
  syntax:
    content: public string Trademark { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>包含商標與應用程式相關聯。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "組件沒有<xref:System.Reflection.AssemblyTrademarkAttribute>屬性。</xref:System.Reflection.AssemblyTrademarkAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  id: Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得應用程式的版本號碼。"
  remarks: "`My.Application.Info.Version`屬性會取得<xref:System.Version>物件，其中包含應用程式的版本號碼。</xref:System.Version> 您可以使用<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>，和<xref:System.Version.Revision%2A>屬性<xref:System.Version>存取特定版本應用程式相關資訊的物件。</xref:System.Version> </xref:System.Version.Revision%2A> </xref:System.Version.Build%2A> </xref:System.Version.Minor%2A> </xref:System.Version.Major%2A>       ClickOnce 部署應用程式應該使用<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>屬性<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>屬性。</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> </xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A<xref:System.Version>物件，其中包含應用程式的版本號碼。</xref:System.Version>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "應用程式沒有足夠的權限來存取組件版本。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  id: WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "取得對應至處理程序內容的實體記憶體數量。"
  remarks: "`My.Application.Info.WorkingSet`屬性具有相同的行為<xref:System.Environment.WorkingSet%2A>屬性。</xref:System.Environment.WorkingSet%2A>      > [!NOTE] > 這個屬性一律會傳回零 Windows 98 和 Windows Millennium Edition。      ## 專案類型的可用性 |專案類型 |可用 |  |------------------|---------------|  |Windows Form 應用程式 |**Yes**|  |類別庫 |**Yes**|  |主控台應用程式 |**Yes**|  |Windows Form 控制項程式庫 |**Yes**|  |Web 控制項程式庫 |否 |  |Windows 服務 |**Yes**|  |網站 |否 |"
  example:
  - "This example uses the `My.Application.Info.WorkingSet` property to display the number of bytes of physical memory mapped to the application.  \n  \n [!code-vb[VbVbalrMyApplication#31](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#31)]"
  syntax:
    content: public long WorkingSet { get; }
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref>包含對應至處理程序內容的實體記憶體的位元組數目。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "中的部分信任存在，而且使用者的情況下缺少必要的權限。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AppDomainUnloadedException
  parent: System
  isExternal: false
  name: AppDomainUnloadedException
  nameWithType: AppDomainUnloadedException
  fullName: System.AppDomainUnloadedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Assembly>
  nameWithType: ReadOnlyCollection<Assembly>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo
  nameWithType: AssemblyInfo.AssemblyInfo
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
