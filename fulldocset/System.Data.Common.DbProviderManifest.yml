### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbProviderManifest
  id: DbProviderManifest
  children:
  - System.Data.Common.DbProviderManifest.#ctor
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  - System.Data.Common.DbProviderManifest.GetInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetStoreFunctions
  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetStoreTypes
  - System.Data.Common.DbProviderManifest.NamespaceName
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.StoreSchemaMapping
  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  langs:
  - csharp
  name: DbProviderManifest
  nameWithType: DbProviderManifest
  fullName: System.Data.Common.DbProviderManifest
  type: Class
  summary: "CLR 類型的所有類型的中繼資料介面"
  remarks: "這裡沒有內容將會更新。請不要在這裡新增資料。"
  syntax:
    content: public abstract class DbProviderManifest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "初始化的新執行個體<xref href=&quot;System.Data.Common.DbProviderManifest&quot;></xref>類別。"
  syntax:
    content: protected DbProviderManifest ();
    parameters: []
  overload: System.Data.Common.DbProviderManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  id: ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 ConceptualSchemaDefinitionVersion GetInformation 值。"
  syntax:
    content: public static readonly string ConceptualSchemaDefinition;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  id: ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 ConceptualSchemaDefinitionVersion3 GetInformation 值。"
  syntax:
    content: public static readonly string ConceptualSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  id: EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "提供者撰寫人員應該覆寫此方法以傳回具有萬用字元和逸出字元逸出的引數。 如果 SupportsEscapingLikeArgument 傳回 true，只會使用這個方法。"
  syntax:
    content: public virtual string EscapeLikeArgument (string argument);
    parameters:
    - id: argument
      type: System.String
      description: "逸出引數。"
    return:
      type: System.String
      description: "引數使用萬用字元和逸出字元逸出。"
  overload: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  id: GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "當在衍生類別中覆寫時，這個方法會傳回提供者特有的資訊。"
  syntax:
    content: protected abstract System.Xml.XmlReader GetDbInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "要傳回的資訊類型。"
    return:
      type: System.Xml.XmlReader
      description: "XmlReader 物件，表示對應的基礎資料存放區目錄。"
  overload: System.Data.Common.DbProviderManifest.GetDbInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  id: GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "當在衍生類別中覆寫時，這個方法會指定的儲存型別以及該型別的 facet 一組對應至 EDM 型別。"
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);
    parameters:
    - id: storeType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "描述儲存型別以及該型別的 facet 組對應至 EDM 型別 TypeUsage 執行個體。"
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "<xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;> </xref>描述 EDM 型別以及該型別的 facet 組的執行個體。"
  overload: System.Data.Common.DbProviderManifest.GetEdmType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "傳回特定型別的 FacetDescription 物件。"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.EdmType
      description: "要傳回的 facet 描述的 EDM 類型。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
      description: "所指定 EDM 型 FacetDescription 物件。"
  overload: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  id: GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "取得提供者特定資訊。"
  syntax:
    content: public System.Xml.XmlReader GetInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "要傳回的資訊類型。"
    return:
      type: System.Xml.XmlReader
      description: "提供者特有的資訊。"
  overload: System.Data.Common.DbProviderManifest.GetInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  id: GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "當在衍生類別中覆寫時，傳回提供者資訊清單支援 EDM 函式的集合。"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "EDM 函式的集合。"
  overload: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  id: GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "當在衍生類別中覆寫時，這個方法會對應到儲存體類型所指定的 EDM 型和該型別的 facet 組。"
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "描述 EDM 型別以及該型別的 facet 組對應到儲存體類型 TypeUsage 執行個體。"
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "描述儲存型別以及該型別的 facet 組 TypeUsage 執行個體。"
  overload: System.Data.Common.DbProviderManifest.GetStoreType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  id: GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "當在衍生類別中覆寫時，傳回資料來源所支援的基本型別的集合。"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "資料來源所支援的型別組合。"
  overload: System.Data.Common.DbProviderManifest.GetStoreTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  id: NamespaceName
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "取得此提供者資訊清單所使用的命名空間。"
  syntax:
    content: public abstract string NamespaceName { get; }
    return:
      type: System.String
      description: "使用此提供者資訊清單的命名空間。"
  overload: System.Data.Common.DbProviderManifest.NamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  id: StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 StoreSchemaDefinitionVersion GetInformation 值。"
  syntax:
    content: public static readonly string StoreSchemaDefinition;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  id: StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 StoreSchemaDefinitionVersion3 GetInformation 值。"
  syntax:
    content: public static readonly string StoreSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  id: StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 StoreSchemaMappingVersion GetInformation 值。"
  syntax:
    content: public static readonly string StoreSchemaMapping;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  id: StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "要傳遞給取得 StoreSchemaMappingVersion3 GetInformation 值。"
  syntax:
    content: public static readonly string StoreSchemaMappingVersion3;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  id: SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "指出是否提供者支援逸出字串當做 Like 運算式中的模式。"
  syntax:
    content: public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);
    parameters:
    - id: escapeCharacter
      type: System.Char
      description: "如果提供者支援逸出，就會當做逸出字元的字元。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果此提供者支援的逸出字串當做 Like 運算式; 中的模式否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.DbProviderManifest.#ctor
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<FacetDescription>
  nameWithType: ReadOnlyCollection<FacetDescription>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.FacetDescription
    name: FacetDescription
    nameWithType: FacetDescription
    fullName: FacetDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbProviderManifest.#ctor*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest
  nameWithType: DbProviderManifest.DbProviderManifest
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument
  nameWithType: DbProviderManifest.EscapeLikeArgument
- uid: System.Data.Common.DbProviderManifest.GetDbInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation
  nameWithType: DbProviderManifest.GetDbInformation
- uid: System.Data.Common.DbProviderManifest.GetEdmType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType
  nameWithType: DbProviderManifest.GetEdmType
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions
  nameWithType: DbProviderManifest.GetFacetDescriptions
- uid: System.Data.Common.DbProviderManifest.GetInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation
  nameWithType: DbProviderManifest.GetInformation
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions
  nameWithType: DbProviderManifest.GetStoreFunctions
- uid: System.Data.Common.DbProviderManifest.GetStoreType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType
  nameWithType: DbProviderManifest.GetStoreType
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes
  nameWithType: DbProviderManifest.GetStoreTypes
- uid: System.Data.Common.DbProviderManifest.NamespaceName*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument
