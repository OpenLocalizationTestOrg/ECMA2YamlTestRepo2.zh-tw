### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.NetNamedPipeSecurity
  id: NetNamedPipeSecurity
  children:
  - System.ServiceModel.NetNamedPipeSecurity.#ctor
  - System.ServiceModel.NetNamedPipeSecurity.Mode
  - System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport
  - System.ServiceModel.NetNamedPipeSecurity.Transport
  langs:
  - csharp
  name: NetNamedPipeSecurity
  nameWithType: NetNamedPipeSecurity
  fullName: System.ServiceModel.NetNamedPipeSecurity
  type: Class
  summary: "提供存取權的具名的管道繫結設定之端點的安全性設定。"
  remarks: ''
  example:
  - "The following code shows how to add a NetNamedPipeSecurity object to a <xref:System.ServiceModel.NetNamedPipeBinding> instance.  \n  \n [!code-cs[S_UENetNamedPipeSecurity#1](~/add/codesnippet/csharp/t-system.servicemodel.ne_2_1.cs)]"
  syntax:
    content: public sealed class NetNamedPipeSecurity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.NetNamedPipeSecurity.#ctor
  id: '#ctor'
  parent: System.ServiceModel.NetNamedPipeSecurity
  langs:
  - csharp
  name: NetNamedPipeSecurity()
  nameWithType: NetNamedPipeSecurity.NetNamedPipeSecurity()
  fullName: System.ServiceModel.NetNamedPipeSecurity.NetNamedPipeSecurity()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "初始化的新執行個體<xref href=&quot;System.ServiceModel.NetNamedPipeSecurity&quot;></xref>類別。"
  syntax:
    content: public NetNamedPipeSecurity ();
    parameters: []
  overload: System.ServiceModel.NetNamedPipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetNamedPipeSecurity.Mode
  id: Mode
  parent: System.ServiceModel.NetNamedPipeSecurity
  langs:
  - csharp
  name: Mode
  nameWithType: NetNamedPipeSecurity.Mode
  fullName: System.ServiceModel.NetNamedPipeSecurity.Mode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得或設定具名的管道繫結的安全性模式。"
  remarks: "這個屬性的有效值:-傳輸-使用傳輸型安全性。 預設會使用 NTLM，這不會提供伺服器驗證。      -無-不使用安全性。"
  example:
  - "The following code shows how to set the Mode property:  \n  \n [!code-cs[S_UENetNamedPipeSecurity#2](~/add/codesnippet/csharp/p-system.servicemodel.ne_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.NetNamedPipeSecurityMode Mode { get; set; }
    return:
      type: System.ServiceModel.NetNamedPipeSecurityMode
      description: "值<xref href=&quot;System.ServiceModel.NetNamedPipeSecurityMode&quot;></xref>具名的管道繫結。 預設值是<xref href=&quot;System.ServiceModel.NetNamedPipeSecurityMode&quot;> </xref>。"
  overload: System.ServiceModel.NetNamedPipeSecurity.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport
  id: ShouldSerializeTransport
  parent: System.ServiceModel.NetNamedPipeSecurity
  langs:
  - csharp
  name: ShouldSerializeTransport()
  nameWithType: NetNamedPipeSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "傳回值，指出是否<xref:System.ServiceModel.NetNamedPipeSecurity.Transport*>屬性已經從其預設值，且應該序列化。</xref:System.ServiceModel.NetNamedPipeSecurity.Transport*> 這是由 WCF 用於 XAML 整合。"
  syntax:
    content: public bool ShouldSerializeTransport ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.ServiceModel.NetNamedPipeSecurity.Transport*>屬性值應該序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.NetNamedPipeSecurity.Transport*>"
  overload: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetNamedPipeSecurity.Transport
  id: Transport
  parent: System.ServiceModel.NetNamedPipeSecurity
  langs:
  - csharp
  name: Transport
  nameWithType: NetNamedPipeSecurity.Transport
  fullName: System.ServiceModel.NetNamedPipeSecurity.Transport
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得具名的管道繫結的傳輸安全性。"
  remarks: "這個方法可讓存取<xref:System.Net.Security.ProtectionLevel><xref:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel%2A>.</xref:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel%2A>透過具名的管道傳輸</xref:System.Net.Security.ProtectionLevel>"
  example:
  - "The following code shows how to access the Transport property:  \n  \n [!code-cs[S_UENetNamedPipeSecurity#3](~/add/codesnippet/csharp/p-system.servicemodel.ne_21_1.cs)]"
  syntax:
    content: public System.ServiceModel.NamedPipeTransportSecurity Transport { get; set; }
    return:
      type: System.ServiceModel.NamedPipeTransportSecurity
      description: "值<xref href=&quot;System.ServiceModel.NamedPipeTransportSecurity&quot;></xref>具名的管道繫結。"
  overload: System.ServiceModel.NetNamedPipeSecurity.Transport*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.NetNamedPipeSecurity.#ctor
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: NetNamedPipeSecurity()
  nameWithType: NetNamedPipeSecurity.NetNamedPipeSecurity()
  fullName: System.ServiceModel.NetNamedPipeSecurity.NetNamedPipeSecurity()
- uid: System.ServiceModel.NetNamedPipeSecurity.Mode
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: Mode
  nameWithType: NetNamedPipeSecurity.Mode
  fullName: System.ServiceModel.NetNamedPipeSecurity.Mode
- uid: System.ServiceModel.NetNamedPipeSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: NetNamedPipeSecurityMode
  nameWithType: NetNamedPipeSecurityMode
  fullName: System.ServiceModel.NetNamedPipeSecurityMode
- uid: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: ShouldSerializeTransport()
  nameWithType: NetNamedPipeSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.NetNamedPipeSecurity.Transport
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: Transport
  nameWithType: NetNamedPipeSecurity.Transport
  fullName: System.ServiceModel.NetNamedPipeSecurity.Transport
- uid: System.ServiceModel.NamedPipeTransportSecurity
  parent: System.ServiceModel
  isExternal: false
  name: NamedPipeTransportSecurity
  nameWithType: NamedPipeTransportSecurity
  fullName: System.ServiceModel.NamedPipeTransportSecurity
- uid: System.ServiceModel.NetNamedPipeSecurity.#ctor*
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: NetNamedPipeSecurity
  nameWithType: NetNamedPipeSecurity.NetNamedPipeSecurity
- uid: System.ServiceModel.NetNamedPipeSecurity.Mode*
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: Mode
  nameWithType: NetNamedPipeSecurity.Mode
- uid: System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport*
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: ShouldSerializeTransport
  nameWithType: NetNamedPipeSecurity.ShouldSerializeTransport
- uid: System.ServiceModel.NetNamedPipeSecurity.Transport*
  parent: System.ServiceModel.NetNamedPipeSecurity
  isExternal: false
  name: Transport
  nameWithType: NetNamedPipeSecurity.Transport
