### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.Principal
  id: Principal
  children:
  - System.DirectoryServices.AccountManagement.Principal.#ctor
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  langs:
  - csharp
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
  type: Class
  summary: "封裝的帳戶資料和通用於所有的安全性主體的作業。 這是抽象的基底類別衍生來源的所有安全性主體。"
  remarks: "從衍生的類別建構函式來初始化基底類別，衍生自這個類別的自訂延伸模組類別可以呼叫這個建構函式。 如需詳細資訊，請參閱[主體延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)概觀主題。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Name ( {Name} )")]

      public abstract class Principal : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "初始化的新執行個體<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>類別。 這個建構函式由衍生類別建構函式來初始化基底類別呼叫，並不適合直接從您的程式碼呼叫。"
  remarks: "從衍生的類別建構函式來初始化基底類別，衍生自這個類別的自訂延伸模組類別可以呼叫這個建構函式。 如需詳細資訊，請參閱[主體延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)概觀主題。"
  syntax:
    content: protected Principal ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  id: CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "決定是否<> *> 或<> *> 已經在這個類別上呼叫方法。 從這個主體的類別衍生的類別會呼叫這個方法。"
  remarks: "這個方法會檢查之前它會判斷是否已刪除的物件是否已經過處置。"
  syntax:
    content: protected void CheckDisposedOrDeleted ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.DirectoryServices.AccountManagement.Principal.Dispose*>這個主體的物件上呼叫方法。</xref:System.DirectoryServices.AccountManagement.Principal.Dispose*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.DirectoryServices.AccountManagement.Principal.Delete*>這個主體的物件上呼叫方法。</xref:System.DirectoryServices.AccountManagement.Principal.Delete*>"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  id: Context
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得主體相關聯的主要內容。"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalContext Context { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>物件，其中包含與這個主體相關聯的內容。"
  overload: System.DirectoryServices.AccountManagement.Principal.Context*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  id: ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得與這個主體相關聯的主要內容。"
  syntax:
    content: protected System.DirectoryServices.AccountManagement.PrincipalContext ContextRaw { get; set; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>物件，其中包含與這個主體相關聯的內容。"
  overload: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  id: ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得指定的主體與這個主體相關聯的內容類型的內容類型列舉值。"
  remarks: "內容型別是在物件上設定主體內容中<xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式。</xref:System.DirectoryServices.AccountManagement.PrincipalContext> 此類別中所儲存的值與相關聯<xref:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType%2A>屬性。</xref:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType%2A>"
  syntax:
    content: public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }
    return:
      type: System.DirectoryServices.AccountManagement.ContextType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.ContextType&quot;> </xref>列舉值，指定內容型別。"
  overload: System.DirectoryServices.AccountManagement.Principal.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  id: Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "刪除存放區中的主體物件。"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "不會保存存放區中的物件。       已刪除物件。       目標內容類型必須符合目前的主體的內容類型。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  id: Description
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定主體的描述。"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "此主體或 null，如果沒有描述的描述文字。"
  overload: System.DirectoryServices.AccountManagement.Principal.Description*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  id: DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定這個主體的顯示名稱。"
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "顯示此主體名稱或 null，如果沒有顯示名稱。"
  overload: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "處置目前的執行個體<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>物件。"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  id: DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得這個主體辨別的名稱 (DN)。"
  syntax:
    content: public string DistinguishedName { get; }
    return:
      type: System.String
      description: "此主體或 null，如果沒有任何 DN DN。"
  overload: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回布林值，指定提供的物件是否等於目前的物件。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref>會與目前的執行個體相比較的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提供的物件和目前的主體物件代表相同的基礎主體中存放區。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.Principal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  id: ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "擷取擴充的類別物件的屬性。"
  syntax:
    content: protected object[] ExtensionGet (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "要擷取的屬性名稱。"
    return:
      type: System.Object[]
      description: "傳回的物件、 陣列或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果屬性不存在具有該名稱。 請參閱[System.DirectoryServices.AccountManagement 原則延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)如需使用這個函式的範例。"
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  id: ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "擴充的類別中設定屬性的值。"
  remarks: "請參閱[System.DirectoryServices.AccountManagement 原則延伸](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00)如需此函式的範例。"
  syntax:
    content: protected void ExtensionSet (string attribute, object value);
    parameters:
    - id: attribute
      type: System.String
      description: "屬性的名稱。"
    - id: value
      type: System.Object
      description: "物件，其中包含屬性的值。"
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回符合指定的識別值的主體物件。"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: identityValue
      type: System.String
      description: "主體的識別。 這個參數可以是包含在任何格式<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>列舉型別。"
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref>物件符合指定的識別值和類型，或如果找不到相符的項目為 null。"
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "找不到符合目前物件的多個主體物件。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回符合指定的身分識別類型和值的主體物件。 這個版本的 FindByIdentity 方法會判斷身分識別值的格式。"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref>列舉值，指定的格式`identityValue`參數。"
    - id: identityValue
      type: System.String
      description: "主體的識別。 這個參數可以是包含在任何格式<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>列舉型別。"
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref>物件符合指定的識別值和類型，或如果找不到相符的項目為 null。"
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "找不到符合目前物件的多個主體物件。"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "不是有效的識別類型<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref>列舉值。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回符合指定的身分識別類型和值的主體物件。 由衍生類別的實作會呼叫這個方法**FindByIdentity**將搜尋限制衍生的類別類型的方法，不適合直接從您的程式碼呼叫。"
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: principalType
      type: System.Type
      description: "這傳回結果的物件類型。 這必須是型別<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>或型別衍生自<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>類別。"
    - id: identityValue
      type: System.String
      description: "主體的識別。"
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref>物件符合指定的識別值和類型，或如果找不到相符的項目為 null。"
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回符合指定的身分識別類型和值的主體物件。 由衍生類別的實作會呼叫這個方法**FindByIdentity**將搜尋限制衍生的類別類型的方法，不適合直接從您的程式碼呼叫。"
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: principalType
      type: System.Type
      description: "這傳回結果的物件類型。 這必須是型別<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>或型別衍生自<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>類別。"
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref>列舉值，指定識別值的型別。"
    - id: identityValue
      type: System.String
      description: "主體的識別。"
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref>物件符合指定的識別值和類型，或如果找不到相符的項目為 null。"
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  id: GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回指定的群組，其中目前的主體為其成員的群組物件的集合。"
  remarks: "這個方法會傳回主體是直接成員的; 的群組會執行遞迴搜尋。 遞迴搜尋結果可供使用者主體物件。 如需詳細資訊，請參閱<xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>方法。</xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>       這個方法所傳回的群組可能包含從不同的範圍和儲存在主體群組。 例如，如果主體是具有的 DN 的 AD DS 物件&quot;CN = SpecialGroups，DC = Fabrikam，DC = com，傳回的集合可以包含屬於群組&quot;CN = NormalGroups，DC = Fabrikam，DC = com。       如果目前的主體是 AD DS 主體，傳回的群組會包含主體的主要群組，在 AD DS 物件上的&quot;primaryGroupId&quot;屬性所示。"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "集合<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>物件，以指定目前的主體為成員的群組。"
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回群組物件主體的成員，並以存在於指定的內容參數所提供的存放區中的集合。"
  remarks: "這個方法會傳回主體是直接成員的; 的群組會執行遞迴搜尋。 遞迴搜尋結果可供使用者主體物件。 如需詳細資訊，請參閱<xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>方法。</xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A>       這個方法所傳回的群組可能包含從不同的範圍和儲存在主體群組。 例如，如果主體是具有的 DN 的 AD DS 物件&quot;CN = SpecialGroups，DC = Fabrikam，DC = com，傳回的集合可以包含屬於群組&quot;CN = NormalGroups，DC = Fabrikam，DC = com。       如果目前的主體是 AD DS 主體，傳回的群組會包含主體的主要群組的 AD DS 物件的主要群組識別碼屬性所示。"
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups (System.DirectoryServices.AccountManagement.PrincipalContext contextToQuery);
    parameters:
    - id: contextToQuery
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>物件，指定對其執行查詢的內容。       當內容位於另一個網域時，針對主體的物件表示指定的內容中執行查詢。"
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "集合<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>物件，以指定目前的主體為成員的群組。"
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  id: GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "擷取所建立的主體物件，適合用於雜湊演算法和資料結構，例如雜湊表的內容雜湊。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的主體雜湊碼。"
  overload: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  id: GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回基礎<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>為主體的物件提供連絡人資料的物件。"
  syntax:
    content: public object GetUnderlyingObject ();
    parameters: []
    return:
      type: System.Object
      description: "基礎<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  exceptions:
  - type: system.InvalidOperationExtension
    commentId: T:system.InvalidOperationExtension
    description: "目前的主體尚未保存，而且沒有相關聯<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>物件。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  id: GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回基礎物件類型。"
  syntax:
    content: public Type GetUnderlyingObjectType ();
    parameters: []
    return:
      type: System.Type
      description: "基礎物件類型。 型別是 AD DS、 AD LDS 和 SAM <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  id: Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得與這個主體相關聯的 GUID。"
  remarks: "這個屬性一律會傳回 null 時<xref:System.DirectoryServices.AccountManagement.Principal.ContextType%2A>屬性設定為電腦。</xref:System.DirectoryServices.AccountManagement.Principal.ContextType%2A>"
  syntax:
    content: public Nullable<Guid> Guid { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "Nullable<xref:System.Guid>與這個主體相關聯，則為 null，如果沒有 GUID。</xref:System.Guid>"
  overload: System.DirectoryServices.AccountManagement.Principal.Guid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回布林值，指定主體是否為指定群組的成員。"
  remarks: "如果目前的主體是 AD DS 主體，傳回的群組會包含主體的主要群組，做為 AD DS 物件上的主要群組識別碼屬性所指定。"
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.GroupPrincipal group);
    parameters:
    - id: group
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>物件主體的成員資格所決定。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主體是在指定的群組的成員否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>指定群組中找不到參數。"
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "多個比對<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>找不到。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回布林值，指定主體是否為識別型別和值所指定之群組的成員。"
  remarks: "如果目前的主體是 AD DS 主體，傳回的群組會包含主體的主要群組，做為 AD DS 物件上的主要群組識別碼屬性所指定。"
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref>列舉值，指定識別值的型別。"
    - id: identityValue
      type: System.String
      description: "群組的識別。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果主體是在指定的群組的成員否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "識別類型或值未對應到<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;> </xref>。"
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "多個比對<xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>找不到。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  id: Name
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定這個主體的名稱。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "如果未設定名稱屬性為 null 之主體的名稱。"
  overload: System.DirectoryServices.AccountManagement.Principal.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "應用程式會嘗試將名稱設定為 null。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  id: SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定這個主體的 SAM 帳戶名稱。"
  syntax:
    content: public string SamAccountName { get; set; }
    return:
      type: System.String
      description: "此主體或如果已設定沒有名稱為 null 的 SAM 帳戶名稱。"
  overload: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "應用程式會嘗試將 SAM 帳戶名稱設定為 null。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "應用程式嘗試在持續性 principal 上設定之 SAM 帳戶名稱。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  id: Save
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "將所做的變更儲存至存放區的主體物件上。 如果這是新的主體物件，這個方法會將它插入到存放區。"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主體已關聯與<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref>物件。       這種主體無法插入存放區中。"
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "儲存變更 tnso 存放區，或更新存放區中的群組成員資格時，就會發生例外狀況。"
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "主體已出現在存放區。"
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "密碼不符合複雜性需求。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "將所做的變更儲存至存放區的主體物件上。 如果這是新的主體物件，這個方法會將它插入指定的內容。 如果主體已經保存，它會從原始內容移至指定的內容。"
  remarks: "如果指定主體的內容與現有的內容不同，主體會移至指定的內容，而且主體的物件不再位於舊位置中。 如果指定的內容相同的現有內容，此方法會儲存在存放區的主體物件上所做的更新。 指定之內容的內容型別必須是目前的內容型別相同的型別。 使用電腦內容型別可能不會呼叫這個方法。"
  syntax:
    content: public void Save (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref>指定之伺服器或網域的作業。"
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "主體已關聯與<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref>物件。       這種主體無法插入存放區中。"
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "將變更儲存至存放區，或更新存放區中的群組成員資格時，就會發生例外狀況。"
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "主體已出現在存放區。"
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "密碼不符合複雜性需求。"
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  id: Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得主體的安全性識別碼 (SID)。"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier Sid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>此資料庫主體，則為 null，如果沒有任何 SID。"
  overload: System.DirectoryServices.AccountManagement.Principal.Sid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  id: StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得結構化物件的類別目錄屬性。"
  syntax:
    content: public string StructuralObjectClass { get; }
    return:
      type: System.String
      description: "結構化物件的類別目錄屬性。"
  overload: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  id: ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "傳回目前的主體物件的使用者易記的字串表示。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "目前的字串表示法<xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref>物件。"
  overload: System.DirectoryServices.AccountManagement.Principal.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  id: UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "取得或設定與這個主體相關聯的使用者主體名稱 (UPN)。"
  remarks: "設定這個屬性為 null 可移除現有的 UPN，如果有的話。"
  syntax:
    content: public string UserPrincipalName { get; set; }
    return:
      type: System.String
      description: "如果有任何尚未設定 UPN，與此主體或 null 相關聯的 UPN。"
  overload: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  exceptions:
  - type: System.Inval>DidOperationException
    commentId: T:System.Inval>DidOperationException
    description: "基礎存放區不支援這個屬性。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: system.InvalidOperationExtension
  isExternal: true
  name: system.InvalidOperationExtension
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.PrincipalExistsException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalExistsException
  nameWithType: PrincipalExistsException
  fullName: System.DirectoryServices.AccountManagement.PrincipalExistsException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.Inval>DidOperationException
  isExternal: true
  name: System.Inval>DidOperationException
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.ContextType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: ContextType
  nameWithType: ContextType
  fullName: System.DirectoryServices.AccountManagement.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.Principal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal
  nameWithType: Principal.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted
  nameWithType: Principal.CheckDisposedOrDeleted
- uid: System.DirectoryServices.AccountManagement.Principal.Context*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete
  nameWithType: Principal.Delete
- uid: System.DirectoryServices.AccountManagement.Principal.Description*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose
  nameWithType: Principal.Dispose
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals
  nameWithType: Principal.Equals
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet
  nameWithType: Principal.ExtensionGet
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet
  nameWithType: Principal.ExtensionSet
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity
  nameWithType: Principal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType
  nameWithType: Principal.FindByIdentityWithType
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups
  nameWithType: Principal.GetGroups
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode
  nameWithType: Principal.GetHashCode
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject
  nameWithType: Principal.GetUnderlyingObject
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType
  nameWithType: Principal.GetUnderlyingObjectType
- uid: System.DirectoryServices.AccountManagement.Principal.Guid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf
  nameWithType: Principal.IsMemberOf
- uid: System.DirectoryServices.AccountManagement.Principal.Name*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save
  nameWithType: Principal.Save
- uid: System.DirectoryServices.AccountManagement.Principal.Sid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString
  nameWithType: Principal.ToString
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
