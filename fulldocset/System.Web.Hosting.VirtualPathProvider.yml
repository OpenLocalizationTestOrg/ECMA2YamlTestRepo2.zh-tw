### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualPathProvider
  id: VirtualPathProvider
  children:
  - System.Web.Hosting.VirtualPathProvider.#ctor
  - System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  - System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  - System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  - System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  - System.Web.Hosting.VirtualPathProvider.Initialize
  - System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  - System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  - System.Web.Hosting.VirtualPathProvider.Previous
  langs:
  - csharp
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
  type: Class
  summary: "提供一組啟用 Web 應用程式，從虛擬檔案系統中擷取資源的方法。"
  remarks: "VirtualPathProvider 類別提供一組實作 Web 應用程式的虛擬檔案系統的方法。 在虛擬檔案系統中，檔案和目錄管理以外的伺服器作業系統所提供的檔案系統資料存放區。 例如，您可以使用虛擬檔案系統來儲存 SQL Server 資料庫中的內容。       虛擬檔案系統中，您可以在要求上儲存處理任何檔案。 這包括:-ASP.NET 網頁、 主版頁面、 使用者控制項和其他物件。      -.jpg.htm 等副檔名的標準網頁。      -對應至任何自訂延伸模組<xref:System.Web.Compilation.BuildProvider>執行個體。</xref:System.Web.Compilation.BuildProvider>      -任何名為佈景主題`App_Theme`資料夾。       您無法儲存 ASP.NET 應用程式資料夾或虛擬檔案系統中產生應用程式層級組件的檔案。 這包括:-Global.asax 檔案。      -Web.config 檔案。      <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider>所使用的站台對應資料檔案      -目錄包含應用程式組件，或產生應用程式組件︰ `Bin`， `App_Code`， `App_GlobalResources`，任何`App_LocalResources`。      -應用程式資料資料夾， `App_Data`。      > [!NOTE] > 如果部署先行編譯網站時，未編譯 VirtualPathProvider 執行個體所提供的內容，並沒有 VirtualPathProvider 執行個體所使用的先行編譯的站台。      ## 註冊自訂 VirtualPathProvider A VirtualPathProvider 執行個體應該使用來註冊與 ASP.NET 編譯系統<xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName>之前的任何頁面剖析或編譯由 Web 應用程式執行的方法。</xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName>       VirtualPathProvider 執行個體中的註冊通常`AppInitialize`方法中定義`App_Code`目錄，或在`Application_Start`中的事件`Global.asax`檔案。 如需範例登錄 VirtualPathProvider 的執行個體中`AppInitialize`方法，請參閱 < 範例 > 一節。       您可以註冊 VirtualPathProvider 執行個體在其他事件，但編譯和快取之前 VirtualPathProvider 執行個體註冊頁面將不會失效，即使新 VirtualPathProvider 執行個體現在會提供來源先前已編譯的頁面。"
  example:
  - "The following code example is a VirtualPathProvider class implementation that creates a virtual file system using information stored in a <xref:System.Data.DataSet> object. The code example works with the code examples for the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object.  \n  \n This example has four parts: the VirtualPathProvider class implementation, an XML data file used to populate the <xref:System.Data.DataSet> object, an `AppStart` object that contains an `AppInitialize` method used to register the VirtualPathProvider class with the compilation system, and an ASP.NET page that provides links to the virtual files.  \n  \n To use this sample code in an application, follow these steps.  \n  \n1.  Create a sample application on your Web server.  \n  \n2.  Copy the source code for the custom VirtualPathProvider object (see below) into a file in the application's `App_Code` directory.  \n  \n3.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualDirectory> object (see the Example section in the <xref:System.Web.Hosting.VirtualDirectory> class overview topic) into a file in the application's `App_Code` directory.  \n  \n4.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualFile> object (see the Example section in the <xref:System.Web.Hosting.VirtualFile> class overview topic) into a file in the application's `App_Code` directory.  \n  \n5.  Copy the source code for the `AppStart` object (see below) into a file in the application's `App_Code` directory.  \n  \n6.  Copy the XML data (see below) into a file named `XMLData.xml` into a file in the application's `App_Data` directory.  \n  \n7.  Copy the `default.aspx` file (see below) into the root directory of the sample application. Use a Web browser to open the `default.aspx` file, and then click the links on the page to see the contents of the virtual files.  \n  \n The first example is a custom VirtualPathProvider class. The <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> and <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> methods are overridden to indicate whether a requested directory is present in the virtual file system. The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> and <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> methods are overridden to return custom <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> instances containing information from the virtual file system.  \n  \n The class also provides a `GetVirtualData` method used by the <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> classes to access the <xref:System.Data.DataSet> object containing the virtual file system data. In a production implementation, this method would typically be implemented in a business object responsible for interacting with the data store.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#20](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_1.vb)]  \n  \n The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom VirtualPathProvider object. This XML data is used to demonstrate using the VirtualPathProvider, <xref:System.Web.Hosting.VirtualDirectory>, and <xref:System.Web.Hosting.VirtualFile> objects to retrieve data from external data and is not intended to represent a production-quality data store.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n  <resource type=\"dir\"   \n    path=\"/vrDir\"   \n    parentPath=\"\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileA.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileB.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileB.\">  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirA\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirA/Level2FileA.vrf\"   \n      parentPath=\"/vrDir/Level2DirA\"   \n      content=\"This is the content of file Level2FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirA/Level2FileB.vrf\"  \n      parentPath=\"/vrDir/Level2DirA\"   \n      content=\"This is the content of file Level2FileB.\">  \n    </resource>  \n  </resource>  \n  <resource type=\"dir\"   \n    path=\"/vrDir/Level2DirB\"   \n    parentPath=\"/vrDir\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirB/Level2FileA.vrf\"   \n      parentPath=\"/vrDir/Level2DirB\"   \n      content=\"This is the content of file Level2FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirB/Level2FileB.vrf\"  \n      parentPath=\"/vrDir/Level2DirB\"   \n      content=\"This is the content of file Level2FileB.\">  \n    </resource>  \n  </resource>  \n</resource>  \n```  \n  \n The third example provides an `AppStart` object that contains an `AppInitialize` method. This method is called during the initialization of an ASP.NET application to perform any custom initialization required. In this case, it registers the custom VirtualPathProvider object with the ASP.NET build system.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_2.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#10](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_2.cs)]  \n  \n The last example is an ASP.NET page that contains links to the virtual files contained in the virtual file system.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#1](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_3.aspx)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#1](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_3.aspx)]"
  syntax:
    content: 'public abstract class VirtualPathProvider : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: VirtualPathProvider()
  nameWithType: VirtualPathProvider.VirtualPathProvider()
  fullName: System.Web.Hosting.VirtualPathProvider.VirtualPathProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "初始化類別的繼承的類別執行個體。 可以呼叫這個建構函式只能由繼承的類別。"
  remarks: "在覆寫 VirtualPathProvider 建構函式，延遲後必須發生的任何初始化<xref:System.Web.Hosting.VirtualPathProvider>物件已登錄至<xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>方法。</xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> </xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the VirtualPathProvider constructor that initializes a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#25](~/add/codesnippet/csharp/m-system.web.hosting.vir_4_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_4_1.vb)]"
  syntax:
    content: protected VirtualPathProvider ();
    parameters: []
  overload: System.Web.Hosting.VirtualPathProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  id: CombineVirtualPaths(System.String,System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: CombineVirtualPaths(String,String)
  nameWithType: VirtualPathProvider.CombineVirtualPaths(String,String)
  fullName: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "結合了以傳回虛擬資源的完整路徑的相對路徑的基底路徑。"
  remarks: "使用 CombineVirtualPaths 方法來檢查虛擬資源的相對路徑的內容，並執行所需進行任何修改。       預設實作會結合`basePath`和`relativePath`根據標準 ASP.NET 路徑的處理序的參數。"
  syntax:
    content: public virtual string CombineVirtualPaths (string basePath, string relativePath);
    parameters:
    - id: basePath
      type: System.String
      description: "應用程式的基底路徑。"
    - id: relativePath
      type: System.String
      description: "虛擬的資源，相對於基底路徑的路徑。"
    return:
      type: System.String
      description: "虛擬資源的完整路徑。"
  overload: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: VirtualPathProvider.DirectoryExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.DirectoryExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "取得值，指出目錄是否存在於虛擬檔案系統。"
  remarks: "覆寫以表示該資源所代表編譯系統 DirectoryExists 方法`virtualDir`存在於虛擬檔案系統提供的這<xref:System.Web.Hosting.VirtualPathProvider>執行個體。</xref:System.Web.Hosting.VirtualPathProvider>       如果您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別不支援目錄，DirectoryExists 方法應傳回`false`。</xref:System.Web.Hosting.VirtualPathProvider>      > [!NOTE] > 如果您的虛擬檔案系統將會包含網站的佈景主題 (藉由建立虛擬機器`App_Themes`目錄)，您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別必須支援的目錄。</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the DirectoryExists method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#22](~/add/codesnippet/csharp/m-system.web.hosting.vir_5_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_5_1.vb)]"
  syntax:
    content: public virtual bool DirectoryExists (string virtualDir);
    parameters:
    - id: virtualDir
      type: System.String
      description: "虛擬目錄的路徑。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果該目錄存在於虛擬檔案系統。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Hosting.VirtualPathProvider.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: VirtualPathProvider.FileExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.FileExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "取得值，指出檔案是否存在於虛擬檔案系統。"
  remarks: "覆寫以表示該資源所代表編譯系統 FileExists 方法`virtualPath`存在於虛擬檔案系統提供的這<xref:System.Web.Hosting.VirtualPathProvider>執行個體。</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the FileExists method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#21](~/add/codesnippet/csharp/m-system.web.hosting.vir_6_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_6_1.vb)]"
  syntax:
    content: public virtual bool FileExists (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬檔案的路徑。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案存在於虛擬檔案系統。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Hosting.VirtualPathProvider.FileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  id: GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetCacheDependency(String,IEnumerable,DateTime)
  nameWithType: VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "建立根據指定的虛擬路徑的快取相依性。"
  remarks: "GetCacheDependency 方法的預設實作會傳回`null`。 快取虛擬資源供以後使用您必須覆寫 GetCacheDependency 方法或<xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>方法。</xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>"
  example:
  - "The following code example implements the GetCacheDependency method for a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#28](~/add/codesnippet/csharp/a8fb412c-a81c-4f3f-b624-_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/add/codesnippet/visualbasic/a8fb412c-a81c-4f3f-b624-_1.vb)]"
  syntax:
    content: public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);
    parameters:
    - id: virtualPath
      type: System.String
      description: "主要虛擬資源的路徑。"
    - id: virtualPathDependencies
      type: System.Collections.IEnumerable
      description: "主要虛擬資源所需的其他資源的路徑陣列。"
    - id: utcStart
      type: System.DateTime
      description: "已讀取的虛擬資源 UTC 時間。"
    return:
      type: System.Web.Caching.CacheDependency
      description: "A <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref>物件指定的虛擬資源。"
  overload: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  id: GetCacheKey(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetCacheKey(String)
  nameWithType: VirtualPathProvider.GetCacheKey(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "傳回要用於指定的虛擬路徑的快取索引鍵。"
  remarks: "您可以使用 GetCacheKey 方法來提供虛擬資源的自訂快取索引鍵。 如果您不是 GetCacheKey 方法的覆寫，快取索引鍵使用的虛擬路徑。"
  syntax:
    content: public virtual string GetCacheKey (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬資源的路徑。"
    return:
      type: System.String
      description: "指定的虛擬資源快取索引鍵。"
  overload: System.Web.Hosting.VirtualPathProvider.GetCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetDirectory(String)
  nameWithType: VirtualPathProvider.GetDirectory(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetDirectory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "從虛擬檔案系統中取得虛擬目錄。"
  remarks: "GetDirectory 方法傳回的子系<xref:System.Web.Hosting.VirtualDirectory>包含檔案和目錄中指定的目錄中所包含的類別`virtualDir`參數。</xref:System.Web.Hosting.VirtualDirectory>       如果您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別不支援目錄，GetDirectory 方法應傳回`null`。</xref:System.Web.Hosting.VirtualPathProvider>      > [!NOTE] > 如果您的虛擬檔案系統將會包含網站的佈景主題 (藉由建立虛擬機器`App_Themes`目錄)，您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別必須支援的目錄。</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the GetDirectory method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#24](~/add/codesnippet/csharp/m-system.web.hosting.vir_8_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_8_1.vb)]"
  syntax:
    content: public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);
    parameters:
    - id: virtualDir
      type: System.String
      description: "虛擬目錄的路徑。"
    return:
      type: System.Web.Hosting.VirtualDirectory
      description: "子系<xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;></xref>代表目錄的虛擬檔案系統中的類別。"
  overload: System.Web.Hosting.VirtualPathProvider.GetDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  id: GetFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetFile(String)
  nameWithType: VirtualPathProvider.GetFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "取得虛擬檔案從虛擬檔案系統。"
  remarks: "在 GetFile 方法傳回的子系<xref:System.Web.Hosting.VirtualFile>類別，代表所指定的檔案`virtualPath`參數。</xref:System.Web.Hosting.VirtualFile>"
  example:
  - "The following code example is an implementation of the GetFile method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/csharp/m-system.web.hosting.vir_3_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_3_1.vb)]"
  syntax:
    content: public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬檔案的路徑。"
    return:
      type: System.Web.Hosting.VirtualFile
      description: "子系<xref href=&quot;System.Web.Hosting.VirtualFile&quot;></xref>類別，表示虛擬檔案系統中的檔案。"
  overload: System.Web.Hosting.VirtualPathProvider.GetFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  id: GetFileHash(System.String,System.Collections.IEnumerable)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetFileHash(String,IEnumerable)
  nameWithType: VirtualPathProvider.GetFileHash(String,IEnumerable)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFileHash(String,IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "傳回指定的虛擬路徑的雜湊。"
  remarks: "使用 GetFileHash 方法以提供虛擬檔案系統資源的相依性的雜湊。"
  syntax:
    content: public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);
    parameters:
    - id: virtualPath
      type: System.String
      description: "主要虛擬資源的路徑。"
    - id: virtualPathDependencies
      type: System.Collections.IEnumerable
      description: "主要虛擬資源所需之其他虛擬資源的路徑陣列。"
    return:
      type: System.String
      description: "指定的虛擬路徑的雜湊。"
  overload: System.Web.Hosting.VirtualPathProvider.GetFileHash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.Initialize
  id: Initialize
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: Initialize()
  nameWithType: VirtualPathProvider.Initialize()
  fullName: System.Web.Hosting.VirtualPathProvider.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "初始化<xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;></xref>執行個體。"
  remarks: "ASP.NET 編譯系統與登錄提供者之後，會呼叫 Initialize 方法。 Initialize 方法用來提供之後所需的任何初始化<xref:System.Web.Hosting.VirtualPathProvider>執行個體放入應用程式所佔的環境。</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the Initialize method that sets the path to a data file from the application's <xref:System.Web.Hosting.HostingEnvironment> instance. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#26](~/add/codesnippet/csharp/m-system.web.hosting.vir_0_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_0_1.vb)]"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.Hosting.VirtualPathProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualPathProvider.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "提供<xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;></xref>物件無限的存留期由防止建立租用。"
  remarks: "這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別方法</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 它會一律傳回`null`，因而會防止建立會限制的使用期<xref:System.Web.Hosting.VirtualPathProvider>物件存留期。</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  id: OpenFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: OpenFile(String)
  nameWithType: VirtualPathProvider.OpenFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.OpenFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "傳回虛擬檔案的資料流。"
  remarks: "OpenFile 方法是便利的方法，可讓您從虛擬檔案取得資料流，而不建立<xref:System.Web.Hosting.VirtualPathProvider>執行個體。</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: public static System.IO.Stream OpenFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "虛擬檔案的路徑。"
    return:
      type: System.IO.Stream
      description: "唯讀<xref:System.IO.Stream>針對指定的虛擬檔案或資源物件。</xref:System.IO.Stream>"
  overload: System.Web.Hosting.VirtualPathProvider.OpenFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.Previous
  id: Previous
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: Previous
  nameWithType: VirtualPathProvider.Previous
  fullName: System.Web.Hosting.VirtualPathProvider.Previous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "取得參考先前已註冊<xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;></xref>編譯系統中的物件。"
  remarks: "當<xref:System.Web.Hosting.VirtualPathProvider>物件已向 ASP.NET 編譯系統，它會加入至提供者的鏈結。</xref:System.Web.Hosting.VirtualPathProvider> 使用手動處理關閉先前的上一步屬性<xref:System.Web.Hosting.VirtualPathProvider>物件鏈結中，如果要求的路徑不由這提供<xref:System.Web.Hosting.VirtualPathProvider>執行個體。</xref:System.Web.Hosting.VirtualPathProvider> </xref:System.Web.Hosting.VirtualPathProvider>       服務中的檔案從檔案系統的預設 ASP.NET 提供者一律結束路徑提供者的鏈結。"
  example:
  - "The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method. If the requested virtual directory does not begin with the string `\"/vrdir\"`, the method uses the Previous property to pass the request to the next <xref:System.Web.Hosting.VirtualPathProvider> object in the chain. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/csharp/p-system.web.hosting.vir_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/visualbasic/p-system.web.hosting.vir_1.vb)]"
  syntax:
    content: protected System.Web.Hosting.VirtualPathProvider Previous { get; }
    return:
      type: System.Web.Hosting.VirtualPathProvider
      description: "下一步 <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref>編譯系統中的物件。"
  overload: System.Web.Hosting.VirtualPathProvider.Previous*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualPathProvider.#ctor
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: VirtualPathProvider()
  nameWithType: VirtualPathProvider.VirtualPathProvider()
  fullName: System.Web.Hosting.VirtualPathProvider.VirtualPathProvider()
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: CombineVirtualPaths(String,String)
  nameWithType: VirtualPathProvider.CombineVirtualPaths(String,String)
  fullName: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: VirtualPathProvider.DirectoryExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.DirectoryExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: FileExists(String)
  nameWithType: VirtualPathProvider.FileExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.FileExists(String)
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheDependency(String,IEnumerable,DateTime)
  nameWithType: VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheKey(String)
  nameWithType: VirtualPathProvider.GetCacheKey(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheKey(String)
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetDirectory(String)
  nameWithType: VirtualPathProvider.GetDirectory(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetDirectory(String)
- uid: System.Web.Hosting.VirtualDirectory
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualDirectory
  nameWithType: VirtualDirectory
  fullName: System.Web.Hosting.VirtualDirectory
- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFile(String)
  nameWithType: VirtualPathProvider.GetFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFile(String)
- uid: System.Web.Hosting.VirtualFile
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualFile
  nameWithType: VirtualFile
  fullName: System.Web.Hosting.VirtualFile
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFileHash(String,IEnumerable)
  nameWithType: VirtualPathProvider.GetFileHash(String,IEnumerable)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFileHash(String,IEnumerable)
- uid: System.Web.Hosting.VirtualPathProvider.Initialize
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Initialize()
  nameWithType: VirtualPathProvider.Initialize()
  fullName: System.Web.Hosting.VirtualPathProvider.Initialize()
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualPathProvider.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: OpenFile(String)
  nameWithType: VirtualPathProvider.OpenFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.OpenFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Hosting.VirtualPathProvider.Previous
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Previous
  nameWithType: VirtualPathProvider.Previous
  fullName: System.Web.Hosting.VirtualPathProvider.Previous
- uid: System.Web.Hosting.VirtualPathProvider
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
- uid: System.Web.Hosting.VirtualPathProvider.#ctor*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider.VirtualPathProvider
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: CombineVirtualPaths
  nameWithType: VirtualPathProvider.CombineVirtualPaths
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: DirectoryExists
  nameWithType: VirtualPathProvider.DirectoryExists
- uid: System.Web.Hosting.VirtualPathProvider.FileExists*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: FileExists
  nameWithType: VirtualPathProvider.FileExists
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheDependency
  nameWithType: VirtualPathProvider.GetCacheDependency
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheKey
  nameWithType: VirtualPathProvider.GetCacheKey
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetDirectory
  nameWithType: VirtualPathProvider.GetDirectory
- uid: System.Web.Hosting.VirtualPathProvider.GetFile*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFile
  nameWithType: VirtualPathProvider.GetFile
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFileHash
  nameWithType: VirtualPathProvider.GetFileHash
- uid: System.Web.Hosting.VirtualPathProvider.Initialize*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Initialize
  nameWithType: VirtualPathProvider.Initialize
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualPathProvider.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: OpenFile
  nameWithType: VirtualPathProvider.OpenFile
- uid: System.Web.Hosting.VirtualPathProvider.Previous*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Previous
  nameWithType: VirtualPathProvider.Previous
