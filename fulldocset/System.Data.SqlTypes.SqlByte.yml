### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlByte
  id: SqlByte
  children:
  - System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  - System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Equals(System.Object)
  - System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.GetHashCode
  - System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.IsNull
  - System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.MaxValue
  - System.Data.SqlTypes.SqlByte.MinValue
  - System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Null
  - System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)
  - System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Parse(System.String)
  - System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlByte.ToSqlBoolean
  - System.Data.SqlTypes.SqlByte.ToSqlDecimal
  - System.Data.SqlTypes.SqlByte.ToSqlDouble
  - System.Data.SqlTypes.SqlByte.ToSqlInt16
  - System.Data.SqlTypes.SqlByte.ToSqlInt32
  - System.Data.SqlTypes.SqlByte.ToSqlInt64
  - System.Data.SqlTypes.SqlByte.ToSqlMoney
  - System.Data.SqlTypes.SqlByte.ToSqlSingle
  - System.Data.SqlTypes.SqlByte.ToSqlString
  - System.Data.SqlTypes.SqlByte.ToString
  - System.Data.SqlTypes.SqlByte.Value
  - System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Zero
  langs:
  - csharp
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
  type: Struct
  summary: "代表 8 位元不帶正負號的整數，介於 0 到 255，儲存在資料庫或從資料庫擷取。"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlByte : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: SqlByte(Byte)
  nameWithType: SqlByte.SqlByte(Byte)
  fullName: System.Data.SqlTypes.SqlByte.SqlByte(Byte)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "初始化的新執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構使用指定的位元組值。"
  syntax:
    content: public SqlByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "位元組值儲存在<xref:System.Data.SqlTypes.SqlByte.Value*>屬性的新<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Add(SqlByte,SqlByte)
  nameWithType: SqlByte.Add(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Add(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算兩個指定的總和<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Add (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構其<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>屬性包含相加的結果。"
  overload: System.Data.SqlTypes.SqlByte.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: BitwiseAnd(SqlByte,SqlByte)
  nameWithType: SqlByte.BitwiseAnd(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算的位元 AND 其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte BitwiseAnd (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "位元 AND 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: BitwiseOr(SqlByte,SqlByte)
  nameWithType: SqlByte.BitwiseOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算其兩個的位元 OR <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte BitwiseOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "位元 OR 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  id: CompareTo(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: CompareTo(SqlByte)
  nameWithType: SqlByte.CompareTo(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較這個執行個體設為提供<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>物件，並傳回它們的相對值指示。"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlByte value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlByte
      description: "<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>要比較的物件。"
    return:
      type: System.Int32
      description: "帶正負號的數字，指出執行個體和物件的相對值。       <table><thead><tr><th> 傳回值       </th><th> 狀況       </th></tr></thead><tbody><tr><td> 小於零       </td><td> 這個執行個體小於物件。       </td></tr><tr><td> 零       </td><td> 這個執行個體是與物件相同。       </td></tr><tr><td> 小於或等於零       </td><td> 這個執行個體大於物件-物件為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlByte.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlByte.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較這個執行個體設為提供<xref:System.Object>，並傳回它們的相對值指示。</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>進行比較。</xref:System.Object>"
    return:
      type: System.Int32
      description: "帶正負號的數字，指出執行個體和物件的相對值。       <table><thead><tr><th> 傳回值       </th><th> 狀況       </th></tr></thead><tbody><tr><td> 小於零       </td><td> 這個執行個體小於物件。       </td></tr><tr><td> 零       </td><td> 這個執行個體是與物件相同。       </td></tr><tr><td> 小於或等於零       </td><td> 這個執行個體大於物件-物件為 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlByte.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Divide(SqlByte,SqlByte)
  nameWithType: SqlByte.Divide(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Divide(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "將第一個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>第二個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Divide (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "新<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含除法運算的結果。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlByte.Equals(Object)
  fullName: System.Data.SqlTypes.SqlByte.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較提供<xref:System.Object>參數<xref:System.Data.SqlTypes.SqlByte.Value*>屬性<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>物件。</xref:System.Data.SqlTypes.SqlByte.Value*> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>進行比較。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果物件的執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>兩個相等; 否則為也<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Equals(SqlByte,SqlByte)
  nameWithType: SqlByte.Equals(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equals(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "執行邏輯比較兩個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構，以判斷它們是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個值相等。 否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果任一個執行個體是 null，則<xref uid=&quot;langword_csharp_SqlByte&quot; name=&quot;SqlByte&quot; href=&quot;&quot;></xref>將會是 null。"
  overload: System.Data.SqlTypes.SqlByte.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlByte.GetHashCode()
  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "傳回這個執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 位元帶正負號的整數雜湊碼。"
  overload: System.Data.SqlTypes.SqlByte.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlByte.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlByte.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "傳回指定的 XML 結構描述定義語言 (XSD) <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。"
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>值，指出指定的 XSD <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: GreaterThan(SqlByte,SqlByte)
  nameWithType: SqlByte.GreaterThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否大於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否大於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構，以判斷第一個是否大於或等於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否大於或等於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlByte.IsNull
  fullName: System.Data.SqlTypes.SqlByte.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "取得布林值，指出是否此<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構是 null。"
  remarks: "如需詳細資訊，請參閱[處理 Null 值](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果是 null。 否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: LessThan(SqlByte,SqlByte)
  nameWithType: SqlByte.LessThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否小於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一個執行個體小於比第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: LessThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.LessThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否小於或等於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否小於或等於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlByte.MaxValue
  fullName: System.Data.SqlTypes.SqlByte.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "常數，代表最大可能值<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  remarks: "這個常數的值為 255 或十六進位 0xFF。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlByte MaxValue;
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlByte.MinValue
  fullName: System.Data.SqlTypes.SqlByte.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "常數，代表最小可能值<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  remarks: "這個常數的值為 0。"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlByte MinValue;
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Mod(SqlByte,SqlByte)
  nameWithType: SqlByte.Mod(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Mod(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "會計算除以其第一個之後的餘數<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>第二個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Mod (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>包含其餘部分。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.Mod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Modulus(SqlByte,SqlByte)
  nameWithType: SqlByte.Modulus(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "將兩個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>值，並傳回餘數。"
  remarks: "如果任一個執行個體的`x`或`y`是 null，此值會是 null。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Modulus (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "之後在上執行除法的餘數<code> x </code>和<code> y </code>。"
  overload: System.Data.SqlTypes.SqlByte.Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Multiply(SqlByte,SqlByte)
  nameWithType: SqlByte.Multiply(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算兩個產品<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Multiply (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "新<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含相乘的乘積。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: NotEquals(SqlByte,SqlByte)
  nameWithType: SqlByte.NotEquals(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.NotEquals(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>來判斷它們是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否相等。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlByte.Null
  fullName: System.Data.SqlTypes.SqlByte.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "代表<xref href=&quot;System.DBNull&quot;></xref>可以指派給這個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  remarks: '`Null`做為常數<xref:System.Data.SqlTypes.SqlByte>結構。</xref:System.Data.SqlTypes.SqlByte> 如需詳細資訊，請參閱[處理 Null 值](~/add/includes/ajax-current-ext-md.md)。'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlByte Null;
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  id: OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: OnesComplement(SqlByte)
  nameWithType: SqlByte.OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一補數運算子執行位元的補充作業在其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte OnesComplement (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含的補數<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>參數。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Addition(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Addition(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Addition(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算兩個指定的總和<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Addition (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含兩個運算元的總和。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_BitwiseAnd(SqlByte,SqlByte)
  nameWithType: SqlByte.op_BitwiseAnd(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算的位元 AND 其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_BitwiseAnd (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "位元 AND 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.op_BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_BitwiseOr(SqlByte,SqlByte)
  nameWithType: SqlByte.op_BitwiseOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseOr(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算其兩個的位元 OR <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_BitwiseOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "位元 OR 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.op_BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Division(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Division(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Division(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "將第一個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>第二個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Division (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "新<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含除法運算的結果。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Equality(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Equality(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Equality(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "執行邏輯比較兩個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構，以判斷它們是否相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否不相等。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_ExclusiveOr(SqlByte,SqlByte)
  nameWithType: SqlByte.op_ExclusiveOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "執行位元互斥 OR 運算上提供的參數。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_ExclusiveOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "位元 XOR 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.op_ExclusiveOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlByte.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlByte.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static byte op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
    return:
      type: System.Byte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlByte.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlByte.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlByte.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlByte.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlByte.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlByte.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlByte.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlByte.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_GreaterThan(SqlByte,SqlByte)
  nameWithType: SqlByte.op_GreaterThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThan(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否大於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否大於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否大於或等於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否大於或等於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref uid=&quot;langword_csharp_SqlBoolean&quot; name=&quot;SqlBoolean&quot; href=&quot;&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)
  id: op_Implicit(System.Byte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Implicit(Byte)
  nameWithType: SqlByte.op_Implicit(Byte)
  fullName: System.Data.SqlTypes.SqlByte.op_Implicit(Byte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Implicit (byte x);
    parameters:
    - id: x
      type: System.Byte
      description: "即將加入。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  overload: System.Data.SqlTypes.SqlByte.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Inequality(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Inequality(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Inequality(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>來判斷它們是否不相等。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否不相等或<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>兩個執行個體是否相等。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_LessThan(SqlByte,SqlByte)
  nameWithType: SqlByte.op_LessThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_LessThan(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否小於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>如果第一個執行個體小於比第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較兩個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>以判斷第一個是否小於或等於第二個。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>也就是<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>第一個執行個體是否小於或等於第二個執行個體。 否則， <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。 如果任一個執行個體的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>為 null，<xref:System.Data.SqlTypes.SqlBoolean.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>將<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>。</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Modulus(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Modulus(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Modulus(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "會計算除以其第一個之後的餘數<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>第二個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Modulus (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>包含其餘部分。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Multiply(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Multiply(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Multiply(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "計算兩個產品<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Multiply (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "新<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含相乘的乘積。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  id: op_OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_OnesComplement(SqlByte)
  nameWithType: SqlByte.op_OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_OnesComplement(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "一補數運算子執行位元的補充作業在其<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_OnesComplement (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構其<xref:System.Data.SqlTypes.SqlByte.Value*>屬性包含的補數<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>參數。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.op_OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: op_Subtraction(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Subtraction(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Subtraction(SqlByte,SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "減去第二個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>從第一個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte op_Subtraction (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "減去第二個結果<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>從第一個運算元。"
  overload: System.Data.SqlTypes.SqlByte.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlByte.Parse(String)
  fullName: System.Data.SqlTypes.SqlByte.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "將轉換<xref:System.String>到它的對等 8 位元不帶正負號的整數的數字表示法。</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>進行剖析。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構，其中包含由 8 位元數字<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>參數。"
  overload: System.Data.SqlTypes.SqlByte.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Subtract(SqlByte,SqlByte)
  nameWithType: SqlByte.Subtract(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtract(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "減去第二個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>從第一個運算元。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Subtract (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "減去第二個結果<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>從第一個運算元。"
  overload: System.Data.SqlTypes.SqlByte.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成員支援.NET Framework 基礎結構，並不是直接從您的程式碼使用。"
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成員支援.NET Framework 基礎結構，並不是直接從您的程式碼使用。"
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "此成員支援.NET Framework 基礎結構，並不是直接從您的程式碼使用。"
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlByte.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Data.SqlTypes.SqlByte.Value*>為非零;<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果零; 否則為 Null。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlByte.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref uid=&quot;langword_csharp_SqlDecimal&quot; name=&quot;SqlDecimal&quot; href=&quot;&quot;> </xref>結構其<> *> 等於<> *> 這個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  overload: System.Data.SqlTypes.SqlByte.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlByte.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "A <xref uid=&quot;langword_csharp_SqlDouble&quot; name=&quot;SqlDouble&quot; href=&quot;&quot;> </xref>結構具有相同的值，因為這樣<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlByte.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref>結構具有相同的值，因為這樣<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlByte.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converts this <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref> to <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;></xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "A <xref uid=&quot;langword_csharp_SqlInt32&quot; name=&quot;SqlInt32&quot; href=&quot;&quot;> </xref>結構具有相同的值，因為這樣<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。"
  overload: System.Data.SqlTypes.SqlByte.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlByte.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;></xref> structure who <>*> equals the <>*> of this <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>."
  overload: System.Data.SqlTypes.SqlByte.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlByte.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref uid=&quot;langword_csharp_SqlMoney&quot; name=&quot;SqlMoney&quot; href=&quot;&quot;> </xref>結構其<> *> 等於<> *> 這個<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  overload: System.Data.SqlTypes.SqlByte.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlByte.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構以<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref uid=&quot;langword_csharp_SqlSingle&quot; name=&quot;SqlSingle&quot; href=&quot;&quot;> </xref>具有相同的結構<xref:System.Data.SqlTypes.SqlSingle.Value*>如此<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  overload: System.Data.SqlTypes.SqlByte.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlByte.ToSqlString()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "將轉換的這個執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>至<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>。"
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref uid=&quot;langword_csharp_SqlString&quot; name=&quot;SqlString&quot; href=&quot;&quot;> </xref> ，其中包含的字串表示<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構的<xref:System.Data.SqlTypes.SqlByte.Value*>.</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlByte.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlByte.ToString()
  fullName: System.Data.SqlTypes.SqlByte.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "這會將轉換<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>至<xref:System.String>。</xref:System.String>結構"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含<xref:System.Data.SqlTypes.SqlByte.Value*>的<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>。</xref:System.Data.SqlTypes.SqlByte.Value*> 如果<xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref>為 null， <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>會是 null 字串。"
  overload: System.Data.SqlTypes.SqlByte.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Value
  id: Value
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Value
  nameWithType: SqlByte.Value
  fullName: System.Data.SqlTypes.SqlByte.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "取得值<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。 這個屬性是唯讀的"
  syntax:
    content: public byte Value { get; }
    return:
      type: System.Byte
      description: "值<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。"
  overload: System.Data.SqlTypes.SqlByte.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Xor(SqlByte,SqlByte)
  nameWithType: SqlByte.Xor(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Xor(SqlByte,SqlByte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "執行位元互斥 OR 運算上提供的參數。"
  syntax:
    content: public static System.Data.SqlTypes.SqlByte Xor (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>結構。"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "XOR 運算的結果。"
  overload: System.Data.SqlTypes.SqlByte.Xor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlByte.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  name: Zero
  nameWithType: SqlByte.Zero
  fullName: System.Data.SqlTypes.SqlByte.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "代表零值，這個值可以指派給<xref:System.Data.SqlTypes.SqlByte.Value*>屬性的執行個體<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>結構。</xref:System.Data.SqlTypes.SqlByte.Value*>"
  remarks: "零個欄位是常數<xref:System.Data.SqlTypes.SqlByte>結構。</xref:System.Data.SqlTypes.SqlByte>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlByte Zero;
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: SqlByte(Byte)
  nameWithType: SqlByte.SqlByte(Byte)
  fullName: System.Data.SqlTypes.SqlByte.SqlByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Add(SqlByte,SqlByte)
  nameWithType: SqlByte.Add(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Add(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: BitwiseAnd(SqlByte,SqlByte)
  nameWithType: SqlByte.BitwiseAnd(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: BitwiseOr(SqlByte,SqlByte)
  nameWithType: SqlByte.BitwiseOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: CompareTo(SqlByte)
  nameWithType: SqlByte.CompareTo(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(SqlByte)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlByte.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Divide(SqlByte,SqlByte)
  nameWithType: SqlByte.Divide(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Divide(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlByte.Equals(Object)
  fullName: System.Data.SqlTypes.SqlByte.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Equals(SqlByte,SqlByte)
  nameWithType: SqlByte.Equals(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equals(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlByte.GetHashCode
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlByte.GetHashCode()
  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()
- uid: System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlByte.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlByte.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GreaterThan(SqlByte,SqlByte)
  nameWithType: SqlByte.GreaterThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GreaterThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.IsNull
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: IsNull
  nameWithType: SqlByte.IsNull
  fullName: System.Data.SqlTypes.SqlByte.IsNull
- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: LessThan(SqlByte,SqlByte)
  nameWithType: SqlByte.LessThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: LessThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.LessThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.MaxValue
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: MaxValue
  nameWithType: SqlByte.MaxValue
  fullName: System.Data.SqlTypes.SqlByte.MaxValue
- uid: System.Data.SqlTypes.SqlByte.MinValue
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: MinValue
  nameWithType: SqlByte.MinValue
  fullName: System.Data.SqlTypes.SqlByte.MinValue
- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Mod(SqlByte,SqlByte)
  nameWithType: SqlByte.Mod(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Mod(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Modulus(SqlByte,SqlByte)
  nameWithType: SqlByte.Modulus(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Multiply(SqlByte,SqlByte)
  nameWithType: SqlByte.Multiply(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: NotEquals(SqlByte,SqlByte)
  nameWithType: SqlByte.NotEquals(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.NotEquals(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Null
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: "Null"
  nameWithType: SqlByte.Null
  fullName: System.Data.SqlTypes.SqlByte.Null
- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: OnesComplement(SqlByte)
  nameWithType: SqlByte.OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Addition(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Addition(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Addition(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_BitwiseAnd(SqlByte,SqlByte)
  nameWithType: SqlByte.op_BitwiseAnd(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_BitwiseOr(SqlByte,SqlByte)
  nameWithType: SqlByte.op_BitwiseOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseOr(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Division(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Division(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Division(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Equality(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Equality(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Equality(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_ExclusiveOr(SqlByte,SqlByte)
  nameWithType: SqlByte.op_ExclusiveOr(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlByte.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlByte.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlByte.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlByte.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlByte.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlByte.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlByte.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlByte.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlByte.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlByte.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_GreaterThan(SqlByte,SqlByte)
  nameWithType: SqlByte.op_GreaterThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThan(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_GreaterThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Implicit(Byte)
  nameWithType: SqlByte.op_Implicit(Byte)
  fullName: System.Data.SqlTypes.SqlByte.op_Implicit(Byte)
- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Inequality(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Inequality(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Inequality(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_LessThan(SqlByte,SqlByte)
  nameWithType: SqlByte.op_LessThan(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_LessThan(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_LessThanOrEqual(SqlByte,SqlByte)
  nameWithType: SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Modulus(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Modulus(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Modulus(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Multiply(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Multiply(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Multiply(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_OnesComplement(SqlByte)
  nameWithType: SqlByte.op_OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_OnesComplement(SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Subtraction(SqlByte,SqlByte)
  nameWithType: SqlByte.op_Subtraction(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.op_Subtraction(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Parse(String)
  nameWithType: SqlByte.Parse(String)
  fullName: System.Data.SqlTypes.SqlByte.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Subtract(SqlByte,SqlByte)
  nameWithType: SqlByte.Subtract(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtract(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlByte.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlByte.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlByte.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlByte.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlByte.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlByte.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlByte.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlByte.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlByte.ToSqlString
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlByte.ToSqlString()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()
- uid: System.Data.SqlTypes.SqlByte.ToString
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToString()
  nameWithType: SqlByte.ToString()
  fullName: System.Data.SqlTypes.SqlByte.ToString()
- uid: System.Data.SqlTypes.SqlByte.Value
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Value
  nameWithType: SqlByte.Value
  fullName: System.Data.SqlTypes.SqlByte.Value
- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Xor(SqlByte,SqlByte)
  nameWithType: SqlByte.Xor(SqlByte,SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Xor(SqlByte,SqlByte)
- uid: System.Data.SqlTypes.SqlByte.Zero
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Zero
  nameWithType: SqlByte.Zero
  fullName: System.Data.SqlTypes.SqlByte.Zero
- uid: System.Data.SqlTypes.SqlByte.#ctor*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte.SqlByte
- uid: System.Data.SqlTypes.SqlByte.Add*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Add
  nameWithType: SqlByte.Add
- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: BitwiseAnd
  nameWithType: SqlByte.BitwiseAnd
- uid: System.Data.SqlTypes.SqlByte.BitwiseOr*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: BitwiseOr
  nameWithType: SqlByte.BitwiseOr
- uid: System.Data.SqlTypes.SqlByte.CompareTo*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: CompareTo
  nameWithType: SqlByte.CompareTo
- uid: System.Data.SqlTypes.SqlByte.Divide*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Divide
  nameWithType: SqlByte.Divide
- uid: System.Data.SqlTypes.SqlByte.Equals*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Equals
  nameWithType: SqlByte.Equals
- uid: System.Data.SqlTypes.SqlByte.GetHashCode*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GetHashCode
  nameWithType: SqlByte.GetHashCode
- uid: System.Data.SqlTypes.SqlByte.GetXsdType*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GetXsdType
  nameWithType: SqlByte.GetXsdType
- uid: System.Data.SqlTypes.SqlByte.GreaterThan*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GreaterThan
  nameWithType: SqlByte.GreaterThan
- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlByte.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlByte.IsNull*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: IsNull
  nameWithType: SqlByte.IsNull
- uid: System.Data.SqlTypes.SqlByte.LessThan*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: LessThan
  nameWithType: SqlByte.LessThan
- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlByte.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlByte.Mod*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Mod
  nameWithType: SqlByte.Mod
- uid: System.Data.SqlTypes.SqlByte.Modulus*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Modulus
  nameWithType: SqlByte.Modulus
- uid: System.Data.SqlTypes.SqlByte.Multiply*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Multiply
  nameWithType: SqlByte.Multiply
- uid: System.Data.SqlTypes.SqlByte.NotEquals*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: NotEquals
  nameWithType: SqlByte.NotEquals
- uid: System.Data.SqlTypes.SqlByte.OnesComplement*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: OnesComplement
  nameWithType: SqlByte.OnesComplement
- uid: System.Data.SqlTypes.SqlByte.op_Addition*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Addition
  nameWithType: SqlByte.op_Addition
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: SqlByte.op_BitwiseAnd
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_BitwiseOr
  nameWithType: SqlByte.op_BitwiseOr
- uid: System.Data.SqlTypes.SqlByte.op_Division*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Division
  nameWithType: SqlByte.op_Division
- uid: System.Data.SqlTypes.SqlByte.op_Equality*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Equality
  nameWithType: SqlByte.op_Equality
- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: SqlByte.op_ExclusiveOr
- uid: System.Data.SqlTypes.SqlByte.op_Explicit*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Explicit
  nameWithType: SqlByte.op_Explicit
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlByte.op_GreaterThan
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlByte.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlByte.op_Implicit*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Implicit
  nameWithType: SqlByte.op_Implicit
- uid: System.Data.SqlTypes.SqlByte.op_Inequality*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Inequality
  nameWithType: SqlByte.op_Inequality
- uid: System.Data.SqlTypes.SqlByte.op_LessThan*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_LessThan
  nameWithType: SqlByte.op_LessThan
- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlByte.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlByte.op_Modulus*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Modulus
  nameWithType: SqlByte.op_Modulus
- uid: System.Data.SqlTypes.SqlByte.op_Multiply*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Multiply
  nameWithType: SqlByte.op_Multiply
- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_OnesComplement
  nameWithType: SqlByte.op_OnesComplement
- uid: System.Data.SqlTypes.SqlByte.op_Subtraction*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlByte.op_Subtraction
- uid: System.Data.SqlTypes.SqlByte.Parse*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Parse
  nameWithType: SqlByte.Parse
- uid: System.Data.SqlTypes.SqlByte.Subtract*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Subtract
  nameWithType: SqlByte.Subtract
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlByte.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlByte.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlByte.ToSqlDouble
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlByte.ToSqlInt16
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlByte.ToSqlInt32
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlByte.ToSqlInt64
- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlByte.ToSqlMoney
- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlByte.ToSqlSingle
- uid: System.Data.SqlTypes.SqlByte.ToSqlString*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToSqlString
  nameWithType: SqlByte.ToSqlString
- uid: System.Data.SqlTypes.SqlByte.ToString*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: ToString
  nameWithType: SqlByte.ToString
- uid: System.Data.SqlTypes.SqlByte.Value*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Value
  nameWithType: SqlByte.Value
- uid: System.Data.SqlTypes.SqlByte.Xor*
  parent: System.Data.SqlTypes.SqlByte
  isExternal: false
  name: Xor
  nameWithType: SqlByte.Xor
