### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  id: DoubleAnimationUsingPath
  children:
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  langs:
  - csharp
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
  type: Class
  summary: "值的動畫<xref:System.Double>屬性使用的兩個或多個目標值之間<xref href=&quot;System.Windows.Media.PathGeometry&quot;></xref>來指定這些值。</xref:System.Double> 這個動畫可用視覺物件沿著路徑移動。"
  remarks: "DoubleAnimationUsingPath 使用線性插補在指定的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A>       DoubleAnimationUsingPath 很相似<xref:System.Windows.Media.Animation.DoubleAnimation>之處在於它會使用<xref:System.Windows.Media.PathGeometry>來插入兩個或多個值而不是像<xref:System.Windows.Media.Animation.DoubleAnimation>.</xref:System.Windows.Media.Animation.DoubleAnimation>只有兩個值之間</xref:System.Windows.Media.PathGeometry></xref:System.Windows.Media.Animation.DoubleAnimation> 雖然<xref:System.Windows.Media.Animation.DoubleAnimation>用涉及雙精度浮點數值的最簡單動畫，DoubleAnimationUsingPath 是特別適合建立動畫物件在螢幕上的位置。</xref:System.Windows.Media.Animation.DoubleAnimation>"
  syntax:
    content: 'public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.DoubleAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;></xref>類別。"
  remarks: "沒有預設值<xref:System.Windows.Media.PathGeometry>所以使用者必須指定其中一個。</xref:System.Windows.Media.PathGeometry>"
  syntax:
    content: public DoubleAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "建立可修改複製品這個<xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>，製作這個物件值的深層複本。 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 （但可能已不能再解析），但不是動畫或它們目前的值。"
  remarks: "這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。       如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.DoubleAnimationUsingPath
      description: "目前物件的可修改複本。 複製的物件<> *> 屬性會是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>即使來源的<> *> 屬性<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "<xref:System.Windows.Freezable.CreateInstanceCore*>.</xref:System.Windows.Freezable.CreateInstanceCore*>的實作"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新<xref href=&quot;System.Windows.Freezable&quot;></xref>建立。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "計算值，代表正在顯示動畫之屬性的目前值，由<xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>。"
  remarks: "如果`defaultOriginValue`是第一個組合鏈結中，這個值會是快照集 （如果有的話） 或基底屬性的值，否則這個值會以鏈結中前一個動畫所傳回的值<xref:System.Windows.Media.Animation.AnimationClock>不<xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       `defaultDestinationValue`是基底值，如果動畫會在動畫的屬性上的第一個組合圖層中; 否則值是從上一個組合層次屬性的動畫的輸出值。"
  syntax:
    content: protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Double
      description: "建議的原始值，如果沒有明確設定動畫開始值。"
    - id: defaultDestinationValue
      type: System.Double
      description: "建議的目的值，如果沒有明確設定動畫結束值。"
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref>產生<> *> 或<> *> 動畫所使用。"
    return:
      type: System.Double
      description: "導出的屬性的值，由目前的動畫所決定。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，指出是否應該將目標屬性的目前值加入至這個動畫的起始值。"
  remarks: "<a name=&quot;dependencyPropertyInfo_Additive&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  |中繼資料屬性設定為`true`|None |     > [!NOTE] > 這個相依性屬性並不常見，因為它的識別項欄位來自<xref:System.Windows.Media.Animation.AnimationTimeline>，並且可由各種衍生類別共用。</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目標屬性的目前值應該加入至這個動畫的起始值。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定值，這個值會指定是否要重複時累加動畫值。"
  remarks: "當這個屬性設定為`true`，動畫之輸出值只會累積時的動畫<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>屬性造成動畫重複其簡單持續期間。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 它不會累積它的值因為重複其父代重新啟動時，或它的時鐘已重新啟動從<xref:System.Windows.Media.Animation.ClockController.Begin%2A>呼叫。</xref:System.Windows.Media.Animation.ClockController.Begin%2A>      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  |中繼資料屬性設定為`true`|None |     > [!NOTE] > 這個相依性屬性並不常見，因為它的識別項欄位來自<xref:System.Windows.Media.Animation.AnimationTimeline>，並且可由各種衍生類別共用。</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果動畫會累加其值時其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>屬性造成動畫重複其簡單持續期間。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> 否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "呼叫時這個<xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;></xref>修改。"
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "指定用來產生這個動畫之輸出值的幾何。"
  remarks: "在[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，您可以使用特殊的縮寫的語法來描述路徑。       [!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)][!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml) ] PathGeometry 標記語法的詳細資訊，請參閱[路徑標記語法](~/add/includes/ajax-current-ext-md.md)。   如需建立使用標記或程式碼路徑的範例，請參閱<xref:System.Windows.Media.PathGeometry>.</xref:System.Windows.Media.PathGeometry>      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "用來產生這個動畫之輸出路徑值。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>相依性屬性。</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  id: Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得或設定這個動畫的層面<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>，以決定其輸出值。</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  remarks: "<a name=&quot;dependencyPropertyInfo_Source&quot;></a># # 相依性屬性資訊 | | |  |-|-|  |識別項欄位 |<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|  |中繼資料屬性設定為`true`|None |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>"
  syntax:
    content: public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }
    return:
      type: System.Windows.Media.Animation.PathAnimationSource
      description: "這個動畫的層面<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>，以決定其輸出值。</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> 預設值是<xref href=&quot;System.Windows.Media.Animation.PathAnimationSource&quot;> </xref>。"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  id: SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>相依性屬性。</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SourceProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.DoubleAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.DoubleAnimationBase
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
- uid: System.Windows.Media.Animation.PathAnimationSource
  parent: System.Windows.Media.Animation
  isExternal: false
  name: PathAnimationSource
  nameWithType: PathAnimationSource
  fullName: System.Windows.Media.Animation.PathAnimationSource
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: DoubleAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: DoubleAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
