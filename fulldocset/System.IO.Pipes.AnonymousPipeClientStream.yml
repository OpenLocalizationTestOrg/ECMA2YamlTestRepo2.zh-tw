### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeClientStream
  id: AnonymousPipeClientStream
  children:
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.Finalize
  - System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  - System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeClientStream
  nameWithType: AnonymousPipeClientStream
  fullName: System.IO.Pipes.AnonymousPipeClientStream
  type: Class
  summary: "公開支援同步和非同步讀取和寫入作業的匿名管道資料流的用戶端。"
  remarks: "匿名管道有助於提供安全子項與父代之間的處理序間通訊的處理程序。 AnonymousPipeClientStream 類別可讓子處理序連接到並父處理序與交換資訊。       匿名管道是未命名，但單向通常父和子處理序之間傳輸資料的管道。 匿名管道永遠是本機。無法用在網路上。 A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>       匿名管道的用戶端必須從所呼叫的伺服器端提供的管道控制代碼建立<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>方法。</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 然後，做為參數來傳遞的字串，建立用戶端處理序時。 從用戶端處理序，它會傳遞至 AnonymousPipeClientStream 建構函式做為`pipeHandleAsString`參數。      > [!NOTE] > 的[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]和[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]，最多 10 個管道同時可以透過網路連線。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an AnonymousPipeClientStream object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which is started by the server process. Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_0_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_0_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_0_1.vb)]"
  syntax:
    content: 'public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>管道控制代碼指定的字串表示法的類別。"
  remarks: "不含<xref:System.IO.Pipes.PipeDirection>參數的預設方向是<xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>建構函式"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.  \n  \n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_0_1.vb)]\n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_0_1.cs)]"
  syntax:
    content: public AnonymousPipeClientStream (string pipeHandleAsString);
    parameters:
    - id: pipeHandleAsString
      type: System.String
      description: "字串，代表管道控制代碼。"
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>pipeHandleAsString</code>不是有效的管道控制代碼。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>類別，從指定的控制代碼。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/visualbasic/9fcf339c-5c1c-4422-821c-_1.vb)]\n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/csharp/9fcf339c-5c1c-4422-821c-_1.cs)]"
  syntax:
    content: public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "安全控制代碼之管道這個<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>物件將會封裝。"
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle </code>不是有效的控制代碼。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "發生 I/O 錯誤，例如磁碟錯誤。       -或者-資料流已關閉。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(PipeDirection,String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>類別具有指定的管道方向和管道控制代碼的字串表示。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection>匿名管道定義為單向，所以不支援。</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/9b07c766-36fc-4774-abaa-_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/9b07c766-36fc-4774-abaa-_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/9b07c766-36fc-4774-abaa-_1.vb)]"
  syntax:
    content: public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "其中一個列舉值，決定管道的方向。       匿名管道只可依單一方向，因此`direction`不能設定為<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>。"
    - id: pipeHandleAsString
      type: System.String
      description: "字串，代表管道控制代碼。"
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeHandleAsString</code>是無效的控制代碼。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeHandleAsString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeClientStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "釋出 unmanaged 的資源並執行其他清除作業之前<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>執行個體回收進行回收。"
  syntax:
    content: ~AnonymousPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeClientStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "設定的讀取模式<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>物件。"
  remarks: "不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process. The <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_2_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_2_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_2_1.vb)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "The <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref> for the <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref> object."
  overload: System.IO.Pipes.AnonymousPipeClientStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳輸模式不正確。 對於匿名管道，只有<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>支援。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "傳輸模式為<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "連線已中斷，或另一個 I/O 錯誤，就會發生。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "管道已關閉。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得目前管道支援的管道傳輸模式。"
  remarks: "不支援匿名管道<xref:System.IO.Pipes.PipeTransmissionMode>讀取模式。</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the TransmissionMode is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_3_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_3_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_3_1.vb)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>目前管道支援。"
  overload: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(PipeDirection,String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeClientStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeClientStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeClientStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
