### YamlMime:ManagedReference
items:
- uid: System.Web.Util.RequestValidator
  id: RequestValidator
  children:
  - System.Web.Util.RequestValidator.#ctor
  - System.Web.Util.RequestValidator.Current
  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  langs:
  - csharp
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
  type: Class
  summary: "定義自訂要求驗證的基底方法。"
  remarks: "根據預設，ASP.NET 不會驗證要求之前從要求的程式碼明確要求的值。 例如，ASP.NET 並不會驗證查詢字串值之前的程式碼存取<xref:System.Web.HttpRequest.QueryString%2A>集合。</xref:System.Web.HttpRequest.QueryString%2A> 根據預設，ASP.NET 也不會驗證某些類型的要求資料，例如表單值、 cookie、 使用 HTTP 和的值已上載的檔案名稱<xref:System.Web.HttpRequest.RawUrl%2A>屬性。</xref:System.Web.HttpRequest.RawUrl%2A>       RequestValidator 類別是基底類別，可實作以提供自訂要求驗證。 實作這個類別，您可以決定當驗證發生時以及要求資料上執行驗證的類型。       根據預設，ASP.NET 提供跨網站指令碼 (XSS) 檢查。 不過，您也可以補充或取代所建立的自訂實作 XSS 提供在 ASP.NET 要求驗證邏輯。 例如，您可以撰寫自訂要求驗證的實作掃描 SQL 插入式攻擊，除了檢查 XSS 攻擊。       若要建立自訂要求驗證，您可以撰寫自訂的類別衍生自 RequestValidator 基底類別。 接著，您會設定 ASP.NET 應用程式層級的 Web.config 檔案中使用自訂要求驗證程式。 在 App_Code 資料夾中，在已編譯的類別庫的 Bin 資料夾中，或在已編譯的類別庫在 GAC 中，您可以將自訂類別。      > [!NOTE] > 可以設定應用程式的一種自訂要求驗證類型。 您不可以設定不同的要求驗證的類型為個別的虛擬路徑或頁面。"
  example:
  - "The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \n  \n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \n  \n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \n  \n```  \n<system.web>  \n  <httpRuntime requestValidationType=\"CustomRequestValidation\" />  \n</system.web>  \n```"
  syntax:
    content: public class RequestValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.#ctor
  id: '#ctor'
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Util.RequestValidator&quot;></xref>類別。"
  remarks: "<xref:System.Web.Util.RequestValidator>類別有預設建構函式。</xref:System.Web.Util.RequestValidator> 初始化類別的新執行個體時，內部的方法會擷取自訂的驗證詳細資料從應用程式的組態資訊。 中所包含的組態詳細資料<xref:System.Web.Configuration.HttpRuntimeSection>> 一節。</xref:System.Web.Configuration.HttpRuntimeSection> 如需詳細資訊，請參閱[httpRuntime 元素 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)和<xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>屬性。</xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>       在初始化期間，單一執行個體<xref:System.Web.Util.RequestValidator>類別，建立和執行個體的參考保留在<xref:System.Web.Util.RequestValidator.Current%2A>屬性。</xref:System.Web.Util.RequestValidator.Current%2A> </xref:System.Web.Util.RequestValidator> ASP.NET 不會建立新的要求驗證程式執行個體，每個要求。 因此的自訂實作<xref:System.Web.Util.RequestValidator>類別必須是安全執行緒。</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public RequestValidator ();
    parameters: []
  overload: System.Web.Util.RequestValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.Current
  id: Current
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "取得或設定目前的參考<xref href=&quot;System.Web.Util.RequestValidator&quot;></xref>將應用程式中使用的執行個體。"
  remarks: "目前的屬性會維護的<xref:System.Web.Util.RequestValidator>類別。</xref:System.Web.Util.RequestValidator>允許的單一執行個體的參考 如果沒有執行個體存在，則會建立一個新。 如果執行個體已經存在，則會傳回目前執行個體。       在初始化期間，單一執行個體<xref:System.Web.Util.RequestValidator>類別，建立和執行個體的參考可在目前的屬性。</xref:System.Web.Util.RequestValidator> ASP.NET 不會建立新的要求驗證程式執行個體，每個要求。 因此的自訂實作<xref:System.Web.Util.RequestValidator>類別必須是安全執行緒。</xref:System.Web.Util.RequestValidator>      > [!NOTE] > 目前屬性不是安全執行緒時的屬性設定的參考目前的<xref:System.Web.Util.RequestValidator>類別。</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public static System.Web.Util.RequestValidator Current { get; set; }
    return:
      type: System.Web.Util.RequestValidator
      description: "執行個體<xref href=&quot;System.Web.Util.RequestValidator&quot;></xref>類別。"
  overload: System.Web.Util.RequestValidator.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "提供呼叫受保護的公用方法<xref:System.Web.Util.RequestValidator.IsValidRequestString*>方法，以驗證 HTTP 要求資料。</xref:System.Web.Util.RequestValidator.IsValidRequestString*>"
  remarks: "InvokeIsValidRequestString 方法提供的公用存取權受保護<xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>方法。</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 這可讓您建立的<xref:System.Web.Util.RequestValidator>類別，並呼叫<xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>方法，而不必從<xref:System.Web.Util.RequestValidator>類別</xref:System.Web.Util.RequestValidator>繼承</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A></xref:System.Web.Util.RequestValidator>的自訂包裝函式類別       如需要求驗證資訊，請參閱<xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求的 HTTP 內容。"
    - id: value
      type: System.String
      description: "要驗證的 HTTP 要求資料。"
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "列舉，表示要驗證的要求資料的來源。 以下是可能值列舉型別:-<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "（選擇性）要驗證之項目的要求集合中索引鍵。 如果從集合中取得要驗證的資料，則，使用這個參數。 如果要驗證的資料不是從集合中，這個參數可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: validationFailureIndex
      type: System.Int32
      description: "此方法傳回時，表示有問題或無效的文字中要求集合的以零為起始的起始點。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果要驗證的字串不包含未編碼的字元無法用於惡意的指令碼處理攻擊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "驗證包含 HTTP 要求資料的字串。"
  remarks: "您實作這個方法，以執行自訂驗證的要求資料。 基底 IsValidRequestString 方法的行為就像是在內部實作 ASP.NET 危險的字串中跨網站指令碼驗證檢查的行為。 如需詳細資訊，請參閱[How To︰ 防止跨網站指令碼在 ASP.NET 中](http://go.microsoft.com/fwlink/?LinkID=178708)。       如果自訂驗證邏輯會偵測到錯誤，此方法應傳回`false`並提供在值`validationFailureIndex`表示造成錯誤之文字的起始點。 中的值`validationFailureIndex`必須是 0 或正整數。       在要求驗證檢查邏輯程序如下:-<xref:System.Web.HttpRequest>類別執行內送資料的 null 字元移除檢查。</xref:System.Web.HttpRequest>      -<xref:System.Web.HttpRequest>類別會在呼叫其中一個 IsValidRequestString 方法 （基底方法的預設實作），或呼叫方法的衍生的版本。</xref:System.Web.HttpRequest>      -如果 IsValidRequestString 方法會傳回`false`來指出驗證失敗，ASP.NET 建構錯誤字串 （如有必要），並擲回<xref:System.Web.HttpRequestValidationException>例外狀況。</xref:System.Web.HttpRequestValidationException>"
  syntax:
    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "目前要求的內容。"
    - id: value
      type: System.String
      description: "要驗證的 HTTP 要求資料。"
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "列舉，表示要驗證的要求資料的來源。 列舉可能的值如下︰<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_RawUrl&quot; name=&quot;RawUrl&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "要驗證之項目的要求集合中索引鍵。 這個參數是選擇性的。 如果從集合中取得要驗證的資料，則，使用這個參數。 如果要驗證的資料不是集合，來自`collectionKey`可以<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: validationFailureIndex
      type: System.Int32
      description: "此方法傳回時，表示有問題或無效的文字中要求集合的以零為起始的起始點。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要驗證的字串是否有效。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Util.RequestValidator.IsValidRequestString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Util.RequestValidator.#ctor
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
- uid: System.Web.Util.RequestValidator.Current
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
- uid: System.Web.Util.RequestValidator
  parent: System.Web.Util
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.RequestValidationSource
  parent: System.Web.Util
  isExternal: false
  name: RequestValidationSource
  nameWithType: RequestValidationSource
  fullName: System.Web.Util.RequestValidationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Web.Util.RequestValidator.#ctor*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator.RequestValidator
- uid: System.Web.Util.RequestValidator.Current*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString
  nameWithType: RequestValidator.InvokeIsValidRequestString
- uid: System.Web.Util.RequestValidator.IsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString
  nameWithType: RequestValidator.IsValidRequestString
