### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterSet
  id: CounterSet
  children:
  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  - System.Diagnostics.PerformanceData.CounterSet.Dispose
  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceData.CounterSet.Finalize
  langs:
  - csharp
  name: CounterSet
  nameWithType: CounterSet
  fullName: System.Diagnostics.PerformanceData.CounterSet
  type: Class
  summary: "定義一組邏輯的計數器。"
  remarks: "呼叫<xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>方法，當您完成移除您的提供者的登錄，並釋放所有 managed 和 unmanaged 資源。</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: 'public class CounterSet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "初始化的新執行個體<xref href=&quot;System.Diagnostics.PerformanceData.CounterSet&quot;></xref>類別。"
  remarks: "註冊您的提供者。 呼叫<xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>方法移除註冊。</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "唯一識別的計數器資料提供者的 Guid。 使用資訊清單中指定的 Guid。"
    - id: counterSetGuid
      type: System.Guid
      description: "唯一識別計數器設定提供者的 Guid。 使用資訊清單中指定的 Guid。"
    - id: instanceType
      type: System.Diagnostics.PerformanceData.CounterSetInstanceType
      description: "計數器集合是否為單一或多個執行個體的計數器集合，例如識別計數器集合的型別。"
  overload: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "沒有足夠的記憶體可完成作業。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "不支援在 Windows Vista 之前。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "其中一個參數是 NULL 或無效。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "基礎的 Win32 函式呼叫失敗。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "將計數器加入至計數器集合，使用指定的計數器識別項和類型。"
  remarks: "您必須將計數器加入計數器集合之前建立的計數器集合執行個體。"
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);
    parameters:
    - id: counterId
      type: System.Int32
      description: "識別計數器。 使用相同的值，您用於在資訊清單中定義的計數器。"
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "識別計數器型別。 計數器類型會決定如何計算、 平均和顯示的計數器資料。"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "計數器識別碼已經存在此集合中，或為負數，或計數器型別為 NULL 或無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "您無法將計數器加入計數器集合之後建立的計數器執行個體設定。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "將計數器加入至計數器集合，使用指定的計數器識別碼和型別和計數器的顯示名稱。"
  remarks: "您必須將計數器加入計數器集合之前建立的計數器集合執行個體。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);
    parameters:
    - id: counterId
      type: System.Int32
      description: "識別計數器。 使用相同的值，您用於在資訊清單中定義的計數器。"
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "識別計數器型別。 計數器類型會決定如何計算、 平均和顯示的計數器資料。"
    - id: counterName
      type: System.String
      description: "計數器名稱。 您可以使用此名稱來編製索引的計數器集合執行個體中的計數器。 (請參閱&lt;xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName&gt;。)"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "計數器識別碼已經存在此集合中，或為負數，或計數器型別為 NULL 或無效。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "您無法將計數器加入計數器集合之後建立的計數器執行個體設定。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  id: CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "建立計數器集合的執行個體。"
  remarks: "呼叫這個方法一次的單一執行個體的計數器集合，並且一次或多次的多個執行個體的計數器集合。       提供者會決定它會建立執行個體。 如果多個靜態的計數器資料，提供者可以在初始化階段建立執行個體。 比方說，在電腦上的處理器數目會被視為靜態的因此提供處理器的計數器資料的提供者無法在初始化階段在電腦上中建立的每個處理器執行個體。 是一個動態的例如磁碟或處理序計數器的計數器，提供者會建立新的執行個體，以加入新的 USB 裝置或建立新的處理序的回應。       提供者應該使的計數器保持在最新的資料隨時。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "執行個體的名稱。 名稱必須是唯一的。"
    return:
      type: System.Diagnostics.PerformanceData.CounterSetInstance
      description: "計數器集合會包含的計數器資料的執行個體。"
  overload: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "執行個體名稱為 NULL。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "您必須將計數器加入計數器集合之前建立的計數器集合執行個體。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  id: Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "這個物件所使用的 unmanaged 的資源全部釋出。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "釋放這個物件所使用所有的 unmanaged 的資源，並選擇性地釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>如果這呼叫 Dispose 方法中，從<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>如果呼叫來自完成項。"
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  id: Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "透過記憶體回收收回物件前，請釋出資源。"
  remarks: "執行階段會自動呼叫這個方法。"
  syntax:
    content: ~CounterSet ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstanceType
  nameWithType: CounterSetInstanceType
  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceData.CounterType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterType
  nameWithType: CounterType
  fullName: System.Diagnostics.PerformanceData.CounterType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
- uid: System.Diagnostics.PerformanceData.CounterSetInstance
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstance
  nameWithType: CounterSetInstance
  fullName: System.Diagnostics.PerformanceData.CounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet
  nameWithType: CounterSet.CounterSet
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter
  nameWithType: CounterSet.AddCounter
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance
  nameWithType: CounterSet.CreateCounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose
  nameWithType: CounterSet.Dispose
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize
  nameWithType: CounterSet.Finalize
