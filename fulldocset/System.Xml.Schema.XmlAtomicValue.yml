### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlAtomicValue
  id: XmlAtomicValue
  children:
  - System.Xml.Schema.XmlAtomicValue.Clone
  - System.Xml.Schema.XmlAtomicValue.IsNode
  - System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  - System.Xml.Schema.XmlAtomicValue.ToString
  - System.Xml.Schema.XmlAtomicValue.TypedValue
  - System.Xml.Schema.XmlAtomicValue.Value
  - System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  - System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  - System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  - System.Xml.Schema.XmlAtomicValue.ValueAsInt
  - System.Xml.Schema.XmlAtomicValue.ValueAsLong
  - System.Xml.Schema.XmlAtomicValue.ValueType
  - System.Xml.Schema.XmlAtomicValue.XmlType
  langs:
  - csharp
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
  type: Class
  summary: "代表已驗證的 XML 元素或屬性的具類型的值。 XmlAtomicValue 類別無法被繼承。"
  syntax:
    content: 'public sealed class XmlAtomicValue : System.Xml.XPath.XPathItem, ICloneable'
  inheritance:
  - System.Object
  - System.Xml.XPath.XPathItem
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Xml.XPath.XPathItem.ValueAs(System.Type)
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  id: Clone
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "傳回一份這<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>物件。"
  syntax:
    content: public System.Xml.Schema.XmlAtomicValue Clone ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlAtomicValue
      description: "<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;> </xref>物件這份<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>物件。"
  overload: System.Xml.Schema.XmlAtomicValue.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  id: IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得值，指出是否已驗證的 XML 元素或屬性的 XPath 節點或不可部分完成的值。"
  remarks: "IsNode 屬性一律會傳回`false`。"
  syntax:
    content: public override bool IsNode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已驗證的 XML 元素或屬性是 XPath 節點。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>是否已驗證的 XML 元素或屬性不可部分完成的值。"
  overload: System.Xml.Schema.XmlAtomicValue.IsNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "如需這個成員的說明，請參閱&lt;xref:System.Xml.Schema.XmlAtomicValue.Clone%2A?displayProperty=fullName&gt;。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Xml.Schema.XmlAtomicValue>執行個體轉換成<xref:System.ICloneable>介面。</xref:System.ICloneable> </xref:System.Xml.Schema.XmlAtomicValue>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "傳回一份這<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>物件。"
  overload: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  id: ToString
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>已驗證的 XML 項目或屬性的值。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>已驗證的 XML 項目或屬性的值。"
  overload: System.Xml.Schema.XmlAtomicValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  id: TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得目前已驗證的 XML 元素或屬性做為最適當的 Microsoft.NET Framework 型別，根據其資料類型的 boxed 物件。"
  remarks: "根據指定的結構描述型別無效的項目值，TypedValue 屬性的值是否相等的值<xref:System.Xml.Schema.XmlAtomicValue.Value%2A>屬性。</xref:System.Xml.Schema.XmlAtomicValue.Value%2A>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override object TypedValue { get; }
    return:
      type: System.Object
      description: "目前的驗證 XML 元素或屬性的最適當的.NET Framework 類型的 boxed 物件。"
  overload: System.Xml.Schema.XmlAtomicValue.TypedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Value
  id: Value
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>已驗證的 XML 項目或屬性的值。"
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>已驗證的 XML 項目或屬性的值。"
  overload: System.Xml.Schema.XmlAtomicValue.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "傳回已驗證的 XML 元素或屬性的值為使用指定的型別<xref:System.Xml.IXmlNamespaceResolver>指定用來解析命名空間前置詞的物件。</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "ValueAs 方法會嘗試將已驗證的 XML 項目或屬性的值轉換成指定的 Microsoft.NET Framework 型別。       <xref:System.Xml.IXmlNamespaceResolver>物件用來解析與型別轉換相關的命名空間前置詞。</xref:System.Xml.IXmlNamespaceResolver> 例如，當轉換`xs:QName`至`xs:string`。       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override object ValueAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: type
      type: System.Type
      description: "傳回已驗證的 XML 元素或屬性的值做為型別。"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>物件，用來解析命名空間前置詞。</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "已驗證的 XML 項目或屬性做為要求的型別值。"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是格式正確的目標類型。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "嘗試的轉換無效。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "嘗試的轉換導致溢位。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  id: ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得已驗證的 XML 元素或屬性的值為<xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "已驗證的 XML 項目或屬性的值轉換成 Microsoft.NET Framework 嘗試 ValueAsBoolean 屬性<xref:System.Boolean>類型的項目類型轉換的 XPath 2.0 規則。</xref:System.Boolean>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override bool ValueAsBoolean { get; }
    return:
      type: System.Boolean
      description: "已驗證的 XML 元素或屬性的值為<xref:System.Boolean>.</xref:System.Boolean>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是正確格式的<xref:System.Boolean>型別。</xref:System.Boolean>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "若要嘗試的轉換<xref:System.Boolean>不正確。</xref:System.Boolean>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  id: ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得已驗證的 XML 元素或屬性的值為<xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "已驗證的 XML 項目或屬性的值轉換成 Microsoft.NET Framework 嘗試 ValueAsDateTime 屬性<xref:System.DateTime>類型的項目類型轉換的 XPath 2.0 規則。</xref:System.DateTime>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override DateTime ValueAsDateTime { get; }
    return:
      type: System.DateTime
      description: "已驗證的 XML 元素或屬性的值為<xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是正確格式的<xref:System.DateTime>型別。</xref:System.DateTime>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "若要嘗試的轉換<xref:System.DateTime>不正確。</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  id: ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得已驗證的 XML 元素或屬性的值為<xref:System.Double>.</xref:System.Double>"
  remarks: "已驗證的 XML 項目或屬性的值轉換成 Microsoft.NET Framework 嘗試 ValueAsDouble 屬性<xref:System.Double>類型的項目類型轉換的 XPath 2.0 規則。</xref:System.Double>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override double ValueAsDouble { get; }
    return:
      type: System.Double
      description: "已驗證的 XML 元素或屬性的值為<xref:System.Double>.</xref:System.Double>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是正確格式的<xref:System.Double>型別。</xref:System.Double>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "若要嘗試的轉換<xref:System.Double>不正確。</xref:System.Double>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "嘗試的轉換導致溢位。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  id: ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得已驗證的 XML 元素或屬性的值為<xref:System.Int32>.</xref:System.Int32>"
  remarks: "已驗證的 XML 項目或屬性的值轉換成 Microsoft.NET Framework 嘗試 ValueAsInt 屬性<xref:System.Int32>類型的項目類型轉換的 XPath 2.0 規則。</xref:System.Int32>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override int ValueAsInt { get; }
    return:
      type: System.Int32
      description: "已驗證的 XML 元素或屬性的值為<xref:System.Int32>.</xref:System.Int32>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是正確格式的<xref:System.Int32>型別。</xref:System.Int32>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "若要嘗試的轉換<xref:System.Int32>不正確。</xref:System.Int32>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "嘗試的轉換導致溢位。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  id: ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得已驗證的 XML 元素或屬性的值為<xref:System.Int64>.</xref:System.Int64>"
  remarks: "已驗證的 XML 項目或屬性的值轉換成 Microsoft.NET Framework 嘗試 ValueAsLong 屬性<xref:System.Int64>類型的項目類型轉換的 XPath 2.0 規則。</xref:System.Int64>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override long ValueAsLong { get; }
    return:
      type: System.Int64
      description: "已驗證的 XML 元素或屬性的值為<xref:System.Int64>.</xref:System.Int64>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "已驗證的 XML 元素或屬性的值不是正確格式的<xref:System.Int64>型別。</xref:System.Int64>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "若要嘗試的轉換<xref:System.Int64>不正確。</xref:System.Int64>"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "嘗試的轉換導致溢位。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得 Microsoft.NET Framework 類型的已驗證的 XML 元素或屬性。"
  remarks: "ValueType 屬性取得的.NET Framework 類型的已驗證的 XML 元素或屬性的具類型值。       例如，類型的元素`xs:int`會有的 ValueType<xref:System.Int32>預設。</xref:System.Int32> 不過，ValueType 可能是任何一個可以對應到有效型別`xs:int`，例如<xref:System.Int16>或<xref:System.Double>.</xref:System.Double> </xref:System.Int16>       如需有關型別支援<xref:System.Xml?displayProperty=fullName>命名空間，請參閱[System.Xml 類別中的型別支援](~/add/includes/ajax-current-ext-md.md)。</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public override Type ValueType { get; }
    return:
      type: System.Type
      description: "已驗證的 XML 項目或屬性的.NET Framework 型別。 預設值是<xref:System.String>.</xref:System.String>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  id: XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>已驗證的 XML 項目或屬性。"
  remarks: "XmlType 屬性會取得<xref:System.Xml.Schema.XmlSchemaType>已驗證的 XML 項目或屬性。</xref:System.Xml.Schema.XmlSchemaType> 例如，<xref:System.Xml.Schema.XmlSchemaSimpleType>或<xref:System.Xml.Schema.XmlSchemaComplexType>.</xref:System.Xml.Schema.XmlSchemaComplexType> </xref:System.Xml.Schema.XmlSchemaSimpleType>"
  syntax:
    content: public override System.Xml.Schema.XmlSchemaType XmlType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>已驗證的 XML 項目或屬性。"
  overload: System.Xml.Schema.XmlAtomicValue.XmlType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XPath.XPathItem
  isExternal: false
  name: System.Xml.XPath.XPathItem
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
- uid: System.Xml.Schema.XmlAtomicValue
  parent: System.Xml.Schema
  isExternal: false
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlAtomicValue.Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone
  nameWithType: XmlAtomicValue.Clone
- uid: System.Xml.Schema.XmlAtomicValue.IsNode*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: XmlAtomicValue.System.ICloneable.Clone
- uid: System.Xml.Schema.XmlAtomicValue.ToString*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString
  nameWithType: XmlAtomicValue.ToString
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs
  nameWithType: XmlAtomicValue.ValueAs
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
- uid: System.Xml.Schema.XmlAtomicValue.ValueType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
