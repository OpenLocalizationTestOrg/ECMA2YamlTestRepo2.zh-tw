### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "提供工作階段狀態應用程式服務。 這個類別無法被繼承。"
  remarks: "SessionStateModule 是 ASP。網路的預設工作階段狀態的處理常式。 它會將工作階段資料寫入，並擷取工作階段狀態存放區並引發**Session_OnStart**和**Session_OnEnd**事件。 如需有關如何使用 ASP.NET 工作階段狀態儲存和擷取值的使用者工作階段的詳細資訊，請參閱[ASP.NET 工作階段狀態概觀](~/add/includes/ajax-current-ext-md.md)。       您可以使用的自訂實作取代 SessionStateModule<xref:System.Web.IHttpModule>管理工作階段狀態的介面。</xref:System.Web.IHttpModule> 如需自訂的工作階段狀態模組的範例，請參閱<xref:System.Web.SessionState.SessionStateUtility>類別概觀。</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初始化的新執行個體<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>類別。"
  remarks: "這個建構函式不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時，會建立物件。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>物件會呼叫<xref:System.Web.SessionState.SessionStateModule>建構函式建立<xref:System.Web.SessionState.SessionStateModule>應用程式的物件。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>應用程式組態中所指定。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "執行最後的清除程式碼之前<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>從記憶體釋放物件。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時，會建立物件。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>物件建立並初始化<xref:System.Web.SessionState.SessionStateModule>應用程式的物件，並呼叫 Dispose 方法時釋放物件。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>應用程式組態中所指定。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "在工作階段結束時發生。"
  remarks: "結束引發要求的結尾時<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>呼叫方法，或當工作階段已過期。</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 工作階段到期時所指定的分鐘數<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>屬性傳遞沒有要求正在進行工作階段。</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       **Session_OnEnd**事件可用來執行任何清理工作的工作階段所使用的資源處置，例如工作階段。       您可以指定結束事件的處理常式，加入名為公用的副程式**Session_OnEnd** Global.asax 檔案。      > [!NOTE] > **Session_OnEnd**事件只是時，支援工作階段狀態<xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>屬性值是<xref:System.Web.SessionState.SessionStateMode>，預設值。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> 如果工作階段狀態<xref:System.Web.SessionState.HttpSessionState.Mode%2A>設<xref:System.Web.SessionState.SessionStateMode>或<xref:System.Web.SessionState.SessionStateMode>，然後在**Session_OnEnd** Global.asax 檔案中的事件會被忽略。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> 如果工作階段狀態<xref:System.Web.SessionState.HttpSessionState.Mode%2A>屬性值是<xref:System.Web.SessionState.SessionStateMode>，則支援如**Session_OnEnd**事件由自訂工作階段狀態存放區提供者。</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       雖然結束事件是公用的您可以只處理它在 Global.asax 檔案中加入事件處理常式。 這項限制實作因為<xref:System.Web.HttpApplication>效能會重複使用執行個體。</xref:System.Web.HttpApplication> 工作階段的到期時間，僅**Session_OnEnd**執行 Global.asax 檔案中指定的事件，以防止呼叫端事件處理常式相關聯的程式碼<xref:System.Web.HttpApplication>目前正在使用的執行個體。</xref:System.Web.HttpApplication>       如需 Global.asax 檔案的詳細資訊，請參閱[Global.asax 語法](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。"
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "呼叫初始化程式碼時<xref href=&quot;System.Web.SessionState.SessionStateModule&quot;></xref>建立物件。"
  remarks: "這個方法不是從應用程式程式碼呼叫。       <xref:System.Web.HttpApplication>ASP.NET 應用程式啟動時建立。</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>物件建立時，它會呼叫 Init 方法<xref:System.Web.SessionState.SessionStateModule>應用程式的物件。</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>應用程式的組態中指定類別。</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "目前的應用程式。"
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>屬性[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態項目設定為<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>或<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>，ASP.NET 應用程式，且小於<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>信任。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>屬性[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態項目設定為<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>和<xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;></xref>屬性是空的或不存在。       -或- <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref>屬性[工作階段狀態項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態項目設定為<xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>和提供者中的名稱來識別<xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;></xref>屬性尚未加入至[sessionState （ASP.NET 設定結構描述） 的提供者項目](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa)子元素。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "釋放指定的工作階段狀態<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> ，以釋放工作階段狀態。"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "以非同步的方式釋出指定的工作階段狀態<xref href=&quot;System.Web.HttpContext&quot;> </xref>。"
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> ，以釋放工作階段狀態。"
    return:
      type: System.Threading.Tasks.Task
      description: "A<xref:System.Threading.Tasks.Task>非同步作業。</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "在建立工作階段時所發生的事件。"
  remarks: "新的工作階段啟動時的要求開頭引發開始事件。 如果要求不包含工作階段識別項，工作階段識別項無效，或工作階段識別碼相關聯的工作階段已過期，就會啟動新的工作階段。       **Session_OnStart**事件可用來執行任何初始設定工作的工作階段，例如設定工作階段變數的預設值。       您可以指定開始事件的處理常式，加入名為公用的副程式**Session_OnStart** Global.asax 檔案。       如需 Global.asax 檔案的詳細資訊，請參閱[Global.asax 語法](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。"
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
