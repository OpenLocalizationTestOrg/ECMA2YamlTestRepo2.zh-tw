### YamlMime:ManagedReference
items:
- uid: System.Messaging.Trustee
  id: Trustee
  children:
  - System.Messaging.Trustee.#ctor
  - System.Messaging.Trustee.#ctor(System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  - System.Messaging.Trustee.Name
  - System.Messaging.Trustee.SystemName
  - System.Messaging.Trustee.TrusteeType
  langs:
  - csharp
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
  type: Class
  summary: "指定使用者帳戶、 群組帳戶或登入工作階段要套用存取控制項目。"
  remarks: "信任者為的實體對您要授與或拒絕存取權限，當您建立的存取控制項目。 設定<xref:System.Messaging.Trustee.TrusteeType%2A>成員 (直接或使用<xref:System.Messaging.Trustee.%23ctor%2A>建構函式) 以指定之信任項目是否為使用者、 電腦或其他類型。</xref:System.Messaging.Trustee.%23ctor%2A> </xref:System.Messaging.Trustee.TrusteeType%2A> 如果您不指定信任者類型設定為信任者的權限之前，型別會預設為`Unknown`。       您必須指定的值<xref:System.Messaging.Trustee.Name%2A>屬性，才能使用之信任項目設定權限。</xref:System.Messaging.Trustee.Name%2A> <xref:System.Messaging.Trustee.Name%2A>包含新的存取權限指派給使用者、 群組或電腦帳戶的名稱。</xref:System.Messaging.Trustee.Name%2A> 您可以選擇性地設定<xref:System.Messaging.Trustee.SystemName%2A>屬性來識別的系統的信任者帳戶查閱來解析名稱的安全性識別碼的名稱。</xref:System.Messaging.Trustee.SystemName%2A> 如果您未指定的值<xref:System.Messaging.Trustee.SystemName%2A>，本機電腦帳戶名稱查詢。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public class Trustee
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor
  id: '#ctor'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.Trustee&quot;></xref>類別而不需要設定的任何讀/寫屬性。"
  remarks: "您必須指定的值<xref:System.Messaging.Trustee.Name%2A>屬性，才能使用<xref:System.Messaging.Trustee>設定權限的執行個體。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.Name%2A> 您可以選擇性地設定<xref:System.Messaging.Trustee.SystemName%2A>屬性來識別的系統的信任者帳戶查閱來解析名稱的安全性識別碼的名稱。</xref:System.Messaging.Trustee.SystemName%2A> 如果您未指定的值<xref:System.Messaging.Trustee.SystemName%2A>，本機電腦帳戶名稱查詢。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public Trustee ();
    parameters: []
  overload: System.Messaging.Trustee.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.Trustee&quot;></xref>型別的類別<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>，設定<> *> 屬性，以指定的值，而<> *> 來<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  remarks: "若要設定的信任者帳戶，並指定本機電腦用來尋找帳戶使用此多載。 <xref:System.Messaging.Trustee.TrusteeType%2A>屬性設定為`Unknown`，但您可以修改該值，才能使用這個執行個體<xref:System.Messaging.Trustee>設定權限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A>"
  syntax:
    content: public Trustee (string name);
    parameters:
    - id: name
      type: System.String
      description: "要指派給值<xref:System.Messaging.Trustee.Name*>屬性。</xref:System.Messaging.Trustee.Name*>"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.Trustee&quot;></xref>型別的類別<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>，設定<xref:System.Messaging.Trustee.Name*>和<xref uid=&quot;langword_csharp_SystemName&quot; name=&quot;SystemName&quot; href=&quot;&quot;></xref>屬性指定的值。</xref:System.Messaging.Trustee.Name*>"
  remarks: "若要設定的信任者帳戶，並指定網路電腦可用來尋找帳戶使用此多載。 <xref:System.Messaging.Trustee.TrusteeType%2A>屬性設定為`Unknown`，但您可以修改該值，才能使用這個執行個體<xref:System.Messaging.Trustee>設定權限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A>"
  syntax:
    content: public Trustee (string name, string systemName);
    parameters:
    - id: name
      type: System.String
      description: "要指派給值<xref:System.Messaging.Trustee.Name*>屬性。</xref:System.Messaging.Trustee.Name*>"
    - id: systemName
      type: System.String
      description: "要指派給值<xref:System.Messaging.Trustee.SystemName*>屬性。</xref:System.Messaging.Trustee.SystemName*>"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  id: '#ctor(System.String,System.String,System.Messaging.TrusteeType)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "初始化的新執行個體<xref href=&quot;System.Messaging.Trustee&quot;></xref>類別指定的類型，設定<> *> 和<> *> 屬性指定的值。"
  remarks: "設定信任者帳戶，並指定要用來尋找帳戶的網路電腦已知的信任項目類型時，請使用此多載。       這個多載設定<xref:System.Messaging.Trustee.TrusteeType%2A>屬性在建構，但您可以修改該值，才能使用這個執行個體<xref:System.Messaging.Trustee>設定權限。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.TrusteeType%2A> `Unknown`您不知道的使用，但知道它是有效的信任類型時，才應該使用信任項目型別 （其他多載建構函式的預設設定）。"
  syntax:
    content: public Trustee (string name, string systemName, System.Messaging.TrusteeType trusteeType);
    parameters:
    - id: name
      type: System.String
      description: "要指派給值<xref:System.Messaging.Trustee.Name*>屬性。</xref:System.Messaging.Trustee.Name*>"
    - id: systemName
      type: System.String
      description: "要指派給值<xref:System.Messaging.Trustee.SystemName*>屬性。</xref:System.Messaging.Trustee.SystemName*>"
    - id: trusteeType
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref>表示信任者的帳戶類型。"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.Name
  id: Name
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定之信任項目名稱。"
  remarks: "您必須指定名稱屬性的值，才能使用<xref:System.Messaging.Trustee>設定權限。</xref:System.Messaging.Trustee> 名稱包含使用者、 群組或電腦帳戶指派新的存取權限的名稱。       如果您未指定的值<xref:System.Messaging.Trustee.SystemName%2A>屬性，您在 [名稱] 屬性識別的帳戶會查閱本機電腦上。</xref:System.Messaging.Trustee.SystemName%2A> 如果您指定<xref:System.Messaging.Trustee.SystemName%2A>，在帳戶查閱您指定的電腦上。</xref:System.Messaging.Trustee.SystemName%2A>       如果您未連接到網路 （例如，如果您是工作群組模式中），[名稱] 屬性可以是任何本機使用者或群組。 在此情況下，您不應指定任何值<xref:System.Messaging.Trustee.SystemName%2A>，因為根據定義在本機工作群組模式。</xref:System.Messaging.Trustee.SystemName%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "指派新的權限的帳戶名稱。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.Trustee.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Name 屬性<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Messaging.Trustee.SystemName
  id: SystemName
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定要尋找的信任者帳戶的電腦。"
  remarks: "您必須指定的值<xref:System.Messaging.Trustee.Name%2A>才能使用這個執行個體<xref:System.Messaging.Trustee>設定權限，但是系統名稱為選擇性。</xref:System.Messaging.Trustee> </xref:System.Messaging.Trustee.Name%2A> 如果您離開系統名稱`null`，本機電腦用來查詢中指定的帳戶<xref:System.Messaging.Trustee.Name%2A>屬性。</xref:System.Messaging.Trustee.Name%2A>"
  syntax:
    content: public string SystemName { get; set; }
    return:
      type: System.String
      description: "帳戶存在的本機或遠端電腦。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，表示該名稱會查閱本機電腦上。"
  overload: System.Messaging.Trustee.SystemName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.TrusteeType
  id: TrusteeType
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得或設定型別之信任項目，識別是否信任項是使用者、 群組、 電腦、 網域或別名。"
  remarks: "TrusteeType 指出哪種帳戶之信任項目與相關聯的網域控制站或本機電腦上。 這可以是，例如，使用者帳戶、 群組帳戶或電腦帳戶。       如果您要指定的預先定義的群組名稱<xref:System.Messaging.Trustee.Name%2A>屬性，例如每個人，TrusteeType 是`Group`，而非`Alias`。</xref:System.Messaging.Trustee.Name%2A>"
  syntax:
    content: public System.Messaging.TrusteeType TrusteeType { get; set; }
    return:
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref> ，表示何種帳戶之信任項目已在系統上。 預設值是<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>。"
  overload: System.Messaging.Trustee.TrusteeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定的信任項目類型不是其中一個<xref href=&quot;System.Messaging.TrusteeType&quot;></xref>列舉成員。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.Trustee.#ctor
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
- uid: System.Messaging.Trustee.#ctor(System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
- uid: System.Messaging.TrusteeType
  parent: System.Messaging
  isExternal: false
  name: TrusteeType
  nameWithType: TrusteeType
  fullName: System.Messaging.TrusteeType
- uid: System.Messaging.Trustee.Name
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
- uid: System.Messaging.Trustee.SystemName
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
- uid: System.Messaging.Trustee.#ctor*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee
  nameWithType: Trustee.Trustee
- uid: System.Messaging.Trustee.Name*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
- uid: System.Messaging.Trustee.SystemName*
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType*
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
