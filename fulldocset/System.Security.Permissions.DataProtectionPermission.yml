### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.DataProtectionPermission
  id: DataProtectionPermission
  children:
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.DataProtectionPermission.Copy
  - System.Security.Permissions.DataProtectionPermission.Flags
  - System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  - System.Security.Permissions.DataProtectionPermission.ToXml
  - System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission
  fullName: System.Security.Permissions.DataProtectionPermission
  type: Class
  summary: "控制存取加密的資料和記憶體的能力。 這個類別無法被繼承。"
  remarks: "此權限用來控制加密資料和記憶體使用的功能<xref:System.Security.Cryptography.ProtectedData>和<xref:System.Security.Cryptography.ProtectedMemory>類別。</xref:System.Security.Cryptography.ProtectedMemory> </xref:System.Security.Cryptography.ProtectedData>"
  syntax:
    content: 'public sealed class DataProtectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  id: '#ctor(System.Security.Permissions.DataProtectionPermissionFlags)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;></xref>類別的指定權限旗標。"
  remarks: ''
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/cpp/a7af2eef-8910-4637-aff8-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/csharp/a7af2eef-8910-4637-aff8-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/visualbasic/a7af2eef-8910-4637-aff8-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.DataProtectionPermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "位元組合<xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;></xref>值。"
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>不是有效的組合<xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;></xref>值。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "初始化的新執行個體<xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;></xref>類別與指定權限狀態。"
  remarks: "會建立`None`（完全受限制） 或`Unrestricted`存取資料和記憶體。"
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/cpp/0fcdac9b-6e0b-490f-9cfa-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/csharp/0fcdac9b-6e0b-490f-9cfa-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/visualbasic/0fcdac9b-6e0b-490f-9cfa-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "其中一個<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>不是有效<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  id: Copy
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "建立並傳回目前權限的相同複本。"
  remarks: "複製的權限表示與原始的權限資源相同的存取權。"
  example:
  - "The following code example shows the use of the Copy method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/cpp/m-system.security.permis_7_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/csharp/m-system.security.permis_7_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/visualbasic/m-system.security.permis_7_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "一份目前的權限。"
  overload: System.Security.Permissions.DataProtectionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  id: Flags
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "取得或設定資料和記憶體保護旗標。"
  remarks: "這個屬性會指定是否`Protect`和`Unprotect`方法<xref:System.Security.Cryptography.ProtectedData>和<xref:System.Security.Cryptography.ProtectedMemory>類別可以用。</xref:System.Security.Cryptography.ProtectedMemory> </xref:System.Security.Cryptography.ProtectedData>"
  example:
  - "The following code example shows the use of the Flags property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/p-system.security.permis_11_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/p-system.security.permis_11_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/p-system.security.permis_11_1.vb)]"
  syntax:
    content: public System.Security.Permissions.DataProtectionPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "位元組合<xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;></xref>值。"
  overload: System.Security.Permissions.DataProtectionPermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的值不是有效的組合<xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;></xref>值。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "重新建構具有特定狀態的 XML 編碼方式的權限。"
  remarks: "FromXml 方法，重新建構的<xref:System.Security.Permissions.DataProtectionPermission>XML 編碼方式的物件定義的<xref:System.Security.SecurityElement>類別。</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.DataProtectionPermission> 使用<xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>方法，將 XML 編碼<xref:System.Security.Permissions.DataProtectionPermission>，包括狀態資訊。</xref:System.Security.Permissions.DataProtectionPermission> </xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>"
  example:
  - "The following code example shows the use of the FromXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/600f1736-4257-4de6-bfa2-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/600f1736-4257-4de6-bfa2-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/600f1736-4257-4de6-bfa2-_1.vb)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> ，其中包含用以重新建構權限的 XML 編碼方式。"
  overload: System.Security.Permissions.DataProtectionPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>不是有效的權限項目。       -的版本號碼<code>securityElement</code>不支援。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "建立並傳回目前權限和指定的權限交集的權限。"
  remarks: "兩個權限的交集會描述一組共同兩者描述的作業的權限。 只有通過這兩個個別的使用權限的需求會通過交集。"
  example:
  - "The following code example shows the use of the Intersect method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/28e519e8-73a0-40f3-bd6c-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/28e519e8-73a0-40f3-bd6c-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/28e519e8-73a0-40f3-bd6c-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要與目前權限產生交集的權限。 它必須是相同的類型與目前權限。"
    return:
      type: System.Security.IPermission
      description: "代表目前權限與指定權限交集的新權限。 這個新權限是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集是空的。"
  overload: System.Security.Permissions.DataProtectionPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，卻未指定相同類型的權限與目前權限。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "判斷目前權限是否為指定的權限的子集。"
  remarks: "如果目前權限在指定的權限中指定完全包含一組的作業，目前的權限會是所指定權限的子集。  例如，權限<xref:System.Security.Permissions.DataProtectionPermissionFlags>存取是權限的子集<xref:System.Security.Permissions.DataProtectionPermissionFlags>存取。</xref:System.Security.Permissions.DataProtectionPermissionFlags> </xref:System.Security.Permissions.DataProtectionPermissionFlags>"
  example:
  - "The following code example shows the use of the IsSubsetOf method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/cpp/f5f850fa-1969-4642-a180-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/csharp/f5f850fa-1969-4642-a180-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/visualbasic/f5f850fa-1969-4642-a180-_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要測試子集關聯性的權限。 此權限必須與目前權限相同的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前權限是指定的權限的子集否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，卻未指定相同類型的權限與目前權限。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "傳回值，指出目前的權限是否不受限制。"
  remarks: "不受限制的權限，表示存取權限所保護的所有資源。"
  example:
  - "The following code example shows the use of the IsUnrestricted method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/cpp/m-system.security.permis_28_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/csharp/m-system.security.permis_28_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/visualbasic/m-system.security.permis_28_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前權限不受限制;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "建立權限和其目前狀態的 XML 編碼方式。"
  remarks: "使用<xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A>方法來還原<xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement>的狀態資訊</xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A>"
  example:
  - "The following code example shows the use of the ToXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/m-system.security.permis_9_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/m-system.security.permis_9_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/m-system.security.permis_9_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "權限，包括狀態資訊的 XML 編碼方式。"
  overload: System.Security.Permissions.DataProtectionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "建立權限聯集的目前的權限與指定權限。"
  remarks: "要聯集呼叫的結果是權限，表示所有作業，代表目前權限和指定的權限。 傳遞其中一個權限的任何要求會傳遞它們的聯集。"
  example:
  - "The following code example shows the use of the Union method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/cpp/67e342ee-9a58-40b8-a0ec-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/csharp/67e342ee-9a58-40b8-a0ec-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/visualbasic/67e342ee-9a58-40b8-a0ec-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "與目前權限結合的權限。 它必須是類型的相同與目前權限。"
    return:
      type: System.Security.IPermission
      description: "新的權限，表示目前的權限與指定權限的聯集。"
  overload: System.Security.Permissions.DataProtectionPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>不是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ，卻未指定相同類型的權限與目前權限。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
- uid: System.Security.Permissions.DataProtectionPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: DataProtectionPermissionFlags
  nameWithType: DataProtectionPermissionFlags
  fullName: System.Security.Permissions.DataProtectionPermissionFlags
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.#ctor*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission.DataProtectionPermission
- uid: System.Security.Permissions.DataProtectionPermission.Copy*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy
  nameWithType: DataProtectionPermission.Copy
- uid: System.Security.Permissions.DataProtectionPermission.Flags*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml
  nameWithType: DataProtectionPermission.FromXml
- uid: System.Security.Permissions.DataProtectionPermission.Intersect*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect
  nameWithType: DataProtectionPermission.Intersect
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DataProtectionPermission.IsSubsetOf
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DataProtectionPermission.IsUnrestricted
- uid: System.Security.Permissions.DataProtectionPermission.ToXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml
  nameWithType: DataProtectionPermission.ToXml
- uid: System.Security.Permissions.DataProtectionPermission.Union*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union
  nameWithType: DataProtectionPermission.Union
