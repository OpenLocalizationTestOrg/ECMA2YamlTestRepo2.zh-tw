### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent
  id: WebAuthenticationSuccessAuditEvent
  children:
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent
  type: Class
  summary: "提供驗證成功事件的相關資訊。"
  remarks: "ASP.NET 健康監視，可讓管理已部署的 Web 應用程式的生產環境和作業人員。 <xref:System.Web.Management>命名空間包含負責封裝應用程式健全狀況狀態資料和負責處理此資料提供者類型的健全狀況事件型別。</xref:System.Web.Management> 它也會包含有助於管理健全狀況事件的支援型別。       下列清單說明 ASP.NET，會引發事件的型別 WebAuthenticationSuccessAuditEvent 的功能。      > [!NOTE] > 預設 ASP.NET 設定為記錄成功記錄稽核失敗狀況，條件會嚴重地耗用系統資源。  您永遠可以設定系統以記錄成功狀況。      為表單驗證。 稽核成功的狀況。 成功稽核會包含已驗證的使用者名稱。 相反地，稽核失敗不會包含使用者名稱，因為它們通常會從無法解密或驗證票證。 同時包含用戶端 IP 位址。 相關的事件稽核的程式碼為<xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>。</xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>      成員資格。 稽核成功的狀況。 成功和失敗稽核會包含所嘗試的使用者名稱。 兩種稽核形式會包含已嘗試的密碼，因為，會保存記錄檔中的有效密碼的風險。 相關的事件稽核的程式碼為<xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>。</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       當引發 WebAuthenticationSuccessAuditEvent 時，依預設它會更新驗證成功的事件引發的效能計數器。 若要檢視在 系統監視器 (PerfMon)，此效能計數器中**新增計數器**視窗選取**ASP.NET**中**效能物件**下拉式清單中，選取 驗證成功事件引發的效能計數器，然後按一下**新增** 按鈕。 如需詳細資訊，請參閱[ASP.NET 應用程式使用 「 系統監視器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) MSDN 上。      > [!NOTE] > 在大部分情況下您將能夠實作時，使用 ASP.NET 健康監視類型，而您會藉由指定的值控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視類型的類型來建立您自己的自訂事件和提供者。 如需範例衍生自<xref:System.Web.Management.WebBaseEvent>類別，請參閱本主題中所提供的範例。</xref:System.Web.Management.WebBaseEvent>"
  example:
  - "This code example has two parts: a configuration-file excerpt, followed by code that shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n This following is an excerpt of the configuration file's `provider` and `eventMappings` sections. They are already set by default. The only thing you need to do is to provide the setup for the `rules` element in the `healthMonitoring` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <providers>  \n      // Configure the provider to process   \n      // the health events.  \n      <add name=\"EventLogProvider\"  \n         type=\"System.Web.Management.EventLogWebEventProvider,  \n         System.Web,Version=2.0.3600.0,Culture=neutral,  \n         PublicKeyToken=b03f5f7f11d50a3a\"/>  \n    </providers>  \n  \n    <eventMappings>  \n       <clear />  \n       // Configure the custom event   \n       // to handle the audit events.   \n        <add name=\"SampleWebAuthenticationSuccessAuditEvent\"   \n          type=\"SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  \n          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   \n          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL\" />  \n  \n     </eventMappings>  \n     <rules>  \n       <clear/>  \n       // Establish the connection between custom event   \n       // and the provider that must process it.  \n      <add name=\"Log Authentication Success Audits\"   \n        eventName=\"SampleWebAuthenticationFailureAuditEvent\"  \n        provider=\"EventLogProvider\"   \n        profile=\"Custom\" />\\  \n     </rules>  \n  \n</healthMonitoring>  \n```  \n  \n The following code shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._10_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._10_1.cs)]"
  syntax:
    content: 'public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  - System.Web.Management.WebSuccessAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebAuthenticationSuccessAuditEvent&quot;></xref>類別使用提供的參數。"
  remarks: "ASP.NET 健康監視系統會在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>物件，但是您可以呼叫這個建構函式時實作自訂事件的型別繼承自這個類別。</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > WebAuthenticationSuccessAuditEvent 建構函式不是直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 衍生<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>類別</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>時，您可以呼叫 WebAuthenticationSuccessAuditEvent 建構函式"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/visualbasic/f06e0196-5c99-4ca7-a77b-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/csharp/f06e0196-5c99-4ca7-a77b-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "事件描述。"
    - id: eventSource
      type: System.Object
      description: "事件的來源物件。"
    - id: eventCode
      type: System.Int32
      description: "與事件相關聯的程式碼。 當您實作自訂事件時，事件的程式碼必須是大於<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: nameToAuthenticate
      type: System.String
      description: "已驗證的使用者名稱。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初始化<xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;></xref>類別使用提供的參數。"
  remarks: "ASP.NET 健康監視系統會在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>物件，但是您可以呼叫這個建構函式時實作自訂事件的型別繼承自這個類別。</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > WebAuthenticationSuccessAuditEvent 建構函式不是直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 衍生<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>類別</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>時，您可以呼叫 WebAuthenticationSuccessAuditEvent 建構函式"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/afac7708-6243-4126-b8c9-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/afac7708-6243-4126-b8c9-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "事件描述。"
    - id: eventSource
      type: System.Object
      description: "事件的來源物件。"
    - id: eventCode
      type: System.Int32
      description: "與事件相關聯的程式碼。 當您實作自訂事件時，事件的程式碼必須是大於<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>。"
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref>值，指定事件的詳細識別項。"
    - id: nameToAuthenticate
      type: System.String
      description: "已驗證的使用者名稱。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  id: NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "取得已驗證的使用者名稱。"
  remarks: "成功稽核會包含已驗證的使用者名稱。 失敗的稽核不包含使用者名稱，因為它們通常是由解密或驗證失敗所造成。"
  example:
  - "The following code example shows how to use the NameToAuthenticate property.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/p-system.web.management._21_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/p-system.web.management._21_1.cs)]"
  syntax:
    content: public string NameToAuthenticate { get; }
    return:
      type: System.String
      description: "已驗證的使用者名稱。"
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: System.Web.Management.WebSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
