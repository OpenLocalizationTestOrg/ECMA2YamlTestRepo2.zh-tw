### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurfaceManager
  id: DesignSurfaceManager
  children:
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  langs:
  - csharp
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager
  fullName: System.ComponentModel.Design.DesignSurfaceManager
  type: Class
  summary: "管理集合<xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;></xref>物件。"
  remarks: "DesignSurfaceManager 類別設計為容器<xref:System.ComponentModel.Design.DesignSurface>物件。</xref:System.ComponentModel.Design.DesignSurface> 它會提供該控制代碼之間，設計工具中，屬性視窗和其他全域物件的事件路由通用服務。 使用 DesignSurfaceManager 是選擇性的但建議如果您想要擁有數個設計工具視窗。       DesignSurfaceManager 類別會自動提供數個設計階段服務。 您可以覆寫每個服務中受保護取代這些<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>屬性。</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 若要取代的服務，覆寫建構函式，呼叫基底，並進行任何變更透過受保護<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>屬性。</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 所有的服務加入至服務容器中實作<xref:System.IDisposable>處置設計介面管理員時，會處置介面。</xref:System.IDisposable> DesignSurfaceManager 類別提供<xref:System.ComponentModel.Design.IDesignerEventService>為預設服務的介面。</xref:System.ComponentModel.Design.IDesignerEventService> <xref:System.ComponentModel.Design.IDesignerEventService>提供通用的事件處理機制的設計工具事件。</xref:System.ComponentModel.Design.IDesignerEventService> 這項機制，與應用程式會收到通知，當設計工具變成作用中。 服務會提供設計工具的集合和全域物件，例如 [屬性] 視窗中，可以監視選取的其中一個位置變更事件。"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurfaceManager : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>類別。"
  syntax:
    content: public DesignSurfaceManager ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>類別。"
  syntax:
    content: public DesignSurfaceManager (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "父服務提供者。 服務要求都會轉送到此提供者，如果他們無法解析的設計介面的管理員。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  id: ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得或設定使用中的設計工具。"
  remarks: "設計工具會變成作用中視窗時，應該設定 ActiveDesignSurface 屬性在設計工具使用者介面。 這個屬性的預設實作會使用的預設實作<xref:System.ComponentModel.Design.IDesignerEventService>介面，以通知相關的人員的新設計工具目前為作用中。</xref:System.ComponentModel.Design.IDesignerEventService> 如果您提供自己的實作<xref:System.ComponentModel.Design.IDesignerEventService>，您應該覆寫此屬性，以適當地通知您的服務。</xref:System.ComponentModel.Design.IDesignerEventService> 這個屬性可以設定為`null`，指出沒有設計工具為作用中。"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "使用中的設計工具。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  id: ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "目前作用中的設計工具變更時發生。"
  syntax:
    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;
    return:
      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  id: CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "建立設計介面的執行個體。"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的設計介面執行個體。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  id: CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "建立設計介面的執行個體。"
  remarks: "如果您想要輕鬆地加入每個設計工具的其他服務，使用`parentProvider`參數，以提供此設計介面的服務提供者。 CreateDesignSurface 方法會建立合併的服務提供者，可滿足這兩個指定的服務提供者的服務要求以及<xref:System.ComponentModel.Design.DesignSurfaceManager>本身。</xref:System.ComponentModel.Design.DesignSurfaceManager> CreateDesignSurface 方法接著會將傳遞到此服務提供者<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>       <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>傳回設計介面，方法會嘗試取得<xref:System.ComponentModel.Design.IDesignerEventService>.</xref:System.ComponentModel.Design.IDesignerEventService> CreateDesignSurface</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>之後 如果存在，而且如果它是服務的執行個體，<xref:System.ComponentModel.Design.DesignSurfaceManager>提供根據預設，CreateDesignSurface 方法就會引發<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>事件。</xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> </xref:System.ComponentModel.Design.DesignSurfaceManager>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "父服務提供者。 新的合併的服務提供者就會建立會先要求服務時，此提供者，然後委派至設計介面管理員物件的任何失敗。 這個合併的提供者會傳遞至<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的設計介面執行個體。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  id: CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "建立設計介面的實作。"
  remarks: "同時會呼叫 CreateDesignSurfaceCore 方法<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法。</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 它是實際上會建立在設計介面的實作。 預設實作只會傳回新的<xref:System.ComponentModel.Design.DesignSurface>。</xref:System.ComponentModel.Design.DesignSurface> 您可能會覆寫這個方法以提供自訂物件衍生自<xref:System.ComponentModel.Design.DesignSurface>類別。</xref:System.ComponentModel.Design.DesignSurface>"
  syntax:
    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "要傳遞至設計介面服務提供者。 這是執行個體<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>或該物件會實作<xref:System.IServiceProvider>，並代表之間的服務提供者的合併<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>類別和外部傳遞提供者。</xref:System.IServiceProvider>"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新的設計介面執行個體。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  id: DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "發生於設計工具建立時。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  id: DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "發生於設計工具已處置。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  id: DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得在設計介面的集合。"
  remarks: "DesignSurfaces 屬性是直接頂端實作<xref:System.ComponentModel.Design.IDesignerEventService>，因此如果您提供該服務的實作，這個屬性會使用您的實作。</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }
    return:
      type: System.ComponentModel.Design.DesignSurfaceCollection
      description: "目前裝載的設計介面管理員的設計介面的集合。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "所使用的資源釋出<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>。"
  remarks: "公用的 Dispose 方法會依循標準<xref:System.IDisposable>模式。</xref:System.IDisposable> 呼叫這個方法會終結設計介面的管理員。 它也會處置服務容器，這會導致所有服務，可實作<xref:System.IDisposable>也被處置。</xref:System.IDisposable> 這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</xref:System.IDisposable>      > [!NOTE] > 因為<xref:System.ComponentModel.Design.DesignSurfaceManager>並沒有任何原生程式碼以清除，它並沒有呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>。</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> finalizer</xref:System.ComponentModel.Design.DesignSurfaceManager> 如果您需要呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>，您必須自己加入完成項。</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>並選擇性釋放 managed 的資源。"
  remarks: "公用<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>方法會依循標準<xref:System.IDisposable>模式。</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 呼叫這個方法會終結設計介面的管理員。 它也會處置服務容器，這會導致所有服務，可實作<xref:System.IDisposable>也被處置。</xref:System.IDisposable> 這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</xref:System.IDisposable>      > [!NOTE] > 因為<xref:System.ComponentModel.Design.DesignSurfaceManager>並沒有任何原生程式碼以清除，它並沒有完成項呼叫 Dispose。</xref:System.ComponentModel.Design.DesignSurfaceManager> 如果您需要呼叫 Dispose，您必須自己加入完成項。       這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose()`叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.Object.Finalize%2A>       當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.ComponentModel.Design.DesignSurfaceManager>參考。</xref:System.ComponentModel.Design.DesignSurfaceManager> 這個方法會叫用`Dispose()`每個參考物件的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得在設計介面管理員服務容器中的服務。"
  remarks: "任何服務提供者所提供的設計介面的管理員在建構階段轉送給 GetService 方法。"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "要擷取的服務類型。"
    return:
      type: System.Object
      description: "實作，或為衍生的類別，將指定的服務類型的物件否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>如果服務不存在服務容器中。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  id: SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "全域選取範圍變更時發生。"
  remarks: "使用中的設計工具選取的元件集變更時，會引發這個事件。 這會對應到<xref:System.ComponentModel.Design.IDesignerEventService>介面。</xref:System.ComponentModel.Design.IDesignerEventService>"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得在設計介面管理員 ServiceContainer。"
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "設計介面管理員 ServiceContainer。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurface
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ActiveDesignSurfaceChangedEventHandler
  nameWithType: ActiveDesignSurfaceChangedEventHandler
  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
- uid: System.ComponentModel.Design.DesignSurfaceEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceEventHandler
  nameWithType: DesignSurfaceEventHandler
  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceCollection
  nameWithType: DesignSurfaceCollection
  fullName: System.ComponentModel.Design.DesignSurfaceCollection
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager.DesignSurfaceManager
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface
  nameWithType: DesignSurfaceManager.CreateDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose
  nameWithType: DesignSurfaceManager.Dispose
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService
  nameWithType: DesignSurfaceManager.GetService
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
