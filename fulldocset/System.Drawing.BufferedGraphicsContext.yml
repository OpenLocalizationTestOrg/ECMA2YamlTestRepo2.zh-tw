### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphicsContext
  id: BufferedGraphicsContext
  children:
  - System.Drawing.BufferedGraphicsContext.#ctor
  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Dispose
  - System.Drawing.BufferedGraphicsContext.Finalize
  - System.Drawing.BufferedGraphicsContext.Invalidate
  - System.Drawing.BufferedGraphicsContext.MaximumBuffer
  langs:
  - csharp
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext
  fullName: System.Drawing.BufferedGraphicsContext
  type: Class
  summary: "提供方法來建立可用於雙重緩衝的圖形緩衝區。"
  remarks: "BufferedGraphicsContext 類別可讓您實作自訂雙重緩衝的圖形。 使用雙重緩衝的圖形可以減少或消除閃爍因重繪顯示介面的。      > [!NOTE] > 使用雙重緩衝的最簡單方式是設定<xref:System.Windows.Forms.ControlStyles>控制樣式旗標控制使用<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> 設定<xref:System.Windows.Forms.ControlStyles>控制項的控制項樣式旗標將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</xref:System.Windows.Forms.ControlStyles> 若要設定此旗標`true`預設。       BufferedGraphicsContext 類別會提供用於建立及設定圖形緩衝區的方法。 <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法會建立<xref:System.Drawing.BufferedGraphics>，即也提供的方法來寫入緩衝區以及轉譯其內容至輸出裝置，您可以使用圖形緩衝區的包裝函式。</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>       您可以從靜態擷取目前的應用程式定義域 BufferedGraphicsContext<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>屬性。</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> 等動畫大量繪圖功能的應用程式，您可以建立專用的 BufferedGraphicsContext 使用建構函式，但大部分的應用程式<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>屬性將足以。</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>       如需有關繪圖已緩衝的圖形和緩衝處理的自訂實作的詳細資訊，請參閱[雙重緩衝的圖形](~/add/includes/ajax-current-ext-md.md)和[How to︰ 手動管理已緩衝的圖形](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphicsContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  id: '#ctor'
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "初始化的新執行個體<xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;></xref>類別。"
  remarks: "等動畫大量繪圖功能的應用程式，您有時可以改善效能使用專用<xref:System.Drawing.BufferedGraphicsContext>而不是<xref:System.Drawing.BufferedGraphicsManager>.</xref:System.Drawing.BufferedGraphicsManager>所提供的預設執行個體</xref:System.Drawing.BufferedGraphicsContext> 這可讓您建立及管理個別的圖形緩衝區。      > [!NOTE] ><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>使用專用的<xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext>完畢時</xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>，應該一律會呼叫您       如需專用的圖形緩衝區的詳細資訊，請參閱[How to︰ 手動管理已緩衝的圖形](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立使用指定的像素格式的指定大小的圖形緩衝區<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "當您呼叫具有矩形的配置方法，其大小超過的值<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>屬性、 暫存<xref:System.Drawing.BufferedGraphicsContext>是用來配置緩衝區，並提供暫時的內容緩衝區。</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> 新<xref:System.Drawing.BufferedGraphicsContext>不同<xref:System.Drawing.BufferedGraphicsContext>應用程式網域和它會自動公開當<xref:System.Drawing.BufferedGraphics>配置處置方法所傳回。</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetGraphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref>以符合新緩衝區的像素格式。"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指出要建立之緩衝區的大小。"
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> ，可以用來繪製指定的維度的緩衝區。"
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  id: Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "建立使用指定的像素格式的指定大小的圖形緩衝區<xref href=&quot;System.Drawing.Graphics&quot;> </xref>。"
  remarks: "當您呼叫<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法，其大小超過此值以矩形的<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>屬性、 暫存<xref:System.Drawing.BufferedGraphicsContext>是用來配置緩衝區，並提供暫時的內容緩衝區。</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> 新<xref:System.Drawing.BufferedGraphicsContext>不同<xref:System.Drawing.BufferedGraphicsContext>應用程式網域和它會自動公開當<xref:System.Drawing.BufferedGraphics>傳回<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>處置方法。</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "<xref:System.IntPtr>裝置內容，以符合新緩衝區的像素格式。</xref:System.IntPtr>"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指出要建立之緩衝區的大小。"
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> ，可以用來繪製指定的維度的緩衝區。"
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "所使用的資源全部釋出<xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref>。"
  remarks: "當您完成使用<xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext>呼叫 Dispose Dispose 方法會使<xref:System.Drawing.BufferedGraphicsContext>中無法使用的狀態。</xref:System.Drawing.BufferedGraphicsContext> 在呼叫 Dispose 之後，您必須釋放所有參考<xref:System.Drawing.BufferedGraphicsContext>讓記憶體回收行程可以回收記憶體的<xref:System.Drawing.BufferedGraphicsContext>所佔用。</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext> 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)和[實作 Dispose 方法](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 永遠呼叫 Dispose 之後，再放開您的最後一個參考至<xref:System.Drawing.BufferedGraphicsContext>。</xref:System.Drawing.BufferedGraphicsContext> 否則，它所使用的資源將不會釋放記憶體回收行程呼叫<xref:System.Object.Finalize%2A><xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext>方法</xref:System.Object.Finalize%2A>之前"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "允許物件嘗試釋放資源，並透過記憶體回收開始前執行其他清除作業。"
  syntax:
    content: ~BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  id: Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "如果緩衝區已配置，且尚未處置，處置目前的圖形緩衝區。"
  remarks: "如果正在使用中的圖形緩衝區，它會被標示為處置只要是完全免費。否則，它會處置立即。"
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  id: MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得或設定要使用之緩衝區的大小上限。"
  remarks: "這個屬性可讓您取得或設定應該保留在記憶體中緩衝區的最大維度。 您可以將任何大小的緩衝區配置，不過任何大於 MaximumBuffer 大小維度的緩衝處理將會暫時使用後即捨棄時<xref:System.Drawing.BufferedGraphics>釋放物件。</xref:System.Drawing.BufferedGraphics>"
  example:
  - "The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public System.Drawing.Size MaximumBuffer { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>指出緩衝區大小的最大大小。"
  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "高度或寬度的大小小於或等於零。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
- uid: System.Drawing.BufferedGraphics
  parent: System.Drawing
  isExternal: false
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.BufferedGraphicsContext.#ctor*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext
- uid: System.Drawing.BufferedGraphicsContext.Allocate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate
  nameWithType: BufferedGraphicsContext.Allocate
- uid: System.Drawing.BufferedGraphicsContext.Dispose*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphicsContext.Dispose
- uid: System.Drawing.BufferedGraphicsContext.Finalize*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphicsContext.Finalize
- uid: System.Drawing.BufferedGraphicsContext.Invalidate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate
  nameWithType: BufferedGraphicsContext.Invalidate
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
