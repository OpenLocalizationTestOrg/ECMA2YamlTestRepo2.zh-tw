### YamlMime:ManagedReference
items:
- uid: System.Windows.Setter
  id: Setter
  children:
  - System.Windows.Setter.#ctor
  - System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)
  - System.Windows.Setter.Property
  - System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  - System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Setter.TargetName
  - System.Windows.Setter.Value
  langs:
  - csharp
  name: Setter
  nameWithType: Setter
  fullName: System.Windows.Setter
  type: Class
  summary: "代表適用於屬性值的 setter。"
  remarks: "<xref:System.Windows.Style>s 和不同類型的觸發程序 (繼承自類別<xref:System.Windows.TriggerBase>) 使用 Setter 將套用屬性值。</xref:System.Windows.TriggerBase></xref:System.Windows.Style>       請注意，您必須同時指定<xref:System.Windows.Setter.Property%2A>和<xref:System.Windows.Setter.Value%2A>為有意義的 setter Setter 的屬性。</xref:System.Windows.Setter.Value%2A> </xref:System.Windows.Setter.Property%2A> 如果未設定一或兩個屬性，將會擲回例外狀況。"
  example:
  - "The following example defines a <xref:System.Windows.Style> that will be applied to every <xref:System.Windows.Controls.TextBlock> element. This <xref:System.Windows.Style> applies values to several <xref:System.Windows.Controls.TextBlock> properties with the use of Setters.  \n  \n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/photostore/window1.xaml#1)]\n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/t-system.windows.setter_1.xaml)]  \n  \n The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Setter : System.Windows.SetterBase, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.Windows.SetterBase
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.Windows.SetterBase.CheckSealed
  - System.Windows.SetterBase.IsSealed
  platform:
  - net462
- uid: System.Windows.Setter.#ctor
  id: '#ctor'
  parent: System.Windows.Setter
  langs:
  - csharp
  name: Setter()
  nameWithType: Setter.Setter()
  fullName: System.Windows.Setter.Setter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Setter&quot;></xref>類別。"
  syntax:
    content: public Setter ();
    parameters: []
  overload: System.Windows.Setter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)
  id: '#ctor(System.Windows.DependencyProperty,System.Object)'
  parent: System.Windows.Setter
  langs:
  - csharp
  name: Setter(DependencyProperty,Object)
  nameWithType: Setter.Setter(DependencyProperty,Object)
  fullName: System.Windows.Setter.Setter(DependencyProperty,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Setter&quot;></xref>類別具有指定的屬性和值。"
  syntax:
    content: public Setter (System.Windows.DependencyProperty property, object value);
    parameters:
    - id: property
      type: System.Windows.DependencyProperty
      description: "<xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>套用<xref:System.Windows.Setter.Value*>以。</xref:System.Windows.Setter.Value*>"
    - id: value
      type: System.Object
      description: "要套用至屬性的值。"
  overload: System.Windows.Setter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)
  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.String)'
  parent: System.Windows.Setter
  langs:
  - csharp
  name: Setter(DependencyProperty,Object,String)
  nameWithType: Setter.Setter(DependencyProperty,Object,String)
  fullName: System.Windows.Setter.Setter(DependencyProperty,Object,String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Setter&quot;></xref>類別指定的屬性、 值和目標名稱。"
  syntax:
    content: public Setter (System.Windows.DependencyProperty property, object value, string targetName);
    parameters:
    - id: property
      type: System.Windows.DependencyProperty
      description: "<xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>套用<xref:System.Windows.Setter.Value*>以。</xref:System.Windows.Setter.Value*>"
    - id: value
      type: System.Object
      description: "要套用至屬性的值。"
    - id: targetName
      type: System.String
      description: "子節點的名稱這<xref href=&quot;System.Windows.Setter&quot;></xref>適合。"
  overload: System.Windows.Setter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.Property
  id: Property
  parent: System.Windows.Setter
  langs:
  - csharp
  name: Property
  nameWithType: Setter.Property
  fullName: System.Windows.Setter.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定屬性的<xref:System.Windows.Setter.Value*>將會套用。</xref:System.Windows.Setter.Value*>"
  remarks: "請注意，您必須指定這兩個屬性和<xref:System.Windows.Setter.Value%2A>屬性<xref:System.Windows.Setter>，否則會擲回例外狀況。</xref:System.Windows.Setter> </xref:System.Windows.Setter.Value%2A>"
  example:
  - "The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/photostore/window1.xaml#1)]\n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/p-system.windows.setter._2_1.xaml)]  \n  \n The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>. Note that property name in this example is qualified with the name of the class (<xref:System.Windows.Controls.Control>) because the <xref:System.Windows.Style> does not specify a <xref:System.Windows.Style.TargetType%2A>.  \n  \n [!code-xml[StyleOvw01#StyleSimple](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#stylesimple)]\n [!code-xml[StyleOvw01#StyleSimple](~/add/codesnippet/xaml/p-system.windows.setter._2_2.xaml)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>的<xref:System.Windows.Setter.Value*>將會套用。</xref:System.Windows.Setter.Value*> 預設值為 null。"
  overload: System.Windows.Setter.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Property 屬性不可為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的屬性的屬性不能處於唯讀模式。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "如果指定<xref:System.Windows.Setter.Value*>指定屬性的型別無效。</xref:System.Windows.Setter.Value*>"
  platform:
  - net462
- uid: System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  id: ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  parent: System.Windows.Setter
  langs:
  - csharp
  name: ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  nameWithType: Setter.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  fullName: System.Windows.Setter.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "處理標記延伸位置提供的值之屬性的情況下<xref href=&quot;System.Windows.Setter&quot;></xref>物件。"
  remarks: "這是套用所參考方法<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>類別層級，這表示這個方法會處理所有嘗試都將值設定屬性<xref:System.Windows.Setter>搭配標記延伸。</xref:System.Windows.Setter> </xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 您沒有不通常直接呼叫這個方法。"
  syntax:
    content: public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "物件，其中的標記延伸設定的值。"
    - id: eventArgs
      type: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
      description: "資料的相關標記延伸處理。"
  overload: System.Windows.Setter.ReceiveMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Setter
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Setter.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Setter.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "處理的案例，其中型別轉換子的屬性中提供的值<xref href=&quot;System.Windows.Setter&quot;></xref>物件。"
  remarks: "這是套用所參考方法<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>類別層級，這表示這個方法會處理所有嘗試都將值設定屬性<xref:System.Windows.Setter>具有型別轉換子。</xref:System.Windows.Setter> </xref:System.Windows.Markup.XamlSetTypeConverterAttribute> 您沒有不通常直接呼叫這個方法。"
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "物件，其中型別轉換子設定的值。"
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "相關的資料型別轉換器處理。"
  overload: System.Windows.Setter.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Setter
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Setter.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示物件正在啟動初始設定。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Setter>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>介面。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Setter
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Setter.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示物件已完成初始設定。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Windows.Setter>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>介面。</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.TargetName
  id: TargetName
  parent: System.Windows.Setter
  langs:
  - csharp
  name: TargetName
  nameWithType: Setter.TargetName
  fullName: System.Windows.Setter.TargetName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定物件的名稱，此<xref href=&quot;System.Windows.Setter&quot;></xref>適合。"
  remarks: "您可以設定此屬性的 setter 集合 （屬於這個 setter 集合） 套用所在的範圍內的任何項目名稱。 這通常是具名的項目內樣板，含有這個 setter。"
  example:
  - "In the following example, the TargetName is used for the trigger <xref:System.Windows.Setter> to specify that the <xref:System.Windows.Setter> is intended for the <xref:System.Windows.Shapes.Ellipse> named `ThumbCover` within the <xref:System.Windows.Controls.ControlTemplate>.  \n  \n [!code-xml[ColorPicker_snip#StyleTargetNameRef](~/add/codesnippet/xaml/ColorPickerApp/MyApp.xaml#styletargetnameref)]"
  syntax:
    content: public string TargetName { get; set; }
    return:
      type: System.String
      description: "預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Setter.TargetName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Setter.Value
  id: Value
  parent: System.Windows.Setter
  langs:
  - csharp
  name: Value
  nameWithType: Setter.Value
  fullName: System.Windows.Setter.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定要套用至這由所指定屬性的值<xref href=&quot;System.Windows.Setter&quot;> </xref>。"
  remarks: "<a name=&quot;xamlAttributeUsage_Value&quot;></a># # XAML 屬性使用方式```   <object Value=&quot;value&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_Value&quot;> </a> # # XAML 屬性項目用法```   <object>     <object.Value>       value     </object.Value>   </object>   ``` <a name=&quot;xamlValues_Value&quot;> </a> # # XAML 值*值*物件或標記延伸。             請參閱[StaticResource 標記延伸](~/add/includes/ajax-current-ext-md.md)。       請注意，您必須同時指定<xref:System.Windows.Setter.Property%2A>和 Value 屬性上<xref:System.Windows.Setter>，否則會擲回例外狀況。</xref:System.Windows.Setter> </xref:System.Windows.Setter.Property%2A>       如果指定的值是受支援資料繫結和動態的資源，在物件內<xref:System.Windows.Freezable>物件。</xref:System.Windows.Freezable> 請參閱[繫結標記延伸](~/add/includes/ajax-current-ext-md.md)和[DynamicResource 標記延伸](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example defines a <xref:System.Windows.Style> that will be applied to every <xref:System.Windows.Controls.TextBlock> element. For the complete example, see [Introduction to Styling and Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160010).  \n  \n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/photostore/window1.xaml#1)]\n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/p-system.windows.setter._0_1.xaml)]  \n  \n The following example defines a <xref:System.Windows.Style> with <xref:System.Windows.Setter>s that reference system resources.  \n  \n [!code-xml[BtnStyles#1](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#1)]  \n  \n The following example defines a <xref:System.Windows.Style> for the <xref:System.Windows.Controls.Primitives.RepeatButton>.  \n  \n [!code-xml[ColorPicker_snip#StyleTargetNameRef](~/add/codesnippet/xaml/ColorPickerApp/MyApp.xaml#styletargetnameref)]  \n  \n The following example shows a Value property that uses the <xref:System.Windows.Data.Binding> declaration. For the complete example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).  \n  \n [!code-xml[bindvalidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "預設值是<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>。"
  overload: System.Windows.Setter.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "如果指定的值設定為<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>。"
  platform:
  - net462
references:
- uid: System.Windows.SetterBase
  isExternal: false
  name: System.Windows.SetterBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Setter.#ctor
  parent: System.Windows.Setter
  isExternal: false
  name: Setter()
  nameWithType: Setter.Setter()
  fullName: System.Windows.Setter.Setter()
- uid: System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Setter
  isExternal: false
  name: Setter(DependencyProperty,Object)
  nameWithType: Setter.Setter(DependencyProperty,Object)
  fullName: System.Windows.Setter.Setter(DependencyProperty,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)
  parent: System.Windows.Setter
  isExternal: false
  name: Setter(DependencyProperty,Object,String)
  nameWithType: Setter.Setter(DependencyProperty,Object,String)
  fullName: System.Windows.Setter.Setter(DependencyProperty,Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Setter.Property
  parent: System.Windows.Setter
  isExternal: false
  name: Property
  nameWithType: Setter.Property
  fullName: System.Windows.Setter.Property
- uid: System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  parent: System.Windows.Setter
  isExternal: false
  name: ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  nameWithType: Setter.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  fullName: System.Windows.Setter.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
- uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetMarkupExtensionEventArgs
  nameWithType: XamlSetMarkupExtensionEventArgs
  fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
- uid: System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Setter
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Setter.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Setter.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Setter
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Setter.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Setter
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Setter.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Setter.TargetName
  parent: System.Windows.Setter
  isExternal: false
  name: TargetName
  nameWithType: Setter.TargetName
  fullName: System.Windows.Setter.TargetName
- uid: System.Windows.Setter.Value
  parent: System.Windows.Setter
  isExternal: false
  name: Value
  nameWithType: Setter.Value
  fullName: System.Windows.Setter.Value
- uid: System.Windows.Setter.#ctor*
  parent: System.Windows.Setter
  isExternal: false
  name: Setter
  nameWithType: Setter.Setter
- uid: System.Windows.Setter.Property*
  parent: System.Windows.Setter
  isExternal: false
  name: Property
  nameWithType: Setter.Property
- uid: System.Windows.Setter.ReceiveMarkupExtension*
  parent: System.Windows.Setter
  isExternal: false
  name: ReceiveMarkupExtension
  nameWithType: Setter.ReceiveMarkupExtension
- uid: System.Windows.Setter.ReceiveTypeConverter*
  parent: System.Windows.Setter
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Setter.ReceiveTypeConverter
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Setter
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Setter
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Setter.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Setter.TargetName*
  parent: System.Windows.Setter
  isExternal: false
  name: TargetName
  nameWithType: Setter.TargetName
- uid: System.Windows.Setter.Value*
  parent: System.Windows.Setter
  isExternal: false
  name: Value
  nameWithType: Setter.Value
