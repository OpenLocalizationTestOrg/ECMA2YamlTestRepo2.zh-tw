### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.SayAs
  id: SayAs
  children:
  - System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  - System.Speech.Synthesis.TtsEngine.SayAs.Detail
  - System.Speech.Synthesis.TtsEngine.SayAs.Format
  - System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  langs:
  - csharp
  name: SayAs
  nameWithType: SayAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs
  type: Class
  summary: "包含有關判斷文字應該被的內容類型 （例如貨幣、 日期或地址） 或語言建構。"
  syntax:
    content: public class SayAs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "建立的新執行個體`SayAs`類別。"
  remarks: "內容<xref:System.Speech.Synthesis.TtsEngine.SayAs>類別可用來取得或設定之屬性的值`say-as`SSML 標記中的項目。</xref:System.Speech.Synthesis.TtsEngine.SayAs> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>屬性會使用<xref:System.Speech.Synthesis.TtsEngine.SayAs>通知<xref:System.Speech.Synthesis.SpeechSynthesizer>如何<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A><xref:System.Speech.Synthesis.TtsEngine.TextFragment>.</xref:System.Speech.Synthesis.TtsEngine.TextFragment>屬性</xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>中包含文字的讀出</xref:System.Speech.Synthesis.SpeechSynthesizer>的執行個體</xref:System.Speech.Synthesis.TtsEngine.SayAs></xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>"
  syntax:
    content: public SayAs ();
    parameters: []
  overload: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  id: Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得或設定值`detail`屬性`say-as`SSML 標記語言的提示字元中的項目。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>屬性會取得或設定的值中的 Detail 屬性<xref:System.Speech.Synthesis.TtsEngine.SayAs>執行個體。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>"
  syntax:
    content: public string Detail { get; set; }
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  id: Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得或設定值`format`屬性`say-as`SSML 標記語言的提示字元中的項目。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>屬性會取得或設定中的格式屬性的值<xref:System.Speech.Synthesis.TtsEngine.SayAs>執行個體。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>       例如，在提示字元可能包含片語&quot;的時間是`<say-as interpret-as=”time”> 05:00 </say-as>`&quot;。  在此範例中，`05:00`無法，可唸做&quot;點鐘五 」 或 「 五個上午 」 或 「 喔五百&quot;。 Format 屬性允許的值`interpret-as`延伸到指定要讀出的時間格式的屬性。 如果值`interpret-as`屬性是 「 時間︰&24; 小時 」<xref:System.Speech.Synthesis.SpeechSynthesizer>說出 「 喔五百&quot;。</xref:System.Speech.Synthesis.SpeechSynthesizer> 如果值`interpret-as`屬性是 「 時間︰&12; 小時 」<xref:System.Speech.Synthesis.SpeechSynthesizer>說出 「 M A 的五個 「。</xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public string Format { get; set; }
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  id: InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得或設定值`interpret-as`屬性`say-as`SSML 標記語言的提示字元中的項目。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>屬性取得或設定在 InterpretAs 屬性的值<xref:System.Speech.Synthesis.TtsEngine.SayAs>執行個體。</xref:System.Speech.Synthesis.TtsEngine.SayAs> </xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>       <xref:System.Speech.Synthesis.SpeechSynthesizer>使用 InterpretAs 屬性所指定內容類型來決定如何呈現指定的文字。</xref:System.Speech.Synthesis.SpeechSynthesizer>       例如，Edgar 無法播放做為名稱的名稱: 「 我的名稱是 Edgar 」。 找中拼字以字母，做為與指定或`interpret-as`這一句中的屬性:&quot;我的名稱是`<say-as interpret-as=”spell-out”> Edgar </say-as>`。 」 在此情況下，<xref:System.Speech.Synthesis.SpeechSynthesizer>來說為&quot;E D G R&quot;Edgar。</xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public string InterpretAs { get; set; }
    return:
      type: System.String
      description: "即將加入。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs
  nameWithType: SayAs.SayAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
