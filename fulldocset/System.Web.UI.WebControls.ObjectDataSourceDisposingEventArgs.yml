### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  id: ObjectDataSourceDisposingEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  type: Class
  summary: "提供資料給<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&quot;></xref>事件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項。"
  remarks: "ObjectDataSourceDisposingEventArgs 類別用來<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>方法以提供存取權的商務物件執行個體所使用的任何資料作業之後<xref:System.Web.UI.WebControls.ObjectDataSource>控制項和商務物件來執行，但前商務物件被終結。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 使用存取商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> 藉由新增委派以處理的<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>事件，您可以存取任何公開的成員的商務物件，以執行任何的最後一個工作，或清除。</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>       <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>方法不會呼叫<xref:System.Web.UI.WebControls.ObjectDataSource>控制，如果執行資料作業的方法是`static`方法。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 靜態方法時，會不建立任何商務物件執行個體。       <xref:System.Web.UI.WebControls.ObjectDataSource>控制項不僅會公開許多您可以控制它們來使用基礎的商務物件在其生命週期中的不同時間的事件。</xref:System.Web.UI.WebControls.ObjectDataSource> 下表列出的事件，以及相關聯<xref:System.EventArgs>類別和事件處理常式委派。</xref:System.EventArgs>      |事件 |EventArgs |事件處理常式 |  |-----------|---------------|------------------|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 只有在建立商務物件的執行個體之前立即發生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 在建立商務物件的執行個體之後，就會發生。 |<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 發生於之前擷取的資料。 |<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 發生之前插入、 更新或刪除作業會執行。 |<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> 發生於之後擷取的資料。 |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 發生之後插入、 更新或刪除作業已完成。 |<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 在商務物件被終結之前發生。 |ObjectDataSourceDisposingEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the ObjectDataSourceDisposingEventArgs object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;></xref>類別使用指定的物件。"
  syntax:
    content: public ObjectDataSourceDisposingEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "商務物件與其<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>互動，用於執行資料作業。"
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得物件，表示商務物件與其<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>控制項執行資料作業。"
  remarks: "如果資料作業方法 (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>， <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>， <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) 是指執行個體方法，執行個體的商務物件方法執行之前，先建立。</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 您可以防止在每次呼叫建立的 ObjectInstance 屬性中儲存物件的商務物件<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>事件處理常式。</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 在後續<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>事件，您可以擷取來自商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性。</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: public object ObjectInstance { get; }
    return:
      type: System.Object
      description: "商務物件<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>用於資料作業; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳遞至<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
