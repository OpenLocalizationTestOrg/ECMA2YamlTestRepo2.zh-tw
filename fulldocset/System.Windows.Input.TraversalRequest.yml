### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TraversalRequest
  id: TraversalRequest
  children:
  - System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.Input.TraversalRequest.FocusNavigationDirection
  - System.Windows.Input.TraversalRequest.Wrapped
  langs:
  - csharp
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
  type: Class
  summary: "表示要求，以將焦點移至另一個控制項。"
  remarks: "這個類別用做為輸入參數的<xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName>方法。</xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> <xref:System.Windows.UIElement.MoveFocus%2A>方法都有提供更實際實作的 WPF 架構層級覆寫 (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>)，以及平行實作上<xref:System.Windows.ContentElement>和<xref:System.Windows.FrameworkContentElement>。</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.ContentElement> </xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> </xref:System.Windows.UIElement.MoveFocus%2A> 您通常會設定屬性 TraversalRequest 上，以自訂焦的行為，當您要求，焦點會移至另一個項目。       這個類別也會當做輸入參數使用下列方法:- <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>，和該方法會用於交互操作的實作 (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>)。</xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.</xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>"
  example:
  - "The following example creates a TraversalRequest instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public class TraversalRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  id: '#ctor(System.Windows.Input.FocusNavigationDirection)'
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.TraversalRequest&quot;></xref>類別。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);
    parameters:
    - id: focusNavigationDirection
      type: System.Windows.Input.FocusNavigationDirection
      description: "列舉的值為焦點周遊中，預期的方向。"
  overload: System.Windows.Input.TraversalRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  id: FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "取得的周遊的方向。"
  remarks: "這個屬性是唯讀的因為<xref:System.Windows.Input.FocusNavigationDirection>是必要的輸入的參數的<xref:System.Windows.Input.TraversalRequest>類別建構函式。</xref:System.Windows.Input.TraversalRequest> </xref:System.Windows.Input.FocusNavigationDirection>"
  syntax:
    content: public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }
    return:
      type: System.Windows.Input.FocusNavigationDirection
      description: "其中一個周遊方向的列舉值。"
  overload: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.Wrapped
  id: Wrapped
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "取得或設定值，指出焦點周遊是否已到達可以有焦點的子元素的結尾。"
  remarks: "可設定焦點的項目是那些位置<xref:System.Windows.UIElement.Focusable%2A>屬性是`true`。</xref:System.Windows.UIElement.Focusable%2A>       此參數主要用來通訊使用定位停駐點周遊是否應換行呼叫方法時<xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>， <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>，或。<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.</xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> </xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> 如果您要將焦點至該物件會實作<xref:System.Windows.Interop.IKeyboardInputSink>，然後指定 true Wrapped 會導致的`true`值傳遞至<xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>實作。</xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink>"
  syntax:
    content: public bool Wrapped { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此周遊已達結束的子元素可以有焦點，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Input.TraversalRequest.Wrapped*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TraversalRequest.#ctor*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest.TraversalRequest
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
