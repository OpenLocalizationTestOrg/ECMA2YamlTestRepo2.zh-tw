### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  id: SqlColumnEncryptionCertificateStoreProvider
  children:
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  langs:
  - csharp
  name: SqlColumnEncryptionCertificateStoreProvider
  nameWithType: SqlColumnEncryptionCertificateStoreProvider
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  type: Class
  summary: "Windows 憑證存放區的金鑰存放區提供者實作。 這個類別可讓您使用以資料行主要金鑰儲存在 Windows 憑證存放區中的憑證。 如需詳細資訊，請參閱[永遠加密](https://msdn.microsoft.com/library/mt163865.aspx)。"
  syntax:
    content: 'public class SqlColumnEncryptionCertificateStoreProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider'
  inheritance:
  - System.Object
  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: SqlColumnEncryptionCertificateStoreProvider()
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Windows 憑證存放區的金鑰存放區提供者。"
  syntax:
    content: public SqlColumnEncryptionCertificateStoreProvider ();
    parameters: []
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "解密資料行加密金鑰指定加密的值。 若要使用憑證和指定的金鑰路徑並使用指定的演算法需要加密的值。 金鑰路徑的格式應該是&quot;Local Machine/My/&lt;憑證指紋&gt;&quot;或&quot;Current User/My/&lt;憑證指紋&gt;&quot;。"
  syntax:
    content: public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "主要金鑰的路徑。"
    - id: encryptionAlgorithm
      type: System.String
      description: '加密演算法。 目前，唯一有效的值為︰`RSA_OAEP`'
    - id: encryptedColumnEncryptionKey
      type: System.Byte[]
      description: "加密的資料行加密金鑰。"
    return:
      type: System.Byte[]
      description: "傳回<xref:System.Byte>.</xref:System.Byte>    解密的資料行加密金鑰。"
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "加密資料行加密金鑰和指定的金鑰路徑中使用憑證，並使用指定的演算法。 金鑰路徑的格式應該是&quot;Local Machine/My/&lt;憑證指紋&gt;&quot;或&quot;Current User/My/&lt;憑證指紋&gt;&quot;。"
  syntax:
    content: public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "主要金鑰的路徑。"
    - id: encryptionAlgorithm
      type: System.String
      description: '加密演算法。 目前，唯一有效的值為︰`RSA_OAEP`'
    - id: columnEncryptionKey
      type: System.Byte[]
      description: "加密的資料行加密金鑰。"
    return:
      type: System.Byte[]
      description: "傳回<xref:System.Byte>.</xref:System.Byte>    加密的資料行加密金鑰。"
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  id: ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: ProviderName
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "提供者的名稱。"
  syntax:
    content: public const string ProviderName;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  isExternal: false
  name: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: SqlColumnEncryptionCertificateStoreProvider()
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: ProviderName
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: SqlColumnEncryptionCertificateStoreProvider
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: DecryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: EncryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey
