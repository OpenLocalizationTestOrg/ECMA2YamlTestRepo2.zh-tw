### YamlMime:ManagedReference
items:
- uid: System.SystemException
  id: SystemException
  children:
  - System.SystemException.#ctor
  - System.SystemException.#ctor(System.String)
  - System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.SystemException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
  type: Class
  summary: "可做為系統例外狀況命名空間的基底類別。"
  remarks: "這個類別被提供做為區別系統例外狀況和應用程式例外狀況。 它是做為這類例外狀況的基底類別<xref:System.ArgumentException>， <xref:System.FormatException>，和<xref:System.InvalidOperationException>。</xref:System.InvalidOperationException> </xref:System.FormatException> </xref:System.ArgumentException>      > [!IMPORTANT] > 因為 SystemException 做為各種不同的例外狀況類型的基底類別，您的程式碼不應該擲回 SystemException 例外狀況，也不應嘗試處理 SystemException 例外狀況，除非您想要重新擲回原始例外狀況。       SystemException 會使用 HRESULT COR_E_SYSTEM，具有 0x80131501 的值。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SystemException : Exception
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.SystemException.#ctor
  id: '#ctor'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException()
  nameWithType: SystemException.SystemException()
  fullName: System.SystemException.SystemException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "初始化的新執行個體<xref href=&quot;System.SystemException&quot;></xref>類別。"
  remarks: "這個建構函式初始化<xref:System.Exception.Message%2A>屬性的新執行個體，系統提供的訊息，描述錯誤，例如 「 已發生系統錯誤 」。</xref:System.Exception.Message%2A> 此訊息會考量目前系統文化特性。       下表顯示<xref:System.SystemException>.</xref:System.SystemException>的執行個體的初始屬性值      |屬性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 參考 (`Nothing`在 Visual Basic 中)。 |  |<xref:System.Exception.Message%2A>|當地語系化的錯誤訊息字串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException ();
    parameters: []
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(String)
  nameWithType: SystemException.SystemException(String)
  fullName: System.SystemException.SystemException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "初始化的新執行個體<xref href=&quot;System.SystemException&quot;></xref>類別指定的錯誤訊息。"
  remarks: "內容`message`參數應該是讓使用者能夠讀懂。 這個建構函式的呼叫端，才能確保這個字串已經被當地語系化為目前的系統文化特性。       下表顯示<xref:System.SystemException>.</xref:System.SystemException>的執行個體的初始屬性值      |屬性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 參考 (`Nothing`在 Visual Basic 中)。 |  |<xref:System.Exception.Message%2A>|錯誤訊息字串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException (string message);
    parameters:
    - id: message
      type: System.String
      description: "描述錯誤的訊息。"
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(SerializationInfo,StreamingContext)
  nameWithType: SystemException.SystemException(SerializationInfo,StreamingContext)
  fullName: System.SystemException.SystemException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "初始化的新執行個體<xref href=&quot;System.SystemException&quot;></xref>使用序列化資料的類別。"
  remarks: "重新建構所需的資料流上傳輸的例外狀況物件的還原序列化期間呼叫這個建構函式。 如需詳細資訊，請參閱[XML 和 SOAP 序列化](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected SystemException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "保存序列化的物件資料的物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "關於來源或目的端內容資訊。"
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(String,Exception)
  nameWithType: SystemException.SystemException(String,Exception)
  fullName: System.SystemException.SystemException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "初始化的新執行個體<xref href=&quot;System.SystemException&quot;></xref>類別指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考。"
  remarks: "如前一個例外狀況直接結果可以包含在前一個例外狀況的參考就會擲回的例外狀況<xref:System.Exception.InnerException%2A>屬性。</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>屬性會傳回相同的值傳遞到建構函式，則為 null 參考 (`Nothing`在 Visual Basic 中) 如果<xref:System.Exception.InnerException%2A>屬性沒有提供內部例外值給建構函式。</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       下表顯示<xref:System.SystemException>.</xref:System.SystemException>的執行個體的初始屬性值      |屬性 |值 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|內部例外狀況參考。 |  |<xref:System.Exception.Message%2A>|錯誤訊息字串。 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "解釋例外狀況的原因的錯誤訊息。"
    - id: innerException
      type: System.Exception
      description: "造成目前例外狀況的例外狀況。 如果`innerException`參數不是 null 參考 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>在 Visual Basic 中)，目前的例外狀況會在引發<xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;></xref>處理內部例外狀況區塊。"
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.SystemException.#ctor
  parent: System.SystemException
  isExternal: false
  name: SystemException()
  nameWithType: SystemException.SystemException()
  fullName: System.SystemException.SystemException()
- uid: System.SystemException.#ctor(System.String)
  parent: System.SystemException
  isExternal: false
  name: SystemException(String)
  nameWithType: SystemException.SystemException(String)
  fullName: System.SystemException.SystemException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.SystemException
  isExternal: false
  name: SystemException(SerializationInfo,StreamingContext)
  nameWithType: SystemException.SystemException(SerializationInfo,StreamingContext)
  fullName: System.SystemException.SystemException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.SystemException.#ctor(System.String,System.Exception)
  parent: System.SystemException
  isExternal: false
  name: SystemException(String,Exception)
  nameWithType: SystemException.SystemException(String,Exception)
  fullName: System.SystemException.SystemException(String,Exception)
- uid: System.SystemException.#ctor*
  parent: System.SystemException
  isExternal: false
  name: SystemException
  nameWithType: SystemException.SystemException
