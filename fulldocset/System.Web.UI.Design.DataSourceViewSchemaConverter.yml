### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter
  id: DataSourceViewSchemaConverter
  children:
  - System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor
  - System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: DataSourceViewSchemaConverter
  nameWithType: DataSourceViewSchemaConverter
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter
  type: Class
  summary: "提供代表資料來源結構描述中的欄位屬性的型別轉換子。"
  remarks: "使用 DataSourceViewSchemaConverter 類別，將之前指派的物件類型轉換的控制項屬性。 一般情況下，DataSourceViewSchemaConverter 支援轉換的字串物件類型，並提供的標準值指派給相關聯的控制項屬性的清單。 標準值集合是用於目前控制項的資料來源結構描述中的欄位清單。       若要支援轉換其他物件的型別，衍生的類別 DataSourceViewSchemaConverter 和覆寫<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A>和<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A>方法的其他物件類型。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> 若要支援自訂的標準可指派的值清單，覆寫<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>方法。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>       套用<xref:System.ComponentModel.TypeConverterAttribute>DataSourceViewSchemaConverter 類別指定為控制項屬性的型別轉換子的屬性。</xref:System.ComponentModel.TypeConverterAttribute> 例如，<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>屬性<xref:System.Web.UI.WebControls.DataControlField>類別和<xref:System.Web.UI.WebControls.BoundField.DataField%2A>屬性<xref:System.Web.UI.WebControls.BoundField>類別 DataSourceViewSchemaConverter 做為屬性的型別轉換子。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField.DataField%2A> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>      > [!NOTE] > 您應該永遠不會直接存取型別轉換子。 請改為使用中呼叫適當的轉換程式<xref:System.ComponentModel.TypeDescriptor>物件。</xref:System.ComponentModel.TypeDescriptor> 如需詳細資訊，請參閱<xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>的範例       <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A>方法表示這個轉換子，支援傳回一份可用的值，透過<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>方法。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A>方法表示清單是不可能的值的獨占清單。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A>"
  syntax:
    content: 'public class DataSourceViewSchemaConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: DataSourceViewSchemaConverter()
  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.Design.DataSourceViewSchemaConverter&quot;></xref>類別。"
  remarks: >-
    > [!NOTE]

    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.
  syntax:
    content: public DataSourceViewSchemaConverter ();
    parameters: []
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "指出是否可以轉換指定的來源類型相關聯的控制項屬性的型別。"
  remarks: "呼叫 CanConvertFrom 方法，以判斷是否<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A>方法支援轉換的來源類型。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A>       <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A>方法可以只將字串轉換，因此 CanConvertFrom 方法會傳回`true`時`sourceType`是字串。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    - id: sourceType
      type: System.Type
      description: "要轉換的來源類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果轉換子可以執行轉換，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "將指定的物件轉換為相關聯的控制項屬性的型別。"
  remarks: "如果`value`是字串，則字串表示法`value`傳回。 如果`value`是`null`，空字串 (&quot;&quot;) 會傳回。 如需所有其他指定的值，<xref:System.NotSupportedException>擲回例外狀況。</xref:System.NotSupportedException>       呼叫<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A>方法，以判斷 ConvertFrom 方法是否支援轉換的來源類型。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>可以用來支援當地語系化功能的物件。</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "要轉換的物件。"
    return:
      type: System.Object
      description: "<xref:System.Object>執行個體，表示已轉換的物件。</xref:System.Object>"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法執行轉換。"
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "傳回可指派給相關聯的控制項屬性的可用值的清單。"
  remarks: "GetStandardValues 方法會使用<xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A>屬性指定的`context`物件取得<xref:System.Web.UI.IDataSourceViewSchemaAccessor>實作。</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 如果<xref:System.Web.UI.IDataSourceViewSchemaAccessor>實作使用，它用來存取資料來源結構描述，讓關聯控制項設計階段並擷取相關聯的資料來源結構描述檢視中的可用欄位的清單。</xref:System.Web.UI.IDataSourceViewSchemaAccessor>       可用值的集合是從關聯控制項的資料來源結構描述中的欄位所建立。"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>包含可用的值指派給相關聯的控制項屬性。</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext,Type)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "傳回可指派給相關聯的控制項屬性的可用值的清單。"
  syntax:
    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context, Type typeFilter);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    - id: typeFilter
      type: System.Type
      description: "型別用來篩選欄位来包含在標準值清單中。"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>包含可用的值指派給相關聯的控制項屬性。</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "指出這個轉換器是否會傳回包含所有可指派給相關聯的控制項屬性的可能值的清單。"
  remarks: "<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A>方法<xref:System.Web.UI.Design.DataSourceViewSchemaConverter>傳回`false`，傳回的清單，表示<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>方法不是所有可能的指派值的獨占清單。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個轉換子的傳回清單，其中包含所有可能的值可指派給相關聯的控制項屬性。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "指出這個轉換器是否會傳回一組可用的值指派給指定的內容中的控制項屬性。"
  remarks: "GetStandardValuesSupported 方法表示這個轉換子是否支援傳回一份可用的值，透過<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>方法。</xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>       <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A>方法<xref:System.Web.UI.Design.DataSourceViewSchemaConverter>物件會傳回`true`如果指定`context`物件提供<xref:System.Web.UI.IDataSourceViewSchemaAccessor>中的實作其<xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A>屬性。</xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> </xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>方法會使用<xref:System.Web.UI.IDataSourceViewSchemaAccessor>實作，以擷取相關聯的資料來源結構描述中的可用欄位的清單。</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>實作，可用來取得額外的內容資訊。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個轉換子就傳回一組標準的可用值，以指派到相關聯的控制項屬性。否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: DataSourceViewSchemaConverter()
  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext,Type)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext,Type)
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: DataSourceViewSchemaConverter
  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DataSourceViewSchemaConverter.ConvertFrom
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: DataSourceViewSchemaConverter.GetStandardValues
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.DataSourceViewSchemaConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported
