### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.INestedContainer
  id: INestedContainer
  children:
  - System.ComponentModel.INestedContainer.Owner
  langs:
  - csharp
  name: INestedContainer
  nameWithType: INestedContainer
  fullName: System.ComponentModel.INestedContainer
  type: Interface
  summary: "提供巢狀容器，邏輯上包含零或多個其他元件和父元件所擁有的功能。"
  remarks: "INestedContainer 介面加入至主控元件的概念<xref:System.ComponentModel.IContainer>介面。</xref:System.ComponentModel.IContainer> 巢狀的容器是邏輯上，但不是一定是以視覺化方式，包含零個或多個子元件和某些父元件所擁有的物件。 針對 visual 的內含項目，主控的元件通常是另一個容器。       巢狀的容器允許的設計控制項，而不需要明確序列化的成員變數或自訂序列化程式的每個子控制項的區段。 相反地，在表單設計工具會維護一個主要元件容器。 每個元件的站台可能會有巢狀的容器可放置的額外元件。 元件設置在巢狀容器，它所接收的名稱時，其指定名稱和其主控的元件名稱的組合。 此外，元件加入至巢狀容器擁有完整存取權的父容器中，服務和巢狀的容器會提供對於新增新元件父系的相同的行為。 巢狀的容器將會建立每個元件、 包含設計工具藉此讓設計階段支援。 因為標準的程式碼序列化程式不會查看巢狀容器，這些元件才會序列化可以藉由查核主要容器中的元件取得它們的路徑。       您可以藉由查詢的型別 INestedContainer services 元件的站台找到巢狀的容器。"
  syntax:
    content: 'public interface INestedContainer : IDisposable, System.ComponentModel.IContainer'
  implements:
  - System.ComponentModel.IContainer
  - System.IDisposable
  platform:
  - net462
- uid: System.ComponentModel.INestedContainer.Owner
  id: Owner
  parent: System.ComponentModel.INestedContainer
  langs:
  - csharp
  name: Owner
  nameWithType: INestedContainer.Owner
  fullName: System.ComponentModel.INestedContainer.Owner
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "巢狀容器取得主控的元件。"
  remarks: "主控的元件是區別與一般容器的巢狀的容器的特性。"
  syntax:
    content: public System.ComponentModel.IComponent Owner { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>擁有巢狀的容器。"
  overload: System.ComponentModel.INestedContainer.Owner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.INestedContainer.Owner
  parent: System.ComponentModel.INestedContainer
  isExternal: false
  name: Owner
  nameWithType: INestedContainer.Owner
  fullName: System.ComponentModel.INestedContainer.Owner
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.INestedContainer.Owner*
  parent: System.ComponentModel.INestedContainer
  isExternal: false
  name: Owner
  nameWithType: INestedContainer.Owner
