### YamlMime:ManagedReference
items:
- uid: System.Transactions.DistributedTransactionPermission
  id: DistributedTransactionPermission
  children:
  - System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Transactions.DistributedTransactionPermission.Copy
  - System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  - System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsUnrestricted
  - System.Transactions.DistributedTransactionPermission.ToXml
  - System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission
  fullName: System.Transactions.DistributedTransactionPermission
  type: Class
  summary: "所要求的使用權限<xref href=&quot;System.Transactions&quot;></xref>時將交易的管理擴大至 MSDTC。 這個類別無法被繼承。"
  remarks: "本機交易只會消耗資源，從持久的單一來源或多個 volatitle 來源。 分散式的交易，相反地，具有互動多個長期的資源，可能在網路上。 當交易的管理擴大至 MSDTC 時，啟始擴大規模的程式碼會驗證擁有此權限。 如需有關安全性層級的詳細資訊，請參閱[中存取資源的安全性信任層級](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)。 如需有關交易的管理擴大規模的詳細資訊，請參閱[交易管理擴大](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)。 安全性需求會影響啟始擴大規模的程式碼中，不一定是最初建立本機交易的程式碼。"
  syntax:
    content: 'public sealed class DistributedTransactionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "初始化的新執行個體<xref href=&quot;System.Transactions.DistributedTransactionPermission&quot;></xref>類別。"
  syntax:
    content: public DistributedTransactionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "其中一個<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>值。"
  overload: System.Transactions.DistributedTransactionPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Copy
  id: Copy
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "建立並傳回目前權限的相同複本。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "一份目前的權限。"
  overload: System.Transactions.DistributedTransactionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "重新建構具有指定狀態的 XML 編碼方式的權限。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "XML 編碼方式，用來重新建構權限。"
  overload: System.Transactions.DistributedTransactionPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "建立並傳回目前權限和指定的權限交集的權限。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "要與目前權限產生交集的權限。 它必須是相同的類型與目前權限。"
    return:
      type: System.Security.IPermission
      description: "代表目前權限與指定權限交集的新權限。 這個新權限是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果交集是空的。"
  overload: System.Transactions.DistributedTransactionPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "傳回值，指出目前的權限是否為指定的權限的子集。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "若要測試子集關聯性的權限。 此權限必須與目前權限相同的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果目前<xref href=&quot;System.Security.IPermission&quot;></xref>是指定的子集<xref href=&quot;System.Security.IPermission&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "傳回值，指出是否允許無限制地的存取受目前的權限的資源。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果不受限制的受保護的資源使用會允許權限;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  id: ToXml
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "建立安全性物件和其目前狀態的 XML 編碼方式。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> ，其中包含安全性物件，包含所有狀態資訊的 XML 編碼方式。"
  overload: System.Transactions.DistributedTransactionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "建立權限聯集的目前的權限與指定權限。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "與目前權限結合的權限。 它必須是類型的相同與目前權限。"
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Security.IPermission&quot;> </xref> ，代表目前的權限與指定權限的聯集。"
  overload: System.Transactions.DistributedTransactionPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Transactions.DistributedTransactionPermission.Copy
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.#ctor*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission
- uid: System.Transactions.DistributedTransactionPermission.Copy*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy
  nameWithType: DistributedTransactionPermission.Copy
- uid: System.Transactions.DistributedTransactionPermission.FromXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml
  nameWithType: DistributedTransactionPermission.FromXml
- uid: System.Transactions.DistributedTransactionPermission.Intersect*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect
  nameWithType: DistributedTransactionPermission.Intersect
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DistributedTransactionPermission.IsSubsetOf
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DistributedTransactionPermission.IsUnrestricted
- uid: System.Transactions.DistributedTransactionPermission.ToXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml
  nameWithType: DistributedTransactionPermission.ToXml
- uid: System.Transactions.DistributedTransactionPermission.Union*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union
  nameWithType: DistributedTransactionPermission.Union
