### YamlMime:ManagedReference
items:
- uid: System.ServiceProcess.ServiceProcessInstaller
  id: ServiceProcessInstaller
  children:
  - System.ServiceProcess.ServiceProcessInstaller.#ctor
  - System.ServiceProcess.ServiceProcessInstaller.Account
  - System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.ServiceProcess.ServiceProcessInstaller.HelpText
  - System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Password
  - System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Username
  langs:
  - csharp
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller
  fullName: System.ServiceProcess.ServiceProcessInstaller
  type: Class
  summary: "安裝可執行檔，其中包含延伸的類別<xref href=&quot;System.ServiceProcess.ServiceBase&quot;> </xref>。 安裝公用程式，例如 InstallUtil.exe，安裝服務應用程式時，會呼叫這個類別。"
  remarks: "ServiceProcessInstaller 運作通用於所有服務，可執行檔中。 它是由安裝公用程式用來寫入您想要安裝的服務相關聯的登錄值。       若要安裝的服務，請建立繼承自專案安裝程式類別<xref:System.Configuration.Install.Installer>，並設定<xref:System.ComponentModel.RunInstallerAttribute>類別上`true`。</xref:System.ComponentModel.RunInstallerAttribute> </xref:System.Configuration.Install.Installer> 在您的專案中，具現化一個 ServiceProcessInstaller 執行個體，每個服務應用程式，以及一個<xref:System.ServiceProcess.ServiceInstaller>應用程式中的每個服務執行個體。</xref:System.ServiceProcess.ServiceInstaller> 最後，會加入 ServiceProcessInstaller 執行個體和<xref:System.ServiceProcess.ServiceInstaller>執行個體，為您的專案安裝程式類別。</xref:System.ServiceProcess.ServiceInstaller>       InstallUtil.exe 執行時，此公用程式會尋找服務組件中的類別<xref:System.ComponentModel.RunInstallerAttribute>設`true`。</xref:System.ComponentModel.RunInstallerAttribute> 將類別加入至服務的組件，藉由加入<xref:System.Configuration.Install.Installer.Installers%2A>與您專案的安裝程式相關聯的集合。</xref:System.Configuration.Install.Installer.Installers%2A> 如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，安裝公用程式會略過專案安裝程式。</xref:System.ComponentModel.RunInstallerAttribute>       ServiceProcessInstaller 執行個體，您可以修改的內容會包括指定的登入的使用者以外的帳戶下執行的服務應用程式。 您可以指定特定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>所在應該執行服務，或您可以使用的配對<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>來指定服務電腦的系統帳戶、 本機或網路服務帳戶或使用者帳戶下執行。</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>      > [!NOTE] > 電腦的系統帳戶不是系統管理員帳戶相同。       一般來說，您不要呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內程式碼; 它們通常稱為只能由安裝公用程式。</xref:System.ServiceProcess.ServiceInstaller> 安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>在安裝程序的方法。</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> 它會備份時失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) 上所有先前安裝的元件。</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>       應用程式的安裝常式維護自動相關元件已安裝，請使用專案 installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>資訊 此狀態資訊持續更新為 ServiceProcessInstaller 執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式所安裝執行個體。</xref:System.ServiceProcess.ServiceInstaller> 它是通常不需要為您的程式碼明確修改這個狀態資訊。       ServiceProcessInstaller 具現化導致基底類別建構函式，<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>呼叫。</xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>"
  example:
  - "The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>. It is assumed there is a service executable that contains two services, \"Hello-World Service 1\" and \"Hello-World Service 2\". Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a ServiceProcessInstaller is created for the executable. For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.  \n  \n Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection. When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=fullName> will be installed in turn. During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.  \n  \n Normally, you would not instantiate your project installer class explicitly. You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.  \n  \n [!code-cpp[Classic ServiceInstaller Example#1](~/add/codesnippet/cpp/t-system.serviceprocess._0_1.cpp)]\n [!code-cs[Classic ServiceInstaller Example#1](~/add/codesnippet/csharp/t-system.serviceprocess._0_1.cs)]\n [!code-vb[Classic ServiceInstaller Example#1](~/add/codesnippet/visualbasic/t-system.serviceprocess._0_1.vb)]"
  syntax:
    content: 'public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  id: '#ctor'
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "建立的新執行個體<xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;></xref>類別。"
  syntax:
    content: public ServiceProcessInstaller ();
    parameters: []
  overload: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  id: Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得或設定用來執行這個服務應用程式的帳戶類型。"
  remarks: "帳戶屬性時`User`、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>屬性用來定義服務應用程式執行所在的帳戶。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>組可讓服務系統帳戶以外的帳戶下執行。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 可以比方說，這樣在重新開機，沒有使用者登入時自動啟動服務。 如果您離開 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空白，並將帳戶設定為`User`，系統將提示您輸入有效的使用者名稱和密碼進行安裝。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       您也可以指定本機系統帳戶或本機執行的服務或網路服務。 請參閱<xref:System.ServiceProcess.ServiceAccount>帳戶類型的詳細資訊的列舉。</xref:System.ServiceProcess.ServiceAccount>"
  syntax:
    content: public System.ServiceProcess.ServiceAccount Account { get; set; }
    return:
      type: System.ServiceProcess.ServiceAccount
      description: "A <xref href=&quot;System.ServiceProcess.ServiceAccount&quot;> </xref> ，定義系統執行此服務帳戶的類型。 預設值是<xref uid=&quot;langword_csharp_User&quot; name=&quot;User&quot; href=&quot;&quot;> </xref>。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Account*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "實作基底類別&lt;xref:System.Configuration.Install.ComponentInstaller.CopyFromComponent%2A?displayProperty=fullName&gt;方法沒有<xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;></xref>類別的特定行為。"
  remarks: "這個方法不應該在程式碼中呼叫。 上的基底類別方法<xref:System.Configuration.Install.ComponentInstaller>是`abstract`，因此它在衍生類別。 這裡實作</xref:System.Configuration.Install.ComponentInstaller> 不過，沒有任何<xref:System.ServiceProcess.ServiceProcessInstaller>類別的特定方法的實作中的處理。</xref:System.ServiceProcess.ServiceProcessInstaller>"
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>表示服務處理序。"
  overload: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  id: HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得說明服務安裝選項顯示的文字。"
  remarks: "手動啟動服務時，可以使用這個說明文字。 它會指出使用者輸入使用者名稱和密碼資訊。"
  syntax:
    content: public override string HelpText { get; }
    return:
      type: System.String
      description: "說明提供步驟的說明設定以特定的帳戶下執行服務的使用者名稱和密碼的文字。"
  overload: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "將服務應用程式資訊寫入登錄。 這個方法是要供安裝工具會自動呼叫適當的方法。"
  remarks: "一般來說，您不要呼叫方法上<xref:System.ServiceProcess.ServiceProcessInstaller>內程式碼; 它們通常稱為只能由安裝公用程式。</xref:System.ServiceProcess.ServiceProcessInstaller> 安裝公用程式會自動安裝方法安裝程序期間呼叫。 它會備份時失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>上所有先前安裝的元件。</xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 這個方法會傳遞至基底類別的安裝<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>方法。</xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>       一般來說，您將會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內程式碼; 它們通常稱為只能由安裝公用程式。</xref:System.ServiceProcess.ServiceInstaller> 安裝公用程式會自動呼叫安裝和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>在安裝程序的方法。</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> 它會備份時失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) 在所有先前安裝的元件上的應用程式安裝常式維護自動資訊的元件已安裝，請使用專案 installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 此狀態資訊，會傳入做為安裝`stateSaver`參數，將持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式所安裝執行個體。</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> 它是通常不需要為您的程式碼明確修改這個狀態資訊。       傳遞至呼叫的方法基底類別方法所擲回任何例外狀況的安裝或<xref:System.Configuration.Install.Installer.BeforeInstall>/<xref:System.Configuration.Install.Installer.AfterInstall>事件處理常式。</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>，其中包含與安裝相關聯的內容資訊。</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Install*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stateSaver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  id: Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得或設定服務應用程式所執行的使用者帳戶相關聯的密碼。"
  remarks: "密碼和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>組可讓服務系統帳戶以外的帳戶下執行。</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 可以比方說，這樣在重新開機，沒有使用者登入時自動啟動服務。       密碼和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>以安全的方式進行處理，因為它們永遠不會進行序列化或儲存至的安裝狀態 (專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) 或其他具有公用存取的位置。</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       設定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和密碼可讓帳戶在安裝期間會自動與服務相關聯。</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 如果您離開 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或密碼空白且將<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>至`User`，系統將提示您輸入有效的使用者名稱和密碼進行安裝。</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       執行個別帳戶的服務的另一個選項是使用電腦的系統帳戶。 該帳戶，也就是不同的系統管理員帳戶，不需要密碼。 系統帳戶的權限可能會超過目前登入的使用者。 系統帳戶，而不是使用者帳戶下執行的可避免從缺少如果服務所需的權限的使用者所造成的問題<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外是任何值`User`，指定使用的帳戶 （本機或網路服務或本機系統） 是，即使<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和填入密碼屬性。</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "應該執行服務的帳戶相關聯的密碼。 預設為空字串 (&quot;&quot;)。 屬性不是公用，並永遠不會序列化。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Password*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "復原該安裝程序所寫入登錄的服務應用程式資訊。 這個方法是要供安裝工具會自動處理適當的方法。"
  remarks: "一般來說，您不要呼叫方法上<xref:System.ServiceProcess.ServiceProcessInstaller>內程式碼; 它們通常稱為只能由安裝公用程式。</xref:System.ServiceProcess.ServiceProcessInstaller> 安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>在安裝程序的方法。</xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> 它會出的失敗來說，如果有必要，藉由在物件上呼叫 Rollback 產生例外狀況。       應用程式的安裝常式維護自動相關元件已安裝，請使用專案 installer <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>資訊 此狀態資訊，會傳入做為復原`savedState`參數，將持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式所安裝執行個體。</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> 它是通常不需要為您的程式碼明確修改這個狀態資訊。       復原會傳遞至呼叫的方法基底類別方法所擲回任何例外狀況或<xref:System.Configuration.Install.Installer.BeforeInstall>/<xref:System.Configuration.Install.Installer.AfterInstall>事件處理常式。</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>，其中包含與安裝相關聯的內容資訊。</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>savedState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> savedState </code>損毀或不存在。"
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  id: Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得或設定服務應用程式執行所在的使用者帳戶。"
  remarks: "使用者名稱和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>組可讓服務系統帳戶以外的帳戶下執行。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 可以比方說，這樣在重新開機，沒有使用者登入時自動啟動服務。       <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>以安全的方式處理使用者名稱，因為它們永遠不會進行序列化或儲存至的安裝狀態 (專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) 或其他具有公用存取的位置。</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       設定使用者名稱和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>允許要在安裝期間會自動與服務相關聯的帳戶。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 如果您離開的使用者名稱或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空白且將<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>至`User`，系統將提示您輸入有效的使用者名稱和密碼進行安裝。</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       執行個別帳戶的服務的另一個選項是使用電腦的系統帳戶。 該帳戶，也就是不同的系統管理員帳戶，不需要密碼。 系統帳戶的權限可能會超過目前登入的使用者。 系統帳戶，而不是使用者帳戶下執行的可避免從缺少如果服務所需的權限的使用者所造成的問題<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外是任何值`User`，會使用指定的帳戶 （本機或網路服務或本機系統），即使使用者名稱和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>屬性會填入。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: "服務應該執行的帳戶。 預設為空字串 (&quot;&quot;)。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Username*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceAccount
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceAccount
  nameWithType: ServiceAccount
  fullName: System.ServiceProcess.ServiceAccount
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller
- uid: System.ServiceProcess.ServiceProcessInstaller.Account*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: ServiceProcessInstaller.CopyFromComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
- uid: System.ServiceProcess.ServiceProcessInstaller.Install*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install
  nameWithType: ServiceProcessInstaller.Install
- uid: System.ServiceProcess.ServiceProcessInstaller.Password*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback
  nameWithType: ServiceProcessInstaller.Rollback
- uid: System.ServiceProcess.ServiceProcessInstaller.Username*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
