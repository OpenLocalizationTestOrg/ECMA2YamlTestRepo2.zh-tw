### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSecurity
  id: FileSecurity
  children:
  - System.Security.AccessControl.FileSecurity.#ctor
  - System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  langs:
  - csharp
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
  type: Class
  summary: "代表存取控制和稽核安全性檔案。 這個類別無法被繼承。"
  remarks: "FileSecurity 類別指定的存取權限的系統檔案和稽核存取嘗試。  這個類別會表示為一組規則的存取和稽核 」 權限。 每個存取規則由<xref:System.Security.AccessControl.FileSystemAccessRule>物件，而每個稽核規則由<xref:System.Security.AccessControl.FileSystemAuditRule>物件。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSecurity 類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。 在此系統中，每個檔案有判別存取控制清單 (DACL)，以控制存取的檔案和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。  <xref:System.Security.AccessControl.FileSystemAccessRule>和<xref:System.Security.AccessControl.FileSystemAuditRule>類別是由 Dacl 與 Sacl 組成存取控制項目 (Ace) 的抽象概念。</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSecurity 類別會隱藏許多細節，Dacl 的 Sacl。您不必擔心 ACE 排序或 null 的 DACL。       您可以使用 FileSecurity 類別來擷取、 新增或變更代表 DACL 和檔案的 SACL 的存取規則。       保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> 擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A>"
  example:
  - "The following code example uses the FileSecurity class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_2_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_2_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_2_1.cpp)]"
  syntax:
    content: 'public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  - System.Security.AccessControl.FileSystemSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.FileSecurity
  langs:
  - csharp
  name: FileSecurity()
  nameWithType: FileSecurity.FileSecurity()
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>類別。"
  remarks: "使用這個建構函式，當您想要建立空白<xref:System.Security.AccessControl.FileSecurity>不以現有的檔案為基礎的物件。</xref:System.Security.AccessControl.FileSecurity>  您可以填入具有存取控制資訊的物件，並將它套用到檔案。       您可以新增存取或稽核規則<xref:System.Security.AccessControl.FileSecurity>物件使用<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>方法。</xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> </xref:System.Security.AccessControl.FileSecurity> 您可以移除存取權或稽核規則使用<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>方法。</xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>       保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>"
  syntax:
    content: public FileSecurity ();
    parameters: []
  overload: System.Security.AccessControl.FileSecurity.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Microsoft Windows 2000 或更新版本。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.FileSecurity
  langs:
  - csharp
  name: FileSecurity(String,AccessControlSections)
  nameWithType: FileSecurity.FileSecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity(String,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>類別，從指定的檔案，使用指定的值的<xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;></xref>列舉型別。"
  remarks: "這個建構函式會擷取指定檔案的存取控制資訊，然後建立<xref:System.Security.AccessControl.FileSecurity>封裝該資訊的物件。</xref:System.Security.AccessControl.FileSecurity>  然後，您可以檢查、 新增或刪除的指定檔案的存取控制資訊。       您可以新增存取或稽核規則<xref:System.Security.AccessControl.FileSecurity>物件使用<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>方法。</xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> </xref:System.Security.AccessControl.FileSecurity> 您可以移除存取權或稽核規則使用<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>方法。</xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>       保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>"
  syntax:
    content: public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: fileName
      type: System.String
      description: "若要建立檔案的位置<xref href=&quot;System.Security.AccessControl.FileSecurity&quot;></xref>物件。"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;></xref>值，指定類型的存取控制清單 (ACL) 資訊擷取。"
  overload: System.Security.AccessControl.FileSecurity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> fileName </code>參數為零長度字串、 只包含空格，或所定義的<xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>包含一或多個無效的字元"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定的路徑無效，（比方說，它位於未對應的磁碟機上）。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "中指定的檔案<code> fileName </code>找不到參數。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "開啟檔案時發生 I/O 錯誤。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>是無效的格式。"
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "目前的作業系統不是 Microsoft Windows 2000 或更新版本。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定的路徑、 檔案名稱，或兩者都超出系統定義的長度上限。 例如，windows 平台上，路徑必須少於 248 個字元，和檔案名稱必須少於 260 個字元。"
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "目前的系統帳戶沒有系統管理權限。"
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "找不到檔案。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> fileName </code>參數指定為唯讀的檔案。       -或者-目前的平台不支援此作業。       -或- <code> fileName </code>參數指定的目錄。       -或者-呼叫端沒有必要的權限。"
  platform:
  - net462
references:
- uid: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: System.Security.AccessControl.FileSystemSecurity
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.Security.AccessControl.FileSecurity.#ctor
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity()
  nameWithType: FileSecurity.FileSecurity()
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity()
- uid: System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity(String,AccessControlSections)
  nameWithType: FileSecurity.FileSecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity(String,AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.FileSecurity.#ctor*
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity.FileSecurity
