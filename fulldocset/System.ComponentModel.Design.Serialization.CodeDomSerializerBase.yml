### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  id: CodeDomSerializerBase
  children:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  langs:
  - csharp
  name: CodeDomSerializerBase
  nameWithType: CodeDomSerializerBase
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  type: Class
  summary: "提供的基底類別<xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;></xref>類別。"
  remarks: "CodeDomSerializerBase 類別做為共用基底之間<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>和<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>類別。</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 公用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>類別衍生自 CodeDomSerializerBase 類別。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 每個公用類別定義自己的公用 API。 CodeDomSerializerBase 類別定義任何公用 API，但是也提供許多公用程式方法，可用來協助序列化程序。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class CodeDomSerializerBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  id: DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化指定的記憶體中物件的運算式。"
  remarks: "這是 helper 方法，衍生類別可以還原序列化運算式呼叫。 還原序列化解譯及執行所指定的 CodeDOM 運算式陳述式`expression`參數，然後傳回結果。 如果物件必須先建立這個運算式的結果，會授與它所指定的名稱`name`參數。 名稱可以是`null`如果不需要命名的物件。 下表描述如何指定運算式的處理。      |運算式 |行為 |  |----------------|--------------|  |<xref:System.CodeDom.CodeThisReferenceExpression>|這個運算式表示`this`或`Me`。</xref:System.CodeDom.CodeThisReferenceExpression> 若要找出與這個運算式相關聯的物件，DeserializeExpression 方法會查詢<xref:System.ComponentModel.Design.Serialization.RootContext>。</xref:System.ComponentModel.Design.Serialization.RootContext>內容堆疊 此物件包含圖形和運算式，表示它的根物件。 如果物件存在，並且運算式比對，就會傳回根物件。 如果找不到執行個體，則會報告錯誤。 |  |<xref:System.CodeDom.CodeFieldReferenceExpression>|如果欄位參考的目標評估為根物件，<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>的管理員參數的方法將會用來擷取以名稱為基礎的物件執行個體。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeFieldReferenceExpression> 否則，一般使用反映對目標物件找不到要求的欄位。 如果找不到欄位，會報告錯誤。 |  |<xref:System.CodeDom.CodeVariableReferenceExpression>|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>方法`manager`參數用來找出此執行個體表示指定的變數名稱。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeVariableReferenceExpression> 如果找不到執行個體，則會報告錯誤。 |      DeserializeExpression 會繼續解譯運算式，直到它們完全解析至物件，或直到它不再可以簡化的運算式。 在此情況下，將會傳回 DeserializeExpression <xref:System.CodeDom.CodeExpression>，其中包含最簡化的運算式。</xref:System.CodeDom.CodeExpression> 不支援下列運算式:- <xref:System.CodeDom.CodeEventReferenceExpression>- <xref:System.CodeDom.CodeMethodReferenceExpression>- <xref:System.CodeDom.CodeDelegateCreateExpression></xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodReferenceExpression> </xref:System.CodeDom.CodeEventReferenceExpression>"
  syntax:
    content: protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: name
      type: System.String
      description: "運算式產生的物件名稱。 可以是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不需要命名的物件。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>來解譯。"
    return:
      type: System.Object
      description: "物件所產生的解譯<code> expression </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  id: DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回指定型別的執行個體。"
  remarks: "DeserializeInstance 方法會取得物件的執行個體還原序列化期間叫用。 此呼叫時，應該會傳回所要求類型的執行個體。 預設實作會叫用<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>方法`manager`參數。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>要傳回之執行個體。</xref:System.Type>"
    - id: parameters
      type: System.Object[]
      description: "要傳遞給建構函式的參數`type`。"
    - id: name
      type: System.String
      description: "還原序列化的物件名稱。"
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要將此物件加入設計容器，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 物件必須實作<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> ，才能發生效用。"
    return:
      type: System.Object
      description: "執行個體<code> type </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "還原序列化而異的文化特性的資源配套從指定的物件上的屬性。"
  remarks: "DeserializePropertiesFromResources 方法是在衍生類別的 helper 方法可呼叫。 它會尋找指定的物件上的屬性，並嘗試載入它們的值，不因文化特性而異的資源配套。 這通常用來處理不會發出至原始碼的設計階段屬性。 它應該不會用於當地語系化屬性因為它只作用於文化特性而異。       這個方法會檢查所有的屬性`value`參數符合指定的屬性`filter`參數，然後檢查這些資源的二進位物件中的屬性。 這可用於無法在程式碼，例如設計階段屬性中的還原序列化屬性。       此方法需要設計工具載入器提供<xref:System.ComponentModel.Design.IResourceService>讀取資源。</xref:System.ComponentModel.Design.IResourceService> 如果<xref:System.ComponentModel.Design.IResourceService>提供<xref:System.Resources.ResXResourceReader>而異的文化特性，然後 DeserializePropertiesFromResources 將資源從讀取 XML 資源 (.resx) 檔案的中繼資料區段不會包含在最終編譯的程式碼。</xref:System.Resources.ResXResourceReader> </xref:System.ComponentModel.Design.IResourceService> 如果此服務無法使用，將會不讀取任何資源。"
  syntax:
    content: protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "從中的屬性是要還原序列化物件。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>陣列，可篩選的屬性將進行還原序列化。</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  id: DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "解譯及執行 CodeDOM 陳述式，還原序列化的陳述式。"
  remarks: "DeserializeStatement 方法是在衍生類別的 helper 方法可呼叫。 它可解譯`statement`參數。       <xref:System.CodeDom.CodeStatement>在還原序列化會推入內容堆疊。</xref:System.CodeDom.CodeStatement>"
  syntax:
    content: protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statement
      type: System.CodeDom.CodeStatement
      description: "<xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref>還原序列化。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得專案的目標版本的.NET framework 中定義的屬性集合。"
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: type
      type: System.Type
      description: "目標類型。"
    return:
      type: System.ComponentModel.AttributeCollection
      description: ".NET Framework 專案的目標版本中所定義的屬性集合。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得專案的目標版本的.NET framework 中定義的屬性集合。"
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: instance
      type: System.Object
      description: "目標類型的物件。"
    return:
      type: System.ComponentModel.AttributeCollection
      description: ".NET Framework 專案的目標版本中所定義的屬性集合。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得專案的目標版本的.NET framework 中定義事件的集合。"
  syntax:
    content: protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: instance
      type: System.Object
      description: "目標類型的物件。"
    - id: attributes
      type: System.Attribute[]
      description: "屬性的陣列傳遞至.NET Framework 目標版本。"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: ".NET Framework 專案的目標版本中所定義的事件的集合。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回指定之物件的運算式。"
  remarks: "GetExpression 方法會傳回代表指定之物件的運算式。 它可以傳回`null`，這表示，沒有運算式已設定之描述的物件。 取得運算式中有三種:-運算式可能在先前呼叫的結果<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>      -此運算式無法中已找到<xref:System.ComponentModel.Design.Serialization.RootContext>.</xref:System.ComponentModel.Design.Serialization.RootContext>      無法透過<xref:System.ComponentModel.Design.IReferenceService>.</xref:System.ComponentModel.Design.IReferenceService>衍生-運算式       若要衍生透過運算式<xref:System.ComponentModel.Design.IReferenceService>，GetExpression 方法查詢參考服務中的指定物件的名稱。</xref:System.ComponentModel.Design.IReferenceService> 如果運算式服務傳回有效的名稱， <xref:System.ComponentModel.Design.IReferenceService>，GetExpression 方法會檢查以查看是否有&quot;。&quot;的名稱。</xref:System.ComponentModel.Design.IReferenceService> 這表示運算式服務找到此物件的唯讀屬性的傳回值為另一個物件。 如果沒有&quot;。&quot;，GetExpression 會分割成組件的參考。 最左邊的部分是要評估與名稱<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>方法。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> 對於每個後續的部分，將建置屬性參考運算式。 最終的運算式，則會傳回。       如果物件沒有運算式設定，或如果參考服務中找不到物件，將會傳回 GetExpression `null`，指出物件沒有現有的運算式。"
  syntax:
    content: protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要取得運算式物件。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>代表 v<code>alue</code>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> v 沒有現有的運算式是否<code>alue</code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得專案的目標版本的.NET framework 中定義的屬性集合。"
  syntax:
    content: protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: instance
      type: System.Object
      description: "目標類型的物件。"
    - id: attributes
      type: System.Attribute[]
      description: "屬性的陣列傳遞至.NET Framework 目標版本。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: ".NET Framework 專案的目標版本中所定義的屬性的集合。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得型別中繼資料從產生的反映型別。"
  remarks: "傳回值將不會等於`type`與且不應該使用非反映類型與比較。"
  syntax:
    content: protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: type
      type: System.Type
      description: "若要使用來自中繼資料類型。"
    return:
      type: System.Type
      description: "產生的中繼資料的反映型別<code> type </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得從物件中繼資料產生的反映型別。"
  remarks: "傳回的值不會等於物件的型別，並不應該用於非反映類型與比較。"
  syntax:
    content: protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "序列化管理員。"
    - id: instance
      type: System.Object
      description: "若要使用來自中繼資料物件。"
    return:
      type: System.Type
      description: "產生的中繼資料的反映型別<code> object </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "找出給定的物件值的序列化程式。"
  remarks: "GetSerializer 方法是擴充功能<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>方法會採用物件類型，而非物件值。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> 如果外部合作對象已覆寫透過特定物件的中繼資料<xref:System.ComponentModel.TypeDescriptor>，該中繼資料覆寫會無法看到<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>方法，只接受型別。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> </xref:System.ComponentModel.TypeDescriptor> GetSerializer 方法會檢查中繼資料值和值的類型。 如果兩個不同，GetSerializer 會尋找以查看是否有自訂設計工具的序列化程式屬性的值。 如果是這樣，GetSerializer 會嘗試使用它。 否則，它會由<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "物件，指定要擷取的序列化程式。"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref>適合<code> value </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "找出指定類型的序列化程式。"
  remarks: "GetSerializer 方法是擴充功能<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>方法。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>方法會採用物件類型，而非物件值。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: valueType
      type: System.Type
      description: "<xref:System.Type>指定要擷取的序列化程式。</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref>適合<code> valueType </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>valueType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  id: GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得<xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref>能夠知道目標版本的.NET Framework 中，以用於型別篩選。"
  syntax:
    content: protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "類型描述提供者服務。"
    - id: instance
      type: System.Object
      description: "衍生的來源類型描述提供者服務可以是，如果物件`provider`是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: ".NET Framework 感知的類型描述提供者。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回指定之物件的唯一名稱。"
  remarks: "GetUniqueName 方法呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>方法。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> 如果這個方法不會傳回一個名稱，則使用 GetUniqueName<xref:System.ComponentModel.Design.Serialization.INameCreationService>要由此物件的有效名稱。</xref:System.ComponentModel.Design.Serialization.INameCreationService> 如果服務無法使用，GetUniqueName 將由此根據 short 型別名稱結合的索引編號，使它成為唯一的名稱。 產生的名稱是藉由呼叫相關聯的序列化管理員<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>方法之前會傳回新的名稱。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>"
  syntax:
    content: protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "物件，將會擷取名稱。"
    return:
      type: System.String
      description: "唯一名稱<code> value </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回值，指出是否已序列化給定的物件。"
  remarks: "如`value`視為參數序列化，則`manager`參數或另一個序列化程式必須先呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法來建立之間的關聯性`value`和參考的運算式。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要測試先前序列化的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>已序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回值，指出是否已經序列化給定的物件中，選擇性地考量預設的運算式。"
  remarks: "如`value`視為參數序列化，則`manager`參數或另一個序列化程式必須先呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法來建立之間的關聯性`value`和參考的運算式。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要測試先前序列化的物件。"
    - id: honorPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含預設的運算式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> value </code>已序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  id: SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "傳回代表指定之物件的建立的運算式。"
  remarks: "SerializeCreationExpression 方法可用來將序列化代表建立運算式`value`參數。 它會感知執行個體描述項。       `isComplete`參數設定為`true`如果運算式代表完整設定的物件，或`false`如果序列化進一步必須對物件的屬性。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果`value`已完全序列化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.CodeDom.CodeExpression
      description: "運算式，表示建立<code> value </code>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  id: SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的事件序列化至指定的陳述式集合。"
  remarks: "SerializeEvent 方法是在衍生類別的 helper 方法可呼叫以單一事件序列化至指定<xref:System.CodeDom.CodeStatementCollection>。</xref:System.CodeDom.CodeStatementCollection> SerializeEvent 查詢的序列化管理員<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>所指定的事件，並詢問<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>要序列化該</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer></xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       SerializeEvent 數位`statements`和`descriptor` <xref:System.ComponentModel.Design.Serialization.ContextStack>。</xref:System.ComponentModel.Design.Serialization.ContextStack>參數       需要 SerializeEvent<xref:System.ComponentModel.Design.IEventBindingService>探索事件繫結至未編譯的方法。</xref:System.ComponentModel.Design.IEventBindingService> 如果此服務不存在，將不會寫入事件繫結至未編譯的方法。 如果要將事件繫結的物件可以轉換為運算式，仍會序列化事件繫結至已編譯的方法。"
  syntax:
    content: protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>事件序列化為。"
    - id: value
      type: System.Object
      description: "目標物件`descriptor`繫結。"
    - id: descriptor
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>指定要序列化的事件。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>descriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Design.Serialization.CodeDomSerializerException
    commentId: T:System.ComponentModel.Design.Serialization.CodeDomSerializerException
    description: "<xref href=&quot;System.ComponentModel.Design.IEventBindingService&quot;></xref>無法使用。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的事件序列化至指定的陳述式集合。"
  remarks: "SerializeEvents 方法是在衍生類別的 helper 方法可呼叫。 它會查看事件`value`參數，它符合`filter`參數，然後呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>每個事件的方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>       SerializeEvents 方法上的芳鄰<xref:System.ComponentModel.InheritanceAttribute>如`value` <xref:System.ComponentModel.Design.Serialization.ContextStack>。</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>事件序列化為。"
    - id: value
      type: System.Object
      description: "物件，將會在其序列化事件。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>陣列可篩選要序列化的事件。</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定物件上的屬性序列化至指定的陳述式集合。"
  remarks: "SerializeProperties 方法是在衍生類別的 helper 方法可呼叫。 它會查看屬性`value`參數，它符合`filter`參數，然後呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>每一個屬性的方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>       SerializeProperties 方法上的芳鄰<xref:System.ComponentModel.InheritanceAttribute>如`value` <xref:System.ComponentModel.Design.Serialization.ContextStack>。</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>屬性序列化為。"
    - id: value
      type: System.Object
      description: "屬性會序列化物件。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>陣列，可篩選要序列化的屬性。</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件上的內容序列化至因文化特性而異的資源配套。"
  remarks: "SerializePropertiesToResources 方法是在衍生類別的 helper 方法可呼叫。 它會查看屬性`value`參數，它符合`filter`參數，然後將內容序列化至的文化特性而異的資源配套。 如果資源服務傳回<xref:System.Resources.ResXResourceWriter>，屬性值會儲存在中繼資料區段的 XML 資源 (.resx) 檔。</xref:System.Resources.ResXResourceWriter> `statements`不使用參數。       若要序列化為資源，屬性必須是簡單 （而不是內容屬性），而且其值必須是可序列化。 將略過不符合此模式的屬性。       需要 SerializePropertiesToResources<xref:System.ComponentModel.Design.IResourceService>取得<xref:System.Resources.ResourceWriter>寫入而異的文化特性的資源。</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> 如果此服務無法使用，則會不寫入任何資源。"
  syntax:
    content: protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "未使用。"
    - id: value
      type: System.Object
      description: "將序列化其屬性的物件。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>陣列，可篩選要序列化的屬性。</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  id: SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將序列化給定物件上的屬性。"
  remarks: "SerializeProperty 方法會擷取<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>如`propertyToSerialize`參數，該委派</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       SerializeProperty 數位`statements`和`propertyToSerialize` <xref:System.ComponentModel.Design.Serialization.ContextStack>。</xref:System.ComponentModel.Design.Serialization.ContextStack>參數"
  syntax:
    content: protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>屬性序列化為。"
    - id: value
      type: System.Object
      description: "屬性會序列化物件。"
    - id: propertyToSerialize
      type: System.ComponentModel.PropertyDescriptor
      description: "要序列化的屬性。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>propertyToSerialize</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件序列化至使用指定的資源名稱的資源配套。"
  remarks: "SerializeResource 方法是 helper 方法，會將序列化值，以指定的名稱下的資源配套。 寫入資源的文化特性由搜尋序列化管理員的<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>集合中的之屬性呼叫`ResourceCulture`。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> 如果這個屬性存在，會將資源寫入該文化特性。 否則，會將資源寫入文化特性而異。 `value`參數必須是可序列化。       需要 SerializeResource<xref:System.ComponentModel.Design.IResourceService>取得<xref:System.Resources.ResourceWriter>寫入正確的文化特性的資源。</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> 如果此服務無法使用，SerializeResource 將改為建立代表資源的程式碼中的二進位物件。"
  syntax:
    content: protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: resourceName
      type: System.String
      description: "資源配套，其中名稱`value`會序列化。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件序列化至使用指定的資源名稱的資源配套。"
  remarks: "資源就一定會寫入到文化特性而異。 `value`參數必須是可序列化。       SerializeResourceInvariant 方法需要<xref:System.ComponentModel.Design.IResourceService>取得<xref:System.Resources.ResourceWriter>寫入正確的文化特性的資源。</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> 如果此服務無法使用，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>會改為建立代表資源的程式碼中的二進位物件。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>"
  syntax:
    content: protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: resourceName
      type: System.String
      description: "資源配套，其中名稱`value`會序列化。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件序列化成運算式。"
  remarks: "`value`參數可以是`null`，在此情況下會傳回原始的運算式。       SerializeToExpression 方法會序列化型別使用下列規則︰ 1。  它會先呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>若要查看運算式是否已建立物件的方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 如果是的話，它會傳回現有的運算式。      2.  然後，找出物件的序列化程式，並讓其進行序列化。      3.  如果物件的序列化程式傳回值是<xref:System.CodeDom.CodeExpression>，則會傳回運算式。</xref:System.CodeDom.CodeExpression>      4.  它會呼叫最後一個<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>以查看是否序列化程式新增運算式。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>      5.  最後，它會傳回`null`。       如果無法建立沒有運算式，而且找不到任何適合的序列化程式，則會報告錯誤，透過序列化管理員。 如果找不到序列化程式，但它無法產生運算式，將會不報告任何錯誤。 在此情況下，它會假設序列化程式已報告錯誤，或是它未嘗試序列化物件。       如果序列化程式傳回的陳述式或陳述式集合，這些陳述式不會被捨棄。 SerializeToExpression 方法會先尋找<xref:System.ComponentModel.Design.Serialization.StatementContext>內容堆疊，並將陳述式加入至陳述式內容物件<xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>屬性。</xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> </xref:System.ComponentModel.Design.Serialization.StatementContext> 如果沒有陳述式內容，SerializeToExpression 方法會尋找的內容中<xref:System.CodeDom.CodeStatementCollection>然後加入那里的陳述式。</xref:System.CodeDom.CodeStatementCollection> 如果沒有地方可以找到加入陳述式，將會產生錯誤。      > [!NOTE] > 您不應該呼叫內的 SerializeToExpression 方法<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>時將您自己的物件序列化。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> 相反地，您應該呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 如果它傳回`null`、 建立您自己的運算式，並呼叫<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 然後繼續進行其餘部分的序列化。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。 Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>物件，如果<code> value </code>可以序列化，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件序列化成運算式。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>方法是 helper 方法，會將值變更為資源運算式序列化。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 這是相對於<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>方法，將值寫入資源二進位物件。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>進一步移一個步驟，並傳回可用於復原之資源的運算式。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 例如，傳回的值可能是 「 rm。GetValue(&quot;SomeBitmap&quot;);&quot;。 資源的名稱會計算從<xref:System.ComponentModel.Design.Serialization.ExpressionContext>，如果找到一個內容堆疊上。</xref:System.ComponentModel.Design.Serialization.ExpressionContext>       <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>方法將會尋找<xref:System.ComponentModel.Design.Serialization.ContextStack>下列物件:- <xref:System.CodeDom.CodeStatementCollection>— 陳述式來加入資源管理員，如果您需要將宣告的集合。</xref:System.CodeDom.CodeStatementCollection> </xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>      - <xref:System.ComponentModel.Design.Serialization.RootContext>— 根運算式，但需要建立資源管理員。</xref:System.ComponentModel.Design.Serialization.RootContext>      - <xref:System.ComponentModel.Design.Serialization.ExpressionContext>— 用來製造資源的名稱，以及決定何種類型的資源管理員呼叫，讓。</xref:System.ComponentModel.Design.Serialization.ExpressionContext>"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>包含<code> value </code>做為序列化的運算式。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將指定的物件序列化至適當的文化特性而異的運算式。"
  remarks: "如果`ensureInvariant`參數是`true`，SerializeToResourceExpression 方法將也寫入資源值而異的文化特性資源檔如果目前`ResourceCulture`不是文化特性而異。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
    - id: ensureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>將序列化為文化特性而異。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>包含<code> value </code>做為序列化的運算式。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將物件關聯的運算式。"
  remarks: "SetExpression 方法是 helper 方法相關聯的<xref:System.CodeDom.CodeExpression>的物件。</xref:System.CodeDom.CodeExpression> 與這種方式中的運算式相關聯的物件都是可透過存取<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> SetExpression 會儲存其運算式資料表做為附加的物件內容堆疊上的任何序列化程式的存取<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>與相關聯`value`。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>expression</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "將物件關聯的運算式，並選擇性地指定預設的運算式。"
  remarks: "SetExpression 方法是 helper 方法相關聯的<xref:System.CodeDom.CodeExpression>的物件。</xref:System.CodeDom.CodeExpression> 與這種方式中的運算式相關聯的物件都是可透過存取<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> SetExpression 會儲存其運算式資料表做為附加的物件內容堆疊上的任何序列化程式的存取<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>供序列化使用。"
    - id: value
      type: System.Object
      description: "要序列化的物件。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>與相關聯`value`。"
    - id: isPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要指定預設的運算式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerException
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializerException
  nameWithType: CodeDomSerializerException
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializer
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializer
  nameWithType: CodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression
  nameWithType: CodeDomSerializerBase.DeserializeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance
  nameWithType: CodeDomSerializerBase.DeserializeInstance
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement
  nameWithType: CodeDomSerializerBase.DeserializeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper
  nameWithType: CodeDomSerializerBase.GetAttributesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper
  nameWithType: CodeDomSerializerBase.GetEventsHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression
  nameWithType: CodeDomSerializerBase.GetExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer
  nameWithType: CodeDomSerializerBase.GetSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName
  nameWithType: CodeDomSerializerBase.GetUniqueName
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized
  nameWithType: CodeDomSerializerBase.IsSerialized
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent
  nameWithType: CodeDomSerializerBase.SerializeEvent
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents
  nameWithType: CodeDomSerializerBase.SerializeEvents
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties
  nameWithType: CodeDomSerializerBase.SerializeProperties
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty
  nameWithType: CodeDomSerializerBase.SerializeProperty
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource
  nameWithType: CodeDomSerializerBase.SerializeResource
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression
  nameWithType: CodeDomSerializerBase.SerializeToExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression
  nameWithType: CodeDomSerializerBase.SetExpression
