### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.ComponentResourceKeyConverter
  id: ComponentResourceKeyConverter
  children:
  - System.Windows.Markup.ComponentResourceKeyConverter.#ctor
  - System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: ComponentResourceKeyConverter
  nameWithType: ComponentResourceKeyConverter
  fullName: System.Windows.Markup.ComponentResourceKeyConverter
  type: Class
  summary: "實作的類型轉換子<xref href=&quot;System.Windows.ComponentResourceKey&quot;></xref>刻意有任何類型的轉換路徑的物件。 類型轉換器會強制執行，並報告該行為。"
  remarks: "<xref:System.Windows.ComponentResourceKey>類型不應該使用型別轉換子路徑來轉換值。</xref:System.Windows.ComponentResourceKey> 您應該改為使用標記延伸。 基於這個理由，<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>方法一律會傳回`false`。</xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法一律會擲回的例外狀況。</xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29> 例外狀況可能是可能會報告無效的輸入，但即使是被視為有效的輸入會導致<xref:System.NotSupportedException>.</xref:System.NotSupportedException>      <a name=&quot;xamlTextUsage_ComponentResourceKeyConverter&quot;></a># # XAML 文字用法"
  syntax:
    content: 'public class ComponentResourceKeyConverter : System.Windows.ExpressionConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Windows.ExpressionConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.ComponentResourceKeyConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  langs:
  - csharp
  name: ComponentResourceKeyConverter()
  nameWithType: ComponentResourceKeyConverter.ComponentResourceKeyConverter()
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ComponentResourceKeyConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Markup.ComponentResourceKeyConverter&quot;></xref>類別。"
  syntax:
    content: public ComponentResourceKeyConverter ();
    parameters: []
  overload: System.Windows.Markup.ComponentResourceKeyConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ComponentResourceKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "判斷指定之類型的物件是否可以轉換的執行個體<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>，使用指定的內容。 一律傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "<xref:System.Windows.ComponentResourceKey>類型轉換 （應改用標記延伸） 的值不應該使用型別轉換子路徑。</xref:System.Windows.ComponentResourceKey> 基於這個理由，CanConvertFrom 和<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>方法一律會傳回`false`。</xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法一律會擲回的例外狀況。</xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "這個轉換子就要從中叫用的環境的相關資訊會提供格式內容。"
    - id: sourceType
      type: System.Type
      description: "轉換所評估的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ComponentResourceKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "判斷執行個體是否<xref href=&quot;System.Windows.ComponentResourceKey&quot;></xref>可以轉換成指定的型別，並使用指定的內容。 一律傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  remarks: "<xref:System.Windows.ComponentResourceKey>類型轉換 （應改用標記延伸） 的值不應該使用型別轉換子路徑。</xref:System.Windows.ComponentResourceKey> 基於這個理由，<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>和 CanConvertTo 方法一律會傳回`false`。</xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法一律會擲回的例外狀況。</xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "這個轉換子就要從中叫用的環境的相關資訊會提供格式內容。"
    - id: destinationType
      type: System.Type
      description: "轉換所評估的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ComponentResourceKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "嘗試將指定的物件轉換成<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>，使用指定的內容。 在所有情況下，擲回例外狀況。"
  remarks: "<xref:System.Windows.ComponentResourceKey>類型轉換 （應改用標記延伸） 的值不應該使用型別轉換子路徑。</xref:System.Windows.ComponentResourceKey> 基於這個理由，<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>方法一律會傳回`false`。</xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> ConvertFrom 和<xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法一律會擲回的例外狀況。</xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "這個轉換子就要從中叫用的環境的相關資訊會提供格式內容。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "文化特性特定資訊。"
    - id: value
      type: System.Object
      description: "要轉換的物件。"
    return:
      type: System.Object
      description: "在所有情況下，擲回例外狀況。"
  overload: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法執行轉換。"
  platform:
  - net462
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ComponentResourceKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "嘗試轉換<xref href=&quot;System.Windows.ComponentResourceKey&quot;></xref>為指定的類型，使用指定的內容。 在所有情況下，擲回例外狀況。"
  remarks: "<xref:System.Windows.ComponentResourceKey>類型不應該使用型別轉換子路徑來轉換值。</xref:System.Windows.ComponentResourceKey> 您應該改為使用標記延伸。 基於這個理由，<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>和<xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>方法一律會傳回`false`。</xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> </xref:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>和 ConvertTo 方法一律會擲回的例外狀況。</xref:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "這個轉換子就要從中叫用的環境的相關資訊會提供格式內容。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "文化特性特定資訊。"
    - id: value
      type: System.Object
      description: "要轉換的物件。"
    - id: destinationType
      type: System.Type
      description: "要轉換的物件類型。"
    return:
      type: System.Object
      description: "在所有情況下，擲回例外狀況。"
  overload: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "無法執行轉換。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>不是類型的<xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.ExpressionConverter
  isExternal: false
  name: System.Windows.ExpressionConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.ComponentResourceKeyConverter.#ctor
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ComponentResourceKeyConverter()
  nameWithType: ComponentResourceKeyConverter.ComponentResourceKeyConverter()
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ComponentResourceKeyConverter()
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ComponentResourceKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ComponentResourceKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ComponentResourceKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ComponentResourceKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.ComponentResourceKeyConverter.#ctor*
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ComponentResourceKeyConverter
  nameWithType: ComponentResourceKeyConverter.ComponentResourceKeyConverter
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom*
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ComponentResourceKeyConverter.CanConvertFrom
- uid: System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo*
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: ComponentResourceKeyConverter.CanConvertTo
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom*
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ComponentResourceKeyConverter.ConvertFrom
- uid: System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo*
  parent: System.Windows.Markup.ComponentResourceKeyConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ComponentResourceKeyConverter.ConvertTo
