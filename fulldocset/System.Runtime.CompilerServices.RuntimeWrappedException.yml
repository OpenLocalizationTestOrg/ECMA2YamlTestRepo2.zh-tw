### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.RuntimeWrappedException
  id: RuntimeWrappedException
  children:
  - System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  langs:
  - csharp
  name: RuntimeWrappedException
  nameWithType: RuntimeWrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException
  type: Class
  summary: "包裝不是衍生自<xref:System.Exception>類別</xref:System.Exception>的例外狀況 這個類別無法被繼承。"
  remarks: "某些語言，例如 c + +，可讓您擲回例外任何的狀況 managed 型別。  Microsoft C# 及 Visual Basic 等其他語言需要每個擲回的例外狀況衍生自<xref:System.Exception>類別。</xref:System.Exception>  若要維持語言之間的相容性，common language runtime (CLR) 會包裝物件不是衍生自<xref:System.Exception>RuntimeWrappedException 物件中。</xref:System.Exception>       您可以使用<xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>類別，以指定例外狀況應該組件出現在 catch 區塊和例外狀況篩選條件內已包裝。</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  許多語言編譯器，包括 Microsoft C# 和 Visual Basic 編譯器，套用這個屬性預設會將指定的換行行為。       請注意，即使您使用的執行階段仍會例外狀況<xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>類別，以指定您不想加以包裝。</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  在此情況下，例外狀況是在 catch 區塊或例外狀況篩選條件內未包裝。"
  example:
  - "The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a RuntimeWrappedException object.  \n  \n [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/add/codesnippet/cpp/t-system.runtime.compile_12_1.cpp)]"
  syntax:
    content: 'public sealed class RuntimeWrappedException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "設定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>例外狀況的相關資訊的物件。"
  remarks: "GetObjectData 方法會設定<xref:System.Runtime.Serialization.SerializationInfo>物件序列化的所有例外狀況物件資料。</xref:System.Runtime.Serialization.SerializationInfo> 還原序列化期間的例外狀況重新組成從`SerializationInfo`資料流上傳輸。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>保存所擲回的例外狀況的相關序列化的物件資料的物件。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>物件，其中包含關於來源或目的端內容資訊。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  id: WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "取得由已包裝的物件<xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;></xref>物件。"
  remarks: "WrappedException 屬性取得已擲回做為從一種語言，可讓不是衍生自<xref:System.Exception>類別</xref:System.Exception>的例外狀況的例外狀況物件"
  syntax:
    content: public object WrappedException { get; }
    return:
      type: System.Object
      description: "已包裝的物件<xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;></xref>物件。"
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData
  nameWithType: RuntimeWrappedException.GetObjectData
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
