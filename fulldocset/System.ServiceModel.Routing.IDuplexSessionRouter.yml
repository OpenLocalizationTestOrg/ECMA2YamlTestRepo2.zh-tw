### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.IDuplexSessionRouter
  id: IDuplexSessionRouter
  children:
  - System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: IDuplexSessionRouter
  nameWithType: IDuplexSessionRouter
  fullName: System.ServiceModel.Routing.IDuplexSessionRouter
  type: Interface
  summary: "定義處理來自雙工工作階段通道的訊息時所需的介面。"
  remarks: "這個合約擁有下列設定:-工作階段所需。"
  syntax:
    content: >-
      [System.ServiceModel.ServiceContract(CallbackContract=typeof(System.ServiceModel.Routing.IDuplexRouterCallback), Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Required)]

      public interface IDuplexSessionRouter
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  langs:
  - csharp
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "初始化訊息的非同步處理。"
  syntax:
    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "要處理的訊息。"
    - id: callback
      type: System.AsyncCallback
      description: "訊息處理完成時叫用非同步回呼委派。"
    - id: state
      type: System.Object
      description: "使用者定義狀態物件傳遞至回呼程序。"
    return:
      type: System.IAsyncResult
      description: "可用於輪詢或等待結果，或兩者; 非同步結果這個值時，也需要叫用<xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*>.</xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*>"
  overload: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  id: EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  langs:
  - csharp
  name: EndProcessMessage(IAsyncResult)
  nameWithType: IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "完成訊息處理的非同步執行。"
  syntax:
    content: public void EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*>.</xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*>的呼叫所傳回的非同步結果"
  overload: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  isExternal: false
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  isExternal: false
  name: EndProcessMessage(IAsyncResult)
  nameWithType: IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  isExternal: false
  name: BeginProcessMessage
  nameWithType: IDuplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*
  parent: System.ServiceModel.Routing.IDuplexSessionRouter
  isExternal: false
  name: EndProcessMessage
  nameWithType: IDuplexSessionRouter.EndProcessMessage
