### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.ThenBy
  id: ThenBy
  children:
  - System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  - System.Web.UI.WebControls.Expressions.ThenBy.DataField
  - System.Web.UI.WebControls.Expressions.ThenBy.Direction
  langs:
  - csharp
  name: ThenBy
  nameWithType: ThenBy
  fullName: System.Web.UI.WebControls.Expressions.ThenBy
  type: Class
  summary: "提供方法來套用排序運算式，以<xref:System.Linq.IQueryable>之後的資料來源物件<xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;></xref>運算式套用。</xref:System.Linq.IQueryable>"
  remarks: "排序後執行作業使用<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>中的運算式<xref:System.Web.UI.WebControls.QueryExtender>控制，後續的排序作業可以由 ThenBy 類別欄位上使用不同的資料。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the ProductID field in ascending order using the ThenBy type. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public class ThenBy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>類別。"
  syntax:
    content: public ThenBy ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定的屬性<xref:System.Linq.IQueryable>物件以套用<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>運算式。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>排序上指定的資料欄位的資料。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 後續排序作業可以執行不同的資料欄位上使用<xref:System.Web.UI.WebControls.Expressions.OrderByExpression><xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>集合。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 這個屬性會指定要套用的資料欄位`ThenBy`排序作業。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the Product ID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "屬性<xref:System.Linq.IQueryable>物件以套用<xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;></xref>運算式。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得或設定排序方向<xref:System.Linq.IQueryable>資料來源物件。</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>用於<xref:System.Web.UI.WebControls.QueryExtender>以遞增或遞減順序排序資料的控制項。</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 使用指定的排序作業的方向<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>屬性。</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and on the ProductID field in ascending order by using the Direction property. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "排序方向<xref:System.Linq.IQueryable>資料來源物件。</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy
  nameWithType: ThenBy.ThenBy
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
