### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaModel
  id: MetaModel
  children:
  - System.Web.DynamicData.MetaModel.#ctor
  - System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  - System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaModel.Default
  - System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  - System.Web.DynamicData.MetaModel.EntityTemplateFactory
  - System.Web.DynamicData.MetaModel.FieldTemplateFactory
  - System.Web.DynamicData.MetaModel.FilterFactory
  - System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  - System.Web.DynamicData.MetaModel.GetModel(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String)
  - System.Web.DynamicData.MetaModel.GetTable(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.ResetRegistrationException
  - System.Web.DynamicData.MetaModel.Tables
  - System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.VisibleTables
  langs:
  - csharp
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
  type: Class
  summary: "表示 ASP.NET Dynamic Data 所使用的一個或多個資料庫。"
  remarks: "類別的類型可讓您註冊一或多個動態資料的 Web 應用程式的資料內容。       資料內容是物件，表示資料庫連接。 資料內容都有一個資料模型，這代表可透過該連接的資料庫存取。 資料模型是物件，表示資料庫的資料實體以 CLR 型別。 動態資料支援根據 LINQ to SQL 和 ADO.NET Entity Framework 資料模型。       在[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]，您可以使用來產生資料模型型別**LINQ to SQL 類別**範本或**ADO.NET 實體資料模型**範本。 這些範本會使用物件關聯式設計工具 （O/R 設計工具），LINQ to SQL 模型或 ADO.NET Entity Data Model Designer （實體設計工具） 的 Entity Framework 模型。"
  example:
  - "The following example shows how to use MetaModel type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:  \n  \n-   Get the data model for the default data context.  \n  \n-   Get the data model for a specified data context.  \n  \n-   Evaluate the routing path (determine the URL) for a specified table.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.cs)]\n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx#1)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PlaceHolder.vb#1)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#2)]  \n  \n To compile the example, you need the following:  \n  \n-   [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] or [!INCLUDE[vwd_exp_dev10_long](~/add/includes/vwd-exp-dev10-long-md.md)].  \n  \n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \n  \n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)."
  syntax:
    content: public class MetaModel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "具現化的新執行個體<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>類別。"
  remarks: "通常呼叫類別建構函式中`Application_Start`Global.asax 檔案的方法。"
  example:
  - "The following example shows how to use the MetaModel constructor to perform the following tasks:  \n  \n-   Instantiate the <xref:System.Web.DynamicData.MetaModel> class.  \n  \n-   Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/m-system.web.dynamicdata_4_1.cs)]"
  syntax:
    content: public MetaModel ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "具現化的新執行個體<xref href=&quot;System.Web.DynamicData.MetaModel&quot;></xref>類別。"
  remarks: "這個建構函式判斷，讓它可以擷取使用資料模型是否全域登錄<xref:System.Web.DynamicData.MetaModel.GetModel%2A>方法。</xref:System.Web.DynamicData.MetaModel.GetModel%2A> 它可讓您建立多個模型，並同時避免衝突類型使用相同的實體類型。       通常呼叫類別建構函式中`Application_Start`Global.asax 檔案的方法。"
  syntax:
    content: public MetaModel (bool registerGlobally);
    parameters:
    - id: registerGlobally
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示為全域; 註冊模型否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  id: CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "具現化<xref href=&quot;System.Web.DynamicData.MetaTable&quot;></xref>物件。"
  remarks: "CreateTable 方法會覆寫來具現化衍生型別。"
  syntax:
    content: protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);
    parameters:
    - id: provider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "資料表的提供者。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "資料表的新執行個體。"
  overload: System.Web.DynamicData.MetaModel.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Default
  id: Default
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得應用程式所建立的資料模型的第一個執行個體。"
  remarks: "這個屬性會提供簡單的方式來參考的預設資料模型執行個體。 如果應用程式使用多個模型，您必須提供自己的方式來儲存其他資料模型的參考。 若要尋找特定的資料模型，請呼叫<xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>方法。</xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the Default property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/p-system.web.dynamicdata_5_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel Default { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "資料模型執行個體。"
  overload: System.Web.DynamicData.MetaModel.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  id: DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定在網站上的 [動態] 資料夾的虛擬路徑。"
  remarks: "這個屬性可讓您變更 [動態] 資料夾的虛擬路徑。 預設值是&quot;~/DynamicData&quot;。"
  syntax:
    content: public string DynamicDataFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "動態資料夾的虛擬路徑。"
  overload: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  id: EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定<xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;></xref>與模型相關聯的物件。"
  syntax:
    content: public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.EntityTemplateFactory
      description: "執行個體<xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;></xref>與模型相關聯的物件。"
  overload: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  id: FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定自訂<xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;></xref>介面。"
  remarks: "<xref:System.Web.DynamicData.IFieldTemplateFactory>介面可讓您指定哪些欄位範本會建立資料表資料行。</xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.IFieldTemplateFactory
      description: "<xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref>介面。"
  overload: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  id: FilterFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得或設定<xref href=&quot;System.Web.DynamicData.FilterFactory&quot;></xref>與模型相關聯的物件。"
  syntax:
    content: public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }
    return:
      type: System.Web.DynamicData.FilterFactory
      description: "執行個體<xref href=&quot;System.Web.DynamicData.FilterFactory&quot;></xref>與模型相關聯的物件。"
  overload: System.Web.DynamicData.MetaModel.FilterFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  id: GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回與特定資料表相關聯的執行路徑。"
  remarks: "路由是由資料表名稱和動作的組合所決定。       [執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx)線上這項功能的範例。"
  example:
  - "The following example shows how to use the GetActionPath method to evaluate the routing path (determine the URL) for a specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel>.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/csharp/ccd53684-51b1-498b-9a9e-_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#23)]"
  syntax:
    content: public string GetActionPath (string tableName, string action, object row);
    parameters:
    - id: tableName
      type: System.String
      description: "此動作適用於資料表的名稱。"
    - id: action
      type: System.String
      description: "要套用至資料表的動作。"
    - id: row
      type: System.Object
      description: "物件，表示單一資料列的資料表中的資料。 `row`用來提供查詢字串參數的值。"
    return:
      type: System.String
      description: "與路由相關聯的 URL。"
  overload: System.Web.DynamicData.MetaModel.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  id: GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回指定之內容的資料模型執行個體。"
  remarks: ''
  example:
  - "The following example shows how to use the GetModel method to perform the following tasks:  \n  \n-   Getting the default data model.  \n  \n-   Getting the data model specified by the passed context type.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/m-system.web.dynamicdata_1_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel GetModel (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "資料模型中所定義的資料內容型別。"
    return:
      type: System.Web.DynamicData.MetaModel
      description: "與指定的內容類型相關聯的資料模型。"
  overload: System.Web.DynamicData.MetaModel.GetModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  id: GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回與指定之資料表相關聯的中繼資料。"
  remarks: "名稱可唯一識別資料模型中的資料表，並將用來產生相關的路由 URL。"
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#42)]\n [!code-cs[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/csharp/m-system.web.dynamicdata_2_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "識別資料模型中的資料表的名稱。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "描述指定之資料表的中繼資料。"
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料模型中找不到名稱。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回描述指定之資料表的中繼資料。"
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#41)]\n [!code-cs[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/csharp/m-system.web.dynamicdata_5_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "指出資料模型中的資料表類型。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "描述指定之資料表的中繼資料。"
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "資料模型中找不到型別。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  id: GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "傳回描述指定之資料表的中繼資料。"
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#43)]\n [!code-cs[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/csharp/m-system.web.dynamicdata_3_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);
    parameters:
    - id: tableName
      type: System.String
      description: "資料表的名稱。"
    - id: contextType
      type: System.Type
      description: "要搜尋資料表的資料內容。"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "描述指定之資料表的中繼資料。"
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tablename</code>or <code>contextType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "內容未註冊，或資料表不存在於資料內容。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  id: RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "註冊內容 factory 所指定的資料內容。"
  remarks: "這個方法會使用預設內容資訊所定義的<xref:System.Web.DynamicData.ContextConfiguration>類別。</xref:System.Web.DynamicData.ContextConfiguration> 它可讓您使用您自己的建構函式具現化的資料內容。"
  syntax:
    content: public void RegisterContext (Func<object> contextFactory);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "具現化的資料內容 factory。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  id: RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "註冊的資料內容執行個體。"
  remarks: "這個方法會使用預設的內容資訊所定義的<xref:System.Web.DynamicData.ContextConfiguration>類別。</xref:System.Web.DynamicData.ContextConfiguration>"
  syntax:
    content: public void RegisterContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "資料模型中所定義的資料內容型別。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用資料模型提供者的註冊資料內容執行個體"
  syntax:
    content: public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "資料模型的提供者。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的內容設定並啟用自訂的建構函式，請註冊的資料內容執行個體。"
  remarks: "內容 factory，這個方法可讓您使用的自訂建構函式具現化資料模型內容。"
  syntax:
    content: public void RegisterContext (Func<object> contextFactory, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "委派，用來具現化資料模型內容。"
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "所定義的內容資訊<xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;></xref>類別。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextFactory</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> contextType </code> ，具現化<code> contextFactory </code>不正確。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的內容設定註冊的資料內容執行個體。"
  remarks: ''
  example:
  - "The following example shows how to use the RegisterContext method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/d01c18e1-b759-4ac9-a729-_1.cs)]"
  syntax:
    content: public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextType
      type: System.Type
      description: "資料模型中所定義的資料內容型別。"
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "內容中，所定義的組態資訊<xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;></xref>類別。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用指定的內容設定並啟用資料模型提供者，請註冊的資料內容執行個體。"
  syntax:
    content: public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "資料模型的提供者。"
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "所定義的內容資訊<xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;></xref>類別。"
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataModelProvider</code>or <code>configuration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>contextType</code>已經註冊。"
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  id: ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "重設可能發生的任何先前內容註冊錯誤。"
  remarks: "資料內容註冊期間發生錯誤時，例外狀況會快取，並在後續的所有作業中擲回。 比方說，如果錯誤發生在應用程式啟動時，它會擲回每個要求。 呼叫此方法，以清除錯誤，並啟用新的內容登錄来執行。"
  syntax:
    content: public static void ResetRegistrationException ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Tables
  id: Tables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得集合的所有資料表的資料模型的一部分。"
  remarks: "集合包含資料模型，其中包含不會顯示資料表中的所有資料表 （不是動態的資料 scaffolding 的一部分）。       [執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx)線上這項功能的範例。"
  example:
  - "The following example shows how to use the Tables and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:  \n  \n-   Get a collection of all the tables in a data model and show them in a `GridView` control.  \n  \n-   Get a collection of the visible tables in a data model and show them in a `GridView` control.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx#5)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable> Tables { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
      description: "集合包含屬於此資料模型的資料表。"
  overload: System.Web.DynamicData.MetaModel.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "嘗試取得指定之資料表相關聯的中繼資料。"
  remarks: "這個方法會取得與指定之資料表相關聯的中繼資料。 如果資料表沒有找到，則這個方法會傳回`false`。 這不同於<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，這個方法會擲回例外狀況，如果找不到資料表。</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "唯一識別資料表的名稱。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "此方法傳回時，並找到要求的資料表，包含該資料表的中繼資料。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到資料表中繼資料否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uniqueTableName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "嘗試取得指定之資料表相關聯的中繼資料。"
  remarks: "這個方法會取得與指定之資料表相關聯的中繼資料。 如果資料表沒有找到，則這個方法會傳回`false`。 這不同於<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，這個方法會擲回例外狀況，如果找不到資料表。</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "資料表類型。"
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "此方法傳回時，並找到要求的資料表，包含指定之資料表的中繼資料。 這個參數未初始化便傳遞。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到資料表中繼資料否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  id: VisibleTables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得可見的資料表集合中的資料模型。"
  remarks: ''
  example:
  - "The following example shows how to use the VisibleTables property to get a collection of the visible tables in the data model. For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/csharp/p-system.web.dynamicdata_0_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#62)]"
  syntax:
    content: public System.Collections.Generic.List<System.Web.DynamicData.MetaTable> VisibleTables { get; }
    return:
      type: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
      description: "顯示資料表是指已啟用的 scaffolding 的資料表。 這表示它是 List.aspx 頁面存在的資料表。"
  overload: System.Web.DynamicData.MetaModel.VisibleTables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.MetaModel.#ctor
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaModel.Default
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.EntityTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: EntityTemplateFactory
  fullName: System.Web.DynamicData.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.IFieldTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
- uid: System.Web.DynamicData.FilterFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
- uid: System.Web.DynamicData.ModelProviders.DataModelProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: DataModelProvider
  nameWithType: DataModelProvider
  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
- uid: System.Web.DynamicData.ContextConfiguration
  parent: System.Web.DynamicData
  isExternal: false
  name: ContextConfiguration
  nameWithType: ContextConfiguration
  fullName: System.Web.DynamicData.ContextConfiguration
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
- uid: System.Web.DynamicData.MetaModel.Tables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaTable>
  nameWithType: ReadOnlyCollection<MetaTable>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
- uid: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
  parent: System.Collections.Generic
  isExternal: true
  name: List<MetaTable>
  nameWithType: List<MetaTable>
  fullName: System.Collections.Generic.List<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.#ctor*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel.MetaModel
- uid: System.Web.DynamicData.MetaModel.CreateTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable
  nameWithType: MetaModel.CreateTable
- uid: System.Web.DynamicData.MetaModel.Default*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath
  nameWithType: MetaModel.GetActionPath
- uid: System.Web.DynamicData.MetaModel.GetModel*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel
  nameWithType: MetaModel.GetModel
- uid: System.Web.DynamicData.MetaModel.GetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable
  nameWithType: MetaModel.GetTable
- uid: System.Web.DynamicData.MetaModel.RegisterContext*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext
  nameWithType: MetaModel.RegisterContext
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException
  nameWithType: MetaModel.ResetRegistrationException
- uid: System.Web.DynamicData.MetaModel.Tables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
- uid: System.Web.DynamicData.MetaModel.TryGetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable
  nameWithType: MetaModel.TryGetTable
- uid: System.Web.DynamicData.MetaModel.VisibleTables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
