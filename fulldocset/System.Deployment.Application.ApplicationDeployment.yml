### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.ApplicationDeployment
  id: ApplicationDeployment
  children:
  - System.Deployment.Application.ApplicationDeployment.ActivationUri
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  - System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  - System.Deployment.Application.ApplicationDeployment.CurrentVersion
  - System.Deployment.Application.ApplicationDeployment.DataDirectory
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  - System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  - System.Deployment.Application.ApplicationDeployment.IsFirstRun
  - System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  - System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  - System.Deployment.Application.ApplicationDeployment.Update
  - System.Deployment.Application.ApplicationDeployment.UpdateAsync
  - System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  - System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  - System.Deployment.Application.ApplicationDeployment.UpdateLocation
  - System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  langs:
  - csharp
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
  type: Class
  summary: "以程式設計的方式，支援目前部署的更新，並處理視需要下載的檔案。 這個類別無法被繼承。"
  remarks: "您可以設定您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式檢查更新，並安裝它們自動透過`subscription`部署資訊清單的項目。 某些應用程式，不過，需要更細微地控制其更新。 您可能想要以程式設計的方式，安裝必要的更新，並提示使用者安裝在方便的選擇性更新。 藉由關閉訂用帳戶更新部署資訊清單中，您可以取得應用程式的更新原則的完整的控制權。 或者，您可以使用自動訂閱搭配 ApplicationDeployment，可讓[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新定期，應用程式，但使用 ApplicationDeployment 發行後，儘速下載重大更新。       您可以測試是否部署有可用的更新使用<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>或<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>方法; 第二個方法會引發<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>事件成功完成。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>傳回的更新，例如其版本號碼，以及它是否為目前使用者的必要的更新的重要資訊。</xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> 如果有可用的更新，可以安裝使用<xref:System.Deployment.Application.ApplicationDeployment.Update%2A>或<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; 第二種方法就會引發<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>事件之後的更新安裝已完成。</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> 大型的更新，您可以接收進度通知透過<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>和<xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>事件，並使用中的資訊<xref:System.ComponentModel.ProgressChangedEventArgs>來通知使用者下載狀態。</xref:System.ComponentModel.ProgressChangedEventArgs> </xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>       您也可以使用 ApplicationDeployment 下載大型檔案和隨選的組件。 這些檔案必須標示為 「 選用 」 部署的應用程式資訊清單中，讓它們不會在安裝期間下載。 您也可以使用應用程式的期間下載的檔案在任何時間點<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>或<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 您可以下載組件，再將它們載入到記憶體藉由提供<xref:System.AppDomain.AssemblyResolve><xref:System.AppDomain>類別</xref:System.AppDomain>上的事件</xref:System.AppDomain.AssemblyResolve>的事件處理常式 如需詳細資訊，請參閱[逐步解說︰ 依 ClickOnce 部署應用程式開發介面使用設計工具的要求下載組件](~/add/includes/ajax-current-ext-md.md)。      > [!NOTE] > 如果您更新[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式執行應用程式時，使用者將不會看到更新直到您呼叫<xref:System.Windows.Forms.Application.Restart%2A>方法<xref:System.Windows.Forms.Application>，這將會關閉目前正在執行的應用程式執行個體，並立即重新啟動它。</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       ApplicationDeployment 有沒有公用建構函式。取得內類別的執行個體[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式，透過<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>屬性。</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> 您使用<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>屬性，確認目前的應用程式是[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式。</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>       檢查更新，並使用新的非同步下載更新的檔案，支援 ApplicationDeployment[事件架構非同步模式概觀](~/add/includes/ajax-current-ext-md.md)，而這會公開為類別事件完成回呼。 ApplicationDeployment 啟動和管理執行緒，並傳回正確 UI 執行緒上呼叫您的應用程式。 透過此類別中，您可以更新而無需鎖定應用程式，如此使用者就可以繼續安裝更新時使用。 如果在更新發生時，使用者必須停止所有工作，請考慮改為使用同步方法。      > [!NOTE] > 執行非同步的更新需要您的應用程式匯入同時<xref:System.Deployment.Application>和<xref:System.ComponentModel>命名空間。</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously. This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public sealed class ApplicationDeployment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  id: ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得用來啟動應用程式的部署資訊清單的 URL。"
  remarks: "這個屬性會在完全信任和部分信任的應用程式。"
  example:
  - "The following code shows how to retrieve the URL parameters by using ActivationUri, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[ClickOnceQueryString#1](~/add/codesnippet/csharp/ClickOnceQueryString/Form1.cs#1)]\n [!code-vb[ClickOnceQueryString#1](~/add/codesnippet/visualbasic/ClickOnceQueryStringVB/Form1.vb#1)]"
  syntax:
    content: public Uri ActivationUri { get; }
    return:
      type: System.Uri
      description: "如果字串長度為零`TrustUrlParameters`部署資訊清單中的屬性是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，或如果使用者已經提供開啟部署的 UNC 或已從本機開啟它。 否則，傳回值是用來啟動應用程式，包括任何參數的完整 URL。"
  overload: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  id: CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "執行相同操作，因為<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>，但是會傳回可用的更新相關的額外的資訊。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  remarks: "CheckForDetailedUpdate 方法可讓同步呼叫端取得相同的擴充的資訊使用非同步呼叫端取得<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>類別。</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForDetailedUpdate to retrieve the information about the latest update. If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.  \n  \n [!code-cs[ClickOnceAPI#7](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#7)]\n [!code-cpp[ClickOnceAPI#7](~/add/codesnippet/cpp/m-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#7](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#7)]"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();
    parameters: []
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref>可用的更新。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "目前的應用程式未設定為支援更新，或另一項更新檢查作業已經在進行中。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "無法下載部署資訊清單。 這個例外狀況會出現在<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>屬性<xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;></xref>事件。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "部署資訊清單已損毀。 您嘗試部署這個應用程式給使用者之前，請重新產生應用程式資訊清單。 這個例外狀況會出現在<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>屬性<xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;></xref>事件。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  id: CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "執行相同操作，因為<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>，但是會傳回可用的更新相關的額外的資訊。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>會以無訊息方式套用更新，將會顯示任何對話方塊。"
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref>可用的更新。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  id: CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "檢查<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>來判斷是否可以使用新的更新。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdate 方法會比較目前已安裝的部署版本，與位於<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>部署資訊清單中指定的版本 如果伺服器上的版本是已安裝的版本不同，它會傳回`true`。       這個方法會封鎖，直到檢查已完成。 若要以非同步方式檢查更新，請使用<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>方法而。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>      > [!NOTE] > 如果 CheckForUpdate 探索更新可用，然後在使用者選擇不安裝它，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]會提示使用者更新可用的應用程式執行的下一次。 沒有任何方法可以停用這個提示。 (如果應用程式是必要的更新，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]它不用提示直接安裝。)"
  example:
  - "The following code example checks for an application update; if one is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#5](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#5)]\n [!code-cpp[ClickOnceAPI#5](~/add/codesnippet/cpp/m-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#5](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#5)]"
  syntax:
    content: public bool CheckForUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果新的更新功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]如果更新已在進行中時，呼叫 CheckForUpdate 方法，立即擲回這個例外狀況。'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "無法下載部署資訊清單。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "部署資訊清單已損毀。 您可能需要重新部署應用程式以修正此問題。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  id: CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "檢查<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>來判斷是否可以使用新的更新。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  syntax:
    content: public bool CheckForUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>會以無訊息方式套用更新，將會顯示任何對話方塊。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果新的更新功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  id: CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "檢查<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>以非同步方式來判斷是否可以使用新的更新。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdateAsync 立即傳回並啟動個別的執行緒以下載更新的應用程式。 當方法完成或取消時，便會產生<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>事件。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> 您可以使用<xref:System.ComponentModel.AsyncCompletedEventArgs>中這個事件處理常式，以判斷是否已取消作業，或如果已在更新期間引發例外狀況。</xref:System.ComponentModel.AsyncCompletedEventArgs>       您可以藉由呼叫<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>取消非同步的更新      > [!NOTE] > 如果<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>發現，已有更新可用，並且在使用者選擇不安裝它，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]會提示使用者更新可用的應用程式執行的下一次。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> 沒有任何方法可以停用這個提示。 (如果應用程式是必要的更新，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]它不用提示直接安裝。)"
  example:
  - "The following example checks for an update asynchronously, and installs the update if one exists.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void CheckForUpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]如果更新已在進行中時，呼叫 CheckForUpdateAsync 方法，立即擲回這個例外狀況。'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "無法下載部署資訊清單。 這個例外狀況會出現在<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>屬性<xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;></xref>事件。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "部署資訊清單已損毀。 您可能需要重新部署應用程式以修正此問題。 這個例外狀況會出現在<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>屬性<xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;></xref>事件。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  id: CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取消非同步更新檢查。"
  remarks: "使用這個方法來取消使用起始更新檢查<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>       這個方法便不會取消任何背景更新，可能已經在進行中，例如啟動訂閱的更新。 如需訂用帳戶的詳細資訊，請參閱[選擇 ClickOnce 更新策略](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void CheckForUpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  id: CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "發生時<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>已完成。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>類別將會通知您，以及其他項目、 更新的版本、 多大的更新時，可用的更新是必要或選擇性。</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForUpdateCompleted to decide whether to ask the user to install the available application update. If the update is a mandatory upgrade, the CheckForUpdateCompleted event handler does not prompt the user. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;
    return:
      type: System.Deployment.Application.CheckForUpdateCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  id: CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "在使用的進度更新時，就會發生<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>呼叫。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "CheckForUpdateProgressChanged 報告下載狀態的應用程式的部署資訊清單。 這可以是使用者會透過低速網路連線來下載部署的重要資訊。"
  example:
  - "The following code example uses the CheckForUpdateProgressChanged event to inform the user how much of the deployment manifest is left to download. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/d621aa2f-b92e-4e9d-b698-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  id: CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "傳回目前<xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;></xref>此部署。"
  remarks: "您無法建立執行個體<xref:System.Deployment.Application.ApplicationDeployment>直接在您的應用程式; 您必須擷取有效的執行個體，透過 CurrentDeployment 屬性。</xref:System.Deployment.Application.ApplicationDeployment>       CurrentDeployment 靜態屬性會使用已部署的應用程式只能從有效[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]。 嘗試從非呼叫這個屬性[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式將會擲回例外狀況。 如果您正在開發的應用程式，可能會或可能不會部署使用[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]，使用<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>屬性來測試是否為目前的處理序[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式。</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>"
  example:
  - "The following code example retrieves CurrentDeployment and checks to determine whether the application has been updated in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_12_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "目前的部署。"
  overload: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "您嘗試從非呼叫這個靜態屬性[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  id: CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得目前執行的應用程式執行個體的部署版本。"
  remarks: "CurrentVersion 與會有所不同，<xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>如果已安裝新的更新，但尚未呼叫<xref:System.Windows.Forms.Application.Restart%2A>.</xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> 如果為執行自動更新設定部署資訊清單，您可以比較這兩個值來判斷如果應該重新啟動應用程式。"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_7_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public Version CurrentVersion { get; }
    return:
      type: System.Version
      description: "目前的部署版本。"
  overload: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  id: DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得路徑[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]資料目錄。"
  syntax:
    content: public string DataDirectory { get; }
    return:
      type: System.String
      description: "字串，包含應用程式的本機磁碟上的資料目錄的路徑。"
  overload: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  id: DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "下載一組選擇性檔案依需求。"
  remarks: "在[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式中，在初始化或更新期間將不會下載標示為 「 選用 」 應用程式資訊清單中的檔案。 若要下載所有屬於視情況下，具名群組的檔案，讓它們不會耗用網路資源和磁碟空間之前確定使用者有需要，您可以使用 DownloadFileGroup 方法。 例如，某些使用者可能需要使用包含在您的應用程式每日，但是其他使用者可能永遠不會叫用的資料分析封裝。       若要使用 DownloadFileGroup 您已下載的組件，您附加<xref:System.AppDomain.AssemblyResolve>於<xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>事件</xref:System.AppDomain.AssemblyResolve>的事件接聽程式 如需範例，請參閱 =[逐步解說︰ 依 ClickOnce 部署應用程式開發介面使用設計工具的要求下載組件](~/add/includes/ajax-current-ext-md.md)。       所有的檔案會下載到[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式快取且因此隔離的應用程式目前的版本。 讓我們假設應用程式下載的檔案群組之後，使用者會安裝新版本的應用程式，但稍後又還原為舊版的應用程式。 在此情況下，先前的版本仍將保有原先下載的檔案的複本。 如需有關如何存取資料檔案的詳細資訊，請參閱[存取本機和 ClickOnce 應用程式中的遠端資料](~/add/includes/ajax-current-ext-md.md)。       DownloadFileGroup 適用於部分信任應用程式，也就是在任何[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式以執行有限的權限。 不過，如果您嘗試以動態方式載入組件，您的應用程式將需要完全信任。       目前不支援視需要下載的資料檔案。       您的應用程式不會對使用者輸入直到 DownloadFileGroup 方法傳回的回應能力。 如果您要下載檔案而不會中斷使用者的工作流程中，使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>方法而。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       您無法單獨其檔名下載單一檔案。 若要下載單一檔案，將其指派的群組名稱您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]部署及下載群組使用這個方法。"
  example:
  - "The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.  \n  \n [!code-cs[ClickOnceOnDemandCmdLine#2](~/add/codesnippet/csharp/6f3e5fcc-9a7b-4ff6-a5e4-_1.cs)]"
  syntax:
    content: public void DownloadFileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "若要下載檔案的具名的群組。 所有檔案標示都為 「 選用 」 中[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式需要群組名稱。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>參數為 null 或長度為零。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  id: DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "視需要下載，一組在背景中的選擇性檔案。"
  remarks: "在[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式中，在初始化或更新期間將不會下載標示為 「 選用 」 應用程式資訊清單中的檔案。 若要下載所有屬於視情況下，具名群組的檔案，讓它們不會耗用網路資源和磁碟空間之前確定使用者有需要，您可以使用 DownloadFileGroupAsync 方法。 這種方法適用於靜態檔案，不僅應用程式可能不需要的組件。 例如，某些使用者可能需要使用包含在您的應用程式每日，但是其他使用者可能永遠不會叫用的資料分析封裝。       若要下載組件上指定，將事件接聽程式附加至<xref:System.AppDomain.AssemblyResolve><xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>事件</xref:System.AppDomain.AssemblyResolve> 如需範例，請參閱[逐步解說︰ 依 ClickOnce 部署 API 的要求下載組件](~/add/includes/ajax-current-ext-md.md)。       所有組件會下載到[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式快取。       所有靜態檔案會下載到[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式的資料目錄，且會因此隔離的應用程式目前的版本。 讓我們假設應用程式下載的檔案群組之後，使用者會安裝新版本的應用程式，但稍後又還原為舊版的應用程式。 在此情況下，先前的版本仍將保有原先下載的檔案的複本。 如需存取靜態檔案的詳細資訊，請參閱[存取本機和 ClickOnce 應用程式中的遠端資料](~/add/includes/ajax-current-ext-md.md)。       您可以下載多個檔案群組，同時使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 您可以使用來區分其間<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>屬性<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>類別，這會傳遞至<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>事件。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> 如果您需要將更複雜的狀態，您可以使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>傳入`state`物件。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>在部分信任的應用程式，也就是適用於任何[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式以執行有限的權限。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 不過，如果您嘗試以動態方式載入組件，您的應用程式將需要完全信任。       目前不支援視需要下載的資料檔案。       您無法單獨其檔名下載單一檔案。 若要下載單一檔案，將其指派的群組名稱您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]部署及下載群組使用這個方法。       若要取消非同步下載，請呼叫<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "若要下載檔案的具名的群組。 所有檔案標示都為 「 選用 」 中[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式需要群組名稱。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>參數為 null 或長度為零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "您無法起始一個以上的下載<code> groupName </code>一次。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  id: DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "視需要下載，一組選擇性檔案，在背景中，並將傳遞給事件回呼的應用程式狀態。"
  remarks: "在[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式中，在初始化或更新期間將不會下載標示為 「 選用 」 應用程式資訊清單中的檔案。 您可以使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>方法，使它們不會耗用網路資源和磁碟空間之前確定使用者需要這些下載的所有檔案屬於視情況下，具名群組。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 這種方法適用於靜態檔案，不僅應用程式可能不需要的組件。 例如，某些使用者可能需要使用包含在您的應用程式每日，但是其他使用者可能永遠不會叫用的資料分析封裝。 若要下載組件上指定，將事件接聽程式附加至<xref:System.AppDomain.AssemblyResolve><xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>事件</xref:System.AppDomain.AssemblyResolve>       您可以使用 DownloadFileGroupAsync 方法，同時下載多個檔案群組。 您可以使用來區分其間<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>屬性<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>類別，這會傳遞至<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>事件。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> 如果您需要將更複雜的狀態，您可以使用 DownloadFileGroupAsync 傳入`state`物件。       所有靜態檔案會下載到[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式的資料目錄，且會因此隔離的應用程式目前的版本。 如需存取靜態檔案的詳細資訊，請參閱[存取本機和 ClickOnce 應用程式中的遠端資料](~/add/includes/ajax-current-ext-md.md)。 。 比方說，之後，應用程式下載的檔案群組、 使用者安裝新版的應用程式，但稍後又還原為舊版的應用程式。 在此情況下，先前的版本仍將保有原先下載的檔案的複本。       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>在部分信任的應用程式，也就是適用於任何[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式以執行有限的權限。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 不過，如果您嘗試以動態方式載入組件，您的應用程式將需要完全信任。       目前不支援視需要下載的資料檔案。       若要取消非同步下載，請呼叫<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName, object userState);
    parameters:
    - id: groupName
      type: System.String
      description: "若要下載檔案的具名的群組。 所有檔案標示都為 「 選用 」 中[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式需要群組名稱。"
    - id: userState
      type: System.Object
      description: "任意的物件，其中包含非同步作業的狀態資訊。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>參數為 null 或長度為零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "您無法起始一個以上的下載<code> groupName </code>一次。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  id: DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取消非同步檔案下載。"
  syntax:
    content: public void DownloadFileGroupAsyncCancel (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "若要下載檔案的具名的群組。 所有檔案標示都為 「 選用 」 中[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式需要群組名稱。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupName</code>不能<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  id: DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "在主應用程式的執行緒上執行檔案下載完成時發生。"
  remarks: "DownloadFileGroupCompleted 事件是在執行緒上呼叫主應用程式。 它是執行緒安全地呼叫直接在這個回呼的應用程式的 Windows Form 控制項。       請檢查<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性<xref:System.ComponentModel.AsyncCompletedEventArgs>提供給這個回呼。</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 如果這個屬性是`null`，下載已成功; 如果不是`null`、 安裝並未成功，而且您可以找到有關透過安裝失敗的詳細資訊<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/d8c90486-6b41-4c55-b911-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;
    return:
      type: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  id: DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "使用檔案下載作業至<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>呼叫所初始化的狀態資訊時，就會發生"
  remarks: "DownloadFileGroupProgressChanged 事件是在執行緒上呼叫主應用程式。 它是執行緒安全地呼叫直接在這個回呼的應用程式的 Windows Form 控制項。       使用所提供的資訊<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>將進度資訊傳達給您的使用者。</xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/dd149587-df74-4c6a-9251-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  id: IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "檢查具名的檔案群組是否已下載到用戶端電腦。"
  remarks: "IsFileGroupDownloaded 適用於在部分信任應用程式中沒有任何安全性要求。       當您更新應用程式，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]將來自舊版本的任何指定資料檔複製到新版本的資料目錄。 如果您要下載這些檔案的新版本，您應該移除任何您想要防止舊版本，並將它移到新版本的資料。"
  example:
  - "The following code example downloads all of the files in the `HelpFiles` group to disk.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/ff7c4993-a9b0-4966-b9a0-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public bool IsFileGroupDownloaded (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "若要下載檔案的具名的群組。 所有檔案標示都為 「 選用 」 中[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式需要群組名稱。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個應用程式的目前版本已下載的檔案群組否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果已安裝新版的應用程式，而且新的版本不具有新增、 移除或更改的檔案群組中的檔案，會傳回 IsFileGroupDownloaded <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "<code>groupName</code>應用程式資訊清單中定義的檔案群組。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  id: IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得值，指出這是否為此應用程式已經在用戶端電腦執行的第一次。"
  remarks: "若要判斷是否需要執行任何一次初始化作業，您的應用程式執行的第一次使用 IsFirstRun。       不要假設 IsFirstRun 設`true`表示應用程式的這個執行個體是第一個對使用者顯示其使用者介面。 由於系統排程處理序的方式，應用程式的一個執行個體可能有其 IsFirstRun 屬性設定為`true`，但另一個執行個體可能會呈現在螢幕上的第一個。 每當使用者將從一個版本升級到下一步 時，會重設這個屬性的值。 如果您想要執行的作業，只有第一個時間的任何版本的應用程式執行，您必須執行額外的測試，例如檢查您建立第一次的檔案是否存在，或儲存旗標，使用**應用程式設定**。"
  example:
  - "The following code example uses IsFirstRun to decide whether to check for an update to the file group `HelpFiles`. If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.  \n  \n [!code-cs[ClickOnceAPI#9](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#9)]\n [!code-vb[ClickOnceAPI#9](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#9)]"
  syntax:
    content: public bool IsFirstRun { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果從未; 在用戶端電腦上執行此版本的應用程式否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得值，指出目前的應用程式[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式。"
  remarks: "如果您希望應用程式都可以執行內部和外部[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]部署 （例如，如果您要偵錯應用程式在本機電腦上的部署之前），才能存取測試 IsNetworkDeployed<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>屬性。</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>       會傳回 IsNetworkDeployed`true`不論是否安裝應用程式或裝載於線上，也不論是否已安裝網站、 檔案共用或 CD-ROM。"
  example:
  - "The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using IsNetworkDeployed first to ensure that the reference is not `null`.  \n  \n [!code-cs[ClickOnceAPI#2](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#2)]\n [!code-cpp[ClickOnceAPI#2](~/add/codesnippet/cpp/p-system.deployment.appl_0_1.cpp)]"
  syntax:
    content: public static bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這是[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]的應用程式; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  id: TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得日期和時間[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]上次檢查應用程式更新。"
  remarks: "A[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式可以設定為訂用帳戶更新。 在此案例中，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]輪詢部署資訊清單中定義的間隔，自動的應用程式的部署位置，並判斷是否有可用更新。 TimeOfLastUpdateCheck 傳回上次更新檢查，不論它是否已起始藉由訂閱或使用明確的核取的時間<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>， <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>， <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>， <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>，或<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>       如果沒有更新檢查已執行，因為已安裝應用程式，TimeOfLastUpdateCheck 傳回的安裝時間。"
  example:
  - "The following code example checks whether a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_8_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public DateTime TimeOfLastUpdateCheck { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>上次更新檢查。</xref:System.DateTime>"
  overload: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.Update
  id: Update
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "啟動同步下載及安裝此應用程式的最新版本。"
  remarks: "當您發行新版本的應用程式所指定的位置時，更新被視為應用程式<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>，且應用程式的部署資訊清單中的版本號碼大於目前使用者的電腦上安裝的應用程式的版本號碼。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       更新呼叫會阻擋，直到更新下載到用戶端電腦和安裝到[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]快取; 在此期間，應用程式不會對使用者的回應。 如果您想要維護應用程式的回應，或下載，使用期間顯示進度報表<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>方法而。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>       更新會下載所有未標示為 「 選用 」 應用程式資訊清單中的檔案。 您可以下載選用的檔案，視使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>或<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]可能已更新應用程式自動當您呼叫更新方法。如果發生這種情況，呼叫此方法會擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       如果您已在您部署中，更新一個或多個檔案，但不是重新整理應用程式資訊清單，您會收到<xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> 大部分的情況下，重新部署您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]應用程式來解決這個問題。 如果在部署資訊清單或應用程式資訊清單的公開金鑰簽章無效或遺漏，也會發生這個例外狀況。       更新可能會要求比舊版應用程式的高層級的本機電腦上的信任。 如果應用程式會使用受信任的應用程式部署，common language runtime (CLR) 信任管理員會檢查部署資訊清單，以判斷它是否包含有效的信任授權。 如果部署資訊清單不包含有效的信任授權、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]會停止安裝，並擲回<xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> Update 方法將會永遠不會顯示提示，詢問他們是否想要授與應用程式執行的權限的使用者。"
  example:
  - "The following code example checks for an application update; if an update is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/m-system.deployment.appl_6_1.cpp)]\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]"
  syntax:
    content: public bool Update ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已更新應用程式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Deployment.Application.ApplicationDeployment.Update*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "在本機電腦未授與應用程式執行所需的權限等級。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]部署已損毀。 如需有關如何診斷並更正此問題的秘訣，請參閱[疑難排解 ClickOnce 部署](~/add/includes/ajax-current-ext-md.md)。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "無法從網路上位置下載新的部署。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "正在更新應用程式。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  id: UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "啟動非同步下載和安裝這個應用程式的最新版本。"
  remarks: "當您發行新版本的應用程式所指定的位置時，更新被視為應用程式<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>，且應用程式的部署資訊清單中的版本號碼大於目前使用者的電腦上安裝的應用程式的版本號碼。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       下載更新時[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]將會引發<xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>主應用程式執行緒，以通知您下載狀態上的事件處理常式。</xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> 非同步更新完成，或在遇到例外狀況，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]將會引發<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>主應用程式執行緒上的事件。</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> 檢查<xref:System.ComponentModel.AsyncCompletedEventArgs>提供給此事件，以判斷更新是否成功。</xref:System.ComponentModel.AsyncCompletedEventArgs>       如果 UpdateAsync 擲回例外狀況，[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]呼叫<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>並設定<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性<xref:System.ComponentModel.AsyncCompletedEventArgs>擲回的例外狀況。</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>       UpdateAsync 會下載未標示為 「 選用 」 應用程式資訊清單中的部署中的所有檔案。 您可以下載選用的檔案，視使用<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>或<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>方法。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]可能已更新應用程式自動當您呼叫 UpdateAsync 方法;如果發生這種情況，呼叫此方法會擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       如果您已在您部署中，更新一個或多個檔案，但不是重新整理應用程式資訊清單，您會收到<xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> 大部分的情況下，重建您的應用程式資訊清單來解決這個問題。 如果在部署資訊清單或應用程式資訊清單的公開金鑰簽章無效或遺漏，也會發生這個例外狀況。       更新可能會要求比舊版應用程式的高層級的本機電腦上的信任。 如果應用程式會使用受信任的應用程式部署，common language runtime (CLR) 信任管理員會檢查部署資訊清單，以判斷它是否包含有效的信任授權。 如果部署資訊清單不包含有效的信任授權、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]會停止安裝，並擲回<xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> UpdateAsync 永遠不會顯示提示，詢問使用者是否要授與應用程式執行的權限。"
  example:
  - "The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void UpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "在本機電腦未授與此應用程式執行所需的權限等級。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "您[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]部署已損毀。 如需有關如何診斷並更正此問題的秘訣，請參閱[疑難排解 ClickOnce 部署](~/add/includes/ajax-current-ext-md.md)。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "無法從網路上位置下載新的部署。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  id: UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取消非同步更新起始<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateAsyncCancel 只會取消由呼叫起始更新<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; 它並不會取消更新訂用帳戶的一部分已開始。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>"
  syntax:
    content: public void UpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  id: UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "發生時[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]已完成升級至<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>呼叫而導致應用程式"
  remarks: "UpdateCompleted 事件是在執行緒上呼叫主應用程式。 您可以呼叫您的應用程式直接在這個回呼的 Windows Form 控制項而不觸發例外狀況。       請檢查<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性<xref:System.ComponentModel.AsyncCompletedEventArgs>提供給這個回呼。</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 如果這個屬性是`null`，安裝是否成功; 如果不是`null`、 安裝並未成功，而且您可以找到透過此安裝失敗的詳細資訊<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性。</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 一旦已下載的更新，您必須呼叫<xref:System.Windows.Forms.Application.Restart%2A>方法<xref:System.Windows.Forms.Application>使用較新版本的應用程式。</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       如果更新安裝已取消由呼叫<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>、<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>屬性<xref:System.ComponentModel.AsyncCompletedEventArgs>類別將為`true`。</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>       若要使用此事件處理常式，您的應用程式必須匯入同時<xref:System.Deployment.Application>和<xref:System.ComponentModel>命名空間。</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  id: UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得應用程式的完整名稱之後已更新。"
  syntax:
    content: public string UpdatedApplicationFullName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含應用程式的完整名稱。</xref:System.String>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  id: UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得最近下載更新的版本。"
  remarks: "<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>如果已安裝新的更新，但尚未呼叫<xref:System.Windows.Forms.Application.Restart%2A><xref:System.Windows.Forms.Application>。</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> UpdatedVersion 與不同 如果應用程式的部署資訊清單設定為執行自動更新，您可以比較這兩個值，以判斷是否應該重新啟動應用程式。       如果應用程式尚未更新，UpdatedVersion 傳回<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>相同的值"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#4](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#4)]\n [!code-cpp[ClickOnceAPI#4](~/add/codesnippet/cpp/p-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#4](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#4)]"
  syntax:
    content: public Version UpdatedVersion { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>描述更新的版本。</xref:System.Version>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  id: UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "取得網站或從這個應用程式會自行更新的檔案共用。"
  remarks: "/Updatelocation 可能不同於用來下載應用程式一開始，如果應用程式的部署已設定為使用更新的重新導向的網站。       只在應用程式的部署資訊清單中，可以變更此值。"
  syntax:
    content: public Uri UpdateLocation { get; }
    return:
      type: System.Uri
      description: "更新路徑，表示為 HTTP、 HTTPS 或檔案 URL。或為 Windows 網路檔案的路徑 (UNC)。"
  overload: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  id: UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "發生時[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]有新的狀態資訊更新作業，藉由呼叫<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>方法。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateProgressChanged 事件是在執行緒上呼叫主應用程式。 您可以呼叫您的應用程式直接在這個回呼的 Windows Form 控制項而不觸發例外狀況。"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.DeploymentDownloadException
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentDownloadException
  nameWithType: DeploymentDownloadException
  fullName: System.Deployment.Application.DeploymentDownloadException
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Deployment.Application.TrustNotGrantedException
  parent: System.Deployment.Application
  isExternal: false
  name: TrustNotGrantedException
  nameWithType: TrustNotGrantedException
  fullName: System.Deployment.Application.TrustNotGrantedException
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
- uid: System.Deployment.Application.UpdateCheckInfo
  parent: System.Deployment.Application
  isExternal: false
  name: UpdateCheckInfo
  nameWithType: UpdateCheckInfo
  fullName: System.Deployment.Application.UpdateCheckInfo
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
- uid: System.Deployment.Application.CheckForUpdateCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: CheckForUpdateCompletedEventHandler
  nameWithType: CheckForUpdateCompletedEventHandler
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
- uid: System.Deployment.Application.DeploymentProgressChangedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentProgressChangedEventHandler
  nameWithType: DeploymentProgressChangedEventHandler
  fullName: System.Deployment.Application.DeploymentProgressChangedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
- uid: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DownloadFileGroupCompletedEventHandler
  nameWithType: DownloadFileGroupCompletedEventHandler
  fullName: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Deployment.Application.ApplicationDeployment.Update
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate
  nameWithType: ApplicationDeployment.CheckForUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync
  nameWithType: ApplicationDeployment.CheckForUpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup
  nameWithType: ApplicationDeployment.DownloadFileGroup
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.Deployment.Application.ApplicationDeployment.Update*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update
  nameWithType: ApplicationDeployment.Update
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync
  nameWithType: ApplicationDeployment.UpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel
  nameWithType: ApplicationDeployment.UpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
