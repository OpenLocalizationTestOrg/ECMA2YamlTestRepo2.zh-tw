### YamlMime:ManagedReference
items:
- uid: System.Windows.EventSetter
  id: EventSetter
  children:
  - System.Windows.EventSetter.#ctor
  - System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.EventSetter.Event
  - System.Windows.EventSetter.HandledEventsToo
  - System.Windows.EventSetter.Handler
  langs:
  - csharp
  name: EventSetter
  nameWithType: EventSetter
  fullName: System.Windows.EventSetter
  type: Class
  summary: "表示樣式中的事件 setter。 事件 setter 會叫用指定的事件處理常式以回應事件。"
  remarks: "事件 setter 會叫用指定的事件處理常式，以套用到參考的所有元素的路由事件的回應<xref:System.Windows.Style>不需要您附加至每個個別項目執行個體的處理常式。</xref:System.Windows.Style> 只有<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支援 EventSetter 物件。</xref:System.Windows.Style.Setters%2A?displayProperty=fullName>       您可以只宣告路由的事件的事件的事件 setter。 反昇事件，或通道事件，您可以宣告具有直接路由策略的路由事件的事件 setter。       EventSetter 類別的執行個體通常會透過建立[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]，如透過定義於樣式中的物件項目[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 EventSetter 也可能會從程式碼執行個體化。       事件 setter 不能在包含的主題資源字典中的樣式。 這是因為在執行階段的主題資源字典通常是鬆散[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]檔案，而且沒有任何範圍定義隨附的程式碼後置定義處理常式可以存在的位置。       在任何事件的類別處理常式也之後及任何執行個體的處理常式，會叫用透過事件 setter 附加的處理常式。 如此一來，如果類別處理常式或執行個體的處理常式標記處理其引數中的事件，然後事件 setter 所宣告的處理常式不會叫用，除非您特別設定的事件 setter <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`。</xref:System.Windows.EventSetter.HandledEventsToo%2A>       事件 setter 也可能來自於<xref:System.Windows.Style.BasedOn%2A>樣式。</xref:System.Windows.Style.BasedOn%2A> 從指定為樣式的事件 setter 處理常式<xref:System.Windows.Style.BasedOn%2A>之後立即 style 上的處理常式將會叫用。</xref:System.Windows.Style.BasedOn%2A>       請注意，只有<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>支援 EventSetter 物件。</xref:System.Windows.Style.Setters%2A?displayProperty=fullName> 觸發程序 (<xref:System.Windows.TriggerBase>和衍生類別) 不支援 EventSetter。</xref:System.Windows.TriggerBase>"
  example:
  - "The following example establishes a single EventSetter within a page-level style.  \n  \n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]  \n  \n The following shows the example event handlers:  \n  \n [!code-cs[EventOvwSupport#EventSetterRef](~/add/codesnippet/csharp/EventOvwSupport/page2.xaml.cs#eventsetterref)]\n [!code-vb[EventOvwSupport#EventSetterRef](~/add/codesnippet/visualbasic/eventovwsupport/page2.xaml.vb#eventsetterref)]"
  syntax:
    content: 'public class EventSetter : System.Windows.SetterBase'
  inheritance:
  - System.Object
  - System.Windows.SetterBase
  implements: []
  inheritedMembers:
  - System.Windows.SetterBase.CheckSealed
  - System.Windows.SetterBase.IsSealed
  platform:
  - net462
- uid: System.Windows.EventSetter.#ctor
  id: '#ctor'
  parent: System.Windows.EventSetter
  langs:
  - csharp
  name: EventSetter()
  nameWithType: EventSetter.EventSetter()
  fullName: System.Windows.EventSetter.EventSetter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.EventSetter&quot;></xref>類別。"
  syntax:
    content: public EventSetter ();
    parameters: []
  overload: System.Windows.EventSetter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)
  id: '#ctor(System.Windows.RoutedEvent,System.Delegate)'
  parent: System.Windows.EventSetter
  langs:
  - csharp
  name: EventSetter(RoutedEvent,Delegate)
  nameWithType: EventSetter.EventSetter(RoutedEvent,Delegate)
  fullName: System.Windows.EventSetter.EventSetter(RoutedEvent,Delegate)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.EventSetter&quot;></xref>類別，使用提供的事件和處理常式參數。"
  remarks: "此簽章通常是如果您建立<xref:System.Windows.EventSetter>程式碼或程式碼後置來建立<xref:System.Windows.EventSetter>，加強現有的樣式之前使用。</xref:System.Windows.EventSetter> </xref:System.Windows.EventSetter>"
  syntax:
    content: public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "特定路由的事件的<xref href=&quot;System.Windows.EventSetter&quot;></xref>回應。"
    - id: handler
      type: System.Delegate
      description: "要在這個 setter 中指派的處理常式。"
  overload: System.Windows.EventSetter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventSetter.Event
  id: Event
  parent: System.Windows.EventSetter
  langs:
  - csharp
  name: Event
  nameWithType: EventSetter.Event
  fullName: System.Windows.EventSetter.Event
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定的特定路由的事件這<xref href=&quot;System.Windows.EventSetter&quot;></xref>回應。"
  remarks: "您無法設定此屬性一次樣式包含<xref:System.Windows.EventSetter>正在使用中，因此已密封。</xref:System.Windows.EventSetter> 如果您在程式碼中設定此屬性很可能正在使用的樣式，請檢查值<xref:System.Windows.SetterBase.IsSealed%2A>屬性<xref:System.Windows.EventSetter>執行個體，然後再嘗試設定事件。</xref:System.Windows.EventSetter> </xref:System.Windows.SetterBase.IsSealed%2A>"
  example:
  - "The following example sets the Event property as part of an <xref:System.Windows.EventSetter> in a markup style.  \n  \n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]"
  syntax:
    content: public System.Windows.RoutedEvent Event { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "路由事件識別項欄位。"
  overload: System.Windows.EventSetter.Event*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試設定此屬性在密封<xref href=&quot;System.Windows.EventSetter&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Windows.EventSetter.HandledEventsToo
  id: HandledEventsToo
  parent: System.Windows.EventSetter
  langs:
  - csharp
  name: HandledEventsToo
  nameWithType: EventSetter.HandledEventsToo
  fullName: System.Windows.EventSetter.HandledEventsToo
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定值，這個值會決定是否應該仍叫用處理常式指派給 set 存取子，即使事件標示為已處理的事件資料。"
  remarks: "> [!IMPORTANT]> 設定<xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A>特性會叫用事件處理常式的方式必須一律在中執行程式碼中，為了保持沒有指定方法的一般原則<xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A>時指派的已定義的事件處理常式直接執行個體名為中的事件[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]屬性語法。</xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> </xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> 雖然將此值設定[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]不會產生任何編譯時間錯誤，所產生的[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]使用樣式時，會產生執行階段例外狀況。      <a name=&quot;xamlTextUsage_HandledEventsToo&quot;></a># # 這個屬性不應該使用中的 XAML 文字用法[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]。 請參閱 < 備註 >。"
  syntax:
    content: public bool HandledEventsToo { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果此處理常式仍然可以叫用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.EventSetter.HandledEventsToo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventSetter.Handler
  id: Handler
  parent: System.Windows.EventSetter
  langs:
  - csharp
  name: Handler
  nameWithType: EventSetter.Handler
  fullName: System.Windows.EventSetter.Handler
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得或設定 setter 中的路由事件的處理常式的參考。"
  remarks: ''
  example:
  - "The following example sets the Handler property as part of a <xref:System.Windows.EventSetter> in a markup style.  \n  \n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]"
  syntax:
    content: public Delegate Handler { get; set; }
    return:
      type: System.Delegate
      description: "這附加的處理常式參考<xref href=&quot;System.Windows.EventSetter&quot;> </xref>。"
  overload: System.Windows.EventSetter.Handler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.SetterBase
  isExternal: false
  name: System.Windows.SetterBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.EventSetter.#ctor
  parent: System.Windows.EventSetter
  isExternal: false
  name: EventSetter()
  nameWithType: EventSetter.EventSetter()
  fullName: System.Windows.EventSetter.EventSetter()
- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventSetter
  isExternal: false
  name: EventSetter(RoutedEvent,Delegate)
  nameWithType: EventSetter.EventSetter(RoutedEvent,Delegate)
  fullName: System.Windows.EventSetter.EventSetter(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.EventSetter.Event
  parent: System.Windows.EventSetter
  isExternal: false
  name: Event
  nameWithType: EventSetter.Event
  fullName: System.Windows.EventSetter.Event
- uid: System.Windows.EventSetter.HandledEventsToo
  parent: System.Windows.EventSetter
  isExternal: false
  name: HandledEventsToo
  nameWithType: EventSetter.HandledEventsToo
  fullName: System.Windows.EventSetter.HandledEventsToo
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventSetter.Handler
  parent: System.Windows.EventSetter
  isExternal: false
  name: Handler
  nameWithType: EventSetter.Handler
  fullName: System.Windows.EventSetter.Handler
- uid: System.Windows.EventSetter.#ctor*
  parent: System.Windows.EventSetter
  isExternal: false
  name: EventSetter
  nameWithType: EventSetter.EventSetter
- uid: System.Windows.EventSetter.Event*
  parent: System.Windows.EventSetter
  isExternal: false
  name: Event
  nameWithType: EventSetter.Event
- uid: System.Windows.EventSetter.HandledEventsToo*
  parent: System.Windows.EventSetter
  isExternal: false
  name: HandledEventsToo
  nameWithType: EventSetter.HandledEventsToo
- uid: System.Windows.EventSetter.Handler*
  parent: System.Windows.EventSetter
  isExternal: false
  name: Handler
  nameWithType: EventSetter.Handler
