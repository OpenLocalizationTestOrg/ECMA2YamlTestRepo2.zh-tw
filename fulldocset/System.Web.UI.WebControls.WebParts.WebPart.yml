### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPart
  id: WebPart
  children:
  - System.Web.UI.WebControls.WebParts.WebPart.#ctor
  - System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  - System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  - System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  - System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  - System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  - System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  - System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  - System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  - System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.WebPart.Description
  - System.Web.UI.WebControls.WebParts.WebPart.Direction
  - System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  - System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  - System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  - System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  - System.Web.UI.WebControls.WebParts.WebPart.Height
  - System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  - System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  - System.Web.UI.WebControls.WebParts.WebPart.Hidden
  - System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  - System.Web.UI.WebControls.WebParts.WebPart.IsShared
  - System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  - System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  - System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.WebPart.Title
  - System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPart.Verbs
  - System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  - System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  - System.Web.UI.WebControls.WebParts.WebPart.Width
  - System.Web.UI.WebControls.WebParts.WebPart.Zone
  - System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  langs:
  - csharp
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
  type: Class
  summary: "做為自訂 ASP.NET 網頁組件控制項，加入基底的基底類別<xref href=&quot;System.Web.UI.WebControls.WebParts.Part&quot;></xref>類別功能的一些額外的使用者介面 (UI) 屬性、 建立連接，以及個人化行為的能力。"
  remarks: "當您建立的控制項與 Web 組件功能時，您會有兩個基本選項。 您可以建立自訂控制項衍生自 web 組件類別，或您可以建立或使用其他伺服器控制項。 現有的 ASP.NET 控制項、 自訂的伺服器控制項和使用者控制項可以全部提供完整的 Web 組件功能藉由宣告中將它們 （或以程式設計的方式，將它們加入）<xref:System.Web.UI.WebControls.WebParts.WebPartZone>區域控制項，它們會包裝與結果<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件在執行時間，而且會被視為的控制項，則為 true 的 WebPart。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 如需詳細資訊，請參閱文件<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>類別。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 開發的速度和最大的重複使用程式碼，使用現有的伺服器控制項可能會很好的選項。 最大以程式設計方式控制的行為和 Web 組件控制項的功能，建立繼承自 web 組件類別的自訂控制項是通常是最佳選項。       抽象的 web 組件類別繼承自基底<xref:System.Web.UI.WebControls.WebParts.Part>控制項，並提供所有的網頁組件控制項的基本項目。</xref:System.Web.UI.WebControls.WebParts.Part> 類別包含一組常用的屬性，可影響的使用者介面的外觀。 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A>每個屬性會指定是否允許 Web 應用程式的使用者組件中的控制項以指定的屬性名稱的方式進行互動。</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A>屬性會決定大小、 可見性、 外觀，以及網頁組件控制項的支援內容 （例如標題和描述）。</xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>       在 Web 組件控制項集合由屬性例如其內容將網頁組件控制項的關聯性<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>，其中保留的參考控制項的相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager>物件，和<xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>，它會參考<xref:System.Web.UI.WebControls.WebParts.WebZone>，包含控制項。</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 可以有只有一個<xref:System.Web.UI.WebControls.WebParts.WebPartManager>每個頁面上，與每個 web 組件控制項可以位於內只有一個執行個體控制<xref:System.Web.UI.WebControls.WebParts.WebZone>一次。</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > 網頁組件控制項可以放在網頁上，區域外，但在此情況下當做一般的伺服器控制項的功能，失去幾乎所有的 Web 組件功能。       其他幾個重要的屬性會影響網頁組件控制項的獨特的功能。 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性可讓開發人員設定可以在執行階段做為篩選條件使用，以判斷是否要將控制項加入至頁面的任意字串。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 與角色管理等功能搭配使用<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性提供有用的機制，以建立定義的使用者角色為基礎的檢視。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性會指出是否在匯出期間，在控制項上的所有可用的屬性資料匯出，或非機密資料。</xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 這可讓開發人員為機密的資料與不是，基於安全的資料之間進行區別。 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A>屬性會傳回 web 組件控制項的執行個體的參考，讓<xref:System.Web.UI.WebControls.WebParts.EditorPart>頁面處於編輯模式時，控制項可以編輯它。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 最後，有數個屬性，表示相對於頁面的其餘部分控制項的狀態。 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A>屬性會指出控制項是否已關閉 (並因此加入<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>物件)，或者如果它是開放且可使用網頁上。</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A>屬性會指出控制項是否共用的控制項 （相對於特定使用者控制項），也就是說，它網頁的所有使用者看見。</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A>屬性會指出控制項是否目前包含在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-衍生區域 (例如<xref:System.Web.UI.WebControls.WebParts.WebPartZone>)。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> 值為`false`指出控制項在區域內，因此會有完整的 Web 組件功能。 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A>屬性會指出控制項是否為靜態或動態。</xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> 在網頁標記中宣告靜態控制項，而動態控制項以程式設計方式加入。       Web 組件類別也提供數種方法，決定發生什麼情況的各個點上控制項的生命週期中。 例如，<xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A>方法兩者會覆寫衍生類別提供以程式設計方式控制對應至每個方法的名稱在事件期間呈現控制項的內容中。</xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>       可以加入衍生自 WebPart 的<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>物件加入至<xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A>集合。</xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 動詞命令呈現在動詞命令功能表中，它會出現在 web 組件控制項的標題列。 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb>物件會提供一般使用者動作，例如隱藏或最小化控制項或顯示說明簡單的 UI 項目。</xref:System.Web.UI.WebControls.WebParts.WebPartVerb>       <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>方法建立的任何自訂集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>WebPart 控制項相關聯的控制項。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 開發人員可以覆寫這個方法，因此，它會建立特別設計用來編輯 web 組件控制項的自訂控制項。 當使用者按一下網頁組件控制項上的編輯動詞命令，被呼叫方法。"
  example:
  - "The following code example demonstrates how to create a WebPart control and reference it in a Web page.  \n  \n The first part of the example contains the code for a custom WebPart control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom WebPart control that gives you access to the features of the Web Parts control set. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Notice that many of the various WebPart properties can be assigned declaratively to the custom control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Panel
  - System.Web.UI.WebControls.WebParts.Part
  implements:
  - System.Web.UI.WebControls.WebParts.IWebActionable
  - System.Web.UI.WebControls.WebParts.IWebEditable
  - System.Web.UI.WebControls.WebParts.IWebPart
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.BackImageUrl
  - System.Web.UI.WebControls.Panel.CreateControlStyle
  - System.Web.UI.WebControls.Panel.DefaultButton
  - System.Web.UI.WebControls.Panel.GroupingText
  - System.Web.UI.WebControls.Panel.HorizontalAlign
  - System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.ScrollBars
  - System.Web.UI.WebControls.Panel.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Panel.Wrap
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebParts.Part.Controls
  - System.Web.UI.WebControls.WebParts.Part.DataBind
  - System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化類別的繼承的類別執行個體。 這個建構函式只可以呼叫由繼承的類別。"
  remarks: "Web 組件建構函式會初始化數個 UI 導向的屬性，包括各種的預設值`Allow`屬性來判斷控制項的功能。 這些屬性便會合併到繼承的類別執行個體。"
  example:
  - "The following code example demonstrates how a control that derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class inherits the default property values set in the base WebPart constructor, but then changes the value of one property in the constructor of the derived control.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control that gives you access to the features of the Web Parts control set. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, if you click the verbs menu in the title bar of the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the close verb is now disabled, which prevents users from closing the control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_2.aspx)]"
  syntax:
    content: protected WebPart ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  id: AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出使用者是否可以關閉<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>網頁上的控制項。"
  remarks: "使用者關閉後<xref:System.Web.UI.WebControls.WebParts.WebPart>在網頁上，控制項的控制項不再是可見或頁面上提供。</xref:System.Web.UI.WebControls.WebParts.WebPart> 已關閉的控制項加入至頁面類別目錄，這是一種 Web 組件的實體，儲存控制項的參考。 如果開發人員加入<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項內的頁面<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項，使用者可將頁面切換至 類別目錄的顯示模式的頁面類別目錄中選取 已關閉的控制項，將它加入至網頁。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > 關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以加回至網頁程式設計的方式，或從頁面類別目錄選取已關閉的控制項，當頁面類別目錄中的使用者顯示模式。</xref:System.Web.UI.WebControls.WebParts.WebPart>       關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項是不同於刪除它。</xref:System.Web.UI.WebControls.WebParts.WebPart> 永久移除已刪除的控制項時，可以回到頁面上，加入已關閉的控制項。 如需有關刪除控制項的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> 不同於隱藏它也是關閉的控制項。 隱藏的控制項是仍然在頁面上，仍然參與頁面生命週期事件，而只隱藏的使用者檢視，但是已關閉的控制項根本不呈現在網頁上。       靜態和動態<xref:System.Web.UI.WebControls.WebParts.WebPart>可以關閉 （靜態控制項宣告在網頁標記中，而以程式設計方式新增動態控制項） 的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如果開發人員將 AllowClose 屬性設定為`false`、 關閉動詞命令不會出現在控制項上，使用者無法關閉的控制項。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowClose property for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that it cannot be closed.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. This means that the close verb on the verbs menu of the control will be disabled for users. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the `<aspSample:TextDisplayWebPart>` element that references the control, you could also change the value of the property set by the control's constructor. To allow the control to be closed, simply add an `AllowClose=\"true\"` attribute to the element in the declarative markup.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_2.aspx)]"
  syntax:
    content: public virtual bool AllowClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項可關閉在網頁上。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  id: AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項可讓與它連接至其他控制項。"
  remarks: "在網頁標記中，或以程式設計方式，可以宣告方式設定屬性值。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual bool AllowConnect { get; set; }
    return:
      type: System.Boolean
      description: "布林值，指出連接是否可以形成與控制項。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  id: AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出使用者是否可以修改<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>由一或多個提供透過使用者介面 (UI) 控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>控制項。"
  remarks: "若要允許使用者編輯<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，AllowEdit 屬性必須設為`true`（預設值），和頁面的顯示模式必須處於編輯模式。</xref:System.Web.UI.WebControls.WebParts.WebPart> 顯示模式都由欄位<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 在此案例中的模式是<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 如需詳細資料頁面會顯示模式，以及如何變更它們，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>類別概觀。</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       當 AllowEdit 屬性設定為`false`編輯選項以宣告方式或以程式設計的方式，會限制。 只有在頁面的版面配置的變更可能的編輯作業，使用<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>控制項或透過自訂來啟用其他基本作業<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制項。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>       如需範例，會使用<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制項從 Web 組件控制項設定，並示範如何啟用編輯自訂的 Web 組件控制項，請參閱[逐步解說︰ 建立 Web 組件頁面](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.EditorPart>      > [!IMPORTANT] > AllowEdit 屬性對控制項的行為造成的影響也會受到目前個人化範圍的網頁上，以及該頁面上的控制項，個別的 Web 組件。 如需詳細資訊，請參閱[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](../Topic/Web%20Parts%20Personalization%20Overview.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowEdit property for a Web Parts control, so that the control cannot be edited. This example assumes the use of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowEdit=\"false\"` attribute. Although `true` is the default, the attribute has been set to `false` for the purposes of this example. Load the page in a browser and use the **Display Modes** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and note that the edit verb is missing, because you disabled editing on the control.  \n  \n [!code-vb[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_2.aspx)]\n [!code-cs[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_2.aspx)]"
  syntax:
    content: public virtual bool AllowEdit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項都可以是修改過，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  id: AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出是否允許使用者隱藏<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "AllowHide 屬性會決定使用者是否可以修改<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 在預設情況下，屬性值時`true`，編輯控制項時，使用者可以變更值。 根據預設，未隱藏控制項及其<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>屬性值是`false`。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 當<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項正在編輯中，如果使用者選取核取方塊，以隱藏控制項 (將<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>屬性`true`)，控制項將不再顯示頁面回到瀏覽模式時。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       隱藏的控制項是不同的關閉的控制項，因為<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>屬性具有 Web 組件控制項集合內的不同意義。</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 關閉的控制項也不會轉譯在頁面上，並不會參與頁面生命週期事件。 相較之下，而隱藏<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項不會對使用者顯示，，仍然會轉譯在網頁上，仍然會包含在區域時，便可以維持連線與其他<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項做為 Web 組件的應用程式的一部分。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowHide property for a custom Web Parts control, so that the custom control cannot be hidden by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowHide#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowHide#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowHide=\"false\"` attribute, which prevents a user who is editing the control from being able to hide it. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control and click the edit verb. As the edit user interface (UI) is displayed, you can see that the UI to edit the <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> property is now disabled, which occurred because you set the AllowHide property value to `false`.  \n  \n [!code-cs[WebParts_WebPart_AllowHide#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowHide#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_2.aspx)]"
  syntax:
    content: public virtual bool AllowHide { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項都可以是隱藏的否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  id: AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出使用者是否可以最小化<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "AllowMinimize 屬性中，如果設定為`false`，防止使用者的最小化控制項不會出現在控制項的標題列中最小化控制項，以及使用者介面 (UI)。 在 Web 組件詞彙中，當 AllowMinimize 屬性設定為`false`，最小化動詞命令未出現在控制項的動詞命令功能表。       當使用者將控制項降到最低時，它會減少到顯示中只有部分控制項的標題列和標題的最小區域控制項的大小。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowMinimize property for a custom Web Parts control, so that the control cannot be minimized by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowMinimize=\"false\"` attribute, which hides the minimize verb in the <xref:System.Web.UI.WebControls.WebParts.WebPart> control's verbs menu, and prevents a user from being able to minimize the control. Load the page in a browser, and click the verbs menu on the <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The minimize verb, which would normally be present on the verbs menu, is hidden because you disabled it in the declarative markup for the control.  \n  \n [!code-cs[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_409_1.aspx)]\n [!code-vb[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_409_1.aspx)]"
  syntax:
    content: public virtual bool AllowMinimize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項都可以是最小化，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  id: AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出使用者是否可以移動<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制之間<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "當 AllowZoneChange 屬性是`true`，和網頁可讓版面配置的變更 （例如編輯或設計模式） 的顯示模式中，使用者可以變更頁面配置將控制項移到另一個<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>頁面上的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 如果屬性設定為`false`，無法在區域之間移動控制項，但仍然可以在其目前的區域內移動。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowZoneChange property for a custom Web Parts control, so that an end user cannot move the control to a different zone. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_1.ascx)]\n [!code-cs[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_1.ascx)]  \n  \n In the declarative markup for the Web Page, on the second `<aspSample:TextDisplayWebPart>` element, note the `AllowZoneChange=\"false\"` attribute. At run time, an end user could drag the first control into **WebPartZone2**, but could not do the same with the second control. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to design mode. Try to drag each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls into another zone, and note the different behavior based on the values of their AllowZoneChange properties.  \n  \n [!code-cs[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_2.aspx)]"
  syntax:
    content: public virtual bool AllowZoneChange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項可以移動之間區域; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  id: AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定任意字串，以判斷是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>授權控制項加入至頁面。"
  remarks: "Web 組件控制項集合未實作任何 AuthorizationFilter 屬性的預設行為。 不過，提供屬性，讓您可以將任意字串值指派給自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項; 要檢查的這個屬性可以<xref:System.Web.UI.WebControls.WebParts.WebPartManager>期間控制其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>事件，以判斷控制項是否可以加入至頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       在某些情況下，AuthorizationFilter 屬性可能使用 ASP.NET 角色管理員功能，因此，如果使用者隸屬於特定角色，而且 AuthorizationFilter 屬性的字串值符合某些開發人員所設定的條件，然後加入控制項，可以。 這個方法可讓開發人員建立的角色和其他指定的授權條件的組合為基礎的自訂檢視。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the AuthorizationFilter property. It shows how to set a custom method handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page code, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. This method checks whether the controls on the page have their AuthorizationFilter property value set to `admin`, and if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the AuthorizationFilter property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_588_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_588_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example that does not use roles).  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: public virtual string AuthorizationFilter { get; set; }
    return:
      type: System.String
      description: "字串，授權將控制項加入至 Web 網頁。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定表示控制項的目錄中的 Web 組件控制項之影像的 URL。"
  remarks: "個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the CatalogIconImageUrl property for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that an image appears with the control in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_1.ascx)]\n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_1.ascx)]  \n  \n In the declarative markup of the Web page, note the `<asp:CatalogZone>` element. Nested within it are several elements, including an `<aspSample:TextDisplayWebPart>` element. This set of elements enables the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to appear in a catalog. In the markup for the `<aspSample:TextDisplayWebPart>` element, notice that the `CatalogIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to catalog mode. Then use the catalog user interface (UI) to add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page.  \n  \n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_2.aspx)]\n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_2.aspx)]"
  syntax:
    content: public virtual string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "字串，表示用來代表控制項的目錄中之影像的 URL。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "內部驗證系統判定 URL 可能包含指令碼攻擊。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  id: ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定組件控制項是否處於最小化或正常狀態。"
  remarks: "組件控制項 ChromeState 屬性值可以是一般或最小化。 的<xref:System.Web.UI.WebControls.WebParts.WebPart>類別覆寫基底屬性，讓使用者可以個人化它。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如需使用這個屬性的程式碼範例，請參閱基底<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  id: ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定框架 Web 組件控制項的框線類型。"
  remarks: "組件控制項<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>屬性會決定哪種框線圍繞控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 選項包括，顯示僅顯示標題、 只框線、 標題和框線，或預設選項的值會直接使用<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>       的<xref:System.Web.UI.WebControls.WebParts.WebPart>類別覆寫基底屬性，讓使用者可以個人化它。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如需使用這個屬性的程式碼範例，請參閱基底<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值不是其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  id: ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得要顯示給使用者，如果在連線程序期間發生錯誤的錯誤訊息。"
  remarks: "ConnectErrorMessage 屬性的內容是由 Web 組件控制項集合內部提供。"
  syntax:
    content: public string ConnectErrorMessage { get; }
    return:
      type: System.String
      description: "字串，包含錯誤訊息。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "傳回的自訂集合<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>可以用來編輯的控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制會在編輯模式時。"
  remarks: "開發人員可以使用這個方法建立自訂的執行個體<xref:System.Web.UI.WebControls.WebParts.EditorPart>他們想要關聯的控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> 當使用者按一下編輯動詞命令時，呼叫方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > 的任何新執行個體<xref:System.Web.UI.WebControls.WebParts.EditorPart>中這個方法會建立控制項的值必須是指派給它的 ID 屬性，才能新增到<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>集合。</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       如需使用 CreateEditorParts 方法的程式碼範例，請參閱<xref:System.Web.UI.WebControls.WebParts.EditorPart>類別概觀。</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> ，其中包含自訂<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>與相關聯控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定簡短片語，摘要說明部分控制項的功能，以用於工具提示和組件控制項的目錄。"
  remarks: "Description 屬性通常是使用提供的組件的控制項，以及組件控制項標題列中的工具提示的清單的類別目錄中的字串。 當您將滑鼠指標置於組件控制項的標題列中的標題文字，描述屬性的內容會出現在工具提示。 工具提示文字的值從建立<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>屬性，後面接著連字號，後面接著描述屬性值。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>       如需使用這個屬性的程式碼範例，請參閱基底<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public override string Description { get; set; }
    return:
      type: System.String
      description: "字串，簡要摘要說明部分控制項的功能。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  id: Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定內容流動控制項內的水平方向。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPart>類別覆寫基底屬性值讓端點使用者個人化的屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.ContentDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ContentDirection&quot;> </xref> ，指出水平方向內容流動。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  id: DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得字串，其中包含實際的標題列中顯示完整的標題文字<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項執行個體。"
  remarks: "DisplayTitle 屬性會傳回目前的值，或是<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>屬性，或如果此控制項有沒有標題，導出值。</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 計算的值包含未命名的控制項，可當地語系化的資源字串，加上數字 （如果有多個區域中的控制項），根據區域中控制項的索引。       自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制 where<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>已覆寫屬性來傳回字串值來做為子標題、 DisplayTitle 屬性就會產生完整的標題的副標題與串連。</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       DisplayTitle 屬性值也可做為使用者控制項的標題列上將滑鼠指標時，會出現工具提示的一部分。 DisplayTitle 值，後面接著連字號，後面接著控制項的值包含完整的工具提示<xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>"
  syntax:
    content: public string DisplayTitle { get; }
    return:
      type: System.String
      description: "字串，表示完整顯示控制項的標題。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  id: ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定是否全部，某些項目，或完全沒有<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>可以匯出控制項的屬性。"
  remarks: "根據預設，<xref:System.Web.UI.WebControls.WebParts.WebPart>不能匯出控制項，而且它的 ExportMode 屬性設定為<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart> 若要啟用匯出所有控制項的內容，設定至<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> ExportMode 值 若要匯出只有某些屬性，同時防止匯出的屬性包含機密資料，設定至<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>屬性的值       若要匯出的屬性值描述<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項中，屬性必須也標記為`Personalizable`屬性的原始碼的中繼資料中的屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!NOTE] > 若要啟用您的應用程式的 Web.config 檔案中包含 Web 組件控制項之 Web 應用程式匯出功能，您必須加入至屬性`<webParts>`內的項目`<system.web>`區段中的，如同下列標記。   >> `<webParts  enableExport=&quot;true&quot;>` >>`</webParts>`無法設定此屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the ExportMode property. Note that for the export code example to work, you must also update your Web.config file by adding the attribute `enableExport=\"true\"` to the `<webParts>` element, as indicated in the Remarks section.  \n  \n The first part of this example contains the code for a control named `TextDisplayWebPart`. This control is the same as the custom control that is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it adds a `Personalizable` attribute to the `TextDisplayWebPart.ContentText` property so the property can be exported. Note that the attribute declaration includes a value of `true` for the `isSensitive` parameter, meaning that the property is marked as sensitive data for export purposes. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_ExportMode#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_1.vb)]\n [!code-cs[WebParts_WebPart_ExportMode#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the declarative markup, the ExportMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, meaning that even properties with sensitive values will be exported.  \n  \n [!code-cs[WebParts_WebPart_ExportMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_2.aspx)]\n [!code-vb[WebParts_WebPart_ExportMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_2.aspx)]  \n  \n Load the Web page in a browser, and on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, click the export verb and follow the instructions to export a description file containing the control's state and property data."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartExportMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;></xref>值。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已載入的控制項和控制項的個人化範圍會設定為<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationScope&quot;></xref>範圍。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  id: HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項有與其相關聯的任何共用的個人化資料。"
  remarks: "這個屬性是指個人化資料中所設定在控制項上共用的範圍，這表示所有使用者會都看到的個人化資料。"
  syntax:
    content: public bool HasSharedData { get; }
    return:
      type: System.Boolean
      description: "布林值，指出控制項是否已共用的個人化資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  id: HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項有與其相關聯的任何使用者個人化資料。"
  remarks: "這個屬性指向自訂的個人化資料使用者專屬的-也就是說，由控制項上的使用者只看到該使用者的特定設定。"
  syntax:
    content: public bool HasUserData { get; }
    return:
      type: System.Boolean
      description: "布林值，指出控制項是否有任何使用者個人化資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  id: Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定區域的高度。"
  remarks: "Internet Explorer 轉譯模式可能會影響高度<xref:System.Web.UI.WebControls.WebParts.WebPart>控制和包含該區域的高度</xref:System.Web.UI.WebControls.WebParts.WebPart> Internet Explorer 中相容性模式 （回溯相容於舊版瀏覽器） 或標準模式中，呈現網頁 (取決於是否存在`DOCTYPE`頁面中的宣告)。 這些模式的相關資訊，請參閱 DHTML [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175)屬性。       當 Internet Explorer 會呈現標準模式中的頁面時，在某些情況下它可能未調整儲存格大小在資料表中，即使是儲存格的 HTML 標記`<td height=&quot;100%&quot;>`。 如此一來，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項和其包含的區域會轉譯，讓控制項執行自動縮放以內部網路區域的全部高度。</xref:System.Web.UI.WebControls.WebParts.WebPart>       控制項處於標準模式 Internet Explorer 時，不會呈現要延伸到其完整的高度，在下列情況:-的區域時<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>屬性設定為<xref:System.Web.UI.WebControls.Orientation>和您在區域上明確設定高度。</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 若要啟用控制項填滿區域的全部高度，請勿指定水平方向的區域的高度。      -當區域<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>屬性設定為<xref:System.Web.UI.WebControls.Orientation>且未明確設定的區域，或包含的控制項的高度。</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 若要啟用控制項填滿區域的全部高度，請在垂直方向的區域中設定或控制項的區域的高度。"
  example:
  - "The following code example demonstrates the rendering issue that affects the height of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  To demonstrate this issue, you must run the page in Internet Explorer.  \n  \n Note that the zone's orientation is set to horizontal, and that the height of the zone and the controls within it is not set explicitly.  The result is that in the <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, the shorter <xref:System.Web.UI.WebControls.WebParts.WebPart> control does not stretch to the height of the zone upon rendering.  However, if you remove the `DOCTYPE` declaration from the page and run the page again, the issue does not occur, because now the browser will not render the page in standards mode.  \n  \n [!code-vb[WebParts_WebPart_Height#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_579_1.aspx)]\n [!code-cs[WebParts_WebPart_Height#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_579_1.aspx)]  \n  \n To see how the workaround (described in the Remarks section) works, try adding a `height` attribute to the `<asp:webpartzone>` element, while keeping the `DOCTYPE` declaration in the page.  You can use the following code to add the attribute to the tag:  \n  \n `Height=\"200px\"`  \n  \n Run the page, and now both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls stretch to fill the explicitly declared height of the zone.  \n  \n You can also experiment with this code example to observe the height-related rendering issue in the other scenario, which occurs when the zone's <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> is set to <xref:System.Web.UI.WebControls.Orientation>.  Remove the existing `LayoutOrientation` attribute and its value from the `<asp:webpartzone>` element, which will cause the zone's orientation to revert to the default vertical orientation.  Set the height attribute on the `<asp:webpartzone>` element to 200 pixels, as you did above, and run the page.  The zone's height looks too large, and the controls are not sized proportionately to the zone's height.  Now remove the height attribute and run the page again.  The controls now render relative to the height of the zone."
  syntax:
    content: public override System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>物件，表示的高度<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZone&quot;> </xref>。 預設類型<xref href=&quot;System.Web.UI.WebControls.Unit&quot;></xref>所示為像素，<xref:System.Web.UI.WebControls.Unit.Type*>屬性。</xref:System.Web.UI.WebControls.Unit.Type*>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  id: HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定用來顯示的說明內容的使用者介面 (UI) 的型別<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "若要判斷瀏覽器顯示控制項的說明內容的方式使用 HelpMode 屬性。 下表列出各種說明模式的影響，在瀏覽器上當說明 內容<xref:System.Web.UI.WebControls.WebParts.WebPart>顯示控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      |說明模式 |瀏覽器的行為 |  |---------------|----------------------|  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|開啟另一個瀏覽器視窗中，如果瀏覽器具備此能力。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 使用者必須先關閉視窗再傳回給 Web 組件頁面。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|開啟另一個瀏覽器視窗中，如果瀏覽器具備此能力。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 使用者沒有關閉視窗後再傳回至 Web 網頁。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>|將取代 Web 組件中的網頁瀏覽器視窗。 |      無法設定此屬性的主題或樣式表主題。</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpMode property to display Help for a control in the same browser window. The first part of this example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the HelpMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1121_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1121_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartHelpMode
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定的值不是其中一個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  id: HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定的說明檔的 URL <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控制項。"
  remarks: "若要啟用以說明動詞的動詞命令功能表中的動詞命令功能表<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您必須提供 HelpUrl 屬性值。</xref:System.Web.UI.WebControls.WebParts.WebPart> 在瀏覽器中顯示的說明內容的方式取決於值<xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpUrl property. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the HelpUrl property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1034_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1034_1.aspx)]"
  syntax:
    content: public virtual string HelpUrl { get; set; }
    return:
      type: System.String
      description: "表示 URL 的說明檔的字串。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "內部驗證系統判定 URL 可能包含指令碼攻擊。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  id: Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>網頁上顯示控制項。"
  remarks: "A<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項是隱藏的仍會留在其區域中，實際上會轉譯在其頁面上，並參與頁面生命週期階段例如`PreRender`階段，即使在瀏覽器中看不到。</xref:System.Web.UI.WebControls.WebParts.WebPart> 這點不同於<xref:System.Web.UI.WebControls.WebParts.WebPart>已關閉，因為已關閉的控制項根本沒有呈現在頁面上，但使用者看不到，雖然隱藏的控制項轉譯和 Web 組件的應用程式中作用中的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> Web 組件控制項集合會隱藏<xref:System.Web.UI.WebControls.WebParts.WebPart>藉由設定其階層式樣式表 (CSS) 樣式的值控制`display:none`。</xref:System.Web.UI.WebControls.WebParts.WebPart>       即使控制項的 Hidden 屬性設定為`true`，如果目前的顯示模式，在頁面可讓要顯示隱藏的控制項，仍會顯示控制項。 例如，編輯模式可讓要顯示隱藏的控制項，以便使用者可以編輯它們。 在某些顯示模式顯示隱藏的控制項時，控制項的標題會顯示，指出控制項處於隱藏狀態的字串。       當上的隱藏屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制設為  `false`、 預設值、 在頁面上顯示的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 請注意，如果<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>屬性設定為`false`，不允許使用者編輯的隱藏屬性值。</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates the use of the Hidden property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that in the Web page, in the declarative markup for the `<aspSample:TextDisplayWebPart>` element, the `Hidden` attribute value is set to `true`. The `TextDisplayWebPart` control will not appear if the page is loaded in a browser. However, the control is still present on the page and in its zone, and it still could participate in connections with other <xref:System.Web.UI.WebControls.WebParts.WebPart> controls if you created those connections.  \n  \n [!code-cs[WebParts_WebPart_Hidden#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_207_1.aspx)]\n [!code-vb[WebParts_WebPart_Hidden#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_207_1.aspx)]"
  syntax:
    content: public virtual bool Hidden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項是顯示在網頁上，否則<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  id: ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定錯誤訊息，如果發生錯誤則會使用當<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制匯入。"
  remarks: "ImportErrorMessage 屬性可讓您設定當使用者嘗試將組件控制項的說明檔案匯入 Web 組件控制項的類別目錄時，發生錯誤時顯示的自訂錯誤訊息。 您可以設定屬性，以宣告方式在<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，請加入`ImportErrorMessage`屬性的控制項，並將錯誤訊息字串指派給它的開頭標記內</xref:System.Web.UI.WebControls.WebParts.WebPart> 您也可以透過程式設計方式設定屬性值。       如需完整的程式碼範例，示範如何匯出及匯入。Web 組件描述檔案的<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，其中包括使用 ImportErrorMessage 屬性，請參閱<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別。</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual string ImportErrorMessage { get; set; }
    return:
      type: System.String
      description: "字串，包含錯誤訊息。 預設值是由 Web 組件控制項集合所提供的標準錯誤訊息。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  id: IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項在 Web 組件頁面上目前已關閉。"
  remarks: "A<xref:System.Web.UI.WebControls.WebParts.WebPart>已關閉的控制項不會轉譯頁面上，不會參與網頁事件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 不過，它由 Web 組件應用程式頁面類別目錄中維護，而且可以加入至網頁的使用者提供適當的使用者介面 (UI)。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "布林值，指出控制項是否已關閉。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  id: IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項所共用，也就是說，它可見的 Web 組件頁面的所有使用者。"
  remarks: "共用的 Web 組件控制項使用者都可以看到所有的網頁。 共用控制的相反是每個使用者控制項，這是特定使用者只能看見該控制項加入至頁面的使用者。       如果使用者共用的個人化範圍中檢視網頁時，會加入一個動態控制項，控制項將會共用。 如果控制項已加入使用者個人化範圍的使用者時，該控制項 IsShared 屬性值將是`false`。       如需有關共用和每個使用者控制項，請參閱[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates the use of the IsShared property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n When you load the Web page in a browser and click the **Check Sharing** button, the code checks the IsShared property on the `TextDisplayWebPart` control, and the value of the property is `true`, because the control is referenced as a static control in the declarative markup of the page.  \n  \n [!code-cs[WebParts_WebPart_IsShared#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_940_1.aspx)]\n [!code-vb[WebParts_WebPart_IsShared#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_940_1.aspx)]"
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項已共用使用者可見性，在網頁上; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  id: IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項是獨立的這表示它不包含在<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  syntax:
    content: public bool IsStandalone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項並未包含在<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  id: IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項是靜態的控制項，這表示控制項是在宣告的 Web 組件頁面的標記並不以程式設計方式加入至頁面。"
  remarks: "靜態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項是在 Web 組件頁面標記中宣告的。</xref:System.Web.UI.WebControls.WebParts.WebPart> 這與動態相反<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，這以程式設計方式加入 或由使用者控制從選取類別目錄的控制項在執行階段。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "布林值，指出控制項是否為靜態。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  id: OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "讓衍生類別，以提供自訂時處理<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制已關閉 Web 組件頁面。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別包含任何實作。</xref:System.Web.UI.WebControls.WebParts.WebPart> 衍生<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以覆寫方法，如果提供的自訂處理控制項關閉時所需。</xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制自動叫用的 OnClosing 方法，如果您提供的實作在衍生類別。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual void OnClosing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  id: OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "讓衍生類別，以提供自訂時處理<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>開始或結束處理序連接到其他控制項的控制項。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別包含任何實作。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnConnectModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  id: OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "讓衍生類別，以提供自訂時處理<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項永遠會從 Web 組件頁面移除。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別包含任何實作。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnDeleting (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  id: OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "讓衍生類別，以提供自訂時處理<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項是進入或離開編輯模式。"
  remarks: "中的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別包含任何實作。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnEditModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "設定旗標，指出個人化資料已經變更的目前<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項執行個體。"
  remarks: "SetPersonalizationDirty 方法設定旗標，表示，已變更控制項狀態資料 （個人） 上<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，而且<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項因此需要保存的長期儲存到個人化資料。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       通常<xref:System.Web.UI.WebControls.WebParts.WebPartManager>個人化變更保存在<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，而不需要呼叫 SetPersonalizationDirty 方法的開發人員。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 但有兩種情況下，開發人員需要呼叫這個方法。 第一個案例中是 HTTP 時變更控制項狀態資料時`GET`網頁要求。 根據預設，控制項狀態資料變更期間`GET`要求不會保存 （基於安全性目的）。 但 SetPersonalizationDirty 方法可用來保存合法的個人化變更<xref:System.Web.UI.WebControls.WebParts.WebPart>控制在此情況下。</xref:System.Web.UI.WebControls.WebParts.WebPart>       呼叫 SetPersonalizationDirty 方法的第二個情況時發生 HTTP`POST`網頁要求。 如果<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項具有複雜可個人化的屬性 (例如屬性，其中包含<xref:System.Collections.ArrayList>物件)，以及在這些屬性的控制項狀態資料個人化期間`POST`要求時，開發人員必須先呼叫 SetPersonalizationDirty 方法，以確保所做的變更會保存。</xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  id: SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "設定旗標，表示位於指定之伺服器控制項的已變更個人化資料<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "SetPersonalizationDirty 方法具有相同目的<xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName>方法，也就是設定旗標，表示控制項狀態資料已變更 （個人） 伺服器控制項期間 HTTP`GET`要求。</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName> 這些方法之間的差異是 SetPersonalizationDirty 方法用於伺服器控制項，不會繼承自<xref:System.Web.UI.WebControls.WebParts.WebPart>類別，但位於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>參與 Web 組件的應用程式的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public static void SetPersonalizationDirty (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>的個人化資料已經變更。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "中的物件<code> control </code>參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "控制項衍生自<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>。 衍生自的<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>應該使用受保護<xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>方法而。</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有與控制項相關聯的頁面<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得字串，就會與串連<xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>屬性值，以形成完整的標題<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>"
  remarks: "（選擇性） 使用副標題屬性，來傳回您的自訂標準副標題字串<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，將會附加至控制項的標題。</xref:System.Web.UI.WebControls.WebParts.WebPart>       如果您提供值的子標題中的屬性自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，Web 組件控制項集合會自動將它附加到的值<xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>屬性，以建立完整的標題控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to provide a subtitle for instances of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n The first part of this example contains the code for a custom control named `TextDisplayWebPart`. This control is the same as the custom control which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it also overrides the Subtitle property to provide a standard subtitle containing a fictitious company name for instances of the custom control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Subtitle#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_1.cs)]\n [!code-vb[WebParts_WebPart_Subtitle#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_1.vb)]  \n  \n The second part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, the control's title bar text includes the title assigned to the control in the declarative markup, a hyphen separator, and the value of the custom subtitle from the `TextDisplayWebPart` control.  \n  \n [!code-vb[WebParts_WebPart_Subtitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_2.aspx)]\n [!code-cs[WebParts_WebPart_Subtitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_2.aspx)]"
  syntax:
    content: public virtual string Subtitle { get; }
    return:
      type: System.String
      description: "做為控制項的子字串。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定組件控制項的標題。"
  remarks: "如果開發人員會將值指派給 Title 屬性，則該值會判斷所有 （或至少一部分） 控制項的標題列中的文字。 標題文字也會顯示為工具提示文字的一部分時，您將滑鼠指標置於的標題列<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項或出現在其他伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZone>區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart>       控制項的標題列中顯示的完整文字也受到<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 如果該屬性指派給它的值，此值就會串連至標題。 如果沒有值指派給 Title 屬性，則會顯示導出的標題。 開發人員可以在任何時間點，擷取中顯示的實際、 總數文字<xref:System.Web.UI.WebControls.WebParts.WebPart>所取得的值的控制項的標題列<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       標題文字的樣式由<xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>屬性包含組件控制項的區域。</xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>       如需示範如何使用基底屬性的程式碼範例，請參閱<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>"
  syntax:
    content: public override string Title { get; set; }
    return:
      type: System.String
      description: "字串，表示控制項標題的一部分。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定用來代表控制項的標題列中的 Web 組件控制項之影像的 URL。"
  remarks: "個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleIconImageUrl property for a custom Web Parts control, so that the control appears with an image in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup of the Web page, note the `<aspSample:TextDisplayWebPart>` element. Its `TitleIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser, and if you provided a legitimate URL to an image, the image appears in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_186_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_186_1.aspx)]"
  syntax:
    content: public virtual string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "字串，表示用來在其標題列控制項之影像的 URL。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "內部驗證系統判定 URL 可能包含指令碼攻擊。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定相關的補充資訊的 URL <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控制項。"
  remarks: "當您將 URL 指派給 TitleUrl 屬性時，控制項的標題會變成控制項的補充資訊的連結。 當頁面顯示模式，其中可以拖曳控制項，例如設計、 編輯或類別目錄的模式，就不會轉譯 URL。       無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute>       個人化範圍，這個屬性會設定為<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>，而且只能由授權的使用者可以修改。</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>和[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleUrl property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that the `<aspSample:TextDisplayWebPart>` element contains the `TitleUrl` attribute with a fictitious URL. If you load the page in a browser, the title of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control is now a link to the resource pointed to by the TitleUrl property.  \n  \n [!code-cs[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_574_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_574_1.aspx)]"
  syntax:
    content: public virtual string TitleUrl { get; set; }
    return:
      type: System.String
      description: "字串，表示 URL 的詳細資訊，關於<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "內部驗證系統判定 URL 可能包含指令碼攻擊。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "使控制項追蹤其檢視狀態的變更，以便在物件的預存<xref:System.Web.UI.Control.ViewState*>屬性。</xref:System.Web.UI.Control.ViewState*>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  id: Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得與相關聯的自訂動詞的集合<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "動詞命令是衍生自<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>類別，並提供使用者介面 (UI) 動作，使用者可以在上執行<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 通常動詞命令會在 UI 中以按鈕、 連結或功能表項目表示。 預設情況下，通用 Web 組件動詞命令會出現在下拉式清單動詞命令功能表中每個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項的標題列</xref:System.Web.UI.WebControls.WebParts.WebPart> 沒有開啟、 關閉、 編輯和最小化控制項，以及用於匯出的定義控制項或載入的說明檔的其他指令動詞的標準動詞命令。 因為集合包含只有自訂動詞命令，您建立並傳回所覆寫衍生類別中的這個屬性，這些動詞命令不包含動詞命令集合中。       當您建立自訂動詞命令，並將它們加入動詞集合時，然後您可以存取的動詞命令，以程式設計方式從<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to access the Verbs property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n Load the Web page in a browser. When you click the **Display Verb Count** button, it accesses the Verbs property to get the count of custom verbs for the `TextDisplayWebPart` control, and displays the count in a label. Because no custom verbs have been added to the control in this case, the count is zero.  \n  \n [!code-cs[WebParts_WebPart_Verbs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_673_1.aspx)]\n [!code-vb[WebParts_WebPart_Verbs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_673_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection&quot;> </xref> ，其中包含自訂<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;></xref>物件相關聯<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。 預設值是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項，讓它編輯自訂<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>控制項。"
  remarks: "如果您建立自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，然後也建立相關的自訂<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制項，可讓使用者編輯控制項的執行時間，您必須實作<xref:System.Web.UI.WebControls.WebParts.IWebEditable>介面，其中包括 WebBrowsableObject 屬性。</xref:System.Web.UI.WebControls.WebParts.IWebEditable> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       當<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項進入編輯模式，呼叫 WebBrowsableObject 屬性<xref:System.Web.UI.WebControls.WebParts.EditorZone>控制取得參考的<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，以及啟用自訂<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制項來編輯它。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public virtual object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;所組成的子控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  id: WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>與相關聯控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項執行個體。"
  remarks: "Web 組件頁面一律擁有的單一執行個體<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制追蹤和管理所有其他 Web 組件頁面上的控制項，包括衍生自的基底<xref:System.Web.UI.WebControls.WebParts.WebZone>類別和衍生自基底<xref:System.Web.UI.WebControls.WebParts.Part>類別</xref:System.Web.UI.WebControls.WebParts.Part>的所有組件控制項</xref:System.Web.UI.WebControls.WebParts.WebZone>的所有區域</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       WebPartManager 屬性存在，讓每個<xref:System.Web.UI.WebControls.WebParts.WebPart>與相關聯控制項及其<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，接著，會維護所有的集合<xref:System.Web.UI.WebControls.WebParts.WebPart>在頁面上的控制項及其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>集合。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>相關聯<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  id: Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定 Web 伺服器控制項的寬度。"
  syntax:
    content: public override System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> ，代表控制項的寬度。 預設值是<xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  id: Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>目前包含的區域<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "在 Web 組件控制項集合的架構中，控制項才可以有 Web 組件功能它們作業內的<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 標準<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>網頁上使用的區域是<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 雖然使用者可以在網頁上的不同區域之間移動 Web 組件控制項，控制項的指定執行個體可位於只有一個區域中，一次。 Web 組件控制項，以及其相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，請使用區域屬性以追蹤目前的區域控制項的所在，和一般區域的版面配置和樣式特性套用到包含的所有 Web 組件控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to access the Zone and <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_2.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>目前包含在網頁上的 Web 組件控制項。 如果 Web 組件控制項在頁面上目前已關閉，則傳回值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  id: ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得的索引位置<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項在其區域。"
  remarks: "ZoneIndex 屬性表示 Web 組件控制項的數字的順序 （或序數位置），在其區域，區域中其他控制項的相對位置。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項使用這個屬性來追蹤和管理它的 Web 網頁上的 Web 組件控制項集合。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!IMPORTANT] > 控制項 ZoneIndex 屬性的值會等於相同的控制項內的索引值，您不能假設<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>控制項的內部網路區域的集合。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 控制項的相對通常中 （其值 ZoneIndex），其區域中的索引位置，<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>其區域中，集合將會是不同的值，加入及移除區域的控制項時。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> and ZoneIndex properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the ZoneIndex property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_2.aspx)]"
  syntax:
    content: public int ZoneIndex { get; }
    return:
      type: System.Int32
      description: "控制項在其區域內的數字的順序。 在區域中的第一個控制項的指標值為零。"
  overload: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.Part
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.Part
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.PartChromeState
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeState
  nameWithType: PartChromeState
  fullName: System.Web.UI.WebControls.WebParts.PartChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.PartChromeType
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeType
  nameWithType: PartChromeType
  fullName: System.Web.UI.WebControls.WebParts.PartChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
- uid: System.Web.UI.WebControls.ContentDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContentDirection
  nameWithType: ContentDirection
  fullName: System.Web.UI.WebControls.ContentDirection
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPartExportMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartExportMode
  nameWithType: WebPartExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPartHelpMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartHelpMode
  nameWithType: WebPartHelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartHelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartVerbCollection
  nameWithType: WebPartVerbCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart
  nameWithType: WebPart.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts
  nameWithType: WebPart.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing
  nameWithType: WebPart.OnClosing
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged
  nameWithType: WebPart.OnConnectModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting
  nameWithType: WebPart.OnDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged
  nameWithType: WebPart.OnEditModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPart.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState
  nameWithType: WebPart.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
