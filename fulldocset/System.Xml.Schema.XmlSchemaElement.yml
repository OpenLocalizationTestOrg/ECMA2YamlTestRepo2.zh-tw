### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaElement
  id: XmlSchemaElement
  children:
  - System.Xml.Schema.XmlSchemaElement.#ctor
  - System.Xml.Schema.XmlSchemaElement.Block
  - System.Xml.Schema.XmlSchemaElement.BlockResolved
  - System.Xml.Schema.XmlSchemaElement.Constraints
  - System.Xml.Schema.XmlSchemaElement.DefaultValue
  - System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  - System.Xml.Schema.XmlSchemaElement.ElementType
  - System.Xml.Schema.XmlSchemaElement.Final
  - System.Xml.Schema.XmlSchemaElement.FinalResolved
  - System.Xml.Schema.XmlSchemaElement.FixedValue
  - System.Xml.Schema.XmlSchemaElement.Form
  - System.Xml.Schema.XmlSchemaElement.IsAbstract
  - System.Xml.Schema.XmlSchemaElement.IsNillable
  - System.Xml.Schema.XmlSchemaElement.Name
  - System.Xml.Schema.XmlSchemaElement.QualifiedName
  - System.Xml.Schema.XmlSchemaElement.RefName
  - System.Xml.Schema.XmlSchemaElement.SchemaType
  - System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  - System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  langs:
  - csharp
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
  type: Class
  summary: "代表<xref uid=&quot;langword_csharp_element&quot; name=&quot;element&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C) 所指定的項目從 XML 結構描述。 這個類別是所有物件類型的基底類別，而且用來描述 XML 文件中的項目。"
  remarks: "> [!IMPORTANT]>-請勿使用結構描述從未知或未受信任的來源或位置。 如此一來，將危害您的程式碼的安全性。   >-（包括內嵌結構描述） 的 XML 結構描述是本質上容易遭到阻絕服務攻擊。不接受其在受信任的案例。   >-結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。 請小心不要公開給未受信任的呼叫端的這項資訊。"
  example:
  - "The following example creates the `element` element.  \n  \n [!code-cs[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_2_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaElement Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_2_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaElement : System.Xml.Schema.XmlSchemaParticle'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaParticle
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaParticle.MaxOccurs
  - System.Xml.Schema.XmlSchemaParticle.MaxOccursString
  - System.Xml.Schema.XmlSchemaParticle.MinOccurs
  - System.Xml.Schema.XmlSchemaParticle.MinOccursString
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>類別。"
  syntax:
    content: public XmlSchemaElement ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定<xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref>衍生。"
  remarks: "這個屬性可以包含下列值: |列舉 |描述 |  |----------|-----------------|  |`None`|使用所定義的衍生限制`BlockDefault`屬性結構描述，如果存在的話。 |  |`Empty`|取代此項目沒有限制。 |  |`Substitution`|無法由替代衍生的類型所取代此項目。 |  |`Extension`|無法利用擴充衍生的類型所取代此項目。 |  |`Restriction`|無法由限制衍生的類型所取代此項目。 |  |`All`|`#all`. 無法取代這個項目，不論衍生方法的任何類型。 |      這個屬性不會阻止衍生，但是會防止衍生取代這個執行個體中的類型。 清單和聯集的值不支援`block`屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "用於阻斷類型衍生的屬性。 預設值是<xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得編譯後值<xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "這個值表示如何強制執行型別時`xsi:type`用於執行個體文件。 例如，如果有限制的值，可以使用只有特定的定義的類型，不是型別衍生由限制從特定的已定義型別。       這個屬性可以包含下表中所顯示的值。 預設值是`None`。 這個屬性上不允許清單和聯集的衍生方法。      |列舉 |描述 |  |----------|-----------------|  |`Empty`|取代此項目沒有限制。 |  |`Substitution`|無法由替代衍生的類型所取代此項目。 |  |`Extension`|無法利用擴充衍生的類型所取代此項目。 |  |`Restriction`|無法由限制衍生的類型所取代此項目。 |  |`All`|`#all`. 無法取代這個項目，不論衍生方法的任何類型。 |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "編譯後值<xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref>屬性。 預設值是<xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;></xref>值<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  id: Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得項目上的條件約束的集合。"
  remarks: "傳回集合的項目上的條件約束。 Can be any of `XmlSchemaKey`, `XmlSchemaKeyref`, or `XmlSchemaUnique`."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Constraints { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "條件約束的集合。"
  overload: System.Xml.Schema.XmlSchemaElement.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  id: DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定項目的預設值，如果其內容是簡單類型或項目的內容是<xref uid=&quot;langword_csharp_textOnly&quot; name=&quot;textOnly&quot; href=&quot;&quot;> </xref>。"
  remarks: "`fixed`和`default`屬性互斥。 如果項目包含簡單型別，這個值必須是該類型的有效的值。"
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "項目的預設值。 預設值為 null 參考。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  id: ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>物件，代表項目的類型根據<> *> 或<> *> 元素的值。"
  remarks: "這個屬性是後結構描述驗證資訊集屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaType ElementSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>物件。"
  overload: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  id: ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得的 common language runtime (CLR) 物件是根據<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>或<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>保存編譯後值之項目的<xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "物件可以是<xref:System.Xml.Schema.XmlSchemaDatatype>項目是否有內建的 XML 結構描述型別或<xref:System.Xml.Schema.XmlSchemaSimpleType>項目是否有使用者定義型別。</xref:System.Xml.Schema.XmlSchemaSimpleType> </xref:System.Xml.Schema.XmlSchemaDatatype>       這個屬性是後結構描述驗證資訊集屬性。      > [!IMPORTANT] > ElementType 屬性已經過時的.NET framework 2.0 版中，已被取代<xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>屬性。</xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>"
  syntax:
    content: public object ElementType { get; }
    return:
      type: System.Object
      description: "Common language runtime 物件中。 編譯後值<xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Schema.XmlSchemaElement.ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Final
  id: Final
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref>屬性，指出允許的任何進一步衍生。"
  remarks: "這個屬性可以包含下表中所顯示的值。      |列舉 |描述 |  |----------|-----------------|  |`None`|使用所定義的衍生限制`FinalDefault`屬性結構描述，如果存在的話。 |  |`Empty`|沒有任何限制衍生這個項目。 |  |`Extension`|無法利用擴充衍生這個項目。 |  |`Restriction`|這個項目不能由限制衍生。 |  |`All`|`#all`. 這個項目不能由衍生的任何方法衍生。 |      另請參閱<xref:System.Xml.Schema.XmlSchemaElement>.</xref:System.Xml.Schema.XmlSchemaElement> `Substitution``List`，和`Union`衍生方法不可用於這個屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref>屬性。 預設值是<xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.Final*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  id: FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得編譯後值<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "這個值表示類型的方式限制時透過限制擴充型別。 這個屬性可以包含下列值。      |列舉 |描述 |  |----------|-----------------|  |`Empty`|沒有任何限制衍生這個項目。 |  |`Extension`|無法利用擴充衍生這個項目。 |  |`Restriction`|這個項目不能由限制衍生。 |  |`All`|`#all`. 這個項目不能由衍生的任何方法衍生。 |      替代、 清單和聯集的衍生方法不可用於這個屬性。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "編譯後值<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref>屬性。 預設值是<xref uid=&quot;langword_csharp_FinalDefault&quot; name=&quot;FinalDefault&quot; href=&quot;&quot;></xref>值<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  id: FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定固定的值。"
  remarks: "內容應該要簡單類型或`textOnly`。 `fixed`和`default`屬性互斥。"
  syntax:
    content: public string FixedValue { get; set; }
    return:
      type: System.String
      description: "預先決定且無法變更固定的值。 預設值為 null 參考。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.FixedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Form
  id: Form
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定項目表單。"
  remarks: "預設值是值`elementFormDefault`屬性`schema`包含此項目的項目。 預設值是`Unqualified`。      |列舉 |描述 |  |----------|-----------------|  |`Qualified`|必須以命名空間前置詞限定項目。 |  |`Unqualified`|不需要以命名空間前置詞限定項目。 |      無法設定值，如果包含的項目`schema`項目。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "項目表單。 預設值是&lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName&gt;值。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定表示是否可以使用執行個體文件中元素的資訊。"
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "如果<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，項目不能出現在執行個體文件。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  id: IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定資訊，指出如果<xref uid=&quot;langword_csharp_xsi:nil&quot; name=&quot;xsi:nil&quot; href=&quot;&quot;></xref>執行個體資料可能會發生。 指出是否明確 「 nil 值也可以指派至的項目。"
  remarks: "這適用於項目內容和元素的屬性。"
  syntax:
    content: public bool IsNillable { get; set; }
    return:
      type: System.Boolean
      description: "如果是 nillable <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>，這可讓執行個體的項目具有<xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;></xref>屬性設為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。 <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;> </xref>屬性定義為 XML 結構描述命名空間的一部分執行個體。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.IsNillable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定項目的名稱。"
  remarks: "World Wide Web Consortium (W3C) XML 命名空間規格中所定義的名稱必須是 NCName （無冒號名稱）。 `Name`和`RefName`屬性互斥。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "項目的名稱。 預設值是<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Schema.XmlSchemaElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得指定元素的實際限定的名稱。"
  remarks: "QualifiedName 是名稱，`ref`屬性參考。 項目的 NCName 所組成的限定的名稱。 例如，項目名稱 =&quot;NCName 」，以及用來描述前置詞`targetNamespace`的結構描述。 這個屬性會保留的編譯後值`QualifiedName`屬性。"
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "項目的限定的名稱。 編譯後值<xref uid=&quot;langword_csharp_QualifiedName&quot; name=&quot;QualifiedName&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  id: RefName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定宣告此結構描述中的項目 （或另一個指定的命名空間指示的結構描述） 的參考名稱。"
  remarks: "`RefName`必須是 QName。 `RefName`可以包含命名空間前置詞。 If `RefName` attribute is present, all `complexType`, `simpleType`, `key`, `keyref`, `unique`, `nillable`, `default`, `fixed`, `form`, `block`, and `type` must be absent. 如果`RefName`沒有、 `minOccurs`， `maxOccurs`，和`id`允許。 若要宣告使用現有的項目定義的項目，使用`RefName`屬性來指定現有的項目定義。       無法設定值，如果包含的項目`schema`項目。"
  syntax:
    content: public System.Xml.XmlQualifiedName RefName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "元素的參考名稱。"
  overload: System.Xml.Schema.XmlSchemaElement.RefName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  id: SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定項目的類型。 這可以是複雜類型或簡單類型。"
  remarks: "若要宣告使用現有的項目`simpleType`或`complexType`定義，請使用`SchemaType`屬性來指定現有的類型。 如果`RefName`屬性已存在， `complexType`， `simpleType`， `key`， `keyref`，和`unique`項目和`nillable`， `default`， `fixed`， `form`， `block`，和`SchemaType`屬性不能有。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaType SchemaType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "項目的類型。"
  overload: System.Xml.Schema.XmlSchemaElement.SchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  id: SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定此結構描述或指定的命名空間指示的其他結構描述中定義的內建資料類型的名稱。"
  syntax:
    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "內建資料類型的名稱。"
  overload: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  id: SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得或設定這個項目所取代之項目的名稱。"
  remarks: "此項目必須具有相同的型別或衍生自指定的項目類型的類型。 此值必須是 QName。       無法設定值，如果包含的項目`schema`項目。"
  syntax:
    content: public System.Xml.XmlQualifiedName SubstitutionGroup { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "這個項目所取代之項目的限定的名稱。       選擇性。"
  overload: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaParticle
  isExternal: false
  name: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
- uid: System.Xml.Schema.XmlSchemaElement.Block
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaElement.Final
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
- uid: System.Xml.Schema.XmlSchemaElement.#ctor*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement.XmlSchemaElement
- uid: System.Xml.Schema.XmlSchemaElement.Block*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
- uid: System.Xml.Schema.XmlSchemaElement.Final*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
