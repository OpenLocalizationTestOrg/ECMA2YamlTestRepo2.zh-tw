### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Choices
  id: Choices
  children:
  - System.Speech.Recognition.Choices.#ctor
  - System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  - System.Speech.Recognition.Choices.#ctor(System.String[])
  - System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  - System.Speech.Recognition.Choices.Add(System.String[])
  - System.Speech.Recognition.Choices.ToGrammarBuilder
  langs:
  - csharp
  name: Choices
  nameWithType: Choices
  fullName: System.Speech.Recognition.Choices
  type: Class
  summary: "代表一組替代項目中的語音辨識文法的條件約束。"
  remarks: "選擇物件代表的元件可以有多個值的其中一個片語。 使用這個類別，建立從語音辨識文法時<xref:System.Speech.Recognition.GrammarBuilder>物件。</xref:System.Speech.Recognition.GrammarBuilder>       選擇物件，例如無法表示元件*colorChoice*片語中 」 變更顏色， *colorChoice*&quot;，其中的可接受值*colorChoice* 「 紅色 」 或 「 綠色 」 或&quot;blue&quot;。      > [!NOTE] > 選項物件作為片語中的選擇性元件，建立選項物件，並將它加入<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>物件`minRepeat`和`maxRepeat`分別設定為 0 和 1。</xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName> 無論播放的選擇性元件，可以辨識片語包含選用元件。       選擇類別做為相同的函式`one-of`所定義的 XML 項目[語音辨識文法規格 (SRGS) 1.0 版](http://www.w3.org/TR/speech-grammar/)，類似於<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>類別<xref:System.Speech.Recognition.SrgsGrammar>命名空間。</xref:System.Speech.Recognition.SrgsGrammar> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>       如需定義 語音辨識文法的詳細資訊，請參閱[語音辨識](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919)和[建立 GrammarBuilder 文法](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)。"
  example:
  - "The following example creates a speech recognition grammar for the phrase, \"Set background to *colorChoice*\", where *colorChoice* can be one of the defined colors. The <xref:System.Speech.Recognition.GrammarBuilder> is used to define the constraints for the grammar.  \n  \n```c#  \n  \nprivate Grammar CreateColorGrammar()  \n{  \n  \n  // Create a Choices object that contains a set of alternative colors.  \n  Choices colorChoice = new Choices(new string[] {\"red\", \"green\", \"blue\"});  \n  colorChoice.Add(new string[] {\"cyan\", \"yellow\", \"magenta\"});  \n  \n  // Construct the phrase.  \n  GrammarBuilder builder = new GrammarBuilder(\"Set background to\");  \n  builder.Append(colorChoice);  \n  \n  // Create a grammar for the phrase.  \n  Grammar colorGrammar = new Grammar(builder);  \n  colorGrammar.Name = \"SetBackground\";  \n  \n  return colorGrammar;  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")]

      public class Choices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices()
  nameWithType: Choices.Choices()
  fullName: System.Speech.Recognition.Choices.Choices()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>包含空的替代項目集的類別。"
  remarks: "這個建構函式傳回的替代項目有效，空集合。 您可以加入其他使用任一<xref:System.Speech.Recognition.Choices.Add%2A>方法。</xref:System.Speech.Recognition.Choices.Add%2A>"
  example:
  - "The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder>objects to create a phrase that can be used to recognize speech input such as \"Call Anne on her cell\" and \"Call James on his work phone\". The example uses implicit casts from <xref:System.Speech.Recognition.Choices> and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.  \n  \n```c#  \npublic Grammar CreatePhonePhrase()  \n{  \n  \n  // Create alternatives for female names and add a phrase.  \n  GrammarBuilder females = new Choices(new string[] { \"Anne\", \"Mary\" });  \n  females.Append(\"on her\");  \n  \n  // Create alternatives for male names and add a phrase.  \n  GrammarBuilder males = new Choices(new string[] { \"James\", \"Sam\" });  \n  males.Append(\"on his\");  \n  \n  // Create a Choices object that contains an array of alternative  \n  // GrammarBuilder objects.  \n  Choices people = new Choices();  \n  people.Add(new Choices(new GrammarBuilder[] {females, males}));  \n  \n  // Create a Choices object that contains a set of alternative phone types.  \n  Choices phoneType = new Choices();  \n  phoneType.Add(new string[] { \"cell\", \"home\", \"work\" });  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(\"call\");  \n  gb.Append(people);  \n  gb.Append(phoneType);  \n  gb.Append(new GrammarBuilder(\"phone\"), 0, 1);  \n  \n  return new Grammar(gb);  \n}  \n```"
  syntax:
    content: public Choices ();
    parameters: []
  overload: System.Speech.Recognition.Choices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  id: '#ctor(System.Speech.Recognition.GrammarBuilder[])'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices(GrammarBuilder[])
  nameWithType: Choices.Choices(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Choices(GrammarBuilder[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>陣列，其中包含一或多個從類別<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>物件。"
  remarks: "每個<xref:System.Speech.Recognition.GrammarBuilder>中`alternateChoices`定義一種替代方法。</xref:System.Speech.Recognition.GrammarBuilder> 如果`alternateChoices`是空的陣列，建構函式會傳回空集合的替代項目。 您可以加入其他使用任一<xref:System.Speech.Recognition.Choices.Add%2A>方法。</xref:System.Speech.Recognition.Choices.Add%2A>       建構函式會擲回<xref:System.ArgumentNullException>時`alternateChoices`是`null`或任何陣列項目時`null`。</xref:System.ArgumentNullException>       因為<xref:System.Speech.Recognition.GrammarBuilder>類別會提供支援的隱含轉換<xref:System.Speech.Recognition.Choices>， <xref:System.Speech.Recognition.SemanticResultValue>，和<xref:System.Speech.Recognition.SemanticResultKey>物件加入至<xref:System.Speech.Recognition.GrammarBuilder>情況下，正確地使用轉型，這個建構函式也可用來建立<xref:System.Speech.Recognition.Choices>從這些物件的任何組合的清單物件。</xref:System.Speech.Recognition.Choices> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.SemanticResultKey> </xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.Choices> </xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example uses `Choices` and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for phrases such as, \"Call Anne on her cell\" and \"Call James on his work phone\". The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.  \n  \n```c#  \npublic Grammar CreatePhonePhrase()  \n{  \n  \n  // Create alternatives for female names and add a phrase.  \n  GrammarBuilder females = new Choices(new string[] { \"Anne\", \"Mary\" });  \n  females.Append(\"on her\");  \n  \n  // Create alternatives for male names and add a phrase.  \n  GrammarBuilder males = new Choices(new string[] { \"James\", \"Sam\" });  \n  males.Append(\"on his\");  \n  \n  // Create a Choices object that contains an array of alternative  \n  // GrammarBuilder objects.  \n  Choices people = new Choices();  \n  people.Add(new Choices(new GrammarBuilder[] {females, males}));  \n  \n  // Create a Choices object that contains a set of alternative phone types.  \n  Choices phoneType = new Choices();  \n  phoneType.Add(new string[] { \"cell\", \"home\", \"work\" });  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(\"call\");  \n  gb.Append(people);  \n  gb.Append(phoneType);  \n  gb.Append(new GrammarBuilder(\"phone\"), 0, 1);  \n  \n  return new Grammar(gb);  \n}  \n```"
  syntax:
    content: public Choices (System.Speech.Recognition.GrammarBuilder[] alternateChoices);
    parameters:
    - id: alternateChoices
      type: System.Speech.Recognition.GrammarBuilder[]
      description: "陣列，包含的替代項目集。"
  overload: System.Speech.Recognition.Choices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices(String[])
  nameWithType: Choices.Choices(String[])
  fullName: System.Speech.Recognition.Choices.Choices(String[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "初始化的新執行個體<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>陣列，其中包含一或多個從類別<xref:System.String>物件。</xref:System.String>"
  remarks: "每個<xref:System.String>中`phrases`定義一種替代方法。</xref:System.String> 語音辨識引擎可以使用字串陣列中任何一項目，以配合語音輸入。 如果`phrases`是空的陣列，建構函式會傳回空集合的替代項目。 您可以加入其他使用任一<xref:System.Speech.Recognition.Choices.Add%2A>方法。</xref:System.Speech.Recognition.Choices.Add%2A>       建構函式會擲回<xref:System.ArgumentNullException>時`phrases`是`null`或任何陣列元素為`null`。</xref:System.ArgumentNullException> 建構函式會擲回<xref:System.ArgumentException>陣列中的任何項目是否為空字串 (&quot;&quot;)。</xref:System.ArgumentException>"
  example:
  - "The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for the phrases such as, \"Call Anne on her cell\" and \"Call James on his work phone\". The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.  \n  \n```c#  \npublic Grammar CreatePhonePhrase()  \n{  \n  \n  // Create alternatives for female names and add a phrase.  \n  GrammarBuilder females = new Choices(new string[] { \"Anne\", \"Mary\" });  \n  females.Append(\"on her\");  \n  \n  // Create alternatives for male names and add a phrase.  \n  GrammarBuilder males = new Choices(new string[] { \"James\", \"Sam\" });  \n  males.Append(\"on his\");  \n  \n  // Create a Choices object that contains an array of alternative  \n  // GrammarBuilder objects.  \n  Choices people = new Choices();  \n  people.Add(new Choices(new GrammarBuilder[] {females, males}));  \n  \n  // Create a Choices object that contains a set of alternative phone types.  \n  Choices phoneType = new Choices();  \n  phoneType.Add(new string[] { \"cell\", \"home\", \"work\" });  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(\"call\");  \n  gb.Append(people);  \n  gb.Append(phoneType);  \n  gb.Append(new GrammarBuilder(\"phone\"), 0, 1);  \n  \n  return new Grammar(gb);  \n}  \n```"
  syntax:
    content: public Choices (string[] phrases);
    parameters:
    - id: phrases
      type: System.String[]
      description: "陣列，包含的替代項目集。"
  overload: System.Speech.Recognition.Choices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  id: Add(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Add(GrammarBuilder[])
  nameWithType: Choices.Add(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Add(GrammarBuilder[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "加入陣列，其中包含一或多個<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>替代項目集的物件。"
  remarks: "Because of support for implicit conversion from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects to <xref:System.Speech.Recognition.GrammarBuilder>, these three classes may be added to a <xref:System.Speech.Recognition.Choices> instance as well.  \n  \n If `alternateChoices` is an empty array, this method does not update the set of alternatives.  \n  \n Applications can use both [Add(String\\[\\])](assetId:///M:System.Speech.Recognition.Choices.Add(System.String[])?qualifyHint=False&autoUpgrade=False) and Add to add alternatives to a <xref:System.Speech.Recognition.Choices> object.  \n  \n This method throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or any of the array elements are `null`."
  example:
  - "The following example creates a speech recognition grammar for phrases such as \"Call Anne on her cell\" and \"Call James on his work phone\". The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.  \n  \n```c#  \npublic Grammar CreatePhonePhrase()  \n{  \n  \n  // Create alternatives for female names and add a phrase.  \n  GrammarBuilder females = new Choices(new string[] { \"Anne\", \"Mary\" });  \n  females.Append(\"on her\");  \n  \n  // Create alternatives for male names and add a phrase.  \n  GrammarBuilder males = new Choices(new string[] { \"James\", \"Sam\" });  \n  males.Append(\"on his\");  \n  \n  // Create a Choices object that contains an array of alternative  \n  // GrammarBuilder objects.  \n  Choices people = new Choices();  \n  people.Add(new Choices(new GrammarBuilder[] {females, males}));  \n  \n  // Create a Choices object that contains a set of alternative phone types.  \n  Choices phoneType = new Choices();  \n  phoneType.Add(new string[] { \"cell\", \"home\", \"work\" });  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(\"call\");  \n  gb.Append(people);  \n  gb.Append(phoneType);  \n  gb.Append(new GrammarBuilder(\"phone\"), 0, 1);  \n  \n  return new Grammar(gb);  \n}  \n```"
  syntax:
    content: public void Add (System.Speech.Recognition.GrammarBuilder[] alternateChoices);
    parameters:
    - id: alternateChoices
      type: System.Speech.Recognition.GrammarBuilder[]
      description: "<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref>物件新增到這個<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>物件。"
  overload: System.Speech.Recognition.Choices.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.Add(System.String[])
  id: Add(System.String[])
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Add(String[])
  nameWithType: Choices.Add(String[])
  fullName: System.Speech.Recognition.Choices.Add(String[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "加入陣列，其中包含一或多個<xref:System.String>替代項目集的物件。</xref:System.String>"
  remarks: "Applications can use both Add and [Add(GrammarBuilder\\[\\])](assetId:///M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])?qualifyHint=False&autoUpgrade=False) to add alternatives to a <xref:System.Speech.Recognition.Choices> object.  \n  \n If `phrases` is an empty array, this method does not update the set of alternates.  \n  \n This method throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`. This method throws an <xref:System.ArgumentException> if any element in the array is the empty string (\"\")."
  example:
  - "The following example creates a speech recognition grammar for phrases similar to \"Call Anne on her cell\" and \"Call James on his work phone\". The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.  \n  \n```c#  \npublic Grammar CreatePhonePhrase()  \n{  \n  \n  // Create alternatives for female names and add a phrase.  \n  GrammarBuilder females = new Choices(new string[] { \"Anne\", \"Mary\" });  \n  females.Append(\"on her\");  \n  \n  // Create alternatives for male names and add a phrase.  \n  GrammarBuilder males = new Choices(new string[] { \"James\", \"Sam\" });  \n  males.Append(\"on his\");  \n  \n  // Create a Choices object that contains an array of alternative  \n  // GrammarBuilder objects.  \n  Choices people = new Choices();  \n  people.Add(new Choices(new GrammarBuilder[] {females, males}));  \n  \n  // Create a Choices object that contains a set of alternative phone types.  \n  Choices phoneType = new Choices();  \n  phoneType.Add(new string[] { \"cell\", \"home\", \"work\" });  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(\"call\");  \n  gb.Append(people);  \n  gb.Append(phoneType);  \n  gb.Append(new GrammarBuilder(\"phone\"), 0, 1);  \n  \n  return new Grammar(gb);  \n}  \n```"
  syntax:
    content: public void Add (string[] phrases);
    parameters:
    - id: phrases
      type: System.String[]
      description: "若要新增到這個字串<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>物件。"
  overload: System.Speech.Recognition.Choices.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder
  id: ToGrammarBuilder
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: ToGrammarBuilder()
  nameWithType: Choices.ToGrammarBuilder()
  fullName: System.Speech.Recognition.Choices.ToGrammarBuilder()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "傳回<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>物件與這個<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>物件。"
  remarks: "<xref:System.Speech.Recognition.GrammarBuilder>傳回由這個方法對等項目，其中一個由下列其中一。</xref:System.Speech.Recognition.GrammarBuilder>      -呼叫<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A>與此物件做為參數的建構函式。</xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A>      -使用這個物件至<xref:System.Speech.Recognition.GrammarBuilder>。</xref:System.Speech.Recognition.GrammarBuilder>隱含或明確轉型"
  example:
  - "The following example creates a speech recognition grammar for changing the background color.  \n  \n```c#  \n  \nprivate Grammar CreateColorChoice()  \n{  \n  \n  // Create a Choices object that contains a set of alternative colors.  \n  Choices colorChoice = new Choices(new string[] {\"red\", \"green\", \"blue\"});  \n  \n  // Construct the phrase.  \n  GrammarBuilder gb = new GrammarBuilder();  \n  gb.Append(new Choices(new string[] {\"Set\", \"Change\"}));  \n  gb.Append(\"background to\");  \n  gb.Append(colorChoice.ToGrammarBuilder());  \n  \n  Grammar grammar = new Grammar(gb);  \n  grammar.Name = \"modify background color\";  \n  \n  return grammar;  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();
    parameters: []
    return:
      type: System.Speech.Recognition.GrammarBuilder
      description: "A <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref>符合這<xref href=&quot;System.Speech.Recognition.Choices&quot;></xref>物件。"
  overload: System.Speech.Recognition.Choices.ToGrammarBuilder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.Choices.#ctor
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices()
  nameWithType: Choices.Choices()
  fullName: System.Speech.Recognition.Choices.Choices()
- uid: System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices(GrammarBuilder[])
  nameWithType: Choices.Choices(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Choices(GrammarBuilder[])
- uid: System.Speech.Recognition.GrammarBuilder[]
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder[]
  spec.csharp:
  - uid: System.Speech.Recognition.GrammarBuilder
    name: GrammarBuilder
    nameWithType: GrammarBuilder
    fullName: GrammarBuilder[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Choices.#ctor(System.String[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices(String[])
  nameWithType: Choices.Choices(String[])
  fullName: System.Speech.Recognition.Choices.Choices(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add(GrammarBuilder[])
  nameWithType: Choices.Add(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Add(GrammarBuilder[])
- uid: System.Speech.Recognition.Choices.Add(System.String[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add(String[])
  nameWithType: Choices.Add(String[])
  fullName: System.Speech.Recognition.Choices.Add(String[])
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: ToGrammarBuilder()
  nameWithType: Choices.ToGrammarBuilder()
  fullName: System.Speech.Recognition.Choices.ToGrammarBuilder()
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Choices.#ctor*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices
  nameWithType: Choices.Choices
- uid: System.Speech.Recognition.Choices.Add*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add
  nameWithType: Choices.Add
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: ToGrammarBuilder
  nameWithType: Choices.ToGrammarBuilder
