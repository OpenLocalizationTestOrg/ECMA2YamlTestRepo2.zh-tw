### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "設定自訂實作的角色服務的位置。"
  remarks: "RoleServiceManager 類別會對應到<xref:System.Web.UI.ScriptManager.RoleService%2A>屬性<xref:System.Web.UI.ScriptManager>或<xref:System.Web.UI.ScriptManagerProxy>控制項。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       Web 服務角色可供啟用 AJAX 應用程式使用非同步的 Web 服務呼叫以擷取目前已驗證的使用者角色資訊。 您可以使用 RoleServiceManager 提供替代的實作的角色而不是使用內建的 Web 服務的 Web 服務的路徑。       若要在應用程式中使用的角色服務，您必須啟用它在組態檔中，並宣告頁面中。 如果您使用內建角色 Web 服務，您必須啟用它，但沒有明確宣告頁面中的服務管理員角色。       若要建立自訂的角色服務，您必須實作的 Web 服務，有兩種方法︰`GetRolesForCurrentUser`和`IsCurrentUserInRole`。 這些方法必須有相同的簽章，做為 Web 服務的內建角色的對應方法。       下列範例會顯示必須在自訂安全性角色的 Web 服務類別中實作的基本類別結構。       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]若要使用自訂角色 Web 服務，您可以加入服務以宣告方式在標記中將放入`RoleService`元素內<xref:System.Web.UI.ScriptManager>控制，如下列範例所示。</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```您可以也以程式設計方式設定<xref:System.Web.UI.RoleServiceManager.Path%2A>屬性，以使用自訂角色 Web 服務。</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.RoleServiceManager&quot;></xref>類別。"
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否必須擷取目前登入的使用者角色的清單。"
  remarks: "如果 LoadRoles 屬性設定為`true`，角色的清單擷取<xref:System.Web.UI.RoleServiceManager>類別使用<xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>方法。</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> 清單然後序列化成網頁標記中。      > [!NOTE] > 時 LoadRoles 是`true`，目前已驗證的使用者所屬的所有角色都傳送到瀏覽器。 因為使用者可能會看到角色資訊，這可能會有安全性問題。       LoadRoles 屬性可以指定在<xref:System.Web.UI.ScriptManager>控制項或在相關聯<xref:System.Web.UI.ScriptManagerProxy>控制項。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 如果設為 LoadRoles `true` proxy 執行個體，擷取和加入至頁面的角色清單。 如果是 LoadRoles `false`，角色不會加入至網頁標記。 在此情況下，您可以使用方法來儲存角色資訊在瀏覽器中的記憶體中。"
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果必須擷取角色的清單。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "取得或設定角色服務的路徑。"
  remarks: "如果未設定 Path 屬性，傳回的值為<xref:System.String?displayProperty=fullName>。</xref:System.String?displayProperty=fullName> 在此情況下，ASP.NET 會使用內建驗證對應至下列的內部預設路徑的 Web 服務: ~ / RolesService.svc。 如果您設定為空字串的路徑，或者，就會發生相同問題`null`。       在指定路徑<xref:System.Web.UI.ScriptManager>控制項或在相關聯<xref:System.Web.UI.ScriptManagerProxy>控制項。</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 在設定路徑則<xref:System.Web.UI.ScriptManagerProxy>層級，下列條件都成立:-在控制項階層架構中有多個 proxy 物件，如果路徑沒有要設定每個 proxy 執行個體。</xref:System.Web.UI.ScriptManagerProxy>      -如果路徑明確設定為 proxy 物件，值必須是相同的所有其他設定此屬性的 proxy 物件。 如果您設定在控制項階層架構中，不同的 proxy 物件的不同路徑<xref:System.ArgumentException>擲回例外狀況。</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "自訂的 Web 服務角色的路徑。"
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "在控制項階層架構中設定一個以上唯一路徑。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
