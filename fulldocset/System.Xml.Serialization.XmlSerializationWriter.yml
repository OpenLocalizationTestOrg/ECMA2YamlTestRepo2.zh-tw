### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationWriter
  id: XmlSerializationWriter
  children:
  - System.Xml.Serialization.XmlSerializationWriter.#ctor
  - System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  - System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.EscapeName
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  - System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  - System.Xml.Serialization.XmlSerializationWriter.Namespaces
  - System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.Writer
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  langs:
  - csharp
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter
  type: Class
  summary: "表示抽象類別，用來控制序列化的<xref:System.Xml.Serialization.XmlSerializer>類別。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "在初始化期間，.NET Framework XML 序列化基礎結構，以動態方式產生，並編譯暫存類別衍生自抽象 XmlSerializationWriter 類別的序列化。 XmlSerializationWriter 也序列化的.NET Framework 中實作<xref:System.Web.Services.Discovery.DiscoveryDocument>和<xref:System.Web.Services.Description.ServiceDescription>成 XML 文件的物件。</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       您不應該從 XmlSerializationWriter 衍生類別。 請改為呼叫<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>方法。</xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationWriter : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;></xref>類別。"
  syntax:
    content: protected XmlSerializationWriter ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  id: AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "儲存的實作<xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref>委派和類型，適用於更新的引動過程。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       在初始化期間，.NET Framework XML 序列化基礎結構以動態方式產生並編譯序列化衍生自<xref:System.Xml.Serialization.XmlSerializationWriter>.</xref:System.Xml.Serialization.XmlSerializationWriter>的暫時類別 在此過程中，.NET Framework 會產生寫入方法可實作<xref:System.Xml.Serialization.XmlSerializationWriteCallback>委派。</xref:System.Xml.Serialization.XmlSerializationWriteCallback> 它會讓特定.NET Framework 型別與 XML 資料型別會透過 SOAP 編碼的 XML 序列化，並不是根項目之間的對應。 然後，如有必要，序列化期間會呼叫寫入方法。       您不應該直接建立<xref:System.Xml.Serialization.XmlSerializationWriteCallback>.</xref:System.Xml.Serialization.XmlSerializationWriteCallback>的執行個體       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void AddWriteCallback (Type type, string typeName, string typeNs, System.Xml.Serialization.XmlSerializationWriteCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>的已序列化的物件。</xref:System.Type>"
    - id: typeName
      type: System.String
      description: "已序列化的物件類型的名稱。"
    - id: typeNs
      type: System.String
      description: "已序列化的物件類型的命名空間。"
    - id: callback
      type: System.Xml.Serialization.XmlSerializationWriteCallback
      description: "執行個體<xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref>委派。"
  overload: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  id: CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出未預期的名稱符合 XML 結構描述的項目<xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref>項目宣告。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateChoiceIdentifierValueException (string value, string identifier, string name, string ns);
    parameters:
    - id: value
      type: System.String
      description: "不是有效的名稱。"
    - id: identifier
      type: System.String
      description: "<xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;> </xref>所屬名稱的項目宣告。"
    - id: name
      type: System.String
      description: "項目的預期的本機名稱。"
    - id: ns
      type: System.String
      description: "預期命名空間的項目。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  id: CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出<xref:System.Xml.Serialization.XmlAnyElementAttribute>而其已無效套用至成員，則只有屬於類型的成員<xref href=&quot;System.Xml.XmlNode&quot;> </xref>，或衍生自<xref href=&quot;System.Xml.XmlNode&quot;> </xref>，有效。</xref:System.Xml.Serialization.XmlAnyElementAttribute> </xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "無效的成員表示的物件。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  id: CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出<xref:System.Xml.Serialization.XmlAnyElementAttribute>而其已無效套用至成員，則只有屬於類型的成員<xref href=&quot;System.Xml.XmlNode&quot;> </xref>，或衍生自<xref href=&quot;System.Xml.XmlNode&quot;> </xref>，有效。</xref:System.Xml.Serialization.XmlAnyElementAttribute> </xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>無效。</xref:System.Type>"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  id: CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>表示在寫入陣列，其中 XML 結構描述失敗<xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref>套用項目宣告。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateInvalidChoiceIdentifierValueException (string type, string identifier);
    parameters:
    - id: type
      type: System.String
      description: "正在序列化的型別。"
    - id: identifier
      type: System.String
      description: "名稱<xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref>項目宣告。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  id: CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>無效的列舉值。</xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidEnumValueException (object value, string typeName);
    parameters:
    - id: value
      type: System.Object
      description: "物件，表示無效的列舉。"
    - id: typeName
      type: System.String
      description: "XML 型別名稱。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  id: CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，表示 XML 元素的值不符合列舉型別。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateMismatchChoiceException (string value, string elementName, string enumValue);
    parameters:
    - id: value
      type: System.String
      description: "不是有效的值。"
    - id: elementName
      type: System.String
      description: "具有無效值的 XML 項目名稱。"
    - id: enumValue
      type: System.String
      description: "有效的值。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  id: CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出所應遵循的 XML 結構描述的 XML 項目<xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref>無法處理項目宣告。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownAnyElementException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "無法處理 XML 項目。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  id: CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出要序列化的類型未以有效的方式使用或發現非預期。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "無法序列化類型的物件。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  id: CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "建立<xref:System.InvalidOperationException>，指出要序列化的類型未以有效的方式使用或發現非預期。</xref:System.InvalidOperationException>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "無法序列化的型別。"
    return:
      type: System.Exception
      description: "新建立的例外狀況。"
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  id: EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定值，指出是否<xref:System.Xml.XmlConvert.EncodeName*>方法用來寫入有效的 XML。</xref:System.Xml.XmlConvert.EncodeName*>"
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>方法會將有效的 XML 寫入無效的來源。</xref:System.Xml.XmlConvert.EncodeName%2A> 例如，<xref:System.Data.DataColumn.ColumnName%2A>屬性<xref:System.Data.DataColumn>類別可以包含空格，也就是以 XML 無效。</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>方法讀取編碼的 XML，並將它還原為原始值。</xref:System.Xml.XmlConvert.DecodeName%2A> 不過，<xref:System.Xml.Schema.XmlSchema.Read%2A>方法<xref:System.Xml.Schema.XmlSchema>無法讀取這類編碼的 XML。</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> 在此情況下，將 EscapeName 屬性設定為`false`停用的 XML 編碼方式。"
  syntax:
    content: protected bool EscapeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*>方法會傳回已編碼名稱; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*>"
  overload: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  id: FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "處理 base&64; 位元組陣列。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       而是傳回字串做為其他類似 「 來源 」 方法，比靜態 FromByteArrayBase64 方法會傳回原始`byte[]`來改善效能並節省記憶體的物件。"
  syntax:
    content: protected static byte[] FromByteArrayBase64 (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Base&64;<xref:System.Byte>陣列。</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "做為引數傳入之相同位元組陣列。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  id: FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的字串會從輸入十六進位的位元組陣列。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromByteArrayHex 方法為靜態。"
  syntax:
    content: protected static string FromByteArrayHex (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "要轉譯成字串的十六進位位元組陣列。"
    return:
      type: System.String
      description: "位元組陣列值轉換成字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  id: FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的字串會從輸入<xref:System.Char>.</xref:System.Char>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromChar 方法為靜態。"
  syntax:
    content: protected static string FromChar (char value);
    parameters:
    - id: value
      type: System.Char
      description: "A<xref:System.Char>轉譯成字串。</xref:System.Char>"
    return:
      type: System.String
      description: "<xref:System.Char>值轉換成字串。</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  id: FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的字串會從<xref:System.DateTime>物件。</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromDate 方法為靜態。"
  syntax:
    content: protected static string FromDate (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A<xref:System.DateTime>轉譯成字串。</xref:System.DateTime>"
    return:
      type: System.String
      description: "字串表示法<xref:System.DateTime>顯示日期，但沒有時間。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的字串會從輸入<xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromDateTime 方法為靜態。"
  syntax:
    content: protected static string FromDateTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A<xref:System.DateTime>轉譯成字串。</xref:System.DateTime>"
    return:
      type: System.String
      description: "字串表示法<xref:System.DateTime>，它會顯示日期和時間。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  id: FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生字串所分隔的識別碼，代表已設定的列舉成員所組成。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromEnum 方法為靜態。"
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids);
    parameters:
    - id: value
      type: System.Int64
      description: "列舉值，當做一系列的位元<xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref>作業。"
    - id: values
      type: System.String[]
      description: "列舉型別的名稱值。"
    - id: ids
      type: System.Int64[]
      description: "列舉型別的常數值。"
    return:
      type: System.String
      description: "識別項，其中每一個成員代表設定列舉值清單中分隔的字串所組成。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  id: FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "接受數值列舉值的名稱和列舉值清單列舉常數，並傳回分隔的識別碼，代表已設定的列舉成員所組成的字串。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids, string typeName);
    parameters:
    - id: value
      type: System.Int64
      description: "列舉值，當做一系列的位元<xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref>作業。"
    - id: values
      type: System.String[]
      description: "列舉值。"
    - id: ids
      type: System.Int64[]
      description: "列舉的常數。"
    - id: typeName
      type: System.String
      description: "型別的名稱"
    return:
      type: System.String
      description: "字串，包含分隔的識別碼，其中的每個項目是其中一個位元運算所設定的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  id: FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生的字串會從<xref:System.DateTime>物件。</xref:System.DateTime>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromTime 方法為靜態。"
  syntax:
    content: protected static string FromTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime>，就會轉譯成字串。</xref:System.DateTime>"
    return:
      type: System.String
      description: "字串表示法<xref:System.DateTime>顯示時間，但沒有日期的物件。</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  id: FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取代無效的逸出序列的字元編碼是有效的 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromXmlName 方法為靜態。"
  syntax:
    content: protected static string FromXmlName (string name);
    parameters:
    - id: name
      type: System.String
      description: "要做為 XML 名稱的字串。"
    return:
      type: System.String
      description: "編碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  id: FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取代無效的逸出序列的字元編碼有效的 XML 區域名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>類別所衍生的類別會在內部使用.NET Framework XML 序列化基礎結構內，專供。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromXmlNCName 方法為靜態。"
  syntax:
    content: protected static string FromXmlNCName (string ncName);
    parameters:
    - id: ncName
      type: System.String
      description: "要用做為本機 （非限定） 的 XML 名稱的字串。"
    return:
      type: System.String
      description: "編碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  id: FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將編碼的 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromXmlNmToken 方法為靜態。"
  syntax:
    content: protected static string FromXmlNmToken (string nmToken);
    parameters:
    - id: nmToken
      type: System.String
      description: "要編碼的 XML 名稱。"
    return:
      type: System.String
      description: "編碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  id: FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將編碼以空格分隔的 XML 名稱序列成單一的 XML 名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       FromXmlNmTokens 方法為靜態。"
  syntax:
    content: protected static string FromXmlNmTokens (string nmTokens);
    parameters:
    - id: nmTokens
      type: System.String
      description: "要編碼的 XML 名稱的序列，以空格分隔。"
    return:
      type: System.String
      description: "編碼的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "傳回 XML 限定的名稱，以逸出序列取代無效的字元。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示要寫入的 XML。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.String
      description: "XML 限定的名稱，並以逸出序列取代無效的字元。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "產生可以撰寫為 XML 限定名稱，並以逸出序列取代的無效字元的字串。"
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName, bool ignoreEmpty);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>表示要寫入的 XML。</xref:System.Xml.XmlQualifiedName>"
    - id: ignoreEmpty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示忽略空字串; 中的空格否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "XML 限定的名稱，並以逸出序列取代無效的字元。"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的執行個體<xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref>序列化 SOAP 編碼的 XML 資料的委派。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       在初始化期間，.NET Framework XML 序列化基礎結構以動態方式產生並編譯序列化衍生自<xref:System.Xml.Serialization.XmlSerializationWriter>.</xref:System.Xml.Serialization.XmlSerializationWriter>的暫時類別 在此過程中，.NET Framework 會產生寫入方法可實作<xref:System.Xml.Serialization.XmlSerializationWriteCallback>委派。</xref:System.Xml.Serialization.XmlSerializationWriteCallback> 它會讓特定.NET Framework 型別與 XML 資料型別會使用 SOAP 編碼的 XML 序列化，並不是根項目之間的對應。 然後，如有必要，序列化期間會呼叫寫入方法。       方法是暫時的衍生的類別建立的執行個體和初始化的地方抽象 InitCallbacks 撰寫回呼方法。       您不應該直接建立<xref:System.Xml.Serialization.XmlSerializationWriteCallback>.</xref:System.Xml.Serialization.XmlSerializationWriteCallback>的執行個體       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  id: Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定包含命名空間和前置詞用來產生 XML 文件中的限定的名稱的 XML 限定名稱物件清單。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected System.Collections.ArrayList Namespaces { get; set; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> ，其中包含命名空間和前置詞配對。"
  overload: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "依名稱取得動態產生的組件。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       ResolveDynamicAssembly 方法為靜態。"
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "組件的完整名稱。"
    return:
      type: System.Reflection.Assembly
      description: "動態產生的組件。"
  overload: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  id: TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "序列化的 SOAP 編碼 SOAP 訊息時，僅初始化物件的參考。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`項目，並參考的任何次數以取代項目。 可以序列化為物件追蹤的 TopLevelElement 方法可協助`multiRef`項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void TopLevelElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  id: WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlWriter>物件寫入 XML 屬性具有指定其名稱的任何命名空間。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 屬性的本機名稱。"
    - id: value
      type: System.Byte[]
      description: "位元組陣列形式的 XML 屬性的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlWriter>撰寫 XML 屬性具有指定其名稱的任何命名空間。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 屬性的本機名稱。"
    - id: value
      type: System.String
      description: "做為字串的 XML 屬性的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  id: WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlWriter>物件寫入 XML 屬性。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 屬性的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 屬性的命名空間。"
    - id: value
      type: System.Byte[]
      description: "位元組陣列形式的 XML 屬性的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的 XML 屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 屬性的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 屬性的命名空間。"
    - id: value
      type: System.String
      description: "做為字串的 XML 屬性的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入命名空間前置詞以手動方式提供的 XML 屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string prefix, string localName, string ns, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "若要撰寫命名空間前置詞。"
    - id: localName
      type: System.String
      description: "XML 屬性的本機名稱。"
    - id: ns
      type: System.String
      description: "表示依前置詞的命名空間。"
    - id: value
      type: System.String
      description: "做為字串的 XML 屬性的值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入 XML 節點物件的具名 XML 項目內。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteElementEncoded 方法。"
  syntax:
    content: protected void WriteElementEncoded (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "若要撰寫，可能是 XML 項目子系的 XML 節點。"
    - id: name
      type: System.String
      description: "父 XML 項目寫入本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入之父 XML 項目的命名空間。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性要序列化的物件是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，節點中，如果 XML 項目，符合 XML 結構描述<xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref>項目宣告，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref:System.Xml.XmlWriter>物件寫入<xref href=&quot;System.Xml.XmlNode&quot;></xref>具名的 XML 項目內的物件。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteElementLiteral 方法。"
  syntax:
    content: protected void WriteElementLiteral (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "若要撰寫，可能是 XML 項目子系的 XML 節點。"
    - id: name
      type: System.String
      description: "父 XML 項目寫入本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入之父 XML 項目的命名空間。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性要序列化的物件是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示，節點中，如果 XML 項目，符合 XML 結構描述<xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref>項目宣告，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中寫入指定的限定名稱的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入，使用其前置詞，如果命名空間限定中的項目文字的名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中寫入指定的限定名稱的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入，使用其前置詞，如果命名空間限定中的項目文字的名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中寫入指定的限定名稱的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入，使用其前置詞，如果命名空間限定中的項目文字的名稱。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中寫入指定的限定名稱的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入，使用其前置詞，如果命名空間限定中的項目文字的名稱。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  id: WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "寫入不含命名空間限定性條件之 XML 項目的本機名稱。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  id: WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.Byte[]
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.Byte[]
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.Byte[]
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.Byte[]
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中，寫入具有指定值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 項目的命名空間。"
    - id: value
      type: System.String
      description: "XML 項目的文字值。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  id: WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的主體是空的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEmptyTag (string name);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  id: WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的主體是空的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEmptyTag (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  id: WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入<xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;></xref>項目標記。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  id: WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入<xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;></xref>項目標記。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEndElement (object o);
    parameters:
    - id: o
      type: System.Object
      description: "正在序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  id: WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入<xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref>屬性會出現在 SOAP 編碼<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以由參考多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WriteId (object o);
    parameters:
    - id: o
      type: System.Object
      description: "正在序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入命名空間宣告屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteNamespaceDeclarations (System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "若要宣告 XML 命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入其主體包含有效的 XML 限定的名稱的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullableQualifiedNameEncoded 方法。"
  syntax:
    content: protected void WriteNullableQualifiedNameEncoded (string name, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 項目內的 XML 限定的名稱。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入其主體包含有效的 XML 限定的名稱的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullableQualifiedNameLiteral 方法。"
  syntax:
    content: protected void WriteNullableQualifiedNameLiteral (string name, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 項目內的 XML 限定的名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入包含字串做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullableStringEncoded 方法。"
  syntax:
    content: protected void WriteNullableStringEncoded (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.String
      description: "要寫入的 XML 項目內的字串。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將位元組陣列做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullableStringEncodedRaw 方法。"
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.Byte[]
      description: "要寫入的 XML 項目內的位元組陣列。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入包含字串做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullableStringEncodedRaw 方法。"
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.String
      description: "要寫入的 XML 項目內的字串。"
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "要寫入的 XML 結構描述資料型別名稱<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  id: WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入包含字串做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullableStringLiteral 方法。"
  syntax:
    content: protected void WriteNullableStringLiteral (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.String
      description: "要寫入的 XML 項目內的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將位元組陣列做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullableStringLiteralRaw 方法。"
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.Byte[]
      description: "要寫入的 XML 項目內的位元組陣列。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入包含字串做為主體的 XML 項目。 <xref:System.Xml.XmlWriter>插入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性的字串值是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullableStringLiteralRaw 方法。"
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: value
      type: System.String
      description: "要寫入的 XML 項目內的字串。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  id: WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的 XML 項目<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullTagEncoded 方法。"
  syntax:
    content: protected void WriteNullTagEncoded (string name);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  id: WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的 XML 項目<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       只有當撰寫 SOAP 編碼的 XML，如 SOAP 1.1 規格的第 5 節中所述稱為 WriteNullTagEncoded 方法。"
  syntax:
    content: protected void WriteNullTagEncoded (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  id: WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的 XML 項目<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullTagLiteral 方法。"
  syntax:
    content: protected void WriteNullTagLiteral (string name);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  id: WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的 XML 項目<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       當設定為`true`、 `nil` XML 結構描述執行個體命名空間的屬性 (縮寫`xsi`) 表示 null 值。       撰寫可以在 XML 結構描述文件中定義的常值 XML 時，才呼叫 WriteNullTagLiteral 方法。"
  syntax:
    content: protected void WriteNullTagLiteral (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref>之特定物件的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`<multiRef>`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "物件序列化在目前的 XML 項目或<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>目前的項目所參考的項目。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref>之特定物件的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`<multiRef>`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType);
    parameters:
    - id: n
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "物件序列化在目前的 XML 項目或<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目參考目前的項目。"
    - id: ambientType
      type: System.Type
      description: "儲存物件的型別對應中的型別 (而不是物件類型找不到的直接透過<xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref>作業)。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref>之特定物件的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference);
    parameters:
    - id: n
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "物件序列化在目前的 XML 項目或<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>目前的項目所參考的項目。"
    - id: ambientType
      type: System.Type
      description: "儲存物件的型別對應中的型別 (而不是物件類型找不到的直接透過<xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref>作業)。"
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要直接將物件序列化的 XML 項目，而不是讓項目參考，其中包含資料，另一個項目否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "可包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>之特定物件的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "物件序列化在目前的 XML 項目或<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>項目參考目前的項目。"
    - id: ambientType
      type: System.Type
      description: "儲存物件的型別對應中的型別 (而不是物件類型找不到的直接透過<xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref>作業)。"
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要直接將物件序列化的 XML 項目，而不是讓項目參考，其中包含資料，另一個項目否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性要序列化的物件是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  id: Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定<xref:System.Xml.XmlWriter>，正由<xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;> </xref>。</xref:System.Xml.XmlWriter>"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected System.Xml.XmlWriter Writer { get; set; }
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>類別執行個體所使用。</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Serialization.XmlSerializationWriter.Writer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  id: WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將物件序列化為 SOAP 編碼<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> SOAP 訊息中的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WriteReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  id: WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_multiRef &quot; name=&quot;multiRef &quot; href=&quot;&quot;></xref>之特定物件的項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "正在寫入參考項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入之參考項目的命名空間。"
    - id: o
      type: System.Object
      description: "正在序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "包含參考 SOAP 訊息 XML 項目寫入<xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref>之特定物件的項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP 編碼允許唯一的 XML 項目出現一次為 SOAP 訊息內`multiRef`所識別的項目`id`屬性。 `id`值可以是參考的多次`href`屬性 (或`ref`SOAP 1.2 內的屬性) 的替代項目。       SOAP 編碼為 SOAP 1.1 規格的第 5 節中所述。"
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "正在寫入參考項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入之參考項目的命名空間。"
    - id: o
      type: System.Object
      description: "正在序列化的物件。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性要序列化的物件是否<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  id: WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "其主體中寫入 SOAP 1.2 RPC 結果項目具有指定限定名稱。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       `result` &quot;Http://www.w3.org/2002/12/soap-rpc&quot;命名空間中定義項目。"
  syntax:
    content: protected void WriteRpcResult (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "結果主體區域的名稱。"
    - id: ns
      type: System.String
      description: "結果主體的命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入為 XML 項目使用自訂 XML 格式的物件。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "物件，用於實作<xref:System.Xml.Serialization.IXmlSerializable>使用自訂 XML 格式的介面。</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性如果<xref:System.Xml.Serialization.IXmlSerializable>類別物件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.Serialization.IXmlSerializable>"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "指示<xref href=&quot;System.Xml.XmlNode&quot;></xref>撰寫物件，使用自訂 XML 格式的 XML 項目。"
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable, bool wrapped);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "物件，用於實作<xref:System.Xml.Serialization.IXmlSerializable>使用自訂 XML 格式的介面。</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要寫入<xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref>屬性如果<xref:System.Xml.Serialization.IXmlSerializable>物件是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示忽略撰寫開啟元素標記。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>寫入開頭項目標記。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  id: WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入 XML 宣告，如果寫入器定位於 XML 文件的開頭。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartDocument ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  id: WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  id: WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有針對指定的命名空間，，寫入具有前置詞的項目名稱否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  id: WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "以 XML 元素所序列化的物件。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "以 XML 元素所序列化的物件。"
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有針對指定的命名空間，，寫入具有前置詞的項目名稱否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入開頭項目標記，包括任何屬性。"
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed, System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: name
      type: System.String
      description: "要寫入的 XML 項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入的 XML 項目命名空間。"
    - id: o
      type: System.Object
      description: "以 XML 元素所序列化的物件。"
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有針對指定的命名空間，，寫入具有前置詞的項目名稱否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "執行個體<xref:System.Xml.Serialization.XmlSerializerNamespaces>類別，其中包含要用於產生的 XML 前置詞和命名空間組。</xref:System.Xml.Serialization.XmlSerializerNamespaces>"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  id: WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入的文字本文就會簡單的 XML 結構描述資料類型值的 XML 項目。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       `xsi:type`屬性明確指示的 XML 結構描述資料型別。 前置詞`xsi`指的是 XML 結構描述執行個體命名空間。"
  syntax:
    content: protected void WriteTypedPrimitive (string name, string ns, object o, bool xsiType);
    parameters:
    - id: name
      type: System.String
      description: "要寫入項目的本機名稱。"
    - id: ns
      type: System.String
      description: "要寫入項目的命名空間。"
    - id: o
      type: System.Object
      description: "要序列化的項目內的物件。"
    - id: xsiType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果 XML 元素明確指定的文字值的輸入使用<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>屬性; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  id: WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入 base&64; 位元組陣列。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteValue (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "要寫入的位元組陣列。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  id: WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "將指定的字串值。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "要寫入的字串值。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  id: WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入指定<xref href=&quot;System.Xml.XmlNode&quot;></xref>為 XML 屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "要寫入的 XML 節點。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  id: WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入指定<xref href=&quot;System.Xml.XmlNode&quot;></xref>物件做為 XML 屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node, object container);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "要寫入的 XML 節點。"
    - id: container
      type: System.Object
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref>物件 (或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>) 用來產生限定的名稱值<xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;></xref>屬性從 Web 服務描述語言 (WSDL) 的命名空間 (&quot;http://schemas.xmlsoap.org/wsdl/&quot;)。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  id: WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "寫入<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>到文件中要序列化的 XML 項目屬性。"
  remarks: "受保護的成員<xref:System.Xml.Serialization.XmlSerializationWriter>供只會在內部使用.NET Framework XML 序列化基礎結構內的衍生類別所使用。</xref:System.Xml.Serialization.XmlSerializationWriter>       `xsi:type`屬性明確指示的 XML 結構描述資料型別。 前置詞`xsi`指的是 XML 結構描述執行個體命名空間。"
  syntax:
    content: protected void WriteXsiType (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "XML 結構描述資料類型的本機名稱。"
    - id: ns
      type: System.String
      description: "XML 結構描述資料型別的命名空間。"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializationWriteCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationWriteCallback
  nameWithType: XmlSerializationWriteCallback
  fullName: System.Xml.Serialization.XmlSerializationWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter.XmlSerializationWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback
  nameWithType: XmlSerializationWriter.AddWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64
  nameWithType: XmlSerializationWriter.FromByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex
  nameWithType: XmlSerializationWriter.FromByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar
  nameWithType: XmlSerializationWriter.FromChar
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate
  nameWithType: XmlSerializationWriter.FromDate
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime
  nameWithType: XmlSerializationWriter.FromDateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum
  nameWithType: XmlSerializationWriter.FromEnum
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime
  nameWithType: XmlSerializationWriter.FromTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName
  nameWithType: XmlSerializationWriter.FromXmlName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName
  nameWithType: XmlSerializationWriter.FromXmlNCName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken
  nameWithType: XmlSerializationWriter.FromXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens
  nameWithType: XmlSerializationWriter.FromXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationWriter.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement
  nameWithType: XmlSerializationWriter.TopLevelElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: XmlSerializationWriter.WriteAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded
  nameWithType: XmlSerializationWriter.WriteElementEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral
  nameWithType: XmlSerializationWriter.WriteElementLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString
  nameWithType: XmlSerializationWriter.WriteElementString
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw
  nameWithType: XmlSerializationWriter.WriteElementStringRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag
  nameWithType: XmlSerializationWriter.WriteEmptyTag
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement
  nameWithType: XmlSerializationWriter.WriteEndElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId
  nameWithType: XmlSerializationWriter.WriteId
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements
  nameWithType: XmlSerializationWriter.WriteReferencedElements
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement
  nameWithType: XmlSerializationWriter.WriteReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult
  nameWithType: XmlSerializationWriter.WriteRpcResult
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable
  nameWithType: XmlSerializationWriter.WriteSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument
  nameWithType: XmlSerializationWriter.WriteStartDocument
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement
  nameWithType: XmlSerializationWriter.WriteStartElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue
  nameWithType: XmlSerializationWriter.WriteValue
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute
  nameWithType: XmlSerializationWriter.WriteXmlAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType
  nameWithType: XmlSerializationWriter.WriteXsiType
