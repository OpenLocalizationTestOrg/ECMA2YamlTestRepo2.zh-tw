### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "代表由處理要求的回應<xref href=&quot;System.Net.HttpListener&quot;></xref>物件。"
  remarks: "當用戶端提出要求的資源時由<xref:System.Net.HttpListener>物件、 要求和回應會提供給您的應用程式中<xref:System.Net.HttpListenerContext>物件。</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> 要求由<xref:System.Net.HttpListenerRequest>物件，並可用於<xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>屬性。</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> </xref:System.Net.HttpListenerRequest> 回應 HttpListenerResponse 物件所代表，並可用於<xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>屬性。</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>       您可以藉由設定各種屬性，例如自訂的回應<xref:System.Net.HttpListenerResponse.StatusCode%2A>， <xref:System.Net.HttpListenerResponse.StatusDescription%2A>，和<xref:System.Net.HttpListenerResponse.Cookies%2A>。</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> 使用<xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>屬性，以取得<xref:System.IO.Stream>可以將資料寫入至回應的執行個體。</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> 最後，將回應資料傳送至用戶端藉由呼叫<xref:System.Net.HttpListenerResponse.Close%2A>方法。</xref:System.Net.HttpListenerResponse.Close%2A>"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "關閉用戶端的連接，但不傳送回應。"
  remarks: "已經關閉的物件上呼叫這個方法沒有任何作用。 如果尚未關閉的回應，這個方法會關閉它，並關聯<xref:System.Net.HttpListenerRequest>和<xref:System.Net.HttpListenerContext>物件。</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListenerRequest> 用戶端連線也是已關閉，而不論<xref:System.Net.HttpListenerRequest.KeepAlive%2A>之用戶端要求的屬性值。</xref:System.Net.HttpListenerRequest.KeepAlive%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將指定的標頭和值加入這個回應的 HTTP 標頭。"
  remarks: "呼叫這個方法相當於呼叫<xref:System.Net.WebHeaderCollection.Set%2A>方法所傳回的集合上<xref:System.Net.HttpListenerResponse.Headers%2A>屬性。</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Set%2A>       如果標頭中指定`name`不存在，這個方法會插入至新的標頭<xref:System.Net.HttpListenerResponse.Headers%2A>屬性的集合。</xref:System.Net.HttpListenerResponse.Headers%2A> 如果`name`存在於集合中，這個方法會取代現有值與`value`。 若要加入現有的標頭的值，而不取代現有的值，請使用<xref:System.Net.HttpListenerResponse.AppendHeader%2A>方法。</xref:System.Net.HttpListenerResponse.AppendHeader%2A>"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "若要設定的 HTTP 標頭名稱。"
    - id: value
      type: System.String
      description: "值`name`標頭。"
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串 (&quot;&quot;)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "不允許您指定指定的標頭的值。       - <code> name </code>或<code> value </code>包含無效的字元。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "長度<code> value </code>大於 65535 個字元。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將指定<xref:System.Net.Cookie>這個回應 cookie 集合。</xref:System.Net.Cookie>"
  remarks: "呼叫這個方法相當於呼叫<xref:System.Net.CookieCollection.Add%2A>方法所傳回的集合上<xref:System.Net.HttpListenerResponse.Cookies%2A>屬性。</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.CookieCollection.Add%2A>       如果指定的 cookie 不存在於<xref:System.Net.HttpListenerResponse.Cookies%2A>屬性的集合，`cookie`加入。</xref:System.Net.HttpListenerResponse.Cookies%2A> Cookie 會存在於集合中，如果`cookie`予以取代。"
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "<xref:System.Net.Cookie>加入至集合，以便與這個回應傳送。</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將值附加至與這個回應會傳送指定的 HTTP 標頭。"
  remarks: "呼叫這個方法相當於呼叫<xref:System.Net.WebHeaderCollection.Add%2A>方法所傳回的集合上<xref:System.Net.HttpListenerResponse.Headers%2A>屬性。</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Add%2A>       如果標頭中指定`header`不存在，這個方法會插入至新的標頭<xref:System.Net.HttpListenerResponse.Headers%2A>屬性的集合。</xref:System.Net.HttpListenerResponse.Headers%2A> 如果`header`是否存在於集合中，此方法會將`value`的現有值。 若要取代現有的標頭的值，請使用<xref:System.Net.HttpListenerResponse.AddHeader%2A>方法。</xref:System.Net.HttpListenerResponse.AddHeader%2A>"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "要附加的 HTTP 標頭名稱`value`至。"
    - id: value
      type: System.String
      description: "要附加至值`name`標頭。"
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>或空字串 (&quot;&quot;)。       -或者-不允許您指定指定的標頭的值。       -<code>name</code>或<code>value</code>包含無效的字元。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "長度<code> value </code>大於 65535 個字元。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "傳送回應至用戶端，並釋放由此持有的資源<xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>執行個體。"
  remarks: "這個方法會關閉回應資料流和<xref:System.Net.HttpListenerRequest>與回應相關聯。</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "指定的位元組陣列傳回給用戶端，並釋放由此持有的資源<xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>執行個體。"
  remarks: "如果您要傳送，回應主體資料，您可以使用這個方法將它做為傳送<xref:System.Byte>陣列而不是寫入本文資料<xref:System.Net.HttpListenerResponse.OutputStream%2A>屬性，並呼叫<xref:System.Net.HttpListenerResponse.Close%2A>方法。</xref:System.Net.HttpListenerResponse.Close%2A> </xref:System.Net.HttpListenerResponse.OutputStream%2A> </xref:System.Byte>       這個方法會關閉回應資料流和<xref:System.Net.HttpListenerRequest>與回應相關聯。</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "A<xref:System.Byte>陣列，其中包含要傳送給用戶端的回應。</xref:System.Byte>"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要封鎖資料流清除至用戶端; 時執行否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定<xref:System.Text.Encoding>這個回應的<xref:System.Net.HttpListenerResponse.OutputStream*>.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  remarks: "<xref:System.Text.Encoding>物件可以用來將位元組序列轉換成字元集 （字碼頁） 和成位元組序列的字元。</xref:System.Text.Encoding>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>適合與中的資料搭配使用的物件<xref:System.Net.HttpListenerResponse.OutputStream*>屬性，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果未指定編碼時。</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定包含在回應本文資料中的位元組數目。"
  remarks: "`Content-Length`標頭表示的回應主體資料的長度，以位元組為單位。 使用時所用的格式不傳送資料區塊或未經處理，您必須設定 ContentLength64 屬性。 如果您不這麼做，<xref:System.Net.HttpListener>不會傳送回應資料。</xref:System.Net.HttpListener>       如需完整的回應標頭清單，請參閱<xref:System.Net.HttpResponseHeader>列舉型別。</xref:System.Net.HttpResponseHeader>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "回應值<xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;></xref>標頭。"
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定作業指定的值小於零。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已傳送回應。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定傳回的內容的 MIME 類型。"
  remarks: "當夥伴伺服器通訊的網頁瀏覽器，您應該明確設定此屬性傳回以外的任何內容型別時`text/html`。       如需完整的回應標頭清單，請參閱<xref:System.Net.HttpResponseHeader>列舉型別。</xref:System.Net.HttpResponseHeader>"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>包含回應的文字的執行個體<xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;></xref>標頭。</xref:System.String>"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定作業會為空字串指定的值 (&quot;&quot;)。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定的回應所傳回的 cookie 集合。"
  remarks: 'Cookie 是儲存在本機 （用戶端） 電腦的網頁伺服器名稱/值的文字資料。 支援下列 cookie 格式︰ Netscape、 RFC 2109 和 RFC 2965。 Netscape 的 cookie 規格將會位於 http://wp.netscape.com/newsref/std/cookie_spec.html;RFC 文件位於[http://www.rfc-editor.org](http://www.rfc-editor.org)。'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "A <xref:System.Net.CookieCollection>，包含隨著回應的 cookie。</xref:System.Net.CookieCollection> 如果集合是空沒有 cookie 已新增至回應。"
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "將屬性複製從指定<xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>此回應。"
  remarks: "如果您定期變更許多屬性從其預設值為一組固定的新值，並方便使用<xref:System.Net.HttpListenerResponse>做為範本執行個體。</xref:System.Net.HttpListenerResponse> 自訂範本回應，一次，而不是分別設定每個回應，請呼叫 CopyFrom 方法，若要設定新的回應，根據範本在回應中的屬性值。       下列屬性從複製`templateResponse`到目前的執行個體。      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "<xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>複製的執行個體。"
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定伺服器所傳回的標頭名稱/值組的集合。"
  remarks: "回應標頭包含中繼資料資訊，例如日期和回應時，回應的伺服器和回應主體中包含的資料的 MIME 類型的識別。       如需完整的回應標頭清單，請參閱<xref:System.Net.HttpResponseHeader>列舉型別。</xref:System.Net.HttpResponseHeader>      > [!NOTE] > 如果您嘗試設定內容長度為 Keep-alive、 傳輸編碼，或使用的標頭屬性時，發生例外狀況的 Www-authenticate 標頭就會擲回。 使用<xref:System.Net.HttpListenerResponse.KeepAlive%2A>或<xref:System.Net.HttpListenerResponse.ContentLength64%2A>屬性可用來設定這些標頭。</xref:System.Net.HttpListenerResponse.ContentLength64%2A> </xref:System.Net.HttpListenerResponse.KeepAlive%2A> 您無法手動設定的傳輸編碼或 WWW 驗證標頭。"
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A <xref:System.Net.WebHeaderCollection>，其中包含所有執行個體明確設定要在回應中包含的 HTTP 標頭。</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.WebHeaderCollection>執行個體指定的設定作業的回應無效。</xref:System.Net.WebHeaderCollection>"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定值，指出伺服器是否要求持續連線。"
  remarks: "如果 HTTP 用戶端和伺服器預期在短期內多次交換資料，持續連線會加快其通訊，讓它們能夠避免開啟和關閉每個訊息的 TCP 連線所需的額外負荷。 持續連線是普遍使用在現代網頁瀏覽器與 Web 伺服器之間的通訊。       HTTP/1.1 通訊協定規格 (RFC 2616) RTF 編輯器網站在使用中的詳細資料中所述的持續連線 ([http://www.rfc-editor.org](http://www.rfc-editor.org))。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果伺服器要求的持續連線。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得<xref:System.IO.Stream>物件可以寫入回應。</xref:System.IO.Stream>"
  remarks: "<xref:System.Net.HttpListenerResponse.ContentLength64%2A>必須明確地設定屬性，傳回寫入之前<xref:System.IO.Stream>物件。</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.ContentLength64%2A>      > [!NOTE] > 關閉要求不會關閉這個屬性所傳回的資料流。 當您不再需要資料流時，您應該藉由呼叫 Close 方法以將它關閉。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>物件可以寫入回應。</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定用於回應的 HTTP 版本。"
  remarks: "在 http://www.ietf.org 可用的文件中指定不同的 HTTP 版本的功能。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "A<xref:System.Version>物件，表示回應至用戶端時使用的 HTTP 版本。</xref:System.Version> 請注意，此屬性現在已過時。"
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定作業中沒有指定的值及其<> *> 屬性設定為 1 或沒有其<> *> 屬性設定為 0 或 1。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "設定用戶端重新導向至指定的 URL 的回應。"
  remarks: "重新導向方法用來將用戶端重新導向至新資源的位置。 這個方法會設定回應的`Location`標頭`url`、<xref:System.Net.HttpListenerResponse.StatusCode%2A>屬性<xref:System.Net.HttpStatusCode>，而<xref:System.Net.HttpListenerResponse.StatusDescription%2A>&quot;Found&quot;的屬性。</xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "用戶端應該用來找出要求之資源的 URL。"
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定的 http 值<xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;></xref>此回應中的標頭。"
  remarks: "`Location`標頭指定的用戶端已導向找出要求之資源的 URL。      > [!NOTE] > 設定這個屬性不會自動設定<xref:System.Net.HttpListenerResponse.StatusCode%2A>屬性。</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，其中包含要傳送給用戶端的絕對 URL <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref>標頭。</xref:System.String>"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定作業會為空字串指定的值 (&quot;&quot;)。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定是否回應會使用區塊的傳輸編碼。"
  remarks: "區塊處理訊息的主體是由一系列的區塊所組成。 每個區塊分成兩個部分︰ 區塊和實際資料的大小。 當設定為 true 的回應會傳送使用區塊傳輸編碼方式。"
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果回應設定為使用區塊的傳輸編碼。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "加入或更新<xref:System.Net.Cookie>送出與這個回應的 cookie 集合中。</xref:System.Net.Cookie>"
  remarks: "兩個 cookie 會被視為相同的 if 的值及其<xref:System.Net.Cookie.Name%2A>， <xref:System.Net.Cookie.Domain%2A>，和<xref:System.Net.Cookie.Path%2A>屬性都相同。</xref:System.Net.Cookie.Path%2A> </xref:System.Net.Cookie.Domain%2A> </xref:System.Net.Cookie.Name%2A> 如果這三項資訊是相同的該方法會嘗試更新的 cookie。 名稱和網域比較不區分大小寫，但路徑比較會區分大小寫。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "A<xref:System.Net.Cookie>這個回應。</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Cookie 已存在於集合中並不被取代。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定要傳回至用戶端的 HTTP 狀態碼。"
  remarks: "用戶端會使用由伺服器傳回狀態碼來決定要如何繼續執行。 值為<xref:System.Net.HttpStatusCode>指出伺服器已順利處理用戶端的要求和回應主體中包含所要求的資源。</xref:System.Net.HttpStatusCode> 其他常見狀態碼包括<xref:System.Net.HttpStatusCode>，指出在伺服器上，找不到要求的資源和<xref:System.Net.HttpStatusCode>，表示這不必要的回應主體中傳回要求的資源，因為用戶端的快取資源的複本處於最新狀態。</xref:System.Net.HttpStatusCode> </xref:System.Net.HttpStatusCode>       如需可能的狀態碼的完整清單，請參閱<xref:System.Net.HttpStatusCode>列舉型別。</xref:System.Net.HttpStatusCode>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>值，指定所要求的資源的 HTTP 狀態碼。</xref:System.Int32> 預設值是<xref:System.Net.HttpStatusCode>，指出伺服器已成功處理用戶端的要求和回應主體中包含所要求的資源。</xref:System.Net.HttpStatusCode>"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已關閉。"
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "設定作業指定的值無效。 有效值介於 100 到 999 之間 （含） 之間。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定傳回至用戶端的 HTTP 狀態碼的文字描述。"
  remarks: "狀態描述通常會提供詳細資料，說明<xref:System.Net.HttpListenerResponse.StatusCode%2A>值。</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "傳回至用戶端的 HTTP 狀態碼的文字描述。 預設值是 RFC 2616 描述<xref:System.Net.HttpListenerResponse.StatusCode*>屬性值或空字串 (&quot;&quot;) 如果 RFC 2616 描述不存在。</xref:System.Net.HttpListenerResponse.StatusCode*>"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定作業指定的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定作業指定的值包含不可列印字元。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "所使用的資源全部釋出<xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>。"
  remarks: "使用<xref:System.Net.HttpListenerResponse.Close%2A>方法來傳送回應，並釋放<xref:System.Net.HttpListenerResponse>.</xref:System.Net.HttpListenerResponse>所持有的資源</xref:System.Net.HttpListenerResponse.Close%2A> 若要捨棄回應，並釋放此執行個體所持有的資源，請使用<xref:System.Net.HttpListenerResponse.Abort%2A>方法。</xref:System.Net.HttpListenerResponse.Abort%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
