### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonColumn
  id: ButtonColumn
  children:
  - System.Web.UI.WebControls.ButtonColumn.#ctor
  - System.Web.UI.WebControls.ButtonColumn.ButtonType
  - System.Web.UI.WebControls.ButtonColumn.CausesValidation
  - System.Web.UI.WebControls.ButtonColumn.CommandName
  - System.Web.UI.WebControls.ButtonColumn.DataTextField
  - System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  - System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonColumn.Initialize
  - System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.ButtonColumn.Text
  - System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  langs:
  - csharp
  name: ButtonColumn
  nameWithType: ButtonColumn
  fullName: System.Web.UI.WebControls.ButtonColumn
  type: Class
  summary: "資料行類型<xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;></xref>包含使用者定義的按鈕控制項。"
  remarks: "使用中的 ButtonColumn 類別<xref:System.Web.UI.WebControls.DataGrid>控制項與每個資料列中建立對應的按鈕<xref:System.Web.UI.WebControls.DataGrid>控制項。</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid> 指定的標題會顯示在按鈕上，藉由設定<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>屬性。</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 如果您設定<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>屬性、 ButtonColumn 物件共用相同的標題中的所有按鈕。</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 或者，您可以結合 ButtonColumn 按鈕與資料來源中的欄位。 這可讓您顯示不同的每個按鈕的標題。 用於文字標題中指定之欄位的值。 設定<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>要繫結至資料來源中欄位的 ButtonColumn 屬性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       您可以格式化標題，會顯示在按鈕上，藉由設定<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>屬性與值的格式化字串。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       按一下按鈕 ButtonColumn 引發<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 您可以以程式設計方式控制會藉由提供的事件處理常式按鈕時執行的動作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       根據預設，按下按鈕 ButtonColumn 時，不被執行頁面驗證。 頁面驗證判斷控制項是否會與驗證相關聯的輸入的控制項在頁面上，所有通過驗證控制項所指定的驗證規則。 若要在按下按鈕時，請執行頁面驗證，設定<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>屬性`true`。</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>"
  example:
  - "The following code example demonstrates how to use ButtonColumn class in a <xref:System.Web.UI.WebControls.DataGrid> control to create **Add** buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_178_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_178_1.vb)]"
  syntax:
    content: 'public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>類別。"
  remarks: "建立和初始化<xref:System.Web.UI.WebControls.ButtonColumn>類別</xref:System.Web.UI.WebControls.ButtonColumn>的新執行個體使用 ButtonColumn 建構函式"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ButtonColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_167_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_167_1.vb)]"
  syntax:
    content: public ButtonColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要顯示中的按鈕類型<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>物件。"
  remarks: "使用 ButtonType 屬性來指定是否在按鈕<xref:System.Web.UI.WebControls.ButtonColumn>物件會顯示成連結或按鈕。</xref:System.Web.UI.WebControls.ButtonColumn> 下表列出可能的設定。      |按鈕類型 |顯示 |  |-----------------|-------------|  |<xref:System.Web.UI.WebControls.ButtonColumnType>|連結。 |  |<xref:System.Web.UI.WebControls.ButtonColumnType>|按鈕控制項。 |      按一下中的按鈕<xref:System.Web.UI.WebControls.ButtonColumn>引發<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> </xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumnType> </xref:System.Web.UI.WebControls.ButtonColumnType> 您可以以程式設計方式控制會藉由提供的事件處理常式按鈕時執行的動作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how use the ButtonType property to specify that the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object are displayed as push buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_119_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_119_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref>值。 預設值是<xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定資料行類型不是其中一個<xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref>值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出當中的按鈕時，是否執行驗證<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>按一下物件。"
  remarks: "根據預設，頁面不執行驗證時在按鈕<xref:System.Web.UI.WebControls.ButtonColumn>按一下物件。</xref:System.Web.UI.WebControls.ButtonColumn> 頁面驗證判斷控制項是否會與驗證相關聯的輸入的控制項在頁面上，所有通過驗證控制項所指定的驗證規則。 若要執行中的按鈕時，頁面驗證<xref:System.Web.UI.WebControls.ButtonColumn>是按下，設定 CausesValidation 屬性為`true`。</xref:System.Web.UI.WebControls.ButtonColumn>       CausesValidation 屬性的值時`true`，您也可以使用<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>屬性，以指定的驗證群組名稱的<xref:System.Web.UI.WebControls.ButtonColumn>會驗證。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果中的按鈕時執行驗證<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>按; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定字串，表示要執行中的按鈕命令<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>按一下物件。"
  remarks: "使用 CommandName 屬性相關聯的命令名稱，例如`Add`或`Remove`，使用按鈕。 您可以將任何字串，識別要功能的按鈕時執行的動作中的 CommandName 屬性<xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName>按一下物件。</xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName> 然後，您可以決定以程式設計方式的事件處理常式中的命令名稱<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件，並執行適當的動作。</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the CommandName property to associate a command name with a button. Then, the command name of the clicked button is determined programmatically in the event handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> event and the appropriate action is performed.  \n  \n [!code-cs[ButtonColumnCommandName#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_753_1.aspx)]\n [!code-vb[ButtonColumnCommandName#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_753_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "字串，表示要執行中的按鈕命令<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>按下。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料來源的欄位名稱<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>物件。"
  remarks: "使用 DataTextField 屬性來指定要繫結至資料來源的欄位名稱<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>屬性中的按鈕<xref:System.Web.UI.WebControls.ButtonColumn>物件。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       資料行繫結至欄位，而不是直接設定<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>屬性可讓您顯示不同的標題中的按鈕<xref:System.Web.UI.WebControls.ButtonColumn>指定之欄位中使用的值。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       這個屬性的值會儲存檢視狀態中。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to bind the <xref:System.Web.UI.WebControls.ButtonColumn> object to a field in a data source.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_814_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_814_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "欄位名稱，即可將繫結至<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定每個按鈕中指定標題的顯示格式的字串。"
  remarks: "使用 DataTextFormatString 屬性來提供自訂的顯示格式中的按鈕標題<xref:System.Web.UI.WebControls.ButtonColumn>物件。</xref:System.Web.UI.WebControls.ButtonColumn>       資料格式字串由兩個部分組成，在表單中，以冒號分隔的`{A:Bxx}`。 例如，格式化字串`{0:F2}`將儲存格顯示固定的點包含兩個小數位數字格式。      > [!NOTE] > 整個字串必須括在大括號來表示其為格式字串，而不是常值字串。 大括號以外的任何文字會顯示為常值文字。       冒號之前的值 (`A`一般範例中) 以零為起始的參數清單中，指定的參數索引。      > [!NOTE] > 這個值可以設定只為 0，因為每個資料格中只能有一個值。       冒號後面的字元 (`B`一般範例中) 指定要顯示值的格式。 下表列出常見的格式。      |格式化字元 |會顯示為數值 |  |----------------------|--------------------------------|  |`C`|貨幣格式。 |  |`D`|十進位格式。 |  |`E`|科學記號 （指數） 格式。 |  |`F`|固定的格式。 |  |`G`|一般格式。 |  |`N`|數字格式。 |  |`X`|十六進位格式。 |     > [!NOTE] > 格式字元不區分大小寫，除了`X`，其中顯示十六進位字元指定的大小寫。       格式字元後的值 (`xx`一般範例中) 指定有效位數或小數位數，若要顯示的數目。       這個屬性的值會儲存檢視狀態中。       如需有關如何格式化字串的詳細資訊，請參閱[格式化型別](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to display the caption of each button in the <xref:System.Web.UI.WebControls.ButtonColumn> object in currency format.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1201_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1201_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "每個按鈕中指定標題的顯示格式的字串。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將指定的值轉換為所指定之格式<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>屬性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>"
  remarks: "將指定的值轉換為所指定之格式使用 FormatDataTextValue 方法<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>屬性。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>      > [!NOTE] > FormatDataTextValue 方法會傳回字串相等的值，如果<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>屬性未設定。</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "要格式化的值。"
    return:
      type: System.String
      description: "<code> dataTextValue </code>轉換成<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>所指示的格式"
  overload: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "重設<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>設為初始狀態的物件。"
  remarks: "使用 Initialize 方法來重設<xref:System.Web.UI.WebControls.ButtonColumn>設為初始狀態的物件。</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "中的資料格會重設<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>設為初始狀態的物件。"
  remarks: "InitializeCell 方法重設在指定的儲存格<xref:System.Web.UI.WebControls.ButtonColumn>設為初始狀態的物件。</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>表示要重設儲存格。"
    - id: columnIndex
      type: System.Int32
      description: "資料格所在資料行數目。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref>值。"
  overload: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定標題中的按鈕顯示<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>物件。"
  remarks: "使用文字屬性來指定或決定是否顯示的按鈕中的標題<xref:System.Web.UI.WebControls.ButtonColumn>物件。</xref:System.Web.UI.WebControls.ButtonColumn>      > [!NOTE] > 設定文字屬性時，如果所有的按鈕中<xref:System.Web.UI.WebControls.ButtonColumn>共用相同的標題。</xref:System.Web.UI.WebControls.ButtonColumn>       或者，您可以繫結<xref:System.Web.UI.WebControls.ButtonColumn>至資料來源中的欄位。</xref:System.Web.UI.WebControls.ButtonColumn> 這可讓您在使用中的指定欄位的值的資料行中顯示不同按鈕的標題。 設定<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>要繫結屬性<xref:System.Web.UI.WebControls.ButtonColumn>至資料來源中的欄位。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       這個屬性的值會儲存檢視狀態中。       這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption for the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object.  \n  \n [!code-vb[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_349_1.aspx)]\n [!code-cs[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_349_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "中的按鈕顯示的標題<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定驗證控制項的群組，其<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>回傳至伺服器時，物件會導致驗證。"
  remarks: "驗證群組可讓您將驗證頁面上的控制項指派給特定的類別。 每個驗證群組可以獨立於其他的驗證群組頁面上進行驗證。 若要為其指定的驗證群組名稱中使用 ValidationGroup 屬性<xref:System.Web.UI.WebControls.ButtonColumn>回傳至伺服器時，物件會導致驗證。</xref:System.Web.UI.WebControls.ButtonColumn>       ValidationGroup 屬性沒有作用時，才值<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>屬性設定為`true`。</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 當您指定 ValidationGroup 的屬性值僅驗證控制，屬於指定的群組會驗證當<xref:System.Web.UI.WebControls.ButtonColumn>文章回傳至伺服器。</xref:System.Web.UI.WebControls.ButtonColumn> 如果您不指定 ValidationGroup 屬性的值和<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>屬性設定為`true`，會驗證所有驗證控制項在頁面上，不會驗證群組指派時<xref:System.Web.UI.WebControls.ButtonColumn>文章回傳至伺服器。</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>       這個屬性的值會儲存檢視狀態中。"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "驗證的群組控制其<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>回傳至伺服器時，物件會導致驗證。 預設為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn
  nameWithType: ButtonColumn.ButtonColumn
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonColumn.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize
  nameWithType: ButtonColumn.Initialize
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonColumn.InitializeCell
- uid: System.Web.UI.WebControls.ButtonColumn.Text*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
