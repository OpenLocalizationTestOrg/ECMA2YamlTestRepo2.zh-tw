### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "管理用戶端驗證程序期間呼叫的驗證模組。"
  remarks: "AuthenticationManager 是靜態類別，可管理應用程式使用的驗證模組。 發出要求來保護資源，AuthenticationManager 呼叫<xref:System.Net.AuthenticationManager.Authenticate%2A>方法來取得<xref:System.Net.Authorization>執行個體將在後續要求中。</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       AuthenticationManager 來呼叫查詢的每個已註冊的驗證模組<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>每個模組的方法。</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> 要傳回的第一個驗證模組<xref:System.Net.Authorization>執行個體用來驗證要求。</xref:System.Net.Authorization>       模組可提供基本、 摘要式、 交涉，NTLM，和 Kerberos 驗證類型，預設會註冊與 AuthenticationManager。 實作的其他驗證模組<xref:System.Net.IAuthenticationModule>介面可以使用加入<xref:System.Net.AuthenticationManager.Register%2A>方法。</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> 已加入至清單的順序，會呼叫驗證模組。      > [!NOTE] > Kerberos 和交涉驗證類型不支援 Windows 95/98 或 Windows NT 4.0 上。"
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "呼叫以尋找第一個模組可以驗證要求回應每個已註冊的驗證模組。"
  remarks: "驗證方法呼叫<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>方法，直到其中一個模組會以回應每個已註冊的驗證模組在<xref:System.Net.Authorization>執行個體。</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       第一個<xref:System.Net.Authorization>傳回執行個體用來驗證要求。</xref:System.Net.Authorization> 如果沒有驗證模組可以驗證要求，則驗證方法會傳回`null`。       驗證模組稱為<xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager>向註冊的順序"
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "傳回與網際網路資源的挑戰。"
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>起始驗證挑戰。</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>與此要求相關聯。</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "執行個體<xref href=&quot;System.Net.Authorization&quot;></xref>包含結果的嘗試驗證的類別。 如果沒有任何驗證模組的挑戰回應，則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得或設定認證原則使用資源所提出之要求使用<xref:System.Net.HttpWebRequest>類別。</xref:System.Net.HttpWebRequest>"
  remarks: "認證原則會決定是否要傳送網路資源，例如 Web 網頁內容的要求時傳送的認證。 如果傳送認證，需要用戶端驗證的伺服器可以嘗試驗證用戶端，而不是傳送回應，指出用戶端憑證必要在收到要求時。 而這會儲存到伺服器來回行程，這必須平衡跨網路傳送認證的固有的安全性風險。 目的地伺服器不需要用戶端驗證時最好不傳送認證。       認證原則將會呼叫只會針對要求指定的認證或不使用<xref:System.Net.WebProxy>物件，指定認證。</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "物件，用於實作<xref href=&quot;System.Net.ICredentialPolicy&quot;></xref>決定是否隨著要求傳送認證的介面。 預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得字典，其中包含用來識別主機期間使用所提出之要求的 Kerberos 驗證的服務主體名稱 (Spn)<xref:System.Net.WebRequest>和其衍生的類別。</xref:System.Net.WebRequest>"
  remarks: "SPN 是用戶端用於唯一識別服務或應用程式進行相互驗證的伺服器上的執行個體的名稱。 根據預設，要求相互驗證，而您可以藉由設定要求它<xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>至<xref:System.Net.Security.AuthenticationLevel>在您的要求。</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       當<xref:System.Net.WebRequest>需要相互驗證，SPN，如用戶端必須提供目的地。</xref:System.Net.WebRequest> 如果您知道 SPN，您可以將它加入 CustomTargetNameDictionary 傳送要求之前。 如果您不到此字典中，加入 SPN 資訊<xref:System.Net.AuthenticationManager>使用<xref:System.Net.WebRequest.RequestUri%2A>方法來撰寫最可能的 SPN; 不過，這是計算的值，而且可能不正確。</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> 如果相互驗證嘗試失敗，您可以檢查字典，以便判斷計算的 SPN。 沒有 SPN 會輸入到字典中，如果驗證通訊協定不支援相互驗證。       若要將 SPN 值新增到此字典，使用<xref:System.Uri.AbsoluteUri%2A>的<xref:System.Net.WebRequest.RequestUri%2A>做為索引鍵。</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> 就內部而言，索引鍵被截斷成<xref:System.Uri.Scheme%2A>， <xref:System.Uri.Host%2A>，而<xref:System.Uri.Port%2A>如果它不是預設通訊埠</xref:System.Uri.Port%2A></xref:System.Uri.Host%2A></xref:System.Uri.Scheme%2A>      > [!NOTE] > 存取的方法和屬性的 CustomTargetNameDictionary 需要無限制<xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>      > [!NOTE] > 當 Kerberos 驗證透過 proxy 執行、 proxy 和最終主機名稱都必須解析為 SPN。 Proxy 名稱解析受保護的逾時。 為 spn 的最終的主機名稱解析所需的 DNS 查詢，並沒有直接關聯這項作業的逾時。 因此同步作業可能需要較長逾時。 若要解決這個問題，將 ultimate 主機的 URI 前置詞加入 SPN 快取之前提出要求。       3.5 版 SP1 現在預設為指定 CustomTargetNameDictionary 屬性未設定時，要求 url 中的 SPN，NTLM (NT LAN Manager) 驗證交換中使用的主機名稱。 要求 URL 中使用的主機名稱可能不同的主機標頭中指定<xref:System.Net.HttpRequestHeader?displayProperty=fullName>用戶端要求中。</xref:System.Net.HttpRequestHeader?displayProperty=fullName> 要求 URL 中使用的主機名稱可能不同於伺服器的實際主機名稱、 伺服器、 電腦的 IP 位址或迴路位址的電腦名稱。 在這些情況下，Windows 會讓驗證要求失敗。 若要解決這個問題，您可能需要通知使用主機名稱的 Windows 用戶端在要求 URL 中要求 (&quot;contoso&quot;，例如) 是實際的本機電腦的替代名稱。"
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "可寫入<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>包含 SPN 值的索引鍵所組成的主機資訊。"
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "預先驗證要求。"
  remarks: "如果驗證模組可以預先驗證要求，PreAuthenticate 方法會傳回驗證執行個體，並將授權資訊傳送至聯合國而不是等待要發出的挑戰的資源伺服器。 此行為述 RFC 2617 的 3.3 節 (HTTP 驗證︰ 基本與摘要式存取驗證)。 支援預先驗證的驗證模組會讓用戶端藉由避免發生驗證問題所造成的額外往返改善伺服器效能。       授權模組可以預先驗證會要求組<xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>屬性`true`。</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "A<xref:System.Net.WebRequest>對網際網路資源。</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>與要求相關聯。</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "執行個體<xref href=&quot;System.Net.Authorization&quot;></xref>類別要求可能是預先驗證; 否則如果<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "使用驗證管理員中註冊驗證模組。"
  remarks: "Register 方法將驗證模組新增至所呼叫的模組清單的結尾<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</xref:System.Net.AuthenticationManager.Authenticate%2A> 已加入至清單的順序，會呼叫驗證模組。 如果具有相同的模組<xref:System.Net.IAuthenticationModule.AuthenticationType%2A>是已註冊，這個方法會移除已註冊的模組，並且加入`authenticationModule`到清單的結尾。</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref>向驗證管理員。"
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得驗證管理員註冊的驗證模組的清單。"
  remarks: "RegisteredModules 屬性提供<xref:System.Collections.IEnumerator>，可讓清單執行個體註冊驗證模組來讀取。</xref:System.Collections.IEnumerator> <xref:System.Net.AuthenticationManager.Register%2A>方法會加入至清單，並<xref:System.Net.AuthenticationManager.Unregister%2A>方法中移除。 請從模組</xref:System.Net.AuthenticationManager.Unregister%2A>的模組</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>，可讓要讀取的已註冊的驗證模組。</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "已登錄的模組清單中移除指定的驗證模組。"
  remarks: "取消註冊方法所呼叫的驗證模組清單中移除指定的驗證模組<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</xref:System.Net.AuthenticationManager.Authenticate%2A> 此模組必須已加入至清單使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前，它可以從清單中移除。</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref>若要移除的已登錄的模組清單。"
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定<xref href=&quot;System.Net.IAuthenticationModule&quot;></xref>未註冊。"
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "已登錄的模組清單中移除具有指定的驗證配置的驗證模組。"
  remarks: "<xref:System.Net.AuthenticationManager.Unregister%2A>方法所呼叫的驗證模組清單中移除具有指定的驗證配置的驗證模組<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> 此模組必須已加入至清單使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前，它可以從清單中移除。</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "若要移除之模組的驗證配置。"
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "此驗證配置的模組不在登錄中。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
