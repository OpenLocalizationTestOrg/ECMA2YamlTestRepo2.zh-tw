### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SurrogateSelector
  id: SurrogateSelector
  children:
  - System.Runtime.Serialization.SurrogateSelector.#ctor
  - System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  - System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  - System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  - System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  - System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: SurrogateSelector
  nameWithType: SurrogateSelector
  fullName: System.Runtime.Serialization.SurrogateSelector
  type: Class
  summary: "可協助序列化代理委派序列化或還原序列化程序的選取範圍中的格式器。"
  remarks: "序列化代理提供使用者可以處理不同的物件序列化需求，並且可以在必要時轉換序列化的資料物件。"
  example:
  - "The following code example shows how to make a serialization surrogate class that knows how to properly serialize or deserialize a class that is not itself serializable. In addition, this example also shows how to recover from a <xref:System.Runtime.Serialization.SerializationException>.  \n  \n [!code-cs[SurrogateSelector#1](~/add/codesnippet/csharp/t-system.runtime.seriali_3_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISurrogateSelector
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: SurrogateSelector()
  nameWithType: SurrogateSelector.SurrogateSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.SurrogateSelector()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Runtime.Serialization.SurrogateSelector&quot;></xref>類別。"
  syntax:
    content: public SurrogateSelector ();
    parameters: []
  overload: System.Runtime.Serialization.SurrogateSelector.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  id: AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  nameWithType: SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  fullName: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "將代理加入至已檢查代理的清單。"
  remarks: ''
  example:
  - "The following code example demonstrates calling the AddSurrogate method. This code example is part of a larger example provided for the <xref:System.Runtime.Serialization.SurrogateSelector> class.  \n  \n [!code-cs[SurrogateSelector#2](~/add/codesnippet/csharp/28375673-3181-4490-9929-_1.cs)]"
  syntax:
    content: public virtual void AddSurrogate (Type type, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.ISerializationSurrogate surrogate);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>代理是必要。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "特定內容相關的資料。"
    - id: surrogate
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "若要為這個型別呼叫代理。"
  overload: System.Runtime.Serialization.SurrogateSelector.AddSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> or <code>surrogate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "代理已經有這個型別和內容。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  id: ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: ChainSelector(ISurrogateSelector)
  nameWithType: SurrogateSelector.ChainSelector(ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.ChainSelector(ISurrogateSelector)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "將指定<xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;></xref>能夠處理特定物件類型清單的 surrogate。"
  remarks: "加入至清單的最後一個選取器會檢查第一個。"
  syntax:
    content: public virtual void ChainSelector (System.Runtime.Serialization.ISurrogateSelector selector);
    parameters:
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "若要加入代理選取器。"
  overload: System.Runtime.Serialization.SurrogateSelector.ChainSelector*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>selector</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "選取器已存在的選取器清單。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  id: GetNextSelector
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: GetNextSelector()
  nameWithType: SurrogateSelector.GetNextSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.GetNextSelector()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "傳回下一個選取器選取器的鏈結。"
  syntax:
    content: public virtual System.Runtime.Serialization.ISurrogateSelector GetNextSelector ();
    parameters: []
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "下一步 <xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;> </xref>上的選取器的鏈結。"
  overload: System.Runtime.Serialization.SurrogateSelector.GetNextSelector*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  id: GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  nameWithType: SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "傳回特定型別的代理。"
  remarks: "如果目前的選取器無法提供代理之前, 會先檢查其所有子物件傳回`null`。"
  syntax:
    content: public virtual System.Runtime.Serialization.ISerializationSurrogate GetSurrogate (Type type, System.Runtime.Serialization.StreamingContext context, out System.Runtime.Serialization.ISurrogateSelector selector);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>代理要求。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "資料流的內容。"
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "若要使用 surrogate。"
    return:
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "特定類型的 surrogate。"
  overload: System.Runtime.Serialization.SurrogateSelector.GetSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼叫端沒有必要的權限。"
  platform:
  - net462
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  id: RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.SurrogateSelector
  langs:
  - csharp
  name: RemoveSurrogate(Type,StreamingContext)
  nameWithType: SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  fullName: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "移除與指定的型別相關聯的代理。"
  remarks: "這個方法不會檢查鏈結的代理。"
  syntax:
    content: public virtual void RemoveSurrogate (Type type, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>要移除的 surrogate。</xref:System.Type>"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>為目前的 surrogate。</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: SurrogateSelector()
  nameWithType: SurrogateSelector.SurrogateSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.SurrogateSelector()
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  nameWithType: SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
  fullName: System.Runtime.Serialization.SurrogateSelector.AddSurrogate(Type,StreamingContext,ISerializationSurrogate)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ISerializationSurrogate
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializationSurrogate
  nameWithType: ISerializationSurrogate
  fullName: System.Runtime.Serialization.ISerializationSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: ChainSelector(ISurrogateSelector)
  nameWithType: SurrogateSelector.ChainSelector(ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.ChainSelector(ISurrogateSelector)
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetNextSelector()
  nameWithType: SurrogateSelector.GetNextSelector()
  fullName: System.Runtime.Serialization.SurrogateSelector.GetNextSelector()
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  nameWithType: SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
  fullName: System.Runtime.Serialization.SurrogateSelector.GetSurrogate(Type,StreamingContext,ISurrogateSelector)
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: RemoveSurrogate(Type,StreamingContext)
  nameWithType: SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
  fullName: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(Type,StreamingContext)
- uid: System.Runtime.Serialization.SurrogateSelector.#ctor*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: SurrogateSelector
  nameWithType: SurrogateSelector.SurrogateSelector
- uid: System.Runtime.Serialization.SurrogateSelector.AddSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: AddSurrogate
  nameWithType: SurrogateSelector.AddSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.ChainSelector*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: ChainSelector
  nameWithType: SurrogateSelector.ChainSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetNextSelector*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetNextSelector
  nameWithType: SurrogateSelector.GetNextSelector
- uid: System.Runtime.Serialization.SurrogateSelector.GetSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: GetSurrogate
  nameWithType: SurrogateSelector.GetSurrogate
- uid: System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate*
  parent: System.Runtime.Serialization.SurrogateSelector
  isExternal: false
  name: RemoveSurrogate
  nameWithType: SurrogateSelector.RemoveSurrogate
