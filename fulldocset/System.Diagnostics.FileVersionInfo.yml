### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.FileVersionInfo
  id: FileVersionInfo
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.ToString
  langs:
  - csharp
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  summary: "提供磁碟上的實體檔案的版本資訊。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       使用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>方法的這個類別，以取得 FileVersionInfo，其中包含資訊的檔案，然後查看檔案的相關資訊的屬性。</xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>屬性提供檔案的版本資訊。</xref:System.Diagnostics.FileVersionInfo.FileVersion%2A> <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>，和<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>屬性會提供指定的檔案所屬產品的版本資訊。</xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> </xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 呼叫<xref:System.Diagnostics.FileVersionInfo.ToString%2A>取得這個檔案的屬性和其值的部分清單。</xref:System.Diagnostics.FileVersionInfo.ToString%2A>       FileVersionInfo 屬性根據內建檔案版本資源資訊。 版本資源通常會建置到二進位檔案，例如.exe 或.dll 檔案;文字檔案並沒有版本資源資訊。       在 Win32 資源檔，或組件屬性通常指定版本資源。 例如<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>屬性會反映`VS_FF_DEBUG`檔案中的值加上旗標`VS_FIXEDFILEINFO`區塊，也就從建置`VERSIONINFO`Win32 資源檔中的資源。</xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>  如需 Win32 資源檔中指定版本資源的詳細資訊，請參閱 「 關於資源檔 」 和 Platform SDK 中的 「 VERSIONINFO 資源 」。 如需.NET 模組中指定版本資源的詳細資訊，請參閱[設定組件屬性](~/add/includes/ajax-current-ext-md.md)主題。      > [!NOTE] > 這個類別會在類別層級套用至所有成員的連結要求。 A<xref:System.Security.SecurityException>立即呼叫端沒有完全信任權限時，會擲回。</xref:System.Security.SecurityException> 如需連結要求的詳細資訊，請參閱[連結要求](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the FileVersionInfo for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo Example#1](~/add/codesnippet/csharp/t-system.diagnostics.fil_1.cs)]\n [!code-vb[Classic FileVersionInfo Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.fil_1.vb)]\n [!code-cpp[Classic FileVersionInfo Example#1](~/add/codesnippet/cpp/t-system.diagnostics.fil_1.cpp)]"
  syntax:
    content: public sealed class FileVersionInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Comments
  id: Comments
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得與檔案相關聯的註解。"
  remarks: "此屬性包含可以用於診斷目的顯示的其他資訊。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the comments in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_7_1.cs)]\n [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_7_1.cpp)]\n [!code-vb[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_7_1.vb)]"
  syntax:
    content: public string Comments { get; }
    return:
      type: System.String
      description: "與檔案相關聯的註解或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.Comments*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  id: CompanyName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得產生檔案的公司名稱。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the CompanyName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_20_1.cs)]\n [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_20_1.cpp)]\n [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_20_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "產生檔案的公司名稱或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  id: FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案的組建編號。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      位 16 位元的第三組是 FileBuildPart 編號。      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       這個屬性會取得第三個 16 位元的集合。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_21_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_21_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_21_1.cpp)]"
  syntax:
    content: public int FileBuildPart { get; }
    return:
      type: System.Int32
      description: "代表檔案的組建編號的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FileBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  id: FileDescription
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案的描述。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileDescription in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_18_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_18_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_18_1.cpp)]"
  syntax:
    content: public string FileDescription { get; }
    return:
      type: System.String
      description: "檔案的描述或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FileDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  id: FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得版本號碼主要部分。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 個位元會 FileMajorPart 數目。      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       這個屬性會取得第一個集合的 16 位元。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_6_1.cs)]\n [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_6_1.cpp)]\n [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_6_1.vb)]"
  syntax:
    content: public int FileMajorPart { get; }
    return:
      type: System.Int32
      description: "值，代表版本號碼或 0 （零） 的主要部分，如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FileMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  id: FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案的版本號碼次要部分。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -下一個 16 位元是 FileMinorPart 編號。      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       這個屬性會取得第二組的 16 位元。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_2_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_2_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_2_1.cs)]"
  syntax:
    content: public int FileMinorPart { get; }
    return:
      type: System.Int32
      description: "值，表示檔案或 0 （零） 的版本號碼的次要部分，如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FileMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileName
  id: FileName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案的名稱，這個執行個體<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>描述。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_19_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_19_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_19_1.cs)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "這個執行個體所描述的檔案名稱<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  id: FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案私用部分號碼。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -最後的 16 位元是 FilePrivatePart 編號。       這個屬性會取得最後一個 16 位元的集合。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FilePrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_13_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_13_1.cs)]\n [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_13_1.vb)]"
  syntax:
    content: public int FilePrivatePart { get; }
    return:
      type: System.Int32
      description: "值，代表檔案私用部分號碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  id: FileVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案版本號碼。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字，如下所示保存檔案的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_12_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_12_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_12_1.cpp)]"
  syntax:
    content: public string FileVersion { get; }
    return:
      type: System.String
      description: "檔案的版本號碼或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.FileVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  id: GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "傳回<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>代表與指定的檔案相關聯的版本資訊。"
  remarks: ''
  example:
  - "The following example calls GetVersionInfo to get the <xref:System.Diagnostics.FileVersionInfo> for Notepad and  displays the file description and version number in the console window.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_1_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_1_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_1_1.cpp)]"
  syntax:
    content: public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "完整的路徑名稱與要擷取的版本資訊的檔案。"
    return:
      type: System.Diagnostics.FileVersionInfo
      description: "A <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>包含檔案的相關資訊。 如果檔案未包含版本資訊<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>包含要求的檔案的名稱。"
  overload: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "找不到指定的檔案。"
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.InternalName
  id: InternalName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "如果有的話，請取得檔案的內部名稱。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the InternalName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_23_1.cpp)]\n [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_23_1.vb)]\n [!code-cs[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_23_1.cs)]"
  syntax:
    content: public string InternalName { get; }
    return:
      type: System.String
      description: "檔案的內部名稱。 如果不存在，則這個屬性會包含不含副檔名的檔案的原始名稱。"
  overload: System.Diagnostics.FileVersionInfo.InternalName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  id: IsDebug
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得值，指定檔案是否包含偵錯資訊，或以啟用偵錯功能的方式編譯。"
  remarks: "<xref:System.Diagnostics.FileVersionInfo>屬性根據內建檔案版本資源資訊。</xref:System.Diagnostics.FileVersionInfo> 版本資源通常會建置到二進位檔案，例如.exe 或.dll 檔案;文字檔案並沒有版本資源資訊。       在 Win32 資源檔，或組件屬性通常指定版本資源。 IsDebug 屬性會反映`VS_FF_DEBUG`檔案中的值加上旗標`VS_FIXEDFILEINFO`區塊，也就從建置`VERSIONINFO`Win32 資源檔中的資源。 如需 Win32 資源檔中指定版本資源的詳細資訊，請參閱 Platform SDK`About Resource Files`主題和`VERSIONINFO Resource`主題的主題。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsDebug in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_4_1.cs)]\n [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_4_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_4_1.vb)]"
  syntax:
    content: public bool IsDebug { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案包含偵錯資訊或編譯以偵錯功能。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsDebug*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  id: IsPatched
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得值，指定檔案是否已經過修改，並不相同的版本號碼的原始轉送檔相同。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsPatched in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_5_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_5_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_5_1.vb)]"
  syntax:
    content: public bool IsPatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已修補檔案。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsPatched*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  id: IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得值，指定檔案是否為開發版本，而不是正式發行的產品。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a prerelease version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_22_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_22_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_22_1.vb)]"
  syntax:
    content: public bool IsPreRelease { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案是發行前版本。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsPreRelease*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  id: IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得值，指定檔案是否使用標準發行程序已建置。"
  remarks: "如果此值為`true`，<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>將說明此版本的檔案方式不同於標準的版本。</xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_24_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_24_1.vb)]\n [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_24_1.cpp)]"
  syntax:
    content: public bool IsPrivateBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案是私用組建。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>如果使用標準發行程序建置檔案，或如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  id: IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得值，指定檔案是否為特殊的組建。"
  remarks: "使用標準發行程序建置是特殊的組建檔案，但不同於相同的版本號碼的標準檔案的檔案。 如果此值為`true`、<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>屬性必須指定這個檔案方式不同於標準的版本。</xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a special build version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_14_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_14_1.vb)]\n [!code-cs[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_14_1.cs)]"
  syntax:
    content: public bool IsSpecialBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果檔案是特殊的組建否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Language
  id: Language
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得版本資訊區塊的預設語言字串。"
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "描述字串版本資源中 Microsoft 語言識別項。 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  id: LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得所有套用至指定檔案的著作權注意事項。"
  remarks: "這應該包含全文檢索的所有通知、 法律符號、 版權日期等或`null`如果檔案未包含版本資訊。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalCopyright in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_3_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_3_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_3_1.vb)]"
  syntax:
    content: public string LegalCopyright { get; }
    return:
      type: System.String
      description: "套用至指定檔案的著作權注意事項。"
  overload: System.Diagnostics.FileVersionInfo.LegalCopyright*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  id: LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得商標與套用至檔案的註冊的商標。"
  remarks: "商標包括所有注意事項、 法律符號和商標登錄編號的完整文字。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalTrademarks in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_8_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_8_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_8_1.vb)]"
  syntax:
    content: public string LegalTrademarks { get; }
    return:
      type: System.String
      description: "商標與套用至檔案的註冊的商標或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  id: OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得建立檔案所使用的名稱。"
  remarks: "此屬性可讓應用程式判斷，是否已重新命名檔案。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the OriginalFilename in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_0_1.vb)]\n [!code-cs[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_0_1.cs)]"
  syntax:
    content: public string OriginalFilename { get; }
    return:
      type: System.String
      description: "建立檔案所使用的名稱或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.OriginalFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  id: PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案私用版本的相關資訊。"
  remarks: "此資訊也會顯示當<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>是`true`。</xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_16_1.cpp)]\n [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_16_1.vb)]\n [!code-cs[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_16_1.cs)]"
  syntax:
    content: public string PrivateBuild { get; }
    return:
      type: System.String
      description: "私用的檔案版本資訊或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.PrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  id: ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得與這個檔案關聯的產品組建編號。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是 64 位元數字，如下所示保存的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      位 16 位元的第三組是 ProductBuildPart 編號。      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       這個屬性會取得第三個 16 位元的集合。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_10_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_10_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_10_1.vb)]"
  syntax:
    content: public int ProductBuildPart { get; }
    return:
      type: System.Int32
      description: "代表產品組建編號的值與這個檔案相關聯或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  id: ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得與這個檔案關聯的產品版本號碼的主要部分。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是 64 位元數字，如下所示保存的版本號碼:-前 16 個位元會 ProductMajorPart 數目。      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       這個屬性會取得第一個集合的 16 位元。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_9_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_9_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_9_1.cs)]"
  syntax:
    content: public int ProductMajorPart { get; }
    return:
      type: System.Int32
      description: "代表產品版本號碼的主要部分的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  id: ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得與檔案關聯的產品版本號碼的次要部分。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是 64 位元數字，如下所示保存的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -下一個 16 位元是 ProductMinorPart 編號。      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       這個屬性會取得第二組的 16 位元。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_11_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_11_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_11_1.vb)]"
  syntax:
    content: public int ProductMinorPart { get; }
    return:
      type: System.Int32
      description: "值，表示產品版本號碼的次要部分或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductName
  id: ProductName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得這個檔案所散發的產品名稱。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_17_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_17_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_17_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "這個檔案所散發的產品名稱或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  id: ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得與這個檔案關聯的產品私用部分號碼。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是 64 位元數字，如下所示保存的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -最後的 16 位元是 ProductPrivatePart 編號。       這個屬性會取得最後一個 16 位元的集合。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductPrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_25_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_25_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_25_1.cpp)]"
  syntax:
    content: public int ProductPrivatePart { get; }
    return:
      type: System.Int32
      description: "代表產品的私用部分號碼的值與這個檔案相關聯或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  id: ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得這個檔案所散發的產品版本。"
  remarks: "一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是 64 位元數字，如下所示保存的版本號碼:-前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -的第三個的 16 位元集是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -最後 16 個位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數字。</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductVersion in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_15_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_15_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_15_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "這個檔案所散發的產品版本或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  id: SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得檔案的特殊組建資訊。"
  remarks: "如果<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>是`true`，SpecialBuild 必須指定這個檔案與檔案的標準版本不同的方式。</xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the special build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_1_1.cpp)]\n [!code-cs[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_1_1.cs)]\n [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_1_1.vb)]"
  syntax:
    content: public string SpecialBuild { get; }
    return:
      type: System.String
      description: "特殊組建資訊檔案或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果檔案未包含版本資訊。"
  overload: System.Diagnostics.FileVersionInfo.SpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ToString
  id: ToString
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "會傳回部分清單中的屬性<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>及其值。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it calls ToString to print a list of the file version information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_0_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_0_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A list of the following properties in this class and their values:       <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>,       <xref:System.Diagnostics.FileVersionInfo.Language*>.</xref:System.Diagnostics.FileVersionInfo.Language*>       如果檔案未包含版本資訊，此清單會包含所要求檔案的名稱。 布林值會是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>，和所有其他項目將會<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Diagnostics.FileVersionInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Diagnostics.FileVersionInfo.Comments
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
- uid: System.Diagnostics.FileVersionInfo
  parent: System.Diagnostics
  isExternal: false
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
- uid: System.Diagnostics.FileVersionInfo.Comments*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
- uid: System.Diagnostics.FileVersionInfo.CompanyName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
- uid: System.Diagnostics.FileVersionInfo.FileDescription*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: FileVersionInfo.GetVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
- uid: System.Diagnostics.FileVersionInfo.IsPatched*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString
  nameWithType: FileVersionInfo.ToString
