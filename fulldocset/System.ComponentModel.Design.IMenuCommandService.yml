### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IMenuCommandService
  id: IMenuCommandService
  children:
  - System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  - System.ComponentModel.Design.IMenuCommandService.Verbs
  langs:
  - csharp
  name: IMenuCommandService
  nameWithType: IMenuCommandService
  fullName: System.ComponentModel.Design.IMenuCommandService
  type: Interface
  summary: "提供方法來管理全域的設計工具動詞和設計模式中可用的功能表命令以及顯示某些類型的捷徑功能表。"
  remarks: "這個介面提供的方法:-尋找、 叫用、 新增和移除全域的設計工具動詞命令。      -尋找、 叫用、 新增和移除標準功能表命令。      -變更與標準功能表命令相關聯的事件處理常式。      -顯示功能表<xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID>相關聯的捷徑功能表的標準命令       設計工具動詞表示會列在設計模式中的捷徑功能表的自訂命令。 設計工具動詞可提供指定的文字標籤。 每個設計工具動詞會自動指派唯一的<xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> 設計工具可以提供設計工具動詞命令，透過其<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>屬性，但是這些才可以使用目前選取設計工具的元件時。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 全域的設計工具動詞命令是設計工具動詞命令，可以從設計模式的捷徑功能表，不論所選元件存取。 這個介面可讓您管理在設計模式中使用的全域設計工具動詞命令集。       您可以加入全域的設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法，而且您可以移除全域的設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 您可以叫用設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法，如果您知道<xref:System.ComponentModel.Design.CommandID>動詞命令。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>這個介面的屬性包含目前資料集設計工具動詞命令，在快顯功能表中顯示。</xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> 這個集合的設計工具動詞命令是由所有全域的設計工具動詞和任何目前所選元件的設計工具提供的任何設計工具動詞命令所組成。 這組動詞命令會更新每次選取或取消選取此選項以設計工具所提供的設計工具動詞命令的元件時。       功能表命令會限制為一組預先定義的標準命令。 中所定義的大部分預先定義的標準命令<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>列舉型別。</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands> 您可以新增、 移除和叫用功能表命令和搜尋功能表命令已加入使用這個介面的方法。       您可以使用標準功能表命令新增<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法，並移除標準功能表的命令使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 您可以將事件處理常式附加至預先定義的標準功能表命令的文件中詳述的程序<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 您可以擷取功能表命令由<xref:System.ComponentModel.Design.CommandID>如果它已加入至功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> </xref:System.ComponentModel.Design.CommandID> 您可以叫用功能表命令或由設計工具動詞命令<xref:System.ComponentModel.Design.CommandID>使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> </xref:System.ComponentModel.Design.CommandID>      > [!NOTE] > 新增<xref:System.ComponentModel.Design.CommandID>將會擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.ComponentModel.Design.CommandID>現有的功能表命令 當新增功能表命令時，務必檢查，它已經不在功能表上，使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用例外狀況，請明智地處理。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>      > [!NOTE] > 功能表命令加入功能表上，而且有其<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>或<xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>屬性設定為`false`。</xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Visible%2A> 如果您以視覺化方式找不到已加入功能表的功能表命令，其中一個屬性可能已設定為`false`。       您可以顯示包含功能表命令，在指定的位置，使用特定 standard 快顯功能表<xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> 這個方法的文件包含資料表，其中列出指定有效的功能表，以顯示之命令識別碼。"
  example:
  - "This example demonstrates using the IMenuCommandService to add a <xref:System.ComponentModel.Design.MenuCommand>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/t-system.componentmodel._76_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/t-system.componentmodel._76_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IMenuCommandService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  id: AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "將指定的標準功能表命令加入至功能表。"
  remarks: "<xref:System.Windows.Forms.Design.MenuCommands>和<xref:System.ComponentModel.Design.StandardCommands>列舉型別包含<xref:System.ComponentModel.Design.CommandID>的預先定義的標準命令和功能表命令已使用的相關聯識別碼與特定的功能表上的位置。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.StandardCommands> </xref:System.Windows.Forms.Design.MenuCommands>      > [!NOTE] > 新增<xref:System.ComponentModel.Design.CommandID>將會擲回<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException></xref:System.ComponentModel.Design.CommandID>現有的功能表命令 當新增功能表命令時，務必檢查，它已經不在功能表上，使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用例外狀況，請明智地處理。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>       您可以將事件處理常式附加至預先定義的功能表命令，使用下列程序︰ 1。  如果要連結的事件處理常式的功能表命令加入功能表，或位於與<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，請考慮是否要更新版本中，還原此功能表命令以及是否要用來叫用目前的事件處理常式，從新的事件處理常式。</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> 如果功能表命令或鏈結的事件處理常式的引動過程，可能會還原您的程式碼，請務必儲存某處的功能表命令的參考。      2.  請確定任何先前已存在的功能表命令具有相同<xref:System.ComponentModel.Design.CommandID>已經移除了功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.CommandID>      3.  建立新的<xref:System.ComponentModel.Design.MenuCommand>，並指定事件處理常式中建構函式，以及<xref:System.ComponentModel.Design.CommandID>代表要新增的命令</xref:System.ComponentModel.Design.CommandID></xref:System.ComponentModel.Design.MenuCommand> 每個標準功能表命令是預先定義的功能表的位置加入至相關聯。 支援的命令識別碼中所定義<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>列舉型別。</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands>      4.  如果您想要叫用功能表命令的任何預先存在的事件處理常式，呼叫<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>您更換處理功能表命令的叫用事件的事件處理常式 功能表的功能表命令的方法。</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      5.  如果您想要在還原中預先存在的功能表命令已被取代的事件處理常式，加入已儲存時，預先存在的功能表命令，移除取代功能表命令後建立。 您可能想要加入此行為，以`Dispose`您類型的方法。"
  syntax:
    content: public void AddCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "The <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>指定<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref>已存在於功能表上。"
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  id: AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "將指定的設計工具動詞命令加入至全域的設計工具動詞命令集。"
  remarks: "元件，提供設計工具動詞命令的設計工具應該使用<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>其設計工具，而非呼叫這個方法的屬性。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 此方法會將全域的設計工具動詞命令，可以從設計模式，不論目前選取的元件中以滑鼠右鍵按一下捷徑功能表存取。"
  syntax:
    content: public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "The <xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  id: FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "搜尋指定的命令 ID，並傳回與其相關聯的功能表命令。"
  syntax:
    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>搜尋。"
    return:
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>相關聯的命令 ID 或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果不找到任何命令。"
  overload: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  id: GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "叫用比對指定的命令 id。 功能表或設計工具動詞命令"
  remarks: "這個方法會搜尋功能表命令或<xref:System.ComponentModel.Design.CommandID>比對指定<xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID></xref:System.ComponentModel.Design.CommandID>設計工具動詞命令 這個方法會先搜尋內才能繼續搜尋，如有必要，透過全域環境命令服務所組成的全域和作用中提供設計工具動詞命令的設計工具動詞集合。 如果找到相符的功能表命令或設計工具動詞，則會叫用命令。"
  syntax:
    content: public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>來搜尋和執行的命令。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果找到，順利; 叫用命令否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "從功能表中移除指定的標準功能表命令。"
  remarks: "這個方法會移除指定<xref:System.ComponentModel.Design.MenuCommand>如果找到。</xref:System.ComponentModel.Design.MenuCommand> 這個方法不會引發例外狀況或傳回值，如果指定<xref:System.ComponentModel.Design.MenuCommand>找不到。</xref:System.ComponentModel.Design.MenuCommand> 使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，以判斷是否<xref:System.ComponentModel.Design.MenuCommand>比對指定<xref:System.ComponentModel.Design.CommandID>位於功能表上。</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.MenuCommand> </xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>"
  syntax:
    content: public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>移除。"
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "從全域的設計工具動詞的集合中移除指定的設計工具動詞。"
  remarks: "如果是全域的設計工具動詞集合內，這個方法會移除指定的全域設計工具動詞。 您可以加入全域的設計工具動詞的集合使用設計工具動詞<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法。</xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>"
  syntax:
    content: public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;> </xref>移除。"
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "顯示指定的捷徑功能表，在指定的位置。"
  remarks: "ShowContextMenu 方法可以顯示下列 Visual Studio 捷徑功能表，其中包含指定點上的功能表任何的命令: |功能表 |CommandID |  |----------|---------------|  |顯示容器的捷徑功能表 |<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  |顯示元件匣中的快顯功能表 |<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  |選取顯示的捷徑功能表 |<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  |紙匣選取顯示的捷徑功能表 |<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|      這個方法也可以顯示其他已註冊的捷徑功能表。</xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu> </xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>"
  syntax:
    content: public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);
    parameters:
    - id: menuID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref>顯示捷徑功能表。"
    - id: x
      type: System.Int32
      description: "要顯示在螢幕座標中的功能表，x 軸座標。"
    - id: y
      type: System.Int32
      description: "要顯示在螢幕座標中的功能表，y 座標。"
  overload: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  id: Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得目前可用的設計工具動詞的集合。"
  remarks: "目前可用的設計工具動詞的集合，包含所有全域設計工具動詞命令，可加入由<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>上這個介面，以及個別設計工具的動詞命令所提供的方法<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>個別設計工具的屬性。</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 如果與設計工具動詞的名稱衝突的全域動詞命令的名稱，設計工具提供的設計工具動詞的優先順序較高。"
  syntax:
    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }
    return:
      type: System.ComponentModel.Design.DesignerVerbCollection
      description: "A <xref href=&quot;System.ComponentModel.Design.DesignerVerbCollection&quot;> </xref> ，其中包含目前可用的設計工具動詞。"
  overload: System.ComponentModel.Design.IMenuCommandService.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
- uid: System.ComponentModel.Design.MenuCommand
  parent: System.ComponentModel.Design
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
- uid: System.ComponentModel.Design.DesignerVerb
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerb
  nameWithType: DesignerVerb
  fullName: System.ComponentModel.Design.DesignerVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
- uid: System.ComponentModel.Design.DesignerVerbCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerbCollection
  nameWithType: DesignerVerbCollection
  fullName: System.ComponentModel.Design.DesignerVerbCollection
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand
  nameWithType: IMenuCommandService.AddCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb
  nameWithType: IMenuCommandService.AddVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand
  nameWithType: IMenuCommandService.FindCommand
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke
  nameWithType: IMenuCommandService.GlobalInvoke
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand
  nameWithType: IMenuCommandService.RemoveCommand
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb
  nameWithType: IMenuCommandService.RemoveVerb
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu
  nameWithType: IMenuCommandService.ShowContextMenu
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
