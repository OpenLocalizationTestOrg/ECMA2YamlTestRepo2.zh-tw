### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventArgs
  id: RoutedEventArgs
  children:
  - System.Windows.RoutedEventArgs.#ctor
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  langs:
  - csharp
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
  type: Class
  summary: "包含與路由事件相關聯的狀態資訊和事件資料。"
  remarks: "不同 RoutedEventArgs 可以搭配單一<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>.</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 這個類別會負責封裝的事件資料<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>，提供額外的事件狀態資訊，，和事件系統用於叫用之路由事件相關聯的處理常式。</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>"
  syntax:
    content: 'public class RoutedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor
  id: '#ctor'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>類別。"
  remarks: "使用此參數建構函式，新的所有公用屬性時<xref:System.Windows.RoutedEventArgs>執行個體假設預設值如下:-<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> </xref:System.Windows.RoutedEventArgs>      -<xref:System.Windows.RoutedEventArgs.Handled%2A>預設為`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A>      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       Null 值<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>只表示<xref:System.Windows.RoutedEventArgs>資料不會嘗試指定來源。</xref:System.Windows.RoutedEventArgs> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> 這個執行個體的呼叫中使用時<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>根據引發事件，且會傳遞至接聽程式，透過路由的項目會填入值。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.UIElement.RaiseEvent%2A>"
  syntax:
    content: public RoutedEventArgs ();
    parameters: []
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>類別，使用提供的路由的事件識別項。"
  remarks: "當使用這個多載建構函式時，未指定屬性的新<xref:System.Windows.RoutedEventArgs>執行個體假設預設值如下:-<xref:System.Windows.RoutedEventArgs.Handled%2A>預設為`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A> </xref:System.Windows.RoutedEventArgs>      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       Null 值<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>只表示這個<xref:System.Windows.RoutedEventArgs>不會嘗試指定來源。</xref:System.Windows.RoutedEventArgs> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> 這個執行個體的呼叫中使用時<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>和<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>根據引發事件，且會傳遞至接聽程式，透過路由的項目會填入值。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.UIElement.RaiseEvent%2A>"
  example:
  - "The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.  \n  \n [!code-cs[RoutedEventCustom#RaiseEvent](~/add/codesnippet/csharp/RoutedEventCustom/SDKSampleLibrary/class1.cs#raiseevent)]\n [!code-vb[RoutedEventCustom#RaiseEvent](~/add/codesnippet/visualbasic/SDKSampleLibrary/Class1.vb#raiseevent)]"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "這個執行個體的路由的事件識別項<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>類別。"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  id: '#ctor(System.Windows.RoutedEvent,System.Object)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>類別，使用提供的路由的事件識別項，並在有機會來宣告事件不同的來源。"
  remarks: "當使用這個多載建構函式時，未指定屬性的新<xref:System.Windows.RoutedEventArgs>執行個體假設預設值如下:-<xref:System.Windows.RoutedEventArgs.Handled%2A>預設為`false`-<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>預設為`null`。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A> </xref:System.Windows.RoutedEventArgs.Handled%2A> </xref:System.Windows.RoutedEventArgs>       Null 值<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>都會根據引發事件，且透過路由傳遞的項目，但是會讀取`null`叫用之前。</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>       傳遞時，請使用此簽章<xref:System.Windows.RoutedEventArgs>虛擬函式，例如以<xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>、 引數會用來呼叫<xref:System.Windows.UIElement.RaiseEvent%2A>內部。</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A> </xref:System.Windows.RoutedEventArgs>"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "這個執行個體的路由的事件識別項<xref href=&quot;System.Windows.RoutedEventArgs&quot;></xref>類別。"
    - id: source
      type: System.Object
      description: "處理事件時將回報為替代來源。 這會預先填入<xref:System.Windows.RoutedEventArgs.Source*>屬性。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Handled
  id: Handled
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得或設定值，指出處理路由事件在傳送路由事件的目前狀態。"
  remarks: "標記處理的事件將會限制此事件路由上的接聽程式的路由事件的可見性。 事件未仍旅行的路由，其餘部分，但只處理常式特別加入與`HandledEventsToo``true`中<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>將回應叫用方法呼叫。</xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> 預設執行個體接聽程式上的處理常式 (例如那些以表示[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]) 不會叫用。 處理標記處理的事件不是常見的案例。       如果您是控制作者定義您自己的事件，您的決策有關事件的類別處理控制項的使用者，以及衍生的控制項的所有使用者，將會影響層級和可能控制項所包含的其他項目，就是或包含您的控制項。 如需詳細資訊，請參閱[標示路由傳送事件中當做 Handled，和類別處理](~/add/includes/ajax-current-ext-md.md)。       在極少數的情況下則會適當地處理事件在標示為 Handled `true`，藉由變更 Handled 若要修改之事件引數和`false`。 這可能是必要的輸入控制項的事件，例如金鑰處理的特定區域中<xref:System.Windows.UIElement.KeyDown>與<xref:System.Windows.UIElement.TextInput>其中低層級和高層級的輸入的事件會競爭處理，而且每個嘗試使用不同的路由策略。</xref:System.Windows.UIElement.TextInput> </xref:System.Windows.UIElement.KeyDown>"
  example:
  - "The following example implements an event handler that marks the event handled.  \n  \n [!code-vb[ClassHandling#OnStarClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#onstarclasshandler)]\n [!code-cs[ClassHandling#OnStarClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#onstarclasshandler)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "如果設定，設定為<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>如果事件已處理，否則應標記為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 如果讀取這個值，<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref>表示類別處理常式或路由中的某些執行個體處理常式已有標示處理此事件。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>這類的處理常式已標示為處理事件的表示。       預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.RoutedEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "當在衍生類別中覆寫時，提供特定類型的方式，可提高效率，透過基底實作叫用事件處理常式的方式。"
  remarks: "基底實作結合反映來判斷正確的處理常式的任何狀況，其中此處理常式不是依其字面<xref:System.Windows.RoutedEventHandler>，且此步驟中反映一些帶來效能影響。</xref:System.Windows.RoutedEventHandler> 引動過程可更有效率地不依賴反映。 這是要選擇要覆寫它任何路由的事件的引數類別可以使用這個方法會刺激的案例。 實作不應呼叫基底，此方法，因為您的實作應該已經很負責叫用型別安全的處理常式。"
  example:
  - "The following is pseudocode that illustrates a basic pattern that can be used for implementation. Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.  \n  \n [!code-cs[CorePseudocode#RoutedEventArgs](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#routedeventargs)]\n [!code-vb[CorePseudocode#RoutedEventArgs](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#routedeventargs)]"
  syntax:
    content: protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "泛型處理常式 / 委派實作叫用。"
    - id: genericTarget
      type: System.Object
      description: "提供的處理常式應在其叫用的目標。"
  overload: System.Windows.RoutedEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  id: OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "當在衍生類別中覆寫時，提供通知回呼項目時點的值<xref:System.Windows.RoutedEventArgs.Source*>屬性執行個體變更。</xref:System.Windows.RoutedEventArgs.Source*>"
  syntax:
    content: protected virtual void OnSetSource (object source);
    parameters:
    - id: source
      type: System.Object
      description: "新值<xref:System.Windows.RoutedEventArgs.Source*>設為。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.OnSetSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OriginalSource
  id: OriginalSource
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得原始報告來源由純點擊測試，任何可能的<xref:System.Windows.RoutedEventArgs.Source*>調整父類別</xref:System.Windows.RoutedEventArgs.Source*>之前所決定"
  remarks: "一旦之前的類別執行個體中的任何處理常式或事件處理常式叫用，且永遠不會進行調整略過此點，這個屬性會取得其值。 原始的來源資訊是唯讀的類別處理常式或類別實作中，就如同中的事件資料會報告錯誤。       來源可加以調整的常見案例包括控制項的內容模型的內容項目 (清單項目，比方說，內容會報告清單項目項目，做為<xref:System.Windows.RoutedEventArgs.Source%2A>清單項目中的實際項目將會 OriginalSource。</xref:System.Windows.RoutedEventArgs.Source%2A>       由各種項目和內容模型的來源調整不同類別。 調整事件來源的每個類別會嘗試預測的來源是最有用報告且最輸入的案例中的類別提供，而為<xref:System.Windows.RoutedEventArgs.Source%2A>.</xref:System.Windows.RoutedEventArgs.Source%2A>設定該來源的案例 如果此來源不是其中具有相關性的事件處理，請嘗試檢查 OriginalSource 而如果它會報告更適合的不同來源。 如需有關輸入事件的詳細資訊，請參閱[輸入概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public object OriginalSource { get; }
    return:
      type: System.Object
      description: "原始報告來源，在任何可能之前<xref:System.Windows.RoutedEventArgs.Source*>已扁平化複合項目樹狀完成的類別處理進行調整。</xref:System.Windows.RoutedEventArgs.Source*>"
  overload: System.Windows.RoutedEventArgs.OriginalSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得或設定與此相關聯的 RoutedEvent <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>執行個體。"
  remarks: "您無法設定此值<xref:System.Windows.RoutedEventArgs>，已傳送 （比方說，如果您取得透過處理常式的引數）。</xref:System.Windows.RoutedEventArgs> 嘗試這樣做會產生例外狀況。 您可以只設定尚未用來產生事件的引動過程之執行個體上。       RoutedEvent 值不可以是`null`在任何時間。"
  example:
  - "The following example creates new routed event data with an initial constructor and then sets the RoutedEvent property as a subsequent operation. You must have RoutedEvent set prior to raising the routed event.  \n  \n [!code-cs[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/csharp/ColorPicker/ColorPicker.cs#routedeventargsroutedevent)]\n [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/visualbasic/colorpicker/colorpicker.vb#routedeventargsroutedevent)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "已叫用的事件識別項。"
  overload: System.Windows.RoutedEventArgs.RoutedEvent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試變更 RoutedEvent 值，而在路由事件。"
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Source
  id: Source
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得或設定引發事件之物件的參考。"
  remarks: "任何反昇路由已實際旅行的路由，引發的項目之後的事件，而來源的值的任何通道路由不具有尚未向引發它的項目通道的事件，將會是不同的值`sender`事件引數類別的參數。 這兩個項目事件中相關就最重要中任何指定的處理常式 (來源，引發它的項目或`sender`，目前正在處理它的項目) 取決於您的處理常式是否處理的應用程式邏輯。       設定這個屬性通常只是在覆寫或實作其他[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]，調整事件來源，例如當類別處理事件。 不建議重設明顯的事件來源的執行個體的處理常式，特別是當此處理常式不會為已處理標記事件。       如果您不要重設來源報告不同的事件來源、<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>由起始端引發做為第一個來源的報表會繼續<xref:System.Windows.UIElement.RaiseEvent%2A>呼叫。</xref:System.Windows.UIElement.RaiseEvent%2A> </xref:System.Windows.RoutedEventArgs.OriginalSource%2A>"
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "引發事件的物件。"
  overload: System.Windows.RoutedEventArgs.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.RoutedEventArgs.#ctor
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
- uid: System.Windows.RoutedEventArgs.#ctor*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.Handled*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RoutedEventArgs.InvokeEventHandler
- uid: System.Windows.RoutedEventArgs.OnSetSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource
  nameWithType: RoutedEventArgs.OnSetSource
- uid: System.Windows.RoutedEventArgs.OriginalSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
