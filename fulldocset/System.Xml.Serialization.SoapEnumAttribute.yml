### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapEnumAttribute
  id: SoapEnumAttribute
  children:
  - System.Xml.Serialization.SoapEnumAttribute.#ctor
  - System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapEnumAttribute.Name
  langs:
  - csharp
  name: SoapEnumAttribute
  nameWithType: SoapEnumAttribute
  fullName: System.Xml.Serialization.SoapEnumAttribute
  type: Class
  summary: "控制項如何<xref:System.Xml.Serialization.XmlSerializer>序列化列舉成員。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "SoapEnumAttribute 類別屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化的物件做為編碼的 SOAP XML。</xref:System.Xml.Serialization.XmlSerializer> 所產生的 XML 符合全球資訊網協會 (www.w3.org) 文件 「 簡單物件存取通訊協定 (SOAP) 1.1 」 的第 5 節。 如需類似屬性的完整清單，請參閱[屬性，控制編碼 SOAP 序列化](~/add/includes/ajax-current-ext-md.md)。       若要序列化的物件做為編碼的 SOAP 訊息，您必須建構的<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping><xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>類別</xref:System.Xml.Serialization.SoapReflectionImporter></xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>建立的</xref:System.Xml.Serialization.XmlTypeMapping></xref:System.Xml.Serialization.XmlSerializer>       若要變更列舉型別使用 SoapEnumAttribute，<xref:System.Xml.Serialization.XmlSerializer>或可辨識 （當序列化或還原序列化的類別，分別） 會產生。</xref:System.Xml.Serialization.XmlSerializer> 例如，如果列舉型別包含名為的成員`One`，但您偏好的 XML 輸出名為`Single`、 套用 SoapEnumAttribute 列舉成員，以及設定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>「 單一 」 的屬性。</xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>       您可以覆寫<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>建立 SoapEnumAttribute 類別的執行個體，並將它指派給<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性的<xref:System.Xml.Serialization.SoapAttributes>。</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> SoapEnumAttribute 屬性值</xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。</xref:System.Xml.Serialization.SoapAttributeOverrides>       若要序列化的物件做為編碼的 SOAP 訊息，您必須建構的<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping><xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>類別</xref:System.Xml.Serialization.SoapReflectionImporter></xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>建立的</xref:System.Xml.Serialization.XmlTypeMapping></xref:System.Xml.Serialization.XmlSerializer>      > [!NOTE] > 您可以使用 word`SoapEnum`而不是較長的 SoapEnumAttribute 程式碼中。       如需屬性用法的詳細資訊，請參閱[屬性](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a SoapEnumAttribute for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the SoapEnumAttribute. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_12_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_12_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_12_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field)]

      public class SoapEnumAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: SoapEnumAttribute()
  nameWithType: SoapEnumAttribute.SoapEnumAttribute()
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Serialization.SoapEnumAttribute&quot;></xref>類別。"
  remarks: "使用 SoapEnumAttribute 覆寫現有的列舉型別。 建立新的<xref:System.Xml.Serialization.SoapEnumAttribute>、 設定其屬性，以及指派給<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A><xref:System.Xml.Serialization.SoapAttributes>.</xref:System.Xml.Serialization.SoapAttributes>屬性</xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>的物件</xref:System.Xml.Serialization.SoapEnumAttribute> 針對每個列舉的成員，您必須建立新的<xref:System.Xml.Serialization.SoapAttributes>，並將它<xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。</xref:System.Xml.Serialization.SoapAttributeOverrides>      > [!NOTE] > 您可以使用 word`SoapEnum`在您的程式碼，而不是較長的<xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_7_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_7_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_7_1.vb)]"
  syntax:
    content: public SoapEnumAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: SoapEnumAttribute(String)
  nameWithType: SoapEnumAttribute.SoapEnumAttribute(String)
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "初始化的新執行個體<xref href=&quot;System.Xml.Serialization.SoapEnumAttribute&quot;></xref>類別使用指定的項目名稱。"
  remarks: "指定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>當您想產生的 XML 列舉值，不同於列舉值列舉中找到。</xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>      > [!NOTE] > 您可以使用 word`SoapEnum`在您的程式碼，而不是較長的<xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_6_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_6_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_6_1.vb)]"
  syntax:
    content: public SoapEnumAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>所產生的 XML 項目名稱"
  overload: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.Name
  id: Name
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SoapEnumAttribute.Name
  fullName: System.Xml.Serialization.SoapEnumAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "取得或設定值的 XML 中產生文件時<xref:System.Xml.Serialization.XmlSerializer>序列化列舉型別或還原序列化列舉成員時，辨識的值。</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "當您想要產生的 XML 列舉值，不同於在列舉中找到的列舉值，指定的名稱。      > [!NOTE] > 您可以使用 word`SoapEnum`而不是較長的<xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_15_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_15_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_15_1.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "在 XML 中產生的值時的文件<xref:System.Xml.Serialization.XmlSerializer>序列化列舉型別或還原序列化列舉成員時，辨識的值。</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapEnumAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute()
  nameWithType: SoapEnumAttribute.SoapEnumAttribute()
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute()
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute(String)
  nameWithType: SoapEnumAttribute.SoapEnumAttribute(String)
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapEnumAttribute.Name
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: Name
  nameWithType: SoapEnumAttribute.Name
  fullName: System.Xml.Serialization.SoapEnumAttribute.Name
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute
  nameWithType: SoapEnumAttribute.SoapEnumAttribute
- uid: System.Xml.Serialization.SoapEnumAttribute.Name*
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: Name
  nameWithType: SoapEnumAttribute.Name
