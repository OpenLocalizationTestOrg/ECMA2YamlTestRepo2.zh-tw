### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.Change
  id: Change
  children:
  - System.Activities.Presentation.Model.Change.#ctor
  - System.Activities.Presentation.Model.Change.Apply
  - System.Activities.Presentation.Model.Change.Description
  - System.Activities.Presentation.Model.Change.GetInverse
  langs:
  - csharp
  name: Change
  nameWithType: Change
  fullName: System.Activities.Presentation.Model.Change
  type: Class
  summary: "抽象類別，實作時，描述模型樹狀結構的變更。"
  remarks: "這個類別可供復原/取消復原基礎結構來追蹤編輯時段期間所做的變更。"
  syntax:
    content: public abstract class Change
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Change()
  nameWithType: Change.Change()
  fullName: System.Activities.Presentation.Model.Change.Change()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "建立的新執行個體<xref href=&quot;System.Activities.Presentation.Model.Change&quot;></xref>類別。"
  syntax:
    content: protected Change ();
    parameters: []
  overload: System.Activities.Presentation.Model.Change.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.Apply
  id: Apply
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Apply()
  nameWithType: Change.Apply()
  fullName: System.Activities.Presentation.Model.Change.Apply()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "在衍生類別中實作時，請將變更套用至目前的執行個體。"
  syntax:
    content: public abstract bool Apply ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在變更已套用至目前的執行個體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Activities.Presentation.Model.Change.Apply*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.Description
  id: Description
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Description
  nameWithType: Change.Description
  fullName: System.Activities.Presentation.Model.Change.Description
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "在衍生類別中實作時，取得變更的描述。"
  syntax:
    content: public abstract string Description { get; }
    return:
      type: System.String
      description: "傳回<xref:System.String>，其中包含變更的描述。</xref:System.String>"
  overload: System.Activities.Presentation.Model.Change.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.GetInverse
  id: GetInverse
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: GetInverse()
  nameWithType: Change.GetInverse()
  fullName: System.Activities.Presentation.Model.Change.GetInverse()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "在衍生類別中實作時，會擷取變更的逆元。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.Change GetInverse ();
    parameters: []
    return:
      type: System.Activities.Presentation.Model.Change
      description: "傳回<xref href=&quot;System.Activities.Presentation.Model.Change&quot;> </xref> ，其中包含目前執行個體的逆元。"
  overload: System.Activities.Presentation.Model.Change.GetInverse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.Change.#ctor
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Change()
  nameWithType: Change.Change()
  fullName: System.Activities.Presentation.Model.Change.Change()
- uid: System.Activities.Presentation.Model.Change.Apply
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Apply()
  nameWithType: Change.Apply()
  fullName: System.Activities.Presentation.Model.Change.Apply()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.Change.Description
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Description
  nameWithType: Change.Description
  fullName: System.Activities.Presentation.Model.Change.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.Change.GetInverse
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: GetInverse()
  nameWithType: Change.GetInverse()
  fullName: System.Activities.Presentation.Model.Change.GetInverse()
- uid: System.Activities.Presentation.Model.Change
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: Change
  nameWithType: Change
  fullName: System.Activities.Presentation.Model.Change
- uid: System.Activities.Presentation.Model.Change.#ctor*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Change
  nameWithType: Change.Change
- uid: System.Activities.Presentation.Model.Change.Apply*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Apply
  nameWithType: Change.Apply
- uid: System.Activities.Presentation.Model.Change.Description*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Description
  nameWithType: Change.Description
- uid: System.Activities.Presentation.Model.Change.GetInverse*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: GetInverse
  nameWithType: Change.GetInverse
