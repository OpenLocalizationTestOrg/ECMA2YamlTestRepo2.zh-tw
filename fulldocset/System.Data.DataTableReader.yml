### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "DataTableReader 取得一或多個內容<xref href=&quot;System.Data.DataTable&quot;></xref>中一或多個唯讀、 順向結果集的形式的物件。"
  remarks: "DataTableReader 的作用很像任何其他資料讀取器，例如<xref:System.Data.SqlClient.SqlDataReader>，不同之處在於 DataTableReader 提供逐一查看<xref:System.Data.DataTable>.</xref:System.Data.DataTable>中的資料列</xref:System.Data.SqlClient.SqlDataReader> 換句話說，它會提供用於逐一查看快取中的資料列。 DataTableReader 為作用中，而且讀取器會自動維護它的位置時，就可以修改快取的資料。       當您建立從 DataTableReader <xref:System.Data.DataTable>，產生 DataTableReader 物件包含一個結果集具有相同的資料為<xref:System.Data.DataTable>它已用來建立，除了已標示為已刪除的任何資料列。</xref:System.Data.DataTable> </xref:System.Data.DataTable> 資料行出現在相同的順序，與原始<xref:System.Data.DataTable>.</xref:System.Data.DataTable> 傳回結果的結構中有相同的結構描述和資料與原始<xref:System.Data.DataTable>.</xref:System.Data.DataTable> 藉由呼叫已建立 DataTableReader<xref:System.Data.DataSet.GetDataReader%2A>方法<xref:System.Data.DataSet>物件包含多個結果集，如果<xref:System.Data.DataSet>包含一個以上的資料表。</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> 結果會依照相同的順序<xref:System.Data.DataTable>中的物件<xref:System.Data.DataTableCollection>的<xref:System.Data.DataSet>物件。</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       傳回的結果集包含的目前版本的每個<xref:System.Data.DataRow>; 標示為刪除的資料列會略過。</xref:System.Data.DataRow>       `DataTableReader`提供穩定的迭代器，也就是內容`DataTableReader`如果反覆項目期間修改基礎集合的大小，便不會失效。 範例中，如果一個或多個資料列才<xref:System.Data.DataTable.Rows%2A>集合已被刪除，或在反覆項目中目前的位置移除`DataTableReader`會適當地維護並不會使迭代器。</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Data.DataTableReader&quot;></xref>使用所提供的資料類別<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref>從中新<xref href=&quot;System.Data.DataTableReader&quot;></xref>取得它的結果集。"
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "初始化的新執行個體<xref href=&quot;System.Data.DataTableReader&quot;></xref>類別使用提供的陣列<xref href=&quot;System.Data.DataTable&quot;></xref>物件。"
  remarks: "如果您必須建立<xref:System.Data.DataTableReader>根據所有或特定內的資料表子集<xref:System.Data.Dataset>，呼叫`DataSet`的<xref:System.Data.DataSet.GetDataReader%2A>方法。</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> 如果您想要建立新<xref:System.Data.DataTableReader>的群組為基礎的執行個體`DataTable`未為關聯，執行個體會使用這個建構函式。</xref:System.Data.DataTableReader> 您也可以利用這個建構函式來重新排列順序`DataTables`內`DataTableReader`，如果其來源內排序`DataSet`不符合您的需求。"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "陣列<xref href=&quot;System.Data.DataTable&quot;></xref>物件，提供新的結果<xref href=&quot;System.Data.DataTableReader&quot;></xref>物件。"
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "關閉目前<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  remarks: "呼叫`Close()`上關閉`DataTableReader`物件不會引發錯誤。"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "目前資料列的巢狀深度<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  remarks: '`DataTableReader`不支援巢狀結構。 `Depth`屬性一律會傳回零。'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "目前的資料列; 巢狀深度一律為零。"
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "目前的資料列中傳回資料行的數目。"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "當未放置在有效的結果集，0;否則為目前的資料列中的資料行數目。"
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試擷取欄位中的計數關閉<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行值做<xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "不會進行轉換;因此擷取的資料必須已經是布林值或強制為布林值，或會產生例外狀況。       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Boolean
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為位元組。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是位元組或強迫成為一個位元組。       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Byte
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含一個位元組。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "讀取緩衝區的起始於指定資料行位移為陣列指定的緩衝區位移處開始位元組資料的流。"
  remarks: "`GetBytes`在欄位中傳回可用位元組的數。 大部分的情況下這是欄位的確切的長度。 不過，傳回的數字可能小於欄位的實際長度如果`GetBytes`已經使用來取得位元組的欄位。 這可能是案例，例如，當<xref:System.Data.DataTableReader>讀入緩衝區中讀取大型資料結構，如果您要傳入的緩衝區`null`(`Nothing`在 Visual Basic 中)，`GetBytes`傳回整個欄位的長度，以位元組為單位，不剩餘大小的緩衝區位移參數為基礎。</xref:System.Data.DataTableReader>       不會進行轉換;因此擷取的資料必須已經是位元組陣列或可強迫的位元組陣列。"
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: dataIndex
      type: System.Int64
      description: "要從其中開始讀取的作業的欄位內的索引。"
    - id: buffer
      type: System.Byte[]
      description: "要讀入位元組資料流緩衝區。"
    - id: bufferIndex
      type: System.Int32
      description: "要開始將資料放置於緩衝區內的索引。"
    - id: length
      type: System.Int32
      description: "要複製至緩衝區的最大長度。"
    return:
      type: System.Int64
      description: "實際讀取的位元組數目。"
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含的位元組陣列。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為字元。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是字元或字元可強迫。       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Char
      description: "資料行的值。"
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的欄位不包含的字元。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回指定之資料行的值做為字元陣列。"
  remarks: "`GetChars`在欄位中傳回可用字元的數。 大部分的情況下這是欄位的確切的長度。 不過，傳回的數字可能小於欄位的實際長度如果`GetChars`已經使用從欄位取得字元。       如果欄位的結束為止，實際讀取的字元數目可以小於所要求的長度。 如果您將為 null 的緩衝區 (`Nothing`在 Visual Basic 中)，`GetChars`以字元為單位的其餘根據緩衝區的位移參數大小不會傳回整個欄位的長度。       不會進行轉換;因此要擷取的資料必須已經是字元陣列或可強迫的字元陣列。"
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    - id: dataIndex
      type: System.Int64
      description: "要從其中開始讀取的作業的欄位內的索引。"
    - id: buffer
      type: System.Char[]
      description: "要讀入字元資料流的緩衝區。"
    - id: bufferIndex
      type: System.Int32
      description: "要開始將資料放置於緩衝區內的索引。"
    - id: length
      type: System.Int32
      description: "要複製至緩衝區的最大長度。"
    return:
      type: System.Int64
      description: "實際讀取的字元數目。"
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含的字元陣列。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得字串，表示指定的資料行的資料類型。"
  remarks: "GetDataTypeName 方法一律會傳回的基礎類型<xref:System.Data.DataColumn>而不是特定提供者類型。</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.String
      description: "字串，表示資料行的資料類型。"
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得所指定的資料行的值<xref:System.DateTime>物件。</xref:System.DateTime>"
  remarks: "不會進行轉換;因此擷取的資料必須已經是<xref:System.DateTime>或可強迫`DataTime`。</xref:System.DateTime>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.DateTime
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含日期時間值。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行值做<xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "不會進行轉換;因此擷取的資料必須已經是<xref:System.Decimal>或可強迫`Decimal`。</xref:System.Decimal>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Decimal
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含<xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref>值。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得資料行的值做為雙精確度浮點數。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是雙精確度浮點數，或必須可以強迫成為雙精確度浮點數。       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "資料行以零為起始的序數。"
    return:
      type: System.Double
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行沒有雙精確度浮點數。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回可用來逐一查看項目集合的列舉值。"
  remarks: "列舉值，僅允許讀取<xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader>中的資料 列舉值無法用於修改基礎集合。       在一開始，列舉程式位在集合中的第一個項目之前。 在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</xref:System.Collections.IEnumerator.Current%2A> 因此，您必須呼叫`MoveNext`以前移至集合，才能讀取值的第一個元素`Current`。       `Current`傳回<xref:System.Data.Common.DbDataRecord>，並傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>稱為。</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`設定`Current`下一個項目。       集合的末端後，列舉程式會放置在集合中，最後一個元素之後和呼叫`MoveNext`傳回 false。 如果最後一個呼叫`MoveNext`傳回`false`，則呼叫`Current`擲回例外狀況。 此外，因為<xref:System.Data.DataTableReader>提供順向存取其資料，呼叫<xref:System.Collections.IEnumerator.Reset%2A>的 IEnumerator 的方法會擲回<xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       <xref:System.Data.DataTableReader>提供穩定的列舉值。</xref:System.Data.DataTableReader> 這表示即使新增或刪除資料列則會發生在基礎資料內，由 GetEnumerator 的呼叫所傳回的列舉值仍然有效。"
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>代表項目集合的物件。</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得<xref:System.Type>也就是物件的資料型別。</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Type
      description: "<xref:System.Type>也就是物件的資料型別。</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為單精確度浮點數。"
  remarks: "不會進行轉換;因此擷取的資料必須為單精確度浮點數，或必須可以強迫成為單精確度浮點數。       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Single
      description: "資料行的值。"
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不會包含單精確度浮點數。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為全域唯一識別碼 (GUID)。"
  remarks: "不會進行轉換;因此擷取的資料必須已經是<xref:System.Guid>或可強迫`Guid`。</xref:System.Guid>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Guid
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含 GUID。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值為 16 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.Int16>或可強迫`Int16`。</xref:System.Int16>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.Int16
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含 16 位元帶正負號的整數。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為 32 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.Int32>或可強迫`Int32`。</xref:System.Int32>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.Int32
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行沒有 32 位元帶正負號的整數值。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為 64 位元帶正負號的整數。"
  remarks: "不會進行轉換;因此，擷取的資料必須已經是<xref:System.Int64>或可強迫`Int64`。</xref:System.Int64>       呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.Int64
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行沒有 64 位元帶正負號的整數值。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行值做<xref:System.String>.</xref:System.String>"
  remarks: "`GetName`和<xref:System.Data.DataTableReader.GetOrdinal%2A>方法會提供反向的功能。</xref:System.Data.DataTableReader.GetOrdinal%2A> 也就是說，呼叫`GetOrdinal`上呼叫的傳回值`GetName`應傳回原始參數傳遞至`GetName`; 是一樣的相反順序呼叫程序。"
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.String
      description: "指定資料行名稱。"
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得資料行序數，給定的資料行的名稱。"
  remarks: "因為大部分的方法提供<xref:System.Data.DataTableReader>類別必須是以序數資料行編號，您可以使用提供`GetOrdinal`方法來擷取指定的資料行名稱的資料行編號。</xref:System.Data.DataTableReader>       `GetOrdinal`第一次執行區分大小寫的查閱。 如果失敗，進行第二個不區分大小寫的搜尋。 如果找不到資料行編號`IndexOutOfRangeException`就會擲回。       `GetOrdinal`不會區分假名寬度。       因為根據序數進行查閱比具名查閱更有效率，很效率不佳，呼叫`GetOrdinal`在迴圈內。 呼叫以節省時間`GetOrdinal`一次，並將結果指派給整數變數在迴圈中使用"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "資料行的名稱。"
    return:
      type: System.Int32
      description: "以零為起始的資料行序數。"
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的名稱不是有效的資料行名稱。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得提供者專屬格式指定資料行的類型。"
  remarks: "因為<xref:System.Data.DataTableReader>一律會傳回型別儲存在基礎<xref:System.Data.DataColumn>，藉由呼叫 GetProviderSpecificFieldType 方法一律傳回相同的型別做為儲存在<xref:System.Data.DataTable>.</xref:System.Data.DataTable>類型傳回的值</xref:System.Data.DataColumn></xref:System.Data.DataTableReader> 當您使用<xref:System.Data.DataTableReader>類別，呼叫 GetProviderSpecificFieldType 方法會傳回相同的型別呼叫<xref:System.Type.GetType%2A>方法。</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Type
      description: "<xref:System.Type>也就是物件的資料型別。</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得提供者專屬格式的指定資料行的值。"
  remarks: "因為<xref:System.Data.DataTableReader>一律會傳回該類型的基礎<xref:System.Data.DataColumn>，藉由呼叫 GetProviderSpecificValue 方法一律傳回的值會傳回<xref:System.Data.DataTable>.</xref:System.Data.DataTable>內儲存的資料類型相同的資料</xref:System.Data.DataColumn>內儲存</xref:System.Data.DataTableReader>的 當您使用<xref:System.Data.DataTableReader>類別，呼叫 GetProviderSpecificValue 方法會傳回相同的值和類型與呼叫<xref:System.Data.DataTableReader.GetValue%2A>方法。</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "已擷取其值的資料行以零為起始的數目。"
    return:
      type: System.Object
      description: "提供者專屬格式的指定資料行的值。"
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "使用中的所有資料行的提供者特定的型別資訊填滿提供的陣列<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  remarks: "因為<xref:System.Data.DataTableReader>一律會傳回類型的資料儲存在基礎<xref:System.Data.DataColumn>，透過呼叫 GetProviderSpecificValues 方法永遠屬於相同的<xref:System.Data.DataTable>.</xref:System.Data.DataTable>內儲存的資料類型所傳回的值</xref:System.Data.DataColumn></xref:System.Data.DataTableReader> 當您使用<xref:System.Data.DataTableReader>類別，呼叫 GetProviderSpecificValues 方法會傳回相同的值和類型與呼叫<xref:System.Data.DataTableReader.GetValues%2A>方法。</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "要填入的資料行的類型資訊的物件陣列<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
    return:
      type: System.Int32
      description: "複製到陣列中的資料行值的數目。"
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "傳回<xref href=&quot;System.Data.DataTable&quot;></xref>描述的資料行中繼資料<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  remarks: "GetSchemaTable 方法會傳回有關每個資料行的中繼資料以下列順序: |DataReader 資料行 |描述 |  |-----------------------|-----------------|  |ColumnName |因為它的資料行名稱會出現在<xref:System.Data.DataTable>。 |  |ColumnOrdinal |資料行序數 |  |ColumnSize |-1 如果<xref:System.Data.Common.SchemaTableColumn.ColumnSize>（或<xref:System.Data.DataColumn.MaxLength%2A>） 無法判斷或無關的<xref:System.Data.DataColumn>內容，否則 0 或正整數值，包含`MaxLength`值。 |  |NumericPrecision |如果資料行類型是數值類型，這是資料行的最大有效位數。</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> 如果資料行類型不是數值資料類型，這是 null 的值。 |  |NumericScale |如果資料行資料類型小數位數元件，返回小數點右邊的位數。 否則，傳回 null 值。 |  |資料型別 |資料行的基礎類型。 |  |提供者類型 |資料行的資料類型的指標。 如果資料行的資料類型會有所差異資料列至資料列，這個值會是<xref:System.Object>.</xref:System.Object> 此資料行不能包含 null 值。 |  |IsLong |`true`如果資料行的資料類型是<xref:System.String>及其<xref:System.Data.DataColumn.MaxLength%2A>屬性為-1。</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> 否則， `false`。 |  |AllowDBNull |`true` AllowDbNull 條件約束設為資料行，則為 true，否則如果`false`。 |  |IsReadOnly |`true`如果資料行不能修改過，否則`false`。 |  |IsRowVersion |`false`，每個資料行。 |  |IsUnique |`true`︰ 在任何兩個資料列<xref:System.Data.DataTable>可以有相同的值，這個資料行中。</xref:System.Data.DataTable> `IsUnique`是透過本身或是否有型別只適用於此資料行的 UNIQUE 條件約束保證為 true，如果資料行代表索引鍵。 `false`: 資料行可以包含重複的值`DataTable`。 此資料行的預設值是`false`。 |  |IsKey |`true`︰ 資料行是一組資料行的其中一個，結合在一起唯一識別<xref:System.Data.DataTable>.</xref:System.Data.DataTable>中的資料列 與資料行集中`IsKey`設`true`必須唯一識別中的資料列`DataTable`。 沒有這個資料行集是資料行的最小集合的需求。 這個資料行集可能會產生從`DataTable`主索引鍵、 唯一條件約束或唯一索引鍵。 `false`︰ 資料行不是需要唯一識別資料列。 這個值是`true`如果資料行建立單一或複合主索引鍵。 否則，其值是`false`。 |  |IsAutoIncrement |`true`︰ 資料行至新的資料列，以固定遞增方式指派值。 `false`︰ 資料行不會指派值給新的資料列，以固定遞增方式。 此資料行的預設值是`false`。 |  |BaseCatalogName |包含資料行的資料存放區中的類別目錄名稱。 `Null`如果無法判斷基底目錄名稱。 此資料行的預設值是`null`值。 |  |BaseSchemaName |這個值一律是`Null`。 |  |BaseTableName |<xref:System.Data.DataTable>的名稱。 |  |BaseColumnName |<xref:System.Data.DataTable>中的資料行的名稱。 |  |AutoIncrementSeed |<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementSeed%2A>屬性的值。 |  |AutoIncrementStep |<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性的值。 |  |DefaultValue |<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.DefaultValue%2A>屬性的值。 |  |運算式 |如果目前的資料行的運算式資料行，但在運算式中使用的所有資料行屬於相同的運算式字串`T:System.Data.DataTable`，其中包含的運算式資料行，否則為`null`。 |  |ColumnMapping |的<xref:System.Data.MappingType>值相關聯<xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> 類型可以是其中一個`Attribute`， `Element`， `Hidden`，或`SimpleContent`。 預設值是`Element`。 |  |BaseTableNamespace |<xref:System.Data.DataTable>的<xref:System.Data.DataTable.Namespace%2A>屬性的值。 |  |BaseColumnNamespace |值<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.Namespace%2A>屬性。 |</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>描述資料行中繼資料。"
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.DataTableReader&quot;> </xref>已關閉。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定資料行的值做為字串。"
  remarks: "呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.String
      description: "指定資料行的值。"
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "指定的資料行不包含字串。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "原生格式取得指定資料行的值。"
  remarks: "雖然您可以呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否有 null 值呼叫此方法之前，您不必執行此動作。</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.Object
      description: "指定資料行的值。 這個方法會傳回<xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> null 資料行。"
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取資料行中關閉<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "填入物件的陣列與目前資料列的資料行值。"
  remarks: "對於大部分的應用程式，這個方法會提供有效率的方法來擷取所有資料行，而不是個別擷取每個資料行。 如果您的目的是擷取中的資料列中的所有資料行值<xref:System.Data.DataTableReader>、`GetValues`方法提供最有效率的方案。</xref:System.Data.DataTableReader>       您可以傳遞<xref:System.Object>陣列，其中包含產生的資料列中所包含的資料行數目少於。</xref:System.Object> 資料量`Object`陣列可以保留複製到陣列。 您也可以傳遞`Object`陣列的長度會比產生的資料列，在其中案例其他陣列項目會維持不變由方法呼叫中所包含的資料行數目。       這個方法會將`DBNull`null 資料行的輸出陣列中。"
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "陣列<xref:System.Object>要複製的資料行值<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。</xref:System.Object>"
    return:
      type: System.Int32
      description: "複製到陣列中的資料行值的數目。"
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指出是否<xref href=&quot;System.Data.DataTableReader&quot;></xref>包含一或多個資料列。"
  remarks: "`HasRows`屬性會傳回目前的結果集的相關資訊。 如果<xref:System.Data.DataTableReader>包含多個結果集，您可以檢查的值`HasRows`屬性只有在您呼叫之後，立即<xref:System.Data.DataTableReader.NextResult%2A>方法，以判斷新的結果集是否包含資料列。</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       使用`HasRows`屬性，以避免呼叫需求<xref:System.Data.DataTableReader.Read%2A>方法<xref:System.Data.DataTableReader>如果沒有目前的結果集內的資料列。</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataTableReader&quot;></xref>包含一或多個資料列，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試擷取已關閉的相關資訊<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指出是否<xref href=&quot;System.Data.DataTableReader&quot;></xref>已關閉。"
  remarks: "<xref:System.Data.DataTableReader.Close%2A>是唯一的方法和`IsClosed`和<xref:System.Data.DataTableReader.RecordsAffected%2A>屬性可存取後<xref:System.Data.DataTableReader>已關閉。</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataTableReader&quot;></xref>已關閉，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指出資料行是否包含不存在或遺漏的值。"
  remarks: "呼叫這個方法來呼叫具類型的 get 方法之前是否有 null 資料行值 (例如， <xref:System.Data.DataTableReader.GetByte%2A>， <xref:System.Data.DataTableReader.GetChar%2A>，依此類推) 以避免引發錯誤。</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料行值相當於<xref href=&quot;System.DBNull&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指定資料行的原生格式資料行序數。"
  remarks: "這個多載<xref:System.Data.DataTableReader.Item%2A>的行為即會相同與<xref:System.Data.DataTableReader.GetValue%2A>方法。</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "以零為起始的資料行序數。"
    return:
      type: System.Object
      description: "原生格式的指定資料行值。"
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "傳遞的索引超出範圍 0 到<xref:System.Data.DataTableReader.FieldCount*>-1。</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "在原生格式的資料行名稱中取得指定資料行的值。"
  remarks: "第一次執行區分大小寫的查閱。 如果失敗，進行第二個不區分大小寫的搜尋。       這個方法是區分假名寬度。       這個多載的版本<xref:System.Data.DataTableReader.Item%2A>對應於呼叫<xref:System.Data.DataTableReader.GetOrdinal%2A>方法，並接著呼叫<xref:System.Data.DataTableReader.GetValue%2A>方法。</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "資料行的名稱。"
    return:
      type: System.Object
      description: "原生格式的指定資料行值。"
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定的名稱不是有效的資料行名稱。"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "嘗試從已刪除的資料列擷取資料。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "往前推進<xref href=&quot;System.Data.DataTableReader&quot;></xref>的下一個結果集，如果有的話。"
  remarks: "用來處理可以藉由建立產生的多個結果<xref:System.Data.DataTableReader>透過<xref:System.Data.DataSet>，其中包含兩個或多個資料表或包含兩個或多個陣列<xref:System.Data.DataTable>執行個體。</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       新<xref:System.Data.DataTableReader>位於第一個結果。</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果沒有其他結果集;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試瀏覽內關閉<xref href=&quot;System.Data.DataTableReader&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "往前推進<xref href=&quot;System.Data.DataTableReader&quot;></xref>到下一筆記錄。"
  remarks: "預設位置<xref:System.Data.DataTableReader>是第一個資料錄之前。</xref:System.Data.DataTableReader> 因此，您必須呼叫`Read`開始存取任何資料。"
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果有另一個資料列，讀取;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試讀取或存取已關閉的資料行<xref href=&quot;System.Data.DataTableReader&quot;> </xref> 。"
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得插入、 變更或執行 SQL 陳述式所刪除的資料列的數目。"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "<xref href=&quot;System.Data.DataTableReader&quot;> </xref>不支援此屬性，並一律傳回 0。"
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
