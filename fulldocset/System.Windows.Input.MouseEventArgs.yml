### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseEventArgs
  id: MouseEventArgs
  children:
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  langs:
  - csharp
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
  type: Class
  summary: "提供滑鼠相關路由事件，並不特別涉及滑鼠按鈕或滑鼠滾輪，例如資料<xref href=&quot;System.Windows.UIElement.MouseMove&quot;> </xref>。"
  remarks: "此事件資料類別會搭配下列附加事件。      - <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>-<xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>這個事件資料類別搭配下列路由事件。</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> </xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> </xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> </xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> 這些路由的事件轉送，使其更容易存取一般項目模型中先前所列的附加的事件[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]。      - <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>- <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>-<xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>附加的事件和基底的項目路由事件共用其事件資料，而反昇和通道之路由事件的版本也共用事件資料。</xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName> </xref:System.Windows.UIElement.MouseMove?displayProperty=fullName> </xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName> </xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName> 事件路由傳送，這可能會影響事件的處理的特性。 如需詳細資訊，請參閱[輸入概觀](~/add/includes/ajax-current-ext-md.md)。       Other than<xref:System.Windows.RoutedEventArgs>屬性相關的所有路由事件，您可能會在中使用的 MouseEventArgs 最有趣屬性<xref:System.Windows.Input.MouseEventHandler>實作數個屬性公開目前按鈕狀態 (例如<xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) 和<xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>)。</xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> </xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.RoutedEventArgs> <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>很有用，尤其是因為您可以檢查<xref:System.Windows.Input.MouseDevice.Captured%2A>一致的情形。</xref:System.Windows.Input.MouseDevice.Captured%2A></xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>       請注意，專門處理滑鼠按鈕事件的事件會使用不同的事件資料類別， <xref:System.Windows.Input.MouseButtonEventArgs>.</xref:System.Windows.Input.MouseButtonEventArgs> 滑鼠按鈕內容上可用 MouseEventArgs 以防有輸入的模式] 或 [涉及按鈕，即使您正在處理非按鈕事件的互動。       <xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  syntax:
    content: 'public class MouseEventArgs : System.Windows.Input.InputEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;></xref>類別使用指定<xref href=&quot;System.Windows.Input.MouseDevice&quot;></xref>和時間戳記"
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "此事件相關聯的滑鼠裝置。"
    - id: timestamp
      type: System.Int32
      description: "輸入發生的時間。"
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;></xref>類別使用指定<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>，時間戳記和<xref href=&quot;System.Windows.Input.StylusDevice&quot;> </xref>。"
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "此事件相關聯的滑鼠裝置。"
    - id: timestamp
      type: System.Int32
      description: "輸入發生的時間。"
    - id: stylusDevice
      type: System.Windows.Input.StylusDevice
      description: "邏輯手寫筆裝置與此事件相關聯。"
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "傳回滑鼠指標相對於指定項目的位置。"
  remarks: "點 (0，0) 是參考框架的左上角。       靜態<xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName>方法也可用來取得的滑鼠位置。</xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "要當成參考框架計算滑鼠指標位置的項目。"
    return:
      type: System.Windows.Point
      description: "滑鼠指標位置，相對於指定物件 x 和 y 座標。"
  overload: System.Windows.Input.MouseEventArgs.GetPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "特定類型的方式，可以增加事件系統的效率，叫用事件處理常式。"
  remarks: "此實作會將泛型處理常式轉換為<xref:System.Windows.Input.MouseEventHandler>然後再叫用它。</xref:System.Windows.Input.MouseEventHandler> 如需這項實作模式及它的理由的詳細資訊，請參閱<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由傳送事件概觀](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "若要以特定類型的方式呼叫泛型處理常式。"
    - id: genericTarget
      type: System.Object
      description: "要呼叫的處理常式上的目標。"
  overload: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得滑鼠左鍵的目前狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example prints a message if the state of the LeftButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsleftbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsleftbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "左邊的滑鼠按鈕時，可能是目前狀態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>或<xref href=&quot;System.Windows.Input.MouseButtonState&quot;> </xref>。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得滑鼠中間鍵的目前狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example prints a message if the state of the MiddleButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmiddlebuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "滑鼠中間鍵，可能是目前的狀態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>或<xref href=&quot;System.Windows.Input.MouseButtonState&quot;> </xref>。 沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  id: MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得與此事件相關聯的滑鼠裝置。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example gets the <xref:System.Windows.Input.MouseDevice> associated with an input event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmousedevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmousedevice)]"
  syntax:
    content: public System.Windows.Input.MouseDevice MouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "此事件相關聯的滑鼠裝置。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.MouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得目前的滑鼠按鈕狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example prints a message if the state of the RightButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsrightbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsrightbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "右邊的滑鼠按鈕時，可能是目前狀態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>或<xref href=&quot;System.Windows.Input.MouseButtonState&quot;> </xref>。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  id: StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得與此事件相關聯的手寫筆裝置。"
  remarks: ''
  example:
  - "The following example shows how to retrieve the <xref:System.Windows.Input.StylusDevice> associated with an event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsstylusdevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsstylusdevice)]"
  syntax:
    content: public System.Windows.Input.StylusDevice StylusDevice { get; }
    return:
      type: System.Windows.Input.StylusDevice
      description: "手寫筆，與此事件相關聯。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.StylusDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得第一個延伸的滑鼠按鍵的目前狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example prints a message if the state of the XButton1 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton1buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "可能是第一個延伸的滑鼠按鍵的目前狀態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>或<xref href=&quot;System.Windows.Input.MouseButtonState&quot;> </xref>。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得第二個延伸的滑鼠按鍵的狀態。"
  remarks: "<xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</xref:System.Windows.Input.Mouse>"
  example:
  - "The following example prints a message if the state of the XButton2 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton2buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "可能是第二個延伸的滑鼠按鍵的目前狀態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>或<xref href=&quot;System.Windows.Input.MouseButtonState&quot;> </xref>。  沒有預設值。"
  overload: System.Windows.Input.MouseEventArgs.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputEventArgs
  isExternal: false
  name: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
- uid: System.Windows.Input.StylusDevice
  parent: System.Windows.Input
  isExternal: false
  name: StylusDevice
  nameWithType: StylusDevice
  fullName: System.Windows.Input.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
- uid: System.Windows.Input.MouseEventArgs.#ctor*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs.MouseEventArgs
- uid: System.Windows.Input.MouseEventArgs.GetPosition*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: MouseEventArgs.GetPosition
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseEventArgs.InvokeEventHandler
- uid: System.Windows.Input.MouseEventArgs.LeftButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseEventArgs.MiddleButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
