### YamlMime:ManagedReference
items:
- uid: System.Configuration.IdnElement
  id: IdnElement
  children:
  - System.Configuration.IdnElement.#ctor
  - System.Configuration.IdnElement.Enabled
  - System.Configuration.IdnElement.Properties
  langs:
  - csharp
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
  type: Class
  summary: "提供的組態設定的國際網域名稱 (IDN) 中的處理&lt;xref:System.Uri?displayProperty=fullName&gt;類別。"
  remarks: "現有<xref:System.Uri?displayProperty=fullName>類別已經擴充成支援國際資源識別項 (IRI) 會根據 RFC 3987。</xref:System.Uri?displayProperty=fullName> 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI。 這可確保先前版本的.NET framework 應用程式相容性。       IdnElement 的組態設定是間接控制<xref:System.Configuration.IriParsingElement>組態設定，該控制項 IRI 中的處理<xref:System.Uri?displayProperty=fullName>類別。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> 為了能夠處理的 IDN 必須啟用 IRI 處理。 如果 IRI 處理已停用，IDN 處理將會設定為預設設定，其中的.NET Framework 2.0 行為用於相容性，而不會使用 IDN 名稱。       國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。       組態設定 IdnElement 會讀取一次當第一個<xref:System.Uri?displayProperty=fullName>類別建構。</xref:System.Uri?displayProperty=fullName> 組態設定，該時間之後的變更都會被忽略。       如需有關 IRI 支援的詳細資訊，請參閱<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>的 < 備註 > 一節"
  syntax:
    content: 'public sealed class IdnElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Configuration.IdnElement.#ctor
  id: '#ctor'
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.IdnElement&quot;></xref>類別。"
  remarks: "這個建構函式建立的<xref:System.Configuration.IdnElement>執行個體</xref:System.Configuration.IdnElement>"
  syntax:
    content: public IdnElement ();
    parameters: []
  overload: System.Configuration.IdnElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Enabled
  id: Enabled
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得或設定值<xref href=&quot;System.Configuration.IdnElement&quot;></xref>組態設定。"
  remarks: "國際網域名稱 (IDN) 屬性只會控制 IDN 處理。 預設會執行所有其他國際資源識別項 (IRI) 處理 （例如字元正規化）。       <xref:System.Configuration.IdnElement>間接由<xref:System.Configuration.IriParsingElement?displayProperty=fullName>組態設定，控制 IRI<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>中處理</xref:System.Configuration.IriParsingElement?displayProperty=fullName></xref:System.Configuration.IdnElement>的組態設定 為了能夠處理的 IDN 必須啟用 IRI 處理。 如果 IRI 處理已停用，IDN 處理將會設定為預設設定，其中的.NET Framework 2.0 行為用於相容性，而不會使用 IDN 名稱。       組態設定<xref:System.Configuration.IdnElement>會讀取一次當第一個<xref:System.Uri?displayProperty=fullName>類別建構。</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> 組態設定，該時間之後的變更都會被忽略。       如需有關 IRI 支援的詳細資訊，請參閱<xref:System.Uri?displayProperty=fullName>類別</xref:System.Uri?displayProperty=fullName>的 < 備註 > 一節"
  syntax:
    content: public UriIdnScope Enabled { get; set; }
    return:
      type: System.UriIdnScope
      description: "A <xref href=&quot;System.UriIdnScope&quot;> </xref>包含 IDN 處理目前的組態設定。"
  overload: System.Configuration.IdnElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Properties
  id: Properties
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "即將加入。"
  overload: System.Configuration.IdnElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Configuration.IdnElement.#ctor
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
- uid: System.Configuration.IdnElement.Enabled
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
- uid: System.UriIdnScope
  parent: System
  isExternal: false
  name: UriIdnScope
  nameWithType: UriIdnScope
  fullName: System.UriIdnScope
- uid: System.Configuration.IdnElement.Properties
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.IdnElement.#ctor*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement.IdnElement
- uid: System.Configuration.IdnElement.Enabled*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
- uid: System.Configuration.IdnElement.Properties*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
