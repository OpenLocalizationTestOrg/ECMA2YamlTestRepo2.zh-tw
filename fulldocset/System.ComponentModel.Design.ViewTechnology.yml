### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "定義一組技術，設計工具的主機支援的識別項。"
  remarks: "檢視配接器模型取代，並將功能加入至的 ViewTechnology 功能;不過，ViewTechnology 功能會保留回溯相容性及未來使用，如果您選擇。 如需詳細資訊，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在 http://windowsforms.net/articles/shapedesigner.aspx。       ViewTechnology 定義，可以指出要用來控制設計工具裝載的文件的顯示模式的識別項。       您只應該在設計工具的裝載環境中使用的預設值。 在舊版的[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]，ViewTechnology 列舉，指定的根目錄設計工具所支援的 UI 模型類型。 因為此模型不是可延伸的則您應該改用*檢視配接器*模型。 檢視配接器是會調整成其他類型的物件類型。       例如，HTML 設計工具可能會傳回`DemoDOM`其檢視和樹狀結構。 HTML 設計工具傳回預設檢視的技術。 Windows Form 裝載環境會有一或多個可用的檢視配接器類別。 如果可以轉換一個這類類別`DemoDOM`為 Windows Form 控制項，在裝載應用程式可支援這種類型的設計工具。 如果沒有配接器可以處理在設計工具傳回的資料類型<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>方法載入之設計工具將會失敗，和使用者會看到的錯誤。</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]具有可延伸的配置，以提供檢視配接器，所以它可以適用於任何 UI 技術。 協力廠商技術提供者也可以提供適當的檢視介面卡和其物件模型可立即使用。       如需範例，使用檢視介面卡，請參閱 「.NET 圖形文件庫:: 範例設計師 > 知識庫中的 Windows Form 在 http://windowsforms.net/articles/shapedesigner.aspx。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "指定的預設檢視技術支援。"
  remarks: "根目錄設計工具可能會傳回任何類型的物件，但此物件必須是與配接器的主控件技術相容。 裝載環境，例如[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]提供一個方式來插入新的檢視技術配接器。 Windows Form 設計工具的預設檢視物件是<xref:System.Windows.Forms.Control?displayProperty=fullName>執行個體。</xref:System.Windows.Forms.Control?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "表示在其中檢視物件直接傳遞至開發環境的模式。"
  remarks: "檢視物件必須實作任何開發環境所需的介面。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]開發環境支援 ActiveX 控制項、 將文件或實作可透過 IVsWindowPane 介面的物件的檢視表物件[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]整合) 的程式。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]開發環境支援這個檢視技術。 不一定可以使用所有的開發環境中支援這個檢視技術。"
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "表示 Windows Form 控制項物件所在的根目錄設計工具提供顯示模式。"
  remarks: "設計工具主應用程式中填入在 Windows Form 控制項開發環境文件視窗。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
