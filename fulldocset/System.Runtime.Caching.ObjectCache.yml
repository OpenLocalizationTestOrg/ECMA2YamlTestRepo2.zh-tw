### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ObjectCache
  id: ObjectCache
  children:
  - System.Runtime.Caching.ObjectCache.#ctor
  - System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  - System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCount(System.String)
  - System.Runtime.Caching.ObjectCache.GetEnumerator
  - System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  - System.Runtime.Caching.ObjectCache.Host
  - System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  - System.Runtime.Caching.ObjectCache.Item(System.String)
  - System.Runtime.Caching.ObjectCache.Name
  - System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  - System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ObjectCache
  nameWithType: ObjectCache
  fullName: System.Runtime.Caching.ObjectCache
  type: Class
  summary: "表示物件快取，並提供的基底的方法和屬性存取的物件快取。"
  remarks: "ObjectCache 類型是記憶體中物件快取的主要類型。 若要開發的自訂快取實作，您會衍生自 ObjectCache 類別。      > [!NOTE] > ObjectCache 類別是從新[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]。       <xref:System.Runtime.Caching.MemoryCache>類別衍生自 ObjectCache 類別</xref:System.Runtime.Caching.MemoryCache>內建 <xref:System.Runtime.Caching.MemoryCache>類別是在只有具象的物件快取實作[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]衍生自 ObjectCache 類別</xref:System.Runtime.Caching.MemoryCache>"
  syntax:
    content: 'public abstract class ObjectCache : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "從衍生類別中建構函式呼叫，以便初始化<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>類別。"
  syntax:
    content: protected ObjectCache ();
    parameters: []
  overload: System.Runtime.Caching.ObjectCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，嘗試插入到做為快取的快取項目<xref href=&quot;System.Runtime.Caching.CacheItem&quot;></xref>執行個體，並加入有關如何收回項目詳細資料。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法多載都是虛擬的 (非 abstract) 上<xref:System.Runtime.Caching.ObjectCache>類別，因為<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法會在內部呼叫<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 這會減少快取實作者必須提供的方法多載的數目。 如果快取實作不需要任何特殊行為的<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，但它可以只實作<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法多載。</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "要加入的物件。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功，或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果沒有已經有具有相同索引鍵做為快取中的項目<code> item </code>。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將快取項目插入快取而不覆寫任何現有的快取項目。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法多載都是虛擬的 (非 abstract) 上<xref:System.Runtime.Caching.ObjectCache>類別，因為<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法會在內部呼叫<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 這會減少快取實作者必須提供的方法多載的數目。 如果快取實作不需要任何特殊行為的<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，但它可以只實作<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法多載。</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定的日期和時間將過期的快取項目。 這個參數時，需要<xref:System.Runtime.Caching.ObjectCache.Add*>方法呼叫。</xref:System.Runtime.Caching.ObjectCache.Add*>"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 因為中沒有實作區域[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]，預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果插入成功，或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果沒有已經有具有相同索引鍵做為快取中的項目<code> key </code>。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將快取項目插入快取中，指定將會如何收回項目相關資訊。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法多載都是虛擬的 (非 abstract) 上<xref:System.Runtime.Caching.ObjectCache>類別，因為<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法會在內部呼叫<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 這會減少快取實作者必須提供的方法多載的數目。 如果快取實作不需要任何特殊行為的<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，但它可以只實作<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法多載。</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功插入再試一次，或<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果沒有已經有具有相同索引鍵做為快取中的項目<code> key </code>。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將指定<xref href=&quot;System.Runtime.Caching.CacheItem&quot;></xref>物件至快取中，指定將會如何收回項目相關資訊。"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: value
      type: System.Runtime.Caching.CacheItem
      description: "要插入的物件。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
    return:
      type: System.Runtime.Caching.CacheItem
      description: "如果具有相同索引鍵的快取項目存在，則指定的快取項目，否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將快取項目插入快取中，使用的索引鍵、 物件快取項目、 絕對逾期值，並可選擇性的區域新增至快取。"
  remarks: "這個 AddOrGetExisting 方法多載傳回的物件值，不<xref:System.Runtime.Caching.CacheItem>物件。</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定的日期和時間將過期的快取項目。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "如果存在具有相同索引鍵的快取項目，指定的快取項目的值。否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將快取項目插入快取中，指定索引鍵和值，快取項目，而有關如何將會收回項目。"
  remarks: "AddOrGetExisting 方法傳回的物件值，不<xref:System.Runtime.Caching.CacheItem>物件。</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "如果存在具有相同索引鍵的快取項目，指定的快取項目的值。否則， <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，會檢查快取項目是否已存在於快取中。"
  syntax:
    content: public abstract bool Contains (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取可以找到，如果區域實作快取中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果快取包含相同的金鑰值與快取項目<code> key </code>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，會建立<xref href=&quot;System.Runtime.Caching.CacheEntryChangeMonitor&quot;></xref>可以觸發事件以回應變更的物件會指定快取項目。"
  remarks: "當衍生<xref:System.Runtime.Caching.ObjectCache>類別會覆寫基底 CreateCacheEntryChangeMonitor 方法，必須在建立快取實作<xref:System.Runtime.Caching.CacheEntryChangeMonitor>物件。</xref:System.Runtime.Caching.CacheEntryChangeMonitor> </xref:System.Runtime.Caching.ObjectCache> 此特製化的變更監視中指定的快取項目變更時，告知呼叫端`keys`參數。 例如，如果受監視的項目中`keys`更新或從快取中移除參數，這個方法所建立的變更監視器都會觸發事件。       字串值，如果快取實作支援具名快取區域，可以指定為`regionName`參數。 否則，此參數預設為`null`。      > [!NOTE] > 並非所有的快取實作支援快取項目的變更監視器。 若要判斷您的快取實作是否支援<xref:System.Runtime.Caching.CacheEntryChangeMonitor>物件，請參閱特定快取實作的文件。</xref:System.Runtime.Caching.CacheEntryChangeMonitor>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "若要監視的快取項目唯一識別碼。"
    - id: regionName
      type: System.String
      description: "選擇性。 在快取金鑰存放在快取中的具名的區域`keys`參數存在，如果實作區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Runtime.Caching.CacheEntryChangeMonitor
      description: "變更監視來監視快取中的快取項目。"
  overload: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  id: DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，取得快取實作所提供之功能的描述。"
  syntax:
    content: public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }
    return:
      type: System.Runtime.Caching.DefaultCacheCapabilities
      description: "旗標，表示快取實作的預設功能的位元組合。"
  overload: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，取得指定的快取項目從快取做為物件。"
  syntax:
    content: public abstract object Get (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "若要取得快取項目的唯一識別項。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目已加入其中，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "所識別的快取項目<code> key </code>。"
  overload: System.Runtime.Caching.ObjectCache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  id: GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，取得指定的快取項目從快取為<xref href=&quot;System.Runtime.Caching.CacheItem&quot;></xref>執行個體。"
  remarks: "這個方法多載存在，因為某些快取實作可能會延長<xref:System.Runtime.Caching.CacheItem>類別。</xref:System.Runtime.Caching.CacheItem> 在此情況下，<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>方法多載不會一定傳回快取資料的所有資訊。</xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 不過，GetCacheItem 方法多載可讓自訂快取傳回不只是快取的值。       GetCacheItem 方法就像<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>方法，不同之處在於 GetCacheItem 方法會傳回傳回做為快取項目<xref:System.Runtime.Caching.CacheItem>執行個體。</xref:System.Runtime.Caching.CacheItem> </xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "若要取得快取項目的唯一識別項。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取已加入其中，如果區域實作快取中的具名的區域。 因為中沒有實作區域[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]，預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Runtime.Caching.CacheItem
      description: "所識別的快取項目<code> key </code>。"
  overload: System.Runtime.Caching.ObjectCache.GetCacheItem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  id: GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，請快取中取得快取項目的總數。"
  syntax:
    content: public abstract long GetCount (string regionName = null);
    parameters:
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目計數應該計算，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Int64
      description: "快取中的快取項目數。 如果<code> regionName </code>不<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，計數會指出指定的快取區中的項目數。"
  overload: System.Runtime.Caching.ObjectCache.GetCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，會建立可用來逐一查看的快取項目集合的列舉值。"
  remarks: "快取實作者可以覆寫，並擴充此方法以提供自訂方法來逐一查看快取項目的集合。      > [!NOTE] > 傳回列舉值通常是更昂貴的作業，比傳回整個快取項目。       呼叫這個方法是明確介面實作，<xref:System.Runtime.Caching.ObjectCache>類別具有的<xref:System.Collections.IEnumerable.GetEnumerator%2A>和<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>方法。</xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "列舉值物件可存取快取中的快取項目。"
  overload: System.Runtime.Caching.ObjectCache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，取得一組對應到指定之索引鍵的快取項目。"
  remarks: "GetValues 方法多載是支援單一網路通話期間，從快取擷取多個快取項目的分散式快取的效能最佳化。       雖然呼叫端可以傳遞至方法的一個或多個索引鍵，也不會保證所有索引鍵代表快取中的項目。 因此，傳回的字典可能會包含項目數量小於跟著傳遞至此方法的索引鍵數目。"
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> GetValues (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "若要取得的快取項目之唯一識別碼集合。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目或項目已加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "表示快取項目索引鍵/值組的字典。"
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  id: GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得一組對應到指定之索引鍵的快取項目。"
  remarks: "GetValues 方法多載就像是<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>方法多載，但可讓您使用選擇性參數的語法支援的 managed 語言，例如 C# 傳遞命名的範圍。</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>       此方法是一種虛擬方法，因為<xref:System.Runtime.Caching.ObjectCache>類別會提供預設實作會傳遞`params`陣列<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>方法多載。</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,object> GetValues (string regionName, string[] keys);
    parameters:
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目或項目已加入，如果實作區域中的具名的區域。 因為中沒有實作區域[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]，預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    - id: keys
      type: System.String[]
      description: "若要取得的快取項目之唯一識別碼集合。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "表示快取項目索引鍵/值組的字典。"
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Host
  id: Host
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得或設定受管理的主控環境可供使用的參考<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>實作，而且可以裝載特定服務提供給<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>實作。"
  remarks: "主機的屬性是由用於[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]裝載環境和快取實作，可實作取決於.NET Framework 的行為由裝載環境。       下表列出的主機環境服務，可能會提供 managed 裝載環境，以及屬於可<xref:System.Runtime.Caching.ObjectCache>實作透過主控件屬性集: |服務 |描述 |  |-------------|-----------------|  |<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|可讓主機環境提供的功能，例如識別效能計數器的快取實作，可能需要的應用程式網域識別項。 |  |<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|可讓主機環境提供自訂的檔案變更通知系統，而不是使用中提供一個[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]。 |  |<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|可讓快取實作報表快取記憶體耗用量給主機環境。</xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> </xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> </xref:System.Runtime.Caching.Hosting.IApplicationIdentifier> </xref:System.Runtime.Caching.ObjectCache> 這可讓主機環境，來集中管理跨多個快取實作的記憶體耗用量。 |     > [!NOTE] > 這個屬性值的呼叫端需要不受限制的程式碼存取安全性權限。"
  syntax:
    content: public static IServiceProvider Host { get; set; }
    return:
      type: System.IServiceProvider
      description: "快取感知的 managed 裝載環境參考。"
  overload: System.Runtime.Caching.ObjectCache.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指派給屬性的值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試設定屬性值，一次以上。"
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  id: InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得值，指出快取項目有無絕對到期日。"
  remarks: "依照到期值應永遠不過期插入 InfiniteAbsoluteExpiration 欄位值集的快取的快取項目會根據時間的絕對點。 不過，這項設定的快取項目可以從快取收回，因為其他原因而是由特定快取實作，例如記憶體不足的壓力所造成的變更監視器事件收回。"
  syntax:
    content: public static readonly DateTimeOffset InfiniteAbsoluteExpiration;
    return:
      type: System.DateTimeOffset
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  id: Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得或設定的預設索引子<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>類別。"
  remarks: "這個屬性的 set 存取子的行為就像是<xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>方法。</xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 就內部而言，快取實作無法設定指定的值絕對期限<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>方法。</xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 此行為但最終仍是根據快取實作。       Get 存取子的行為就像呼叫<xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>方法與使用`null`區域名稱。</xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>"
  syntax:
    content: public abstract object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "快取中快取項目的唯一識別項。"
    return:
      type: System.Object
      description: "做為索引子，快取執行個體索引鍵。"
  overload: System.Runtime.Caching.ObjectCache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Name
  id: Name
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得特定名稱<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>執行個體。"
  remarks: "某些快取實作可能支援執行單一應用程式中的快取多個執行個體。 這個屬性可讓快取實作者傳回可識別特定快取執行個體的名稱。"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "特定快取執行個體的名稱。"
  overload: System.Runtime.Caching.ObjectCache.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "表示快取項目沒有滑動期限。"
  remarks: "持續時間或時間定義的視窗為基礎的到期日也稱為滑動期限。 一般來說，收回項目，根據滑動期限的快取實作，將會移除未存取指定的時間視窗中的項目。       因為滑動的時間間隔中的非活動時，應該永遠不會收回 NoSlidingExpiration 欄位值設定為到期值插入快取的快取項目。 不過，如果它絕對期限，或某些其他收回事件發生時，這類變更監視器或記憶體不足的壓力會收回快取項目。"
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，從快取中移除快取項目。"
  remarks: "如果您覆寫這個方法在自訂快取實作中，對應至快取中快取項目是否`key`，應傳回移除之項目的值。 如果執行任何動作已從快取中移除，這個方法應傳回`null`。      > [!NOTE] > 某些分散式快取實作可能不支援傳回值，已從快取中移除的功能。 這可能是因為快取實作不支援傳回已移除的快取項目的值。 它也可能因為傳回的值是過於昂貴時，將物件封送處理。 在這種情況下，快取實作可以傳回`null`。"
  syntax:
    content: public abstract object Remove (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目已加入其中，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Object
      description: "物件，表示移除快取項目索引鍵，所指定的值或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到指定的項目。"
  overload: System.Runtime.Caching.ObjectCache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，插入快取項目插入快取中做<xref href=&quot;System.Runtime.Caching.CacheItem&quot;></xref>執行個體，並指定資訊將會如何收回項目。"
  remarks: "如果索引鍵`item`不存在，`item`會插入做為新的快取項目。 如果有相符的索引鍵的項目`item`存在，請從值`item`用來更新或覆寫現有的快取項目的值。"
  syntax:
    content: public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "要加入快取項目。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "在衍生類別中覆寫，將快取項目插入快取中，指定以時間為基礎的到期詳細資料。"
  remarks: "如果符合的項目`key`不存在於快取，`value`和`key`用來為新的快取項目插入。 如果有相符的索引鍵的項目`item`存在，請更新快取項目或使用覆寫`value`。"
  syntax:
    content: public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定的日期和時間將過期的快取項目。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "當在衍生類別中覆寫時，會插入至快取的快取項目。"
  remarks: "這個方法多載可讓您提供比以時間為基礎的絕對期限中提供的更多的收回或到期詳細資料。       如果符合的項目`key`不存在於快取，`value`和`key`用來為新的快取項目插入。 如果有相符的索引鍵的項目`item`存在，請更新快取項目或使用覆寫`value`。"
  syntax:
    content: public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "快取項目的唯一識別項。"
    - id: value
      type: System.Object
      description: "要插入的物件。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "物件，包含快取項目的收回詳細資料。 這個物件提供收回的選項比簡單絕對期限多。"
    - id: regionName
      type: System.String
      description: "選擇性。 快取的快取項目可以加入，如果實作區域中的具名的區域。 選擇性參數的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "即將加入。"
  overload: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "支援泛型集合上反覆運算。"
  remarks: "這個成員是明確介面成員實作。 只有在衍生時才能使用<xref:System.Runtime.Caching.ObjectCache>執行個體轉換成<xref:System.Collections.IEnumerable>介面。</xref:System.Collections.IEnumerable> </xref:System.Runtime.Caching.ObjectCache>       開發人員可以使用這個方法來逐一查看快取項目的一般集合。       這是預設<xref:System.Collections.IEnumerable.GetEnumerator%2A>實作會在內部呼叫<xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>方法。</xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "提供快取中項目的存取權的列舉值物件。"
  overload: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Caching.ObjectCache.#ctor
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.CacheItem
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItem
  nameWithType: CacheItem
  fullName: System.Runtime.Caching.CacheItem
- uid: System.Runtime.Caching.CacheItemPolicy
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
- uid: System.Runtime.Caching.CacheEntryChangeMonitor
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryChangeMonitor
  nameWithType: CacheEntryChangeMonitor
  fullName: System.Runtime.Caching.CacheEntryChangeMonitor
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.DefaultCacheCapabilities
  parent: System.Runtime.Caching
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: DefaultCacheCapabilities
  fullName: System.Runtime.Caching.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Caching.ObjectCache.Host
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
- uid: System.Runtime.Caching.ObjectCache.Name
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Runtime.Caching.ObjectCache.#ctor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache
  nameWithType: ObjectCache.ObjectCache
- uid: System.Runtime.Caching.ObjectCache.Add*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add
  nameWithType: ObjectCache.Add
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting
  nameWithType: ObjectCache.AddOrGetExisting
- uid: System.Runtime.Caching.ObjectCache.Contains*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains
  nameWithType: ObjectCache.Contains
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get
  nameWithType: ObjectCache.Get
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem
  nameWithType: ObjectCache.GetCacheItem
- uid: System.Runtime.Caching.ObjectCache.GetCount*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount
  nameWithType: ObjectCache.GetCount
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator
  nameWithType: ObjectCache.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.GetValues*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues
  nameWithType: ObjectCache.GetValues
- uid: System.Runtime.Caching.ObjectCache.Host*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
- uid: System.Runtime.Caching.ObjectCache.Item*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item
  nameWithType: ObjectCache.Item
- uid: System.Runtime.Caching.ObjectCache.Name*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.Remove*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove
  nameWithType: ObjectCache.Remove
- uid: System.Runtime.Caching.ObjectCache.Set*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set
  nameWithType: ObjectCache.Set
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator
