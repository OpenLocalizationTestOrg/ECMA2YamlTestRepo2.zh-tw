### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  id: Peer
  children:
  - System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.Invite
  - System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.ToString
  langs:
  - csharp
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
  type: Class
  summary: "此類別代表遠端對等。"
  remarks: "抽象的對等的類別目的是要提供可由衍生類別，例如<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>和<xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>共用的通用基底類別定義 它無法直接建構，因為它是抽象。 開發人員應該改用 PeerNearMe 或 PeerContact 子類別。       連絡人、 對等、 遠端對等<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>， <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>，和<xref:System.Net.PeerToPeer.Collaboration.PeerContact>是同義字的詞彙，內容為基礎。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>       「 呼叫對等 」 與 「 遠端對等 」 的一般意義相同。  呼叫端的對等不是指應用程式呼叫指定的方法。"
  syntax:
    content: 'public abstract class Peer : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.Peer>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.Peer>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "初始化的新執行個體<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>型別。"
  remarks: "傳回型別<xref:System.Net.PeerToPeer.Collaboration.Peer>物件，或<xref:System.Net.PeerToPeer.Collaboration.PeerContact><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>子類別化</xref:System.Net.PeerToPeer.Collaboration.Peer> PeerContact<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>或 PeerNearMe<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A>包含唯一的名稱，新的對等物件的參考。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>"
  syntax:
    content: protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "參考保有還原序列化這個執行個體所需的資料物件。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "提供方法來還原序列化資料的內容。 也稱為序列化資料的來源。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "所使用的資源全部釋出<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>物件。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>物件，並選擇性釋放 managed 的資源。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  id: Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "執行區分大小寫的比較目前的<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>和指定的對等。"
  remarks: "兩個對等會被視為相等，如果它們有相同的端點集合，不論中的值及其<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>屬性。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 使用案例不包含此類別直接，但是而不是衍生<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>或<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.Peer
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>比較這個執行個體的執行個體。"
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果提供<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>執行個體具有相同的<xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*>與這個對等執行個體，否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*> 這個方法也會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>如果對等參數是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "於其中填入<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>物件將序列化目標所需的資料<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>来填入資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "這個序列化的目的端。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  id: GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "從本機快取取得資料物件的集合。"
  remarks: "這項功能只公開的<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。</xref:System.Net.PeerToPeer.Collaboration.PeerContact>  這項功能不會顯示在任何其他類型的對等，基於安全性考量。       如果對等共同作業工作階段未具現化與<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>，這個方法無法存取本機電腦上的物件。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>  也是如此的共同作業工作階段中註冊應用程式。       對等物件的集合包含應用程式、 資料物件和顯示狀態資訊的對等或這個執行個體所指定的端點。 如果不找到端點的任何物件，則傳回的集合大小為零 (0) 是。 如果呼叫的對等訂閱此端點時，會自動更新快取。否則<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必須在呼叫這個方法之前呼叫。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       呼叫端不需要登入，此方法才能成功完成的共同作業基礎結構。  在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，呼叫端之前呼叫這個方法，已登入。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       注意︰<xref:System.Net.PeerToPeer.Collaboration.Peer>而不是子類別<xref:System.Net.PeerToPeer.Collaboration.PeerContact>和<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別</xref:System.Net.PeerToPeer.Collaboration.Peer>上定義其他多載"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>的對等或這個執行個體所指定端點的集合。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫端未訂閱的端點，或尚未呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "這個方法是無法完成，因為基礎的對等共同作業基礎結構發生錯誤。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>提供相關聯的物件<xref:System.Guid>從<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;> </xref>。</xref:System.Guid>"
  remarks: "這項功能只公開的<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。</xref:System.Net.PeerToPeer.Collaboration.PeerContact> 這項功能不會顯示在任何其他類型的對等，基於安全性考量。       對等物件的集合包含應用程式、 資料物件和顯示狀態資訊的對等或這個執行個體所指定的端點。 如果不找到端點的任何物件，則傳回的集合大小為零 (0) 是。 當呼叫端的對等訂閱指向此端點時，會自動更新快取。否則<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必須在呼叫這個方法之前呼叫。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       呼叫端不需要登入，此方法才能成功完成的共同作業基礎結構。  在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，呼叫端之前呼叫這個方法，已登入。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 共同作業工作階段開始時，會建立此狀態。       注意︰<xref:System.Net.PeerToPeer.Collaboration.Peer>而不是衍生的類別<xref:System.Net.PeerToPeer.Collaboration.PeerContact>和<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別</xref:System.Net.PeerToPeer.Collaboration.Peer>上定義其他的多載"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);
    parameters:
    - id: objectId
      type: System.Guid
      description: "<xref:System.Guid>的<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>要從集合中擷取物件</xref:System.Guid>"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>提供<xref:System.Guid>.</xref:System.Guid>相關聯的物件 如果找不到物件，傳回的集合大小為零 (0) 時。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "物件識別碼是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼叫端未訂閱<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>或尚未呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>對它。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "取得物件資訊從對等電腦時，就會發生錯誤。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得可用的目前狀態資訊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>。"
  remarks: "顯示狀態資訊包括例如線上、 離線，以及離開狀態描述元。       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>為其擷取顯示狀態資訊。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "傳回<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;></xref>物件包含可用的端點是否存在資訊是否可用，否則它是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerEndPoint</code>不包含有效的端點。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerEndPoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "此物件已被處置，無法用於目前的對等作業。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "從對等電腦擷取狀態資訊時發生錯誤。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "傳送的邀請<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>啟動特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 對等共同作業工作階段開始時，會建立此狀態。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>從收到的邀請的對等。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   邀請程序期間發生錯誤。      -目前執行中應用程式未向對等共同作業基礎結構。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "傳送的邀請<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>啟動特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 對等共同作業工作階段開始時，會建立此狀態。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>的傳送邀請。"
    - id: message
      type: System.String
      description: "要傳送給遠端對等，以及應用程式邀請的訊息。  訊息可以是不超過 255 個 Unicode 字元。"
    - id: invitationData
      type: System.Byte[]
      description: "使用者定義的資料與該項邀請相關聯的 blob。  其大小可以不大於 16384 個位元組。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>從收到的邀請的對等。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "應用程式未註冊的共同作業。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>大於 16384 個位元組。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   邀請程序期間發生錯誤。      -目前執行中應用程式未向對等共同作業基礎結構。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "開始非同步的邀請作業傳送的邀請<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>啟動特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 對等共同作業工作階段開始時，會建立此狀態。"
  syntax:
    content: public abstract void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "要傳遞至回呼的非同步作業來識別使用者定義物件。 這需要在進行中的所有非同步邀請作業之間，參數必須是唯一的。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   邀請程序期間發生錯誤。      -目前執行中應用程式未向共同作業基礎結構。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "開始非同步的邀請作業傳送的邀請<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>啟動特定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>。"
  remarks: "呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 對等共同作業工作階段開始時，會建立此狀態。"
  syntax:
    content: public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>的傳送邀請。"
    - id: message
      type: System.String
      description: "要傳送給遠端對等，以及應用程式邀請的訊息。 此訊息的大小上限是 255 個 Unicode 字元。"
    - id: invitationData
      type: System.Byte[]
      description: "使用者定義的資料與該項邀請相關聯的 blob。  其大小可以不大於 16384 個位元組。"
    - id: userToken
      type: System.Object
      description: "要傳遞至回呼的非同步作業來識別使用者定義物件。 這需要在進行中的所有非同步邀請作業之間，參數必須是唯一的。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "應用程式未向共同作業基礎結構。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>大於 16384 個位元組。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   邀請程序期間發生錯誤。      -目前執行中應用程式未向共同作業基礎結構。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  id: InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取消與已傳送邀請<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>方法。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>"
  remarks: "呼叫這個方法可確保系統會停止等候<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從 InviteAsync 要求相關聯的對等。</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       多個邀請可能在任何指定時間未完成。  如果在 InviteAsyncCancel 方法時所識別的非同步作業呼叫`userToken`是不在是否存在，會擲回例外狀況。 `userToken`必須提供物件，因為它用來追蹤特定的非同步呼叫。 這個主機應用程式所提供的物件是唯一的每個邀請要求。       使用這個方法時，<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>可能仍會引發事件，但已取消上的屬性相關聯<xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>物件將會設定為`true.`呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> </xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> </xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: public void InviteAsyncCancel (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "使用者定義的物件傳遞給回呼的<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>識別的作業。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*> 這需要在進行中的所有非同步邀請作業之間，參數必須是唯一的。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code>參數不可為<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已處理非同步的邀請。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  id: InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "遠端對等的邀請程序已完成時引發。"
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>指定作業結果的邀請。</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> InviteCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
      description: "即將加入。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "這<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>物件已被處置。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  id: IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得值，指定如果<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>目前 &quot; 上線的 &quot;。"
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>線上在任何與其相關聯的端點，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。       除非另有指定，這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>物件已被處置。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  id: OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "引發<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref>事件。"
  remarks: "繼承自這個類別的類別可以覆寫此方法，以執行其他工作時<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>就會引發事件。</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>物件，其中包含事件資料来傳遞至相關聯的委派<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref>事件。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  id: PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;></xref>聯<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  remarks: "遠端對等電腦時的主應用程式對等的媒介<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>所包含的物件<xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>遠端對等體的本機連絡人產生關聯。</xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> </xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>"
  syntax:
    content: public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>聯<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>物件已被處置。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "當設定這個屬性值時，做為非同步作業的結果不引發的所有事件都將都有相關聯的事件處理常式建立特定<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>的執行緒上回呼"
  remarks: "預設設定值，這個屬性是`null`，表示所有事件處理常式會在系統執行緒集區執行緒上都呼叫。       此屬性通常這類設定的 UI 項目<xref:System.Windows.Forms.Form>執行個體。</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "物件，用於實作<xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;></xref>介面，並建立它的執行緒上的事件處理常式同步處理對這個型別的執行個體所使用。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼叫物件已被處置。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "於其中填入<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>序列化指定的所需資料的類別執行個體<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>執行個體。 衍生的型別必須呼叫基底型別<xref:System.Runtime.Serialization.ISerializable.GetObjectData*>方法。</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>来填入資料。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "序列化的目的端。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "傳回<xref:System.String>代表<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>聯<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>代表<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*></xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
- uid: System.Net.PeerToPeer.Collaboration.Peer
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InviteCompletedEventArgs>
  nameWithType: EventHandler<InviteCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
    name: InviteCompletedEventArgs
    nameWithType: InviteCompletedEventArgs
    fullName: InviteCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: InviteCompletedEventArgs
  nameWithType: InviteCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPointCollection
  nameWithType: PeerEndPointCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer
  nameWithType: Peer.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose
  nameWithType: Peer.Dispose
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals
  nameWithType: Peer.Equals
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData
  nameWithType: Peer.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects
  nameWithType: Peer.GetObjects
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo
  nameWithType: Peer.GetPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite
  nameWithType: Peer.Invite
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync
  nameWithType: Peer.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel
  nameWithType: Peer.InviteAsyncCancel
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted
  nameWithType: Peer.OnInviteCompleted
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString
  nameWithType: Peer.ToString
