### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "代表資料繫結控制項繫結至的抽象資料來源。"
  remarks: "ASP.NET 支援控制項的資料繫結架構，可讓 Web 伺服器控制項繫結至資料一致的方式。 資料繫結控制項，以及協助繫結稱為資料來源控制項的類別會參照 web 伺服器控制項的繫結至資料。 資料來源控制項可以表示任何資料來源︰ 關聯式資料庫、 檔案、 資料流、 商務物件等等。 資料繫結控制項，不論來源或基礎資料的格式一致的方式中的資料來源控制項呈現資料。       當您想要實作您自己自訂的 ASP.NET 資料來源控制項，您會實作 IDataSource 介面。       任何實作 IDataSource 介面的類別是資料來源控制項。 IDataSource 介面會作為所有 ASP.NET 資料來源的基礎控制，並使用其兩個方法會定義一個基本的資料繫結架構概念︰<xref:System.Web.UI.IDataSource.GetView%2A>方法和<xref:System.Web.UI.IDataSource.GetViewNames%2A>方法。</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> 這個概念是所有的資料來源控制項支援其資料的一或多個具名的檢視。 資料來源檢視物件是類似於<xref:System.Data.DataView>抽象<xref:System.Data>命名空間︰ 資料可繫結，自訂檢視之資料的排序、 篩選和其他檢視定義的資料作業。</xref:System.Data> </xref:System.Data.DataView> 基本上，資料來源控制項不做任何動作只擷取資料的檢視。       資料來源控制項可以有一或多個相關聯的資料來源檢視物件。 某些資料來源控制項，包括代表關聯式資料庫，例如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.AccessDataSource>，只支援一個檢視。</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 其他資料來源控制項，包括階層式資料來源控制項，例如<xref:System.Web.UI.WebControls.SiteMapDataSource>，支援許多檢視。</xref:System.Web.UI.WebControls.SiteMapDataSource> 資料來源檢視定義資料來源和它所支援的作業的功能。       在 [摘要] 資料來源控制項實作 IDataSource 介面，支援的資料，它們代表，並一律支援從它們代表的資料來源擷取資料的一或多個具名的檢視。 資料來源控制項永遠根據需要擷取資料，例如當`DataBind`資料繫結控制項上呼叫。"
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在某些方面會影響資料繫結控制項變更資料來源控制項時發生。"
  remarks: "DataSourceChanged 引發此事件是當資料繫結控制項或基礎資料的屬性已變更而影響的資料繫結控制項和其資料之間的資料繫結中。 如果檔案名稱屬性，例如，例如引發事件<xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>上以檔案為基礎的資料來源控制項屬性，變更。</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得與資料來源控制項相關聯的具名的資料來源檢視。"
  remarks: "資料來源控制項類別可支援其基礎資料的一個或多個檢視。 這些檢視會以執行個體的<xref:System.Web.UI.DataSourceView>類別。</xref:System.Web.UI.DataSourceView> 資料來源檢視定義資料來源控制項的功能，並執行所有需要從基礎資料存放區擷取資料並執行作業，例如排序、 插入、 刪除和更新的工作。       資料來源實作的<xref:System.Web.UI.IDataSource>介面實作 GetView 方法，以傳回強型別的檢視物件與類別相關聯</xref:System.Web.UI.IDataSource>的控制項類別"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "要擷取之檢視的名稱。"
    return:
      type: System.Web.UI.DataSourceView
      description: "傳回具名<xref href=&quot;System.Web.UI.DataSourceView&quot;></xref>聯<xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>。"
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得集合，代表相關聯的檢視物件的清單名稱<xref href=&quot;System.Web.UI.IDataSource&quot;></xref>介面。"
  remarks: "資料來源控制項類別可支援其基礎資料的一或多個具名的檢視。 GetViewNames 方法會傳回目前資料來源控制項的執行個體相關聯的檢視名稱的集合。 呼叫端可以逐一查看集合中的檢視名稱，並擷取個別<xref:System.Web.UI.DataSourceView>物件與<xref:System.Web.UI.IDataSource.GetView%2A>方法。</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       資料來源控制類別可實作<xref:System.Web.UI.IDataSource>GetViewNames 方法，以傳回集合的名稱，代表所有資料來源檢視物件目前與資料來源控制項類別相關聯的介面實作</xref:System.Web.UI.IDataSource>"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>，其中包含相關聯的檢視表名稱<xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
