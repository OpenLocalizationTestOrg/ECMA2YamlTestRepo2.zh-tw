### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "表示從裝載 ASP.NET Web 應用程式的伺服器要求的.aspx 檔案也稱為 Web Form 頁面。"
  remarks: "頁面類別是.aspx 副檔名的檔案與相關聯。 這些檔案，做為頁面物件的執行階段編譯並在伺服器記憶體中快取。       如果您想要建立 Web Form 網頁使用的程式碼後置技巧，衍生自這個類別。 快速應用程式開發 (RAD) 設計工具，例如 Microsoft Visual Studio 中，會自動使用此模型來建立 Web Form 頁面。       命名的容器中 頁面上，所有的伺服器控制項的頁面物件作為，但不包括可實作<xref:System.Web.UI.INamingContainer>介面，或是會實作這個介面的控制項的子控制項。</xref:System.Web.UI.INamingContainer>       頁面類別是做為 Web 應用程式的使用者介面，並在這種情況應該檢查並確定您遵循最佳作法，用來撰寫安全程式碼和保護應用程式的控制項。 如需這些主題的一般資訊，請參閱[概觀的 Web 應用程式的安全性威脅](~/add/includes/ajax-current-ext-md.md)， [NIB︰ 安全性原則的最佳作法](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)，和[重要的安全性概念](~/add/includes/ajax-current-ext-md.md)。 如需特定資訊，請參閱[保護標準控制項](~/add/includes/ajax-current-ext-md.md)，[如何︰ 顯示安全的錯誤訊息](~/add/includes/ajax-current-ext-md.md)， [How to︰ 保護對指令碼會利用 Web 應用程式中藉由套用 HTML 編碼字串](~/add/includes/ajax-current-ext-md.md)，和[驗證控制項簡介](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.Page&quot;></xref>類別。"
  remarks: "預設建構函式所有的欄位初始化成為其預設值。"
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "若要建立傳送至主版頁面的內容 （來自內容控制項） 的集合，如果目前頁面或主版頁面參考主版頁面的頁面初始化期間呼叫。"
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "若要加入的內容樣板的名稱。"
    - id: template
      type: System.Web.UI.ITemplate
      description: "內容的範本"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "具有相同名稱的內容範本已存在。"
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "註冊開始與結束的事件處理常式委派不需要非同步網頁的狀態資訊。"
  remarks: "使用 AddOnPreRenderCompleteAsync 方法加入處理常式以非同步的網頁。       您可以註冊多個非同步處理常式。不過，只有一個處理常式會執行一次。 如果您想要同時處理多個非同步方法，您應該使用單一<xref:System.Web.BeginEventHandler>方法，然後啟動多個非同步作業，從該處理常式。</xref:System.Web.BeginEventHandler>       非同步處理常式呼叫之間<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       第一次，所有<xref:System.Web.UI.Page>事件 (透過<xref:System.Web.UI.Control.PreRender>事件) 會執行，然後再每個註冊<xref:System.Web.BeginEventHandler>方法呼叫。</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 此處理常式完成時，對應<xref:System.Web.EndEventHandler>方法呼叫。</xref:System.Web.EndEventHandler> 如果有多個非同步處理常式，會呼叫下一個處理常式。       呼叫已註冊的非同步事件處理常式之後，其餘頁面事件的呼叫時，開頭為<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "委派<xref href=&quot;System.Web.BeginEventHandler&quot;></xref>方法。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "委派<xref href=&quot;System.Web.EndEventHandler&quot;></xref>方法。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "註冊開始與結束事件處理常式委派的非同步頁面。"
  remarks: "使用 AddOnPreRenderCompleteAsync 方法加入處理常式需要非同步網頁的狀態資訊。 傳入物件`state`參數可以是應用程式中指定的事件處理常式委派之間傳送資訊時所需的任何物件`beginHandler`和`endHandler`參數。       您可以註冊多個非同步處理常式。不過，只有一個處理常式會執行一次。 如果您想要同時處理多個非同步方法，您應該使用單一<xref:System.Web.BeginEventHandler>方法，然後啟動多個非同步作業，從該處理常式。</xref:System.Web.BeginEventHandler>       非同步處理常式呼叫之間<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       第一次，所有<xref:System.Web.UI.Page>事件 (透過<xref:System.Web.UI.Control.PreRender>事件) 會執行，然後再每個註冊<xref:System.Web.BeginEventHandler>方法呼叫。</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 此處理常式完成時，對應<xref:System.Web.EndEventHandler>方法呼叫。</xref:System.Web.EndEventHandler> 如果有多個非同步處理常式，會呼叫下一個處理常式。       呼叫已註冊的非同步事件處理常式之後，其餘頁面事件的呼叫時，開頭為<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "委派<xref href=&quot;System.Web.BeginEventHandler&quot;></xref>方法。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "委派<xref href=&quot;System.Web.EndEventHandler&quot;></xref>方法。"
    - id: state
      type: System.Object
      description: "包含事件處理常式的狀態資訊的物件。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將目前的頁面組成相依檔案的清單。 這個方法由 ASP.NET 網頁架構內部使用，並不是直接從您的程式碼使用。"
  remarks: "AddWrappedFileDependencies 方法新增檔案，例如目前的頁面組成使用者控制項檔案的清單。 如果任何這些頁面修改時的下次要求頁面時，就會編譯整個頁面。 這個方法支援.NET Framework 基礎結構，而且不是直接從您的程式碼使用。"
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "<xref:System.Object>包含檔案名稱的清單。</xref:System.Object>"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.HttpApplicationState&quot;></xref>目前 Web 要求的物件。"
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "中的目前資料<xref href=&quot;System.Web.HttpApplicationState&quot;></xref>類別。"
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "起始 Active Server Page (ASP) 資源的要求。 這個方法會提供與傳統 ASP 應用程式的相容性。"
  remarks: "請勿呼叫這個方法。"
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>目前要求的相關資訊。"
    - id: cb
      type: System.AsyncCallback
      description: "回呼方法。"
    - id: extraData
      type: System.Object
      description: "ASP 要求的相同方式處理要求所需的任何額外資料。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>物件。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "動態伺服器網頁 (ASP) 資源的要求就會終止。 這個方法會提供與傳統 ASP 應用程式的相容性。"
  remarks: "請勿呼叫這個方法。"
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "ASP 網頁的要求所產生。"
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定值，指出頁面是否可在單一執行緒 apartment (STA) 執行緒上執行。"
  remarks: "當設定為`true`，這個屬性可讓頁面以單一執行緒 apartment (STA) 執行緒上執行。 這可讓頁面以呼叫 STA 元件，例如 Visual Basic 6.0 中開發的元件。 此屬性設定為`true`也可讓頁面以呼叫 COM + 元件，需要存取 unmanaged 的 ASP 內建物件。 這些是透過 ASP`ObjectContext`物件或`OnStartPage`方法。       在大部分情況下，程式碼中設定這個屬性。 設定`aspcompat`屬性`true`使用.aspx 檔案中的指示詞。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果該分頁支援的 Active Server Pages (ASP) 程式碼。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定值，指出頁面是否以同步或非同步方式處理。"
  remarks: "AsyncMode 屬性由設定<xref:System.Web.UI.Page>剖析器產生頁面的程式碼時。</xref:System.Web.UI.Page> 使用`Async`中指示詞，以將此值設定屬性。       非同步頁面無法運作時`AspCompat`屬性設為`true`或`Transaction`屬性設為值以外`Disabled`指示詞中。"
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果在處理網頁以非同步的方式;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "開始非同步的頁面要求的處理。"
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>要求。"
    - id: callback
      type: System.AsyncCallback
      description: "要通知的程序完成時的回呼方法。"
    - id: extraData
      type: System.Object
      description: "非同步方法的狀態資料。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>，參考非同步要求。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "處理非同步網頁要求結束。"
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>參考暫止的非同步要求。</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出處理非同步工作時使用的逾時間隔。"
  remarks: "[] 頁面上的非同步逾時表示頁面將會等候執行非同步工作的時間量。 在大部分情況下，程式碼中設定這個屬性。 設定頁面非同步逾時時間間隔使用的 Web 組態檔，或指示詞中。 頁面指示詞會覆寫頁面組態區段中設定的值。       定義您的非同步工作使用<xref:System.Web.UI.PageAsyncTask>類別，並註冊開始、 結束和逾時的處理常式。</xref:System.Web.UI.PageAsyncTask> 如果未指定之時間間隔內完成非同步工作，就會叫用的逾時的處理常式。"
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>，其中包含允許的時間間隔的非同步工作完成。</xref:System.TimeSpan> 預設的時間間隔為 45 秒。"
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "屬性已設定為負數值。"
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定控制項中用來執行回傳的頁面。"
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "用來執行的回傳控制項。"
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定值，指出是否對網頁輸出進行緩衝處理。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 將緩衝區屬性設定為`true`使用.aspx 檔案中的指示詞。 要求頁面時，動態產生的類別設定的屬性。      > [!NOTE] > 緩衝區屬性會設定並取得<xref:System.Web.HttpResponse.BufferOutput%2A>屬性。</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果網頁輸出進行緩衝處理;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.Caching.Cache&quot;></xref>頁面所在應用程式相關聯的物件。"
  remarks: "應用程式的<xref:System.Web.Caching.Cache>物件可讓您儲存及擷取任意資料的後續要求。</xref:System.Web.Caching.Cache> 快取不特別相關聯的網頁或使用者工作階段。 它主要用來增強應用程式效能。 如需詳細資訊，請參閱[快取應用程式資料](~/add/includes/ajax-current-ext-md.md)。 如需有關應用程式快取和頁面輸出快取之間的差異的詳細資訊，請參閱[ASP.NET 快取概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref>網頁的應用程式相關聯。"
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "執行個體<xref href=&quot;System.Web.Caching.Cache&quot;></xref>就不會建立。"
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得要求之 URL 的查詢字串部分。"
  remarks: "ClientQueryString 屬性包含查詢字串的部分瀏覽器要求的 URL。 例如，如果&quot;http://www.contoso.com/default.aspx?id=100 」 要求的 URL，將會包含 ClientQueryString 屬性&quot;id =&100;&quot;。 編碼 ClientQueryString 屬性;使用<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>方法來解碼的查詢字串。</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "要求的 URL 查詢字串部分。"
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref>用來管理、 註冊及加入網頁中的指令碼物件。"
  remarks: "使用 ClientScript 屬性來取得<xref:System.Web.UI.ClientScriptManager>可用來管理、 註冊及指令碼新增至網頁的物件。</xref:System.Web.UI.ClientScriptManager> 如需詳細資訊，請參閱<xref:System.Web.UI.ClientScriptManager>類別。</xref:System.Web.UI.ClientScriptManager>       <xref:System.Web.UI.ClientScriptManager>類別的新[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]取代<xref:System.Web.UI.Page>類別方法，來管理目前已被取代的指令碼。</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager>"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，可讓您覆寫的瀏覽器功能的自動偵測，並指定特定瀏覽器用戶端的呈現方式。"
  remarks: "如果您未設定 clienttarget 的各種屬性，<xref:System.Web.HttpBrowserCapabilities>物件相關聯<xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>屬性會反映用戶端瀏覽器的功能。</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> 如果您要設定這個屬性，用戶端瀏覽器偵測已停用，頁面將會使用您提供的值 （別名） 相關聯的瀏覽器功能。       Web 伺服器電腦上的根 Web.config 組態檔會定義下列預設別名，您可以使用縮寫為一般使用者代理字串:- `uplevel`，以指定瀏覽器的功能相當於 Internet Explorer 6.0。      - `downlevel`，以指定瀏覽器的功能相當於舊的瀏覽器不支援用戶端指令碼。 若要判斷 Web 網頁如何運作的瀏覽器已停用用戶端指令碼中，您可以使用此別名。       您可以設定使用這個屬性，以程式設計方式的別名，或您可以設定它使用以宣告方式`ClientTarget`指示詞的屬性。       您可以定義中的其他別名`clientTarget`應用程式層級 Web.config 檔案區段。 如需詳細資訊，請參閱[clienttarget 的各種項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)。"
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>，指定您想要覆寫的瀏覽器功能。</xref:System.String>"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定目前的字碼頁識別項<xref href=&quot;System.Web.UI.Page&quot;> </xref>。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`CodePage`屬性設定為想要使用.aspx 檔案中的指示詞的值。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "整數，表示目前的字碼頁識別項<xref href=&quot;System.Web.UI.Page&quot;> </xref>。"
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的 HTTP MIME 類型<xref href=&quot;System.Web.HttpResponse&quot;></xref>與頁面相關聯的物件。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`ContentType`屬性使用.aspx 檔案中的指示詞。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "目前頁面相關聯的 HTTP MIME 類型。"
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.HttpContext&quot;></xref>與頁面相關聯的物件。"
  remarks: "這個屬性會提供以程式設計方式存取的內容頁面中執行，包括要求、 回應、 session 和應用程式的相關資訊。"
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>物件，包含目前頁面相關聯的資訊。"
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "建立<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>用以呈現頁面的內容物件。"
  remarks: "CreateHtmlTextWriter 方法會建立<xref:System.IO.TextWriter>透過<xref:System.Web.HttpRequest.Browser%2A>屬性<xref:System.Web.HttpContext.Request%2A>頁面要求相關聯的物件。</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.IO.TextWriter> 您可以將參考加入<xref:System.Web.UI.HtmlTextWriter>中`browserCaps`組態區段。</xref:System.Web.UI.HtmlTextWriter> 覆寫 CreateHtmlTextWriter 方法來執行自訂查詢。"
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>用來建立<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>。</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "建立指定<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>用以呈現頁面的內容物件。"
  remarks: "這個方法是在頁面配置器的內部使用。"
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>用來建立<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>。</xref:System.IO.TextWriter>"
    - id: writerType
      type: System.Type
      description: "若要建立的文字寫入器的類型。"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>呈現頁面的內容。"
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> writerType </code>參數設定為無效的類型。"
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的文化特性 ID <xref href=&quot;System.Threading.Thread&quot;> </xref>與頁面相關聯的物件。"
  remarks: "設定`Culture`.aspx 檔案中的指示詞中的屬性。 要求頁面時，動態產生的類別就會設定這個屬性的值。 此外，您可以同時也可以明確設定的文化特性屬性的值以程式設計方式或 Web.config 檔案的項目。       文化特性屬性用來協助當地語系化頁面內容。 您可以將任何有效的文化特性識別碼。 例如，`en-us`文化特性 ID 將頁面設定為美國英文，while`fr`文化特性 ID 設定為法文的頁面。 您也可以設定的值`auto`執行瀏覽器的自動偵測的慣用語言，並將其設定。 自動語言偵測可以採用預設值，例如`auto:en-us`。       如需詳細資訊，請參閱<xref:System.Globalization.CultureInfo>類別概觀。</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "有效的文化特性識別碼。"
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "執行的執行個體的任何初始化<xref href=&quot;System.Web.UI.Page&quot;> </xref> RAD 設計工具所需的類別。 這個方法只在設計階段使用。"
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref>的回傳至頁面上，使用 POST 或 GET 命令的資料。"
  remarks: "DeterminePostBackMode 方法會傳回<xref:System.Collections.Specialized.NameValueCollection>物件，其中包含將資料發佈回頁面。</xref:System.Collections.Specialized.NameValueCollection> 頁面存在隱藏的 VIEWSTATE 和 EVENTTARGET 用來協助判斷是否發生回傳事件的欄位。 <xref:System.Web.UI.Page.IsPostBack%2A>DeterminePostBackMode 方法呼叫時，設定屬性。</xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>物件，其中包含表單資料。 如果回傳使用 POST 命令，從傳回的表單資訊<xref:System.Web.UI.Page.Context*>物件。</xref:System.Web.UI.Page.Context*> 如果回傳使用 GET 命令，則會傳回查詢字串資訊。 如果，在第一次要求頁面時<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回。"
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回使用 POST 或 GET 命令，而不在要求上執行 ASP.NET 要求驗證的網頁的已張貼的資料名稱 / 值集合。"
  remarks: "如需詳細資訊，請參閱<xref:System.Web.UnvalidatedRequestValues>類別。</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "物件，包含未驗證的表單資料。"
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出頁面是否驗證回傳和回呼事件。"
  remarks: "當 EnableEventValidation 屬性設定為`true`，ASP.NET 驗證控制項事件來自呈現該控制項的使用者介面。 控制項在呈現期間註冊其事件，然後回傳或回呼處理期間驗證事件。 例如，如果清單控制項包含選項、 轉譯頁面時，如果回傳的要求收到指定選項的數字 4 進行編號 1、 2 或 3，ASP.NET 會引發例外狀況。 在 ASP.NET 中的所有事件導向控制項預設會都使用這項功能。       如果您撰寫用戶端指令碼，以在執行階段變更的用戶端中的控制項，您可能必須使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法，以避免 false 事件驗證錯誤。</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>      > [!IMPORTANT] > 這項功能會減少未經授權或惡意的回傳要求和回呼的風險。 強烈建議您不要停用事件驗證。       設定設定 EnableEventValidation 屬性`enableEventValidation`屬性指示詞或`enableEventValidation`Web.config 檔案中項目的屬性。 如果您在程式碼中設定這個屬性，您必須設定它，才能初始化頁面。"
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果頁面驗證回傳和回呼事件。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已初始化頁面之後，已設定 EnableEventValidation 屬性。"
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否網頁維持其檢視狀態，並檢視狀態的任何伺服器控制項，它包含在目前網頁要求結束時。"
  remarks: "如需您可能會想停用檢視狀態資訊，請參閱<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>       即使 EnableViewState `false`，頁面可能會包含可用來偵測回傳 asp.net 隱藏的檢視狀態欄位。"
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果頁面保持其檢視狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，表示 ASP.NET 是否應該檢查訊息驗證碼 (MAC) 網頁的檢視狀態中，當網頁從用戶端張貼時。"
  remarks: "檢視狀態 MAC 是網頁的檢視狀態保存至網頁傳送到瀏覽器時隱藏變數的加密的版本。 當這個屬性設定為`true`，加密的檢視狀態會檢查以確認，它未被竄改用戶端上。       程式碼中未設定這個屬性。 設定`EnableViewStateMac`屬性使用.aspx 檔案中的指示詞。 要求頁面時，動態產生的類別設定的屬性。      > [!IMPORTANT] > 這個屬性應永遠不會設定為`false`生產網站中，即使應用程式或網頁不使用檢視狀態。 檢視狀態 MAC 可協助確保其他 ASP.NET 函式，除了檢視狀態的安全性。"
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該 MAC 檢查及編碼; 檢視狀態。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定錯誤網頁的要求瀏覽器會被重新導向期間發生未處理的頁面例外狀況。"
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "錯誤網頁瀏覽器會重新導向。"
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "開始執行非同步工作。"
  remarks: "定義非同步工作使用<xref:System.Web.UI.PageAsyncTask>類別。</xref:System.Web.UI.PageAsyncTask> 工作定義，並向頁面使用之後<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法，可以叫用 ExecuteRegisteredAsyncTasks 方法來開始執行非同步工作。</xref:System.Web.UI.Page.RegisterAsyncTask%2A>       在頁面上，處理任何已註冊的非同步工作，如果有的話，點會自動呼叫方法 ExecuteRegisteredAsyncTasks 會叫用非非同步頁面。 ExecuteRegisteredAsyncTasks 這個自動呼叫之前發生<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> 您想要在叫用自動呼叫這個方法以外的工作呼叫 ExecuteRegisteredAsyncTasks 方法。 請注意，即使可能多次呼叫 ExecuteRegisteredAsyncTasks 非同步工作也會一次執行。       <xref:System.Web.UI.Page.AsyncTimeout%2A>屬性在每次呼叫 ExecuteRegisteredAsyncTasks 方法重設。</xref:System.Web.UI.Page.AsyncTimeout%2A> 最後一個值<xref:System.Web.UI.Page.AsyncTimeout%2A>再叫用 ExecuteRegisteredAsyncTasks 方法的優先順序。</xref:System.Web.UI.Page.AsyncTimeout%2A> 如果在非同步工作超過<xref:System.Web.UI.Page.AsyncTimeout%2A>，叫用該 ExecuteRegisteredAsyncTasks 呼叫期間的後續工作會立即逾時。</xref:System.Web.UI.Page.AsyncTimeout%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "沒有非同步工作中的例外狀況。"
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定檔案的陣列，目前<xref href=&quot;System.Web.HttpResponse&quot;></xref>物件所依存。"
  remarks: "這個屬性已被取代。 使用<xref:System.Web.HttpResponse.AddFileDependencies%2A>方法或<xref:System.Web.HttpResponse.AddFileDependency%2A>方法<xref:System.Web.HttpResponse>類別。</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.AddFileDependency%2A> </xref:System.Web.HttpResponse.AddFileDependencies%2A>       在大部分情況下，程式碼中設定這個屬性。 設定`FileDependencies`屬性`true`使用.aspx 檔案中的指示詞。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "陣列的檔案目前<xref href=&quot;System.Web.HttpResponse&quot;></xref>物件所依存。"
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "搜尋具有指定識別碼的伺服器控制項的頁面命名容器。"
  remarks: "FindControl 方法可以用來存取控制其<xref:System.Web.UI.Control.ID%2A>不在執行階段。</xref:System.Web.UI.Control.ID%2A> 方法會搜尋只有頁面的立即，或最上層容器;它會不以遞迴方式搜尋頁面上所包含的命名容器中的控制項。 若要存取次級的命名容器中的控制項，呼叫`FindControl`該容器的方法。"
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "要找的控制項識別碼。"
    return:
      type: System.Web.UI.Control
      description: "指定的控制項，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果指定的控制項不存在。"
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得頁面的 HTML 表單。"
  remarks: "若要存取的方法和屬性的使用 Form 屬性<xref:System.Web.UI.HtmlControls.HtmlForm>物件，該頁面上的控制項階層架構的基底物件。</xref:System.Web.UI.HtmlControls.HtmlForm>"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>與頁面相關聯的物件。"
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "基礎頁面的宣告式本質上產生的頁面時初始化的控制項樹狀結構。"
  remarks: "FrameworkInitialize 方法會初始化<xref:System.Web.UI.Page>物件，並建立根據頁面的宣告式性質的控制項樹狀結構。</xref:System.Web.UI.Page> FrameworkInitialize 方法會覆寫的剖析和程式碼產生<xref:System.Web.UI.Page>宣告式頁面的類別。</xref:System.Web.UI.Page> 一般情況下，您應該不會透過需要覆寫這個方法。 如果覆寫時，請務必呼叫基底類別的 FrameworkInitialize 方法。"
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得資料繫結內容堆疊頂端的資料項目。"
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "在資料繫結內容堆疊頂端的物件。"
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "沒有資料繫結內容頁面。"
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得可用於在用戶端事件張貼至伺服器，針對指定的控制項並使用指定的事件引數的參考。"
  remarks: "請參閱<xref:System.Web.UI.ClientScriptManager>這個已被取代之成員的替代方案的類別。</xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "接收用戶端事件回傳伺服器控制項。"
    - id: argument
      type: System.String
      description: "A<xref:System.String>傳遞至&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;。</xref:System.String>"
    return:
      type: System.String
      description: "字串，代表用戶端事件。"
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得參考，具有<xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;></xref>附加至其開頭，可以用於用戶端事件張貼至伺服器，針對指定的控制項並使用指定的事件引數。"
  remarks: "請參閱<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>這個已被取代之成員的替代方法。</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要處理回傳的伺服器控制項。"
    - id: argument
      type: System.String
      description: "參數傳遞至伺服器控制項。"
    return:
      type: System.String
      description: "字串，表示呼叫 JavaScript 回傳函式，其中包含目標控制項的 ID 與事件引數。"
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回字串，可以用在用戶端事件導致回傳至伺服器。 將參考字串定義指定<xref href=&quot;System.Web.UI.Control&quot;></xref>物件。"
  remarks: "這個方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法中的<xref:System.Web.UI.ClientScriptManager>類別。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要在伺服器上處理回傳的伺服器控制項。"
    return:
      type: System.String
      description: "字串視為在用戶端，指令碼時啟始回傳。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回字串，可以用在用戶端事件導致回傳至伺服器。 由處理回傳及其他事件資訊的字串引數的指定控制項定義的參考字串。"
  remarks: "這個方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法中的<xref:System.Web.UI.ClientScriptManager>類別。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要處理回傳的伺服器控制項。"
    - id: argument
      type: System.String
      description: "參數傳遞至伺服器控制項。"
    return:
      type: System.String
      description: "字串視為在用戶端，指令碼時啟始回傳。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取雜湊程式碼所產生的<xref href=&quot;System.Web.UI.Page&quot;></xref>執行時間會在產生的物件。 此雜湊程式碼是唯一的<xref href=&quot;System.Web.UI.Page&quot;></xref>物件的控制項階層架構。"
  remarks: "不要覆寫這個方法。"
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "在執行階段產生的雜湊程式碼。 預設值為 0。"
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回指定的驗證群組控制項驗證程式的集合。"
  remarks: "GetValidators 方法會傳回特定的驗證群組相關聯的所有驗證物件。 您可以傳回預設的驗證群組 (不使用的控制項相關聯的所有驗證控制項`ValidationGroup`屬性集) 藉由設定`validationGroup`參數`null`。       若要驗證的驗證群組的成員，您可以列舉的集合和呼叫<xref:System.Web.UI.IValidator.Validate%2A>傳回的每個驗證程式的方法。</xref:System.Web.UI.IValidator.Validate%2A>"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "要傳回的驗證群組或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回預設的驗證群組。"
    return:
      type: System.Web.UI.ValidatorCollection
      description: "A <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref> ，其中包含指定的驗證群組控制項驗證程式。"
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "傳回一份虛擬檔案位置對應的實體檔案名稱的清單。"
  remarks: "GetWrappedFileDependencies 方法會取得一份檔案，例如使用者控制項檔案，目前的頁面組成。 如果修改這些頁面下, 一次要求頁面時，就會編譯整個頁面。 不要覆寫這個方法。"
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "虛擬檔案位置的字串陣列。"
    return:
      type: System.Object
      description: "物件，包含的實體檔案的位置清單。"
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得文件標頭頁面上，如果<xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;></xref>項目定義<xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;></xref>頁面宣告中。"
  remarks: "標頭屬性取得的參考<xref:System.Web.UI.HtmlControls.HtmlHead>物件可用來設定文件頁面的標頭資訊。</xref:System.Web.UI.HtmlControls.HtmlHead> <xref:System.Web.UI.HtmlControls.HtmlHead>可讓您加入資訊，例如樣式表、 樣式規則、 標題和中繼資料，以`head`項目。</xref:System.Web.UI.HtmlControls.HtmlHead>      > [!NOTE] > 將使用的方法，以程式設計方式樣式<xref:System.Web.UI.IStyleSheet>不支援非同步回傳期間的介面。</xref:System.Web.UI.IStyleSheet> 當您將 AJAX 功能加入網頁時，非同步回傳會更新網頁的區域，而不更新整個頁面。 如需詳細資訊，請參閱[Microsoft Ajax 概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref>包含頁首。"
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定特定的執行個體的識別項<xref href=&quot;System.Web.UI.Page&quot;></xref>類別。"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "執行個體的識別碼<xref href=&quot;System.Web.UI.Page&quot;></xref>類別。 預設值是 &quot;_Page&quot;。"
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得用來分隔控制識別項，當建置網頁上控制項的唯一識別碼的字元。"
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "用來分隔控制識別項字元。 預設值由所設定<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;></xref>呈現頁面的執行個體。 IdSeparator 是伺服器端欄位，不能修改。"
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "發生於網頁初始化已完成。"
  remarks: "InitComplete 事件稱為網頁的初始階段的結尾。 在網頁的生命週期的這個階段，所有宣告都已初始化頁面上的控制項，但尚未填入網頁的狀態。 您可以存取伺服器控制項，但它們尚未包含從使用者傳回的資訊。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定<> *> 和<> *> 網頁的目前的執行緒。"
  remarks: "InitializeCulture 方法包含任何程式碼撰寫的邏輯。 控制擴充功能的開發人員<xref:System.Web.UI.Page>類別可以覆寫 InitializeCulture 方法，以初始化<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>頁面的資訊。</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化目前網頁要求的輸出快取根據<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;></xref>物件。"
  remarks: "您不應該呼叫這個方法。 若要啟用處理輸出快取的頁面，使用.aspx 檔案中，或方法和屬性的<xref:System.Web.HttpCachePolicy>類別</xref:System.Web.HttpCachePolicy>中的任一個指示詞 後者是可透過存取`Response.Cache`網頁的程式碼宣告區塊或程式碼後置檔案中的語法。 如需詳細資訊，請參閱[快取的 ASP.NET 網頁](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> ，其中包含快取設定。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "輸出快取設定位置無效。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化目前網頁要求的輸出快取。"
  remarks: "您不應該呼叫這個方法。 若要啟用處理輸出快取的頁面，使用.aspx 檔案中，或方法和屬性的<xref:System.Web.HttpCachePolicy>類別</xref:System.Web.HttpCachePolicy>中的任一個指示詞 後者是可透過存取`Response.Cache`網頁的程式碼中的語法。 如需詳細資訊，請參閱[快取的 ASP.NET 網頁](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "儲存在輸出快取的物件都是有效的時間量。"
    - id: varyByHeader
      type: System.String
      description: "從輸出快取的內容會因使用的標頭以逗號分隔清單。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 標頭。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "其中一個<xref href=&quot;System.Web.UI.OutputCacheLocation&quot;></xref>值。"
    - id: varyByParam
      type: System.String
      description: "接收從輸出快取的內容會因的 GET 或 POST 方法的參數以分號分隔清單。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "無效的值指定給<code> location </code>。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化目前網頁要求的輸出快取。"
  remarks: "您不應該呼叫這個方法。 若要啟用處理輸出快取的頁面，使用其中一個指示詞中的.aspx 檔案，或方法和屬性的<xref:System.Web.HttpCachePolicy>類別。</xref:System.Web.HttpCachePolicy> 後者是可透過存取`Response.Cache`網頁的程式碼中的語法。 如需詳細資訊，請參閱[快取的 ASP.NET 網頁](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "儲存在輸出快取的物件都是有效的時間量。"
    - id: varyByContentEncoding
      type: System.String
      description: "以分號分隔清單的字元集 （內容編碼方式），從輸出快取的內容會隨著改變。"
    - id: varyByHeader
      type: System.String
      description: "從輸出快取的內容會因使用的標頭以逗號分隔清單。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 標頭。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "其中一個<xref href=&quot;System.Web.UI.OutputCacheLocation&quot;></xref>值。"
    - id: varyByParam
      type: System.String
      description: "接收從輸出快取的內容會因的 GET 或 POST 方法的參數以分號分隔清單。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "無效的值指定給<code> location </code>。"
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出頁面是否以非同步方式處理。"
  remarks: "使用 IsAsync 屬性來判斷是否在非同步模式中執行網頁。 這項資訊是控制項或頁面上的程式碼需要修改其行為根據頁面為非同步時相當實用。 如需有關非同步程式設計的詳細資訊，請參閱[非同步作業](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果頁面處於非同步模式，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>;"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出頁面要求是否為回呼的結果。"
  remarks: "如需詳細資訊，請參閱[實作用戶端回呼而不回傳](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果網頁要求是回呼; 的結果否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定網頁是否註冊用戶端指令碼區塊，使用指定的金鑰。"
  remarks: "<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>若要避免不必要地將用戶端指令碼組合</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>在呼叫之前呼叫這個方法 這是特別重要，此指令碼需要大量伺服器資源用來建立。       IsClientScriptBlockRegistered 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A><xref:System.Web.UI.ClientScriptManager>類別</xref:System.Web.UI.ClientScriptManager>的方法</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "若要搜尋的用戶端指令碼字串索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已註冊的指令碼區塊。，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出頁面是否參與跨網頁回傳。"
  remarks: "ASP.NET 提供了兩種機制，將控制項從一個頁面傳輸至另一個。 您可以使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法來處理傳輸之間的頁面，或者您可以藉由指定的頁面 URL 提出跨網頁要求<xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>實作按鈕控制項屬性<xref:System.Web.UI.WebControls.IButtonControl>介面。</xref:System.Web.UI.WebControls.IButtonControl> </xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> </xref:System.Web.HttpServerUtility.Transfer%2A>       在任一情況下，<xref:System.Web.UI.Page.PreviousPage%2A>頁面屬性將包含物件，代表先前或建立者 頁面。</xref:System.Web.UI.Page.PreviousPage%2A> 如果頁面，例如張貼至頁面 B，頁面 A IsCrossPagePostBack 屬性 (可透過存取<xref:System.Web.UI.Page.PreviousPage%2A>屬性) 會`true`和頁面 B 的<xref:System.Web.UI.Page.PreviousPage%2A>屬性會有的頁面 A.名稱</xref:System.Web.UI.Page.PreviousPage%2A></xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果頁面參與跨頁面要求。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出頁面是否轉譯第一次，或正在載入中回傳的回應。"
  remarks: "如需回傳與回呼之間的差異的說明，請參閱[實作用戶端回呼而不回傳](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果用戶端回傳回應中載入的頁面否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否已註冊執行回傳的頁面中的控制項。"
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果控制項具有尚未註冊。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出是否<xref href=&quot;System.Web.UI.Page&quot;></xref>可以重複使用物件。"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否向用戶端啟動指令碼<xref href=&quot;System.Web.UI.Page&quot;></xref>物件。"
  remarks: "<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>若要避免不必要地將用戶端指令碼組合</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>在呼叫之前呼叫這個方法 這是特別重要，此指令碼需要大量伺服器資源用來建立。       IsStartupScriptRegistered 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A><xref:System.Web.UI.ClientScriptManager>類別</xref:System.Web.UI.ClientScriptManager>的方法</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "若要搜尋的啟動指令碼字串索引鍵。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果註冊啟動指令碼;，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得值，指出頁面驗證是否成功。"
  remarks: "這個屬性來傳回`true`，必須成功驗證目前的驗證群組中的所有驗證伺服器控制項。 只有已呼叫後，您應該檢查此屬性<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>方法或一組`CausesValidation`屬性`true`中`OnServerClick`初始化表單處理的 ASP.NET 伺服器控制項的事件處理常式。</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 這些伺服器控制項包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.HtmlControls.HtmlButton>， <xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>類別。</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.WebControls.Button>       如果您強制執行的驗證群組使用驗證<xref:System.Web.UI.Page.Validate%2A>方法，則指定的驗證群組中的所有驗證控制項都必須成功驗證也。</xref:System.Web.UI.Page.Validate%2A>"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果頁面驗證成功。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "IsValid 屬性是在發生驗證之前呼叫。"
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得頁面內容中儲存的物件清單。"
  remarks: "將具有相同的存留期的物件儲存為頁面要求中使用的項目屬性。 這個屬性是唯讀的。不過，您可以將物件加入至<xref:System.Collections.IDictionary>它所傳回的物件。</xref:System.Collections.IDictionary>       讓您可以在頁面生命週期的早期，將物件加入至事件中的項目屬性，並存取這些物件在更新事件使用存留期中的頁面上，加入到此項目屬性的物件。"
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "若要參考<xref:System.Collections.IDictionary>包含頁面內容中所儲存的物件。</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的地區設定識別碼<xref href=&quot;System.Threading.Thread&quot;></xref>與頁面相關聯的物件。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 `LCID`屬性可以設定在.aspx 檔案的指示詞中，不過，設定的地區設定識別碼的慣用的方法是透過使用的<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>屬性。</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "地區設定識別碼傳遞給<xref href=&quot;System.Threading.Thread&quot;> </xref>。"
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在載入網頁的生命週期的階段結束時發生。"
  remarks: "所有的回傳資料後就會發生 LoadComplete 事件和檢視狀態資料載入至網頁，而之後<xref:System.Web.UI.Control.OnLoad%2A>頁面上的所有控制項已都呼叫方法。</xref:System.Web.UI.Control.OnLoad%2A>       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "任何儲存的檢視狀態資訊的載入<xref href=&quot;System.Web.UI.Page&quot;></xref>物件。"
  remarks: "LoadPageStateFromPersistenceMedium 方法會使用<xref:System.Web.UI.PageStatePersister.Load%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>所參考物件<xref:System.Web.UI.Page.PageStatePersister%2A>屬性載入任何儲存的檢視狀態資訊<xref:System.Web.UI.Page>物件。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Load%2A>       ASP.NET 包含兩個下階的<xref:System.Web.UI.PageStatePersister>類別<xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET 網頁中包含隱藏欄位中儲存狀態資訊的類別和<xref:System.Web.UI.SessionPageStatePersister>儲存狀態中的類別<xref:System.Web.UI.Page.Session%2A>與要求相關聯的物件。</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister>       若要將狀態儲存在您選擇的位置，您應該建立新的子系<xref:System.Web.UI.PageStatePersister>儲存和載入至持續性媒體狀態，您所選擇的類別。</xref:System.Web.UI.PageStatePersister> 如需建立新的<xref:System.Web.UI.PageStatePersister>物件，請參閱<xref:System.Web.UI.PageStatePersister>類別。</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       如果您使用.NET Framework 版本為 1.0 或 1.1，覆寫這個方法，如果您想要載入<xref:System.Web.UI.Page>從隱藏的欄位以外的任何狀態。</xref:System.Web.UI.Page> 如果您選擇這樣做，您也必須覆寫<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "儲存的檢視狀態。"
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否在回傳後返回用戶端瀏覽器中的相同位置的使用者。 這個屬性會取代過時<xref:System.Web.UI.Page.SmartNavigation*>屬性。</xref:System.Web.UI.Page.SmartNavigation*>"
  remarks: "當網頁回傳至伺服器時，使用者會傳回到頁面頂端。 長的 Web 網頁上，這表示使用者必須捲動頁面回傳至頁面上的最後一個位置。       當 MaintainScrollPositionOnPostBack 屬性設定為`true`，使用者會改為傳回的最後一個位置在頁面上。       在中設定 MaintainScrollPositionOnPostBack 屬性[@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指示詞。"
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該維護用戶端位置;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "擷取虛擬路徑、 絕對或相對的或應用程式的相對路徑會對應至實體路徑。"
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.String>表示虛擬路徑。</xref:System.String>"
    return:
      type: System.String
      description: "與應用程式的相對路徑的虛擬路徑相關聯的實體路徑。"
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得主版頁面，決定整體網頁的外觀。"
  remarks: "主要屬性會傳回<xref:System.Web.UI.MasterPage>此頁面相關聯的物件。</xref:System.Web.UI.MasterPage> 這個屬性是唯讀的。不過，您可以設定屬性<xref:System.Web.UI.MasterPage>它所傳回的物件。</xref:System.Web.UI.MasterPage>       內容無效，只在主版頁面的參考中的主版頁面<xref:System.Web.UI.Page.MasterPageFile%2A>屬性。</xref:System.Web.UI.Page.MasterPageFile%2A> 如果您存取主要屬性未參考主版頁面的頁面上`null`傳回。 主版頁面的內容不會等到之後，才能使用<xref:System.Web.UI.Page.PreInit>在引發事件。</xref:System.Web.UI.Page.PreInit>"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "<xref href=&quot;System.Web.UI.MasterPage&quot;> </xref>與此頁面上已有相關聯，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定主版頁面的虛擬路徑。"
  remarks: "MasterPageFile 屬性是透過此頁面相關聯的主版頁面檔案虛擬路徑 （來自應用程式根目錄）。 可以只在中設定的 MasterPageFile 屬性<xref:System.Web.UI.Page.PreInit>事件; 正在嘗試設定之後的 MasterPageFile 屬性<xref:System.Web.UI.Page.PreInit>事件將會擲回<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit> 如果 MasterPageFile 屬性無效，例外狀況型別的<xref:System.Web.HttpException>稍後頁面生命週期中，會擲回但設定屬性時，會擲回任何例外狀況<xref:System.Web.UI.Page.PreInit>事件。</xref:System.Web.UI.Page.PreInit> </xref:System.Web.HttpException>       網頁的 MasterPageFile 屬性設定內容頁面，而且可以包含只有最上層控制項<xref:System.Web.UI.WebControls.Content>控制項。</xref:System.Web.UI.WebControls.Content>"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "主版頁面的虛擬路徑。"
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MasterPageFile 屬性設定後<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>事件完成時。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定頁面的 [狀態] 欄位的最大長度。"
  remarks: "當 MaxPageStateFieldLength 屬性設定為正數時，傳送到用戶端瀏覽器的檢視狀態分為多個隱藏的欄位，而且每個欄位的值小於 MaxPageStateFieldLength 屬性中指定的大小。       MaxPageStateFieldLength 屬性設定為負數 （預設值），表示檢視狀態欄位不應該分隔成多個區塊。 MaxPageStateFieldLength 設定為較小的數字，可能會導致效能不佳。       設定中 MaxPageStateFieldLength 屬性的值位於 Web.config 檔案。"
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "以位元組為單位，在頁面的 [狀態] 欄位的最大長度。 預設值為-1。"
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MaxPageStateFieldLength 屬性不等於-1 或正數。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已初始化頁面之後，已設定 MaxPageStateFieldLength 屬性。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定內容的 「 描述 」 <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref>項目。"
  remarks: "HTML`meta`項目可以用來改善搜尋引擎清單。 「 描述 」`meta`項目可由某些搜尋引擎來改善清單預覽。       如果沒有任何 「 描述 」`meta`中的項目`head`網頁標記中，項目`meta`項目新增至網頁中呈現網頁時。 如果網頁標記中已經有 「 描述 」`meta`項目，這個屬性取得或設定`content`屬性`meta`項目。       您也可以指示詞中設定這個屬性。"
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "「 描述 」 的內容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "頁面沒有標頭控制項 ( <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>具有項目<xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;></xref>屬性設為 「 伺服器 」)。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定的 「 關鍵字 」 內容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>項目。"
  remarks: "HTML`meta`項目可以用來改善搜尋引擎清單。 「 關鍵字 」`meta`項目未使用完全或由主要的搜尋引擎提供極少的權重。       如果沒有任何 「 關鍵字 」`meta`中的項目`head`網頁標記中，項目`meta`項目新增至網頁中呈現網頁時。 如果網頁標記中已經有 「 關鍵字 」`meta`項目，這個屬性取得或設定`content`屬性`meta`項目。       您也可以指示詞中設定這個屬性。"
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "「 關鍵字 」 內容<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>項目。"
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "頁面沒有標頭控制項 ( <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>具有項目<xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;></xref>屬性設為 「 伺服器 」)。"
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得模型繫結執行內容。"
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "模型繫結執行內容。 如果模型繫結執行內容是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>，新的其中一個是建立及傳回。"
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得模型狀態字典物件，其中包含模型和模型繫結驗證的狀態。"
  remarks: "在模型繫結中使用 Web Form 的教學課程系列，請參閱[模型繫結和 Web Form](http://go.microsoft.com/fwlink/?LinkId=286117)。"
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "模型狀態字典物件。"
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件，以初始化頁面。"
  remarks: "OnInit 方法用來執行初始設定和安裝所需的步驟來建立<xref:System.Web.UI.Page>執行個體。</xref:System.Web.UI.Page> 在此階段網頁的生命週期中，宣告的伺服器頁面上的控制項會初始化為其預設狀態。不過，每個控制項的檢視狀態尚未填入。 頁面上的控制項無法存取其他伺服器控制項在頁面上的`Page_Init`階段中的，不論其他控制項是否為子系或父控制項。 不保證會建立並準備好存取其他伺服器控制項。       OnInit 方法之後呼叫<xref:System.Web.UI.Page.OnPreInit%2A>方法之前<xref:System.Web.UI.Page.OnInitComplete%2A>方法。</xref:System.Web.UI.Page.OnInitComplete%2A> </xref:System.Web.UI.Page.OnPreInit%2A>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnInit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.InitComplete&quot;></xref>頁面初始化之後的事件。"
  remarks: "網頁初始化完成後，會呼叫 OnInitComplete 方法。 在網頁的生命週期的這個階段，所有宣告都已初始化頁面上的控制項，但尚未填入網頁的檢視狀態。 您可以存取伺服器控制項，但它們尚未包含從使用者傳回的資訊。       OnInitComplete 方法結尾處，就會發生<xref:System.Web.UI.Page>初始化階段，以及載入階段之前。</xref:System.Web.UI.Page>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnInitComplete 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.LoadComplete&quot;></xref>結尾的頁面載入階段的事件。"
  remarks: "結尾的頁面載入階段稱為 OnLoadComplete 方法。 此時網頁的生命週期，在所有的回傳資料和檢視狀態資料會載入至頁面上的控制項。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[NIB︰ 引發事件](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)。       OnLoadComplete 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>事件會在頁面初始化的開頭。"
  remarks: "在頁面初始化階段開頭稱為 OnPreInit 方法。       OnPreInit 方法呼叫之後，個人化資訊載入和初始化網頁佈景主題中，如果有的話。 這也是慣用的階段以動態方式定義<xref:System.Web.UI.PageTheme>或<xref:System.Web.UI.MasterPage>頁面。</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.PageTheme>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreInit 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.PreLoad&quot;></xref>事件前載入至網頁伺服器控制項的回傳資料之後<xref:System.Web.UI.Control.OnLoad*>事件。</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "載入 OnPreLoad 後所有回傳資料從使用者傳回呼叫方法。 在這個階段中網頁的生命週期中，檢視狀態資訊和回傳資料宣告控制項和初始化階段時建立載入網頁的控制項。       也可使用檢視狀態和回傳資料中載入 OnPreLoad 方法中建立的控制項。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreLoad 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;> </xref> OnPreRenderComplete 事件之後，以及網頁呈現之前的事件。"
  remarks: "網頁的生命週期的預先呈現階段完成時，會呼叫 OnPreRenderComplete 方法。 在頁面生命週期的這個階段，建立所有的控制項和網頁已準備好呈現的輸出。       這是網頁的檢視狀態儲存之前呼叫的最後一個事件。       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnPreRenderComplete 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "引發<xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;></xref>事件之後的頁面狀態已儲存至持續性中。"
  remarks: "控制項的狀態資訊已寫入至持續性媒體頁面時，會呼叫 OnSaveStateComplete 方法。 狀態資訊就會寫入持續性媒體中，藉由呼叫<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>       引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。       OnSaveStateComplete 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>物件，其中包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得呈現特定要求的瀏覽器的頁面配置器。"
  remarks: "PageAdapter 屬性會傳回特定<xref:System.Web.UI.Adapters.PageAdapter>可修改的物件<xref:System.Web.UI.Page>要求瀏覽器物件。</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>       特定<xref:System.Web.UI.Adapters.PageAdapter>物件檢查內送的特性來判斷<xref:System.Web.UI.Page.Request%2A>物件。</xref:System.Web.UI.Page.Request%2A> </xref:System.Web.UI.Adapters.PageAdapter> 當配接器會選擇任何生命週期事件，在要求上<xref:System.Web.UI.Adapters.PageAdapter>物件上覆寫對應的事件<xref:System.Web.UI.Page>物件。</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref>呈現的頁面。"
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.UI.PageStatePersister&quot;></xref>與頁面相關聯的物件。"
  remarks: "HTTP 要求和回應會原本是無狀態。 若要維護之間的 HTTP 要求的狀態，可以儲存伺服器的 ASP.NET 網頁<xref:System.Web.UI.Page>狀態。</xref:System.Web.UI.Page> 此狀態下，稱為檢視狀態包含網頁、 控制項設定和資料，讓網頁及控制項顯示如同它們是相同的使用者所看到和其最後一個的來回行程的頁面互動。 若要儲存檢視狀態相同的頁面上的連續要求之間，有多個機制。 抽象<xref:System.Web.UI.PageStatePersister>類別代表這些狀態的儲存機制的基底類別。</xref:System.Web.UI.PageStatePersister>       網頁開發人員通常不需要使用 PageStatePersister 屬性。 PageStatePersister 屬性主要由控制項開發人員擴充的<xref:System.Web.UI.Page>類別</xref:System.Web.UI.Page>和功能使用"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "A <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref>與頁面相關聯。"
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在呈現的頁面定義 EVENTARGUMENT 隱藏的欄位的字串。"
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在呈現的頁面定義 EVENTTARGET 隱藏的欄位的字串。"
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "網頁初始化之前發生。"
  remarks: "此事件可讓您檢查條件，頁面要求，例如網頁是否正在載入中回傳的回應。 您也可以檢查設定檔屬性的值。       事件可讓您設定稍後用於頁面生命週期的值。 您可以動態設定主版頁面或 [要求] 頁面的佈景主題和建立動態控制項。       如需如何將 PreInit 事件放入 ASP.NET 存留週期的詳細資訊，請參閱[ASP.NET 網頁生命週期概觀](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "頁面之前，就會發生<xref href=&quot;System.Web.UI.Control.Load&quot;></xref>事件。"
  remarks: '預先載入事件會在所有的回傳資料處理之後，以及之前引發<xref:System.Web.UI.Control.Load>事件。</xref:System.Web.UI.Control.Load> 第二個嘗試載入之前的回傳資料<xref:System.Web.UI.Page.OnLoadComplete%2A>事件。</xref:System.Web.UI.Page.OnLoadComplete%2A> 如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "在頁面的內容轉譯之前發生。"
  remarks: "網頁的生命週期的呈現前階段完成時，會引發 PreRenderComplete 事件。 在頁面生命週期的這個階段，所有控制項已都建立、 完成的任何所需的分頁，並且頁面已準備好呈現給輸出。       這是網頁的檢視狀態儲存之前，所引發的最後一個事件。       如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。"
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得控制項傳送至目前頁面的頁面。"
  remarks: "當您使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法或要從一個 ASP.NET 網頁的處理傳送到另一個使用跨網頁傳回，起始頁包含可能需要的目的地 頁面上的要求資訊。</xref:System.Web.HttpServerUtility.Transfer%2A> 您可以使用 [上一頁] 屬性來存取該資訊。       如果目前頁面所呈現的 （不傳送或跨 post，從另一頁） 的直接要求而上一頁屬性包含`null`。"
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>表示控制項傳送至目前頁面的頁面。"
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "目前使用者不是允許存取前一頁。       -或-ASP.NET 路由使用中前, 一頁的 URL 是路由的 URL。 當 ASP.NET 會檢查存取權限時，它會假設 URL 是實際檔案路徑。 因為這不是使用路由 URL 的情況下，檢查將會失敗。"
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的內建伺服器物件<xref href=&quot;System.Web.UI.Page&quot;></xref>物件，例如<> *>， <> </> *>， <> </> *>，以及<> *> 屬性。"
  remarks: "您不應該呼叫這個方法。"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>提供內建伺服器物件的參考的物件 (例如， <> </> *>， <> </> *>，以及<xref:System.Web.HttpContext.Session*>) 用來服務 HTTP 要求。</xref:System.Web.HttpContext.Session*>"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "通知伺服器控制項造成回傳，它應該處理內送的回傳事件。"
  remarks: "<xref:System.Web.UI.Page>回傳發生時，物件會呼叫 RaisePostBackEvent 方法。</xref:System.Web.UI.Page> 這個呼叫發生在頁面生命週期中載入和變更的通知完成後，但尚未發生之前。"
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "ASP.NET 伺服器控制項造成回傳。 這個控制項必須實作<xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;></xref>介面。"
    - id: eventArgument
      type: System.String
      description: "回傳的引數。"
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "宣告呈現網頁時，宣告為 ECMAScript 陣列宣告的值。"
  remarks: "這個方法可以用指令碼為基礎的控制項，來宣告本身在陣列中，如此用戶端指令碼程式庫可以使用相同類型的所有控制項。       RegisterArrayDeclaration 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A><xref:System.Web.UI.ClientScriptManager>類別</xref:System.Web.UI.ClientScriptManager>的方法</xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "在其中宣告值陣列的名稱。"
    - id: arrayValue
      type: System.String
      description: "要放置在陣列中的值。"
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "與網頁註冊新的非同步工作。"
  remarks: "定義非同步工作使用<xref:System.Web.UI.PageAsyncTask>類別。</xref:System.Web.UI.PageAsyncTask> 定義工作時，使用 RegisterAsyncTask 方法註冊頁面中的工作。 在註冊之後的工作，叫用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法開始非同步工作。</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>       RegisterAsyncTask 方法可以搭配同步和非同步頁面。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "A <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref>定義非同步工作。"
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "非同步工作是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "會發出至回應的用戶端指令碼區塊。"
  remarks: "用戶端指令碼，就會發出後方之開頭標記<xref:System.Web.UI.Page>物件的`<form runat= server>`項目。</xref:System.Web.UI.Page> 務必包含左右`<script>`項目周圍的指令碼區塊中指定的字串`script`參數。       這個方法會使用索引鍵，來識別指令碼區塊，因為指令碼區塊並沒有發出至輸出資料流每次要求不同的伺服器控制項執行個體。 使用金鑰時，也會減少互相干擾的不同控制項的指令碼區塊的可能性。       任何指令碼區塊，具有相同`key`參數值會被視為重複。      > [!NOTE] > 記得 HTML 註解前後加上標記您的指令碼，讓它將無法呈現如果要求的瀏覽器不支援指令碼。       RegisterClientScriptBlock 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法中的<xref:System.Web.UI.ClientScriptManager>類別。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "識別指令碼區塊的唯一索引鍵。"
    - id: script
      type: System.String
      description: "傳送至用戶端的指令碼內容。"
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "可讓伺服器自動註冊隱藏的欄位在表單上的控制項。 此欄位將會傳送至<xref href=&quot;System.Web.UI.Page&quot;></xref>物件時<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>呈現伺服器控制項。"
  remarks: "RegisterHiddenField 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A><xref:System.Web.UI.ClientScriptManager>類別</xref:System.Web.UI.ClientScriptManager>的方法</xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "要呈現的隱藏欄位的唯一名稱。"
    - id: hiddenFieldInitialValue
      type: System.String
      description: "要在隱藏的表單中發出的值。"
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "可讓頁面以存取用戶端<xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;></xref>事件。 指令碼應該註冊的其他位置的用戶端程式碼的函式呼叫。"
  remarks: "RegisterOnSubmitStatement 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A><xref:System.Web.UI.ClientScriptManager>類別</xref:System.Web.UI.ClientScriptManager>的方法</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "識別指令碼區塊的唯一索引鍵。"
    - id: script
      type: System.String
      description: "用戶端指令碼傳送到用戶端。"
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "註冊控制項為必須保存其控制項狀態。"
  remarks: "使用控制項狀態的自訂伺服器控制項必須呼叫 RegisterRequiresControlState 方法，每個要求，因為控制項狀態的註冊不會保存從要求的要求期間回傳事件。 我們建議您註冊，會在<xref:System.Web.UI.Control.Init>事件。</xref:System.Web.UI.Control.Init>"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要註冊的控制項。"
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "要註冊的控制項是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "可以呼叫 RegisterRequiresControlState 方法，只有之前或期間<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將控制項註冊為需要回傳處理，當頁面回傳至伺服器。"
  remarks: "要註冊控制項必須實作<xref:System.Web.UI.IPostBackDataHandler>介面或<xref:System.Web.HttpException>，就會引發。</xref:System.Web.HttpException> </xref:System.Web.UI.IPostBackDataHandler> 由控制項時，實作時<xref:System.Web.UI.IPostBackDataHandler>的回傳資料處理和引發任何使用 post 要求的介面可讓備份資料變更事件。</xref:System.Web.UI.IPostBackDataHandler> 如需有關伺服器控制項的事件模型的詳細資訊，請參閱[ASP.NET Web Form 伺服器控制項事件模型](~/add/includes/ajax-current-ext-md.md)。       當時或之前的網頁註冊控制項`Page_PreRender`頁面生命週期的事件。"
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要註冊的控制項。"
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "要註冊的控制項不會實作<xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;></xref>介面。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "為一個需要處理控制項上時引發的事件註冊 ASP.NET 伺服器控制項<xref href=&quot;System.Web.UI.Page&quot;></xref>物件。"
  remarks: "只有一部伺服器控制項可以註冊每個頁面要求。 當控制項不包含其識別碼在表單張貼資料的控制項，則必須使用 RegisterRequiresRaiseEvent。 此外，已註冊的控制項必須實作<xref:System.Web.UI.IPostBackEventHandler>介面。</xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "要註冊的控制項。"
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將控制項的網頁註冊一個要求的檢視狀態加密。"
  remarks: "如果您正在開發處理潛在的敏感資訊的自訂控制項，呼叫 RegisterRequiresViewStateEncryption 方法與頁面登錄此控制項，並確保已加密的控制項檢視狀態。       會加密整個頁面狀態，如果<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>設定為<xref:System.Web.UI.ViewStateEncryptionMode>或<xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "RegisterRequiresViewStateEncryption 方法必須呼叫之前或期間頁面<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>頁面生命週期中階段。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "發出的頁面回應中的用戶端指令碼區塊。"
  remarks: "類似於<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>方法，RegisterStartupScript 方法發出的結束標記之前的指令碼<xref:System.Web.UI.Page>物件的`<form runat= server>`項目。</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 務必包含左右`<script>`項目周圍的指令碼區塊中指定的字串`script`參數。       這個方法會使用索引鍵，來識別指令碼區塊，因為指令碼區塊並沒有發出至輸出資料流不同的伺服器控制項執行個體具有相同的指令碼區塊要求每次`key`參數值會被視為重複。      > [!NOTE] > 記得 HTML 註解前後加上標記您的指令碼，讓它將無法呈現如果要求的瀏覽器不支援指令碼。       RegisterStartupScript 方法已被取代。 使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法中的<xref:System.Web.UI.ClientScriptManager>類別。</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "識別指令碼區塊的唯一索引鍵。"
    - id: script
      type: System.String
      description: "將傳送至用戶端的指令碼內容。"
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "如果呼叫，會導致要保存的頁面檢視狀態。"
  remarks: "透過自動呼叫 RegisterViewStateHandler 方法<xref:System.Web.UI.HtmlControls.HtmlForm>伺服器控制項。</xref:System.Web.UI.HtmlControls.HtmlForm> 如果這個方法不會叫用，不會保存的頁面檢視狀態。      > [!NOTE] > 一般而言，只有<xref:System.Web.UI.HtmlControls.HtmlForm>伺服器控制項，網頁會呼叫這個方法。</xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初始化<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>物件並呼叫上的子控制項<xref href=&quot;System.Web.UI.Page&quot;></xref>來呈現。"
  remarks: "Render 方法會負責建立的文字和標記傳送給用戶端瀏覽器。 預設轉譯方法呼叫<xref:System.Web.UI.Control.RenderChildren%2A>要寫入的文字和標記包含在頁面上的控制項。</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>接收頁面內容。"
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.HttpRequest&quot;></xref>針對要求的頁面物件。"
  remarks: "<xref:System.Web.HttpRequest>物件包含目前 HTTP 要求的相關資訊。</xref:System.Web.HttpRequest>"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "目前<xref href=&quot;System.Web.HttpRequest&quot;></xref>與頁面相關聯。"
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "發生時<xref href=&quot;System.Web.HttpRequest&quot;></xref>物件不能。"
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定是否指定<xref href=&quot;System.Web.UI.Control&quot;></xref>物件已登錄至參與控制狀態管理。"
  remarks: "控制項的狀態是重要運作; 需要 Web 伺服器控制項的檢視狀態資料所組成的物件它包含在標準檢視狀態的個別物件。       使用控制項狀態的自訂控制項必須呼叫<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>方法，然後再儲存控制項狀態。</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 您可以使用 RequiresControlState 方法來檢查註冊為需要控制項狀態頁面上的控制項。"
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>檢查控制項狀態需求。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定<xref href=&quot;System.Web.UI.Control&quot;></xref>需要控制狀態; 否則為<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.HttpResponse&quot;></xref>物件相關聯<xref href=&quot;System.Web.UI.Page&quot;></xref>物件。 此物件可讓您將用戶端的 HTTP 回應資料，並包含有關該回應的資訊。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "目前<xref href=&quot;System.Web.HttpResponse&quot;></xref>與頁面相關聯。"
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref>物件不能。"
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定目前編碼語言<xref href=&quot;System.Web.HttpResponse&quot;></xref>物件。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`ResponseEncoding`屬性設定為想要使用.aspx 檔案中的指示詞的值。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "字串，包含目前編碼語言<xref href=&quot;System.Web.HttpResponse&quot;> </xref>。"
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得&lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt;的目前值&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;執行個體。"
  remarks: "如果網頁正在執行以回應透過 ASP.NET 路由所提出的要求，這個屬性會提供存取權的 URL 參數值傳遞做為路由資料。 如果頁面執行以回應實體的 URL，而非路由的 URL，這個屬性是`null`。 下列範例示範如何擷取名為 URL 參數的值`year`。       [Visual Basic]     ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#]```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ```如果路由會定義使用的 URL 模式`{locale}/{year}`網域`contoso.com`，而且如果要求的 URL 是`contoso.com/US/2010`，`year`將包含&quot;2010&quot;執行此程式碼的值。       如需 ASP.NET 路由的詳細資訊，請參閱[ASP.NET 路由](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "&lt;Xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt;的目前值&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;執行個體。"
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "儲存檢視狀態和控制項狀態的任何資訊頁面。"
  remarks: "SavePageStateToPersistenceMedium 方法會使用<xref:System.Web.UI.PageStatePersister.Save%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>所參考物件<xref:System.Web.UI.Page.PageStatePersister%2A>屬性來儲存網頁的檢視狀態和控制狀態資訊。</xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Save%2A>       ASP.NET 包含兩個下階的<xref:System.Web.UI.PageStatePersister>類別<xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET 網頁中包含隱藏欄位中儲存狀態資訊的類別和<xref:System.Web.UI.SessionPageStatePersister>儲存狀態中的類別<xref:System.Web.UI.Page.Session%2A>與要求相關聯的物件。</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister> 請注意，當使用<xref:System.Web.UI.SessionPageStatePersister>隱藏的 VIEWSTATE 欄位仍轉譯因為這用來判斷回傳的類別。</xref:System.Web.UI.SessionPageStatePersister>       若要將狀態儲存在您選擇的位置，您應該建立新的子系<xref:System.Web.UI.PageStatePersister>儲存和載入至持續性媒體狀態，您所選擇的類別。</xref:System.Web.UI.PageStatePersister> 如需建立新的<xref:System.Web.UI.PageStatePersister>物件，請參閱<xref:System.Web.UI.PageStatePersister>類別。</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       如果您使用.NET Framework 版本為 1.0 或 1.1，覆寫這個方法，如果您想要儲存<xref:System.Web.UI.Page>隱藏欄位以外的任何項目狀態。</xref:System.Web.UI.Page> 如果您選擇這樣做，您也必須覆寫<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>方法。</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>要儲存檢視狀態資訊。</xref:System.Object>"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "頁面已完成儲存所有狀態和控制項的檢視狀態資訊頁面之後，就會發生，並控制在頁面上。"
  remarks: "Web 網頁上控制項的狀態資訊會儲存之後<xref:System.Web.UI.Page.PreRenderComplete>事件。</xref:System.Web.UI.Page.PreRenderComplete> SaveStateComplete 引發的檢視狀態和頁面的控制項狀態之後，頁面上的控制項儲存至持續性中。       這是最後一個要求的瀏覽器中呈現網頁之前引發的事件。       如需處理事件的詳細資訊，請參閱[事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>物件，它是執行個體的<xref href=&quot;System.Web.HttpServerUtility&quot;></xref>類別。"
  remarks: "此屬性可存取常用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>和<xref:System.Web.HttpServerUtility.MapPath%2A>方法，和其他項目。</xref:System.Web.HttpServerUtility.MapPath%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A>"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "目前<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>與頁面相關聯的物件。"
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得目前<xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref> ASP.NET 所提供的物件。"
  remarks: "這個屬性會提供目前要求的工作階段的相關資訊。 A`Session`物件會維護每個使用者，從 ASP.NET 應用程式要求的頁面或文件。 變數會儲存在`Session`物件不會遭到捨棄當使用者將頁面從應用程式中; 相反地，這些變數會保存，只要使用者存取您的應用程式中的頁面。 如需有關工作階段狀態的詳細資訊，請參閱[ASP.NET 工作階段狀態概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "目前的工作階段狀態資料。"
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "當設為工作階段資訊時，就會發生<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將瀏覽器焦點設定為具有指定識別碼的控制項。"
  remarks: "使用指定的識別碼字串作用中的控制項將控制項設瀏覽器顯示的網頁中使用 SetFocus 方法。 當準備好要呈現給用戶端之前，就必須呼叫 SetFocus 方法<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > SetFocus 方法只能在瀏覽器支援的 ECMAScript 版本 1.3 或更新版本上運作。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "將焦點設定控制項的識別碼。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "將瀏覽器焦點設定為指定的控制項。"
  remarks: "指定的控制項設為作用中的控制項在網頁上顯示在瀏覽器使用 SetFocus 方法。 當準備好要呈現給用戶端之前，就必須呼叫 SetFocus 方法<xref:System.Web.UI.Control.PreRender>事件。</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > SetFocus 方法只能在瀏覽器支援的 ECMAScript 版本 1.3 或更新版本上運作。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "要接收焦點的控制項。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，這個值會指出是否要驗證查詢字串值。"
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果應該略過查詢字串的驗證 （查詢字串應該不會驗證）。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ，如果查詢字串驗證應放置正常。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否已啟用智慧型巡覽。 這個屬性已被取代。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`SmartNavigation`屬性`true`.aspx 檔案中的指示詞中。 要求頁面時，動態產生的類別就會設定這個屬性。      > [!NOTE] > 中 ASP.NET 2.0 版中，SmartNavigation 屬性已被取代。 使用<xref:System.Web.UI.Page.SetFocus%2A>方法和<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>屬性改為。</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> </xref:System.Web.UI.Page.SetFocus%2A>       當 Microsoft Internet Explorer 5.5 瀏覽器要求網頁時，或更新版本中，智慧瀏覽增強藉由執行下列的經驗的頁面:-消除 flash 巡覽所造成。      -移動 頁面時，保存捲軸位置。      -保存的項目焦點之間巡覽。      -保留在瀏覽器的歷程記錄只有最後一個頁面狀態。       具有需要時常回傳、 ASP.NET 網頁，但不會變更大幅在傳回的視覺內容，是最適合用智慧型巡覽。 決定是否要將此屬性設定為時仔細考慮這`true`。"
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果已啟用智慧型巡覽。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定套用至網頁，在頁面生命週期的早期的佈景主題的名稱。"
  remarks: "這個屬性不是指直接階層式樣式表 (CSS)。 屬性包含 ASP.NET 佈景主題，其中可以包括 CSS 檔案中的名稱。       StyleSheetTheme 屬性指定的早期頁面生命週期中，套用至頁面的佈景主題名稱，而<xref:System.Web.UI.Page.Theme%2A>屬性會指定在稍後頁面生命週期中套用至頁面的佈景主題名稱。</xref:System.Web.UI.Page.Theme%2A> 這表示，頁面上的設定優先於樣式表主題中的設定。 如需詳細資訊，請參閱[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。       在頁面指示詞中，或藉由覆寫屬性，通常會設定這個屬性的值。 詳細資訊，請參閱下列主題:- [How to︰ 適用於 ASP.NET 主題](~/add/includes/ajax-current-ext-md.md)      -   [How to︰ 適用於 ASP.NET 的佈景主題以程式設計的方式](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "在頁面生命週期的早期套用至網頁佈景主題的名稱。"
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試設定 StyleSheetTheme 屬性之後<xref:System.Web.UI.Page.FrameworkInitialize*>呼叫方法。</xref:System.Web.UI.Page.FrameworkInitialize*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme 設定為無效的佈景主題名稱。 這個例外狀況時擲回<xref:System.Web.UI.Page.FrameworkInitialize*>呼叫方法時，不是由屬性 setter。</xref:System.Web.UI.Page.FrameworkInitialize*>"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定頁面主題的名稱。"
  remarks: "佈景主題屬性設定頁面所用的佈景主題的名稱。 如果您想要優先於佈景主題中的設定的設定頁面上，使用<xref:System.Web.UI.Page.StyleSheetTheme%2A>屬性。</xref:System.Web.UI.Page.StyleSheetTheme%2A> 如需詳細資訊，請參閱[ASP.NET 佈景主題和面板](~/add/includes/ajax-current-ext-md.md)。       之前，必須設定佈景主題屬性<xref:System.Web.UI.Page.PreInit>事件; 設定之後的佈景主題屬性<xref:System.Web.UI.Page.PreInit>事件會導致<xref:System.InvalidOperationException>例外狀況。</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit>       指定佈景主題必須存在於應用程式或全域主題。 如果主題不存在，<xref:System.Web.HttpException>擲回例外狀況。</xref:System.Web.HttpException>"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "網頁主題名稱。"
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "嘗試設定佈景主題之後<xref href=&quot;System.Web.UI.Page.PreInit&quot;></xref>已發生事件。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "主題已設定為無效的佈景主題名稱。"
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定頁面的標題。"
  remarks: "使用 Title 屬性來設定頁面標題 HTML 標頭傳送到提出要求的瀏覽器中。      > [!NOTE] > 網頁必須包含`head`具有屬性的項目`runat=&quot;server&quot;`，否則標題將不會呈現。"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "頁面的標題。"
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Title 屬性必須有標題控制項在頁面上。"
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得<xref href=&quot;System.Web.TraceContext&quot;></xref>目前 Web 要求的物件。"
  remarks: "追蹤會追蹤，並顯示 Web 要求的相關執行詳細資料。 顯示在轉譯頁面的追蹤資料，您必須啟用頁面或應用程式層級的追蹤。       預設為停用頁面上的追蹤。 若要啟用網頁的追蹤，請使用指示詞`<% @ Page trace=&quot;true&quot; %>`。 若要啟用追蹤整個應用程式，您必須應用程式的組態檔中，位於應用程式的根目錄中的 Web.config 中啟用它。 如需詳細資訊，請參閱[ASP.NET 追蹤概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "從資料<xref href=&quot;System.Web.TraceContext&quot;></xref>目前 Web 要求的物件。"
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定值，指出是否已啟用追蹤<xref href=&quot;System.Web.UI.Page&quot;></xref>物件。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`Trace`屬性`true`.aspx 檔案中的指示詞中。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果追蹤已啟用頁面;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定頁面顯示的追蹤陳述式的模式。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`TraceMode`.aspx 檔案中的指示詞中的屬性。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "其中一個<xref href=&quot;System.Web.TraceMode&quot;></xref>列舉成員。"
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的支援層級交易的頁面。"
  remarks: "在大部分情況下，程式碼中設定這個屬性。 設定`Transaction`.aspx 檔案中的指示詞中的屬性。 要求頁面時，動態產生的類別設定的屬性。"
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "整數，代表其中一個<xref href=&quot;System.EnterpriseServices.TransactionOption&quot;></xref>列舉成員。"
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "即將加入。"
    return:
      type: System.Boolean
      description: "即將加入。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "即將加入。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "即將加入。"
    return:
      type: System.Boolean
      description: "即將加入。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "設定的使用者介面 (UI) ID <xref href=&quot;System.Threading.Thread&quot;> </xref>與頁面相關聯的物件。"
  remarks: "這個屬性是捷徑<xref:System.Threading.Thread.CurrentThread%2A>屬性。</xref:System.Threading.Thread.CurrentThread%2A> 文化特性是執行的執行緒集合的屬性`UICulture`.aspx 檔案中的指示詞中的屬性。 要求頁面時，動態產生的類別就會設定這個屬性的值。 此外，您可以同時也可以明確設定中的 UICulture 屬性的值位於 Web.config 檔案。"
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "UI 的識別碼。"
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得唯一的尾碼附加到瀏覽器快取的檔案路徑。"
  remarks: "UniqueFilePathSuffix 屬性會傳回附加至時快取的瀏覽器所需的檔案路徑結尾的字串。 字串用來識別與特定要求相關聯的檔案路徑。"
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "唯一的尾碼附加到檔案路徑。 預設值是&quot;__ufps =&quot;加上唯一的 6 位數數字。"
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否使用不顯眼的 JavaScript 用戶端驗證。"
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果使用不顯眼的 JavaScript。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "停止指定之控制項的控制項狀態的持續性。"
  remarks: "使用控制項狀態的自訂伺服器控制項必須呼叫<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>期間之前的每個要求保存狀態。</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 控制項狀態的註冊不會保存從要求的要求在回傳期間。 使用 UnregisterRequiresControlState 方法，以確保不再需要保存回傳的控制項不會保存控制項狀態。       就內部而言，UnregisterRequiresControlState 方法會叫用使用<xref:System.Web.UI.Control.RemovedControl%2A>方法以從控制項集合移除的控制項。</xref:System.Web.UI.Control.RemovedControl%2A>"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>要停止的控制項狀態的持續性。"
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "即將加入。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "即將加入。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "即將加入。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得使用者要求網頁的相關資訊。"
  remarks: "<xref:System.Security.Principal.IPrincipal>物件都代表的使用者，使其程式碼會執行，包括該使用者的身分識別和它們所屬的任何角色的安全性內容。</xref:System.Security.Principal.IPrincipal>       這個屬性會使用<xref:System.Web.HttpContext>物件的<xref:System.Web.HttpContext.User%2A>屬性來判斷出要求的來源。</xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext>"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>代表使用者要求網頁。</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示要驗證其指派的資訊頁面中包含任何驗證控制項。"
  remarks: "這個方法會叫用，當使用者按一下具有任何 ASP.NET 伺服器控制項`CausesValidation`屬性設定為`true`，預設值。 這些包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 伺服器控制項<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 伺服器控制項和控制項，可以自動回傳至伺服器這類<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控制項。</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       若要停用任何頁面上的按鈕控制項的驗證，請將設定按鈕控制項的`CausesValidation`屬性`false`。       叫用這個方法時，它會逐一包含在驗證控制項<xref:System.Web.UI.ValidatorCollection>物件相關聯<xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>屬性，並叫用目前的驗證群組中每個驗證控制項的驗證邏輯。</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> </xref:System.Web.UI.ValidatorCollection> 驗證群組取決於公佈到伺服器 頁面的控制項。 如果驗證未不指定任何群組，則會不使用任何驗證群組。      > [!NOTE] > 頁面驗證的行為已變更。 在[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]，控制項不會再呼叫 Validate 方法，它們使用<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>方法而。</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> 如果您使用上的 Validate 方法[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]頁面，驗證群組會被忽略，而且會驗證所有的控制項。"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示驗證控制項中指定的驗證群組，驗證其指派的資訊。"
  remarks: "這個方法會叫用，當使用者按一下具有任何 ASP.NET 伺服器控制項`CausesValidation`屬性設定為`true`，預設值。 這些包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 伺服器控制項<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 伺服器控制項和控制項，可以自動回傳至伺服器這類<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控制項。</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       若要停用任何頁面上的按鈕控制項的驗證，請將設定按鈕控制項的`CausesValidation`屬性`false`。       Validate 方法會驗證指定的驗證群組。 驗證群組，在呼叫 Validate 方法之後<xref:System.Web.UI.Page.IsValid%2A>方法會傳回`true`只有當指定的驗證群組和導致頁面以張貼至伺服器之控制項的驗證群組是否有效。</xref:System.Web.UI.Page.IsValid%2A>"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "要驗證之控制項的驗證群組名稱。"
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出頁面是否會檢查用戶端輸入瀏覽器的潛在危險的值。"
  remarks: "值<xref:System.Web.UI.ValidateRequestMode>不會用於<xref:System.Web.UI.Page>類別，因為沒有任何繼承自。</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidateRequestMode>"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "值，指出頁面是否會檢查用戶端輸入。 預設值是<xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>。"
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得包含在要求的頁面上的所有驗證控制項的集合。"
  remarks: "您可以使用這個屬性來操作的方法和屬性的<xref:System.Web.UI.ValidatorCollection>目前相關聯的物件<xref:System.Web.UI.Page>執行個體。</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidatorCollection> 此集合包含頁面中所包含的所有驗證伺服器控制項。       呼叫<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>方法會導致目前的驗證群組中每個驗證伺服器控制項執行驗證邏輯。</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 如果未傳遞任何這些控制項，<xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>屬性會傳回`false`。</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       如需有關驗證控制項的詳細資訊，請參閱[ASP.NET 驗證控制項](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "驗證控制項的集合。"
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "確認<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>控制項呈現在執行階段指定的 ASP.NET 伺服器控制項。"
  remarks: "必須是內部的控制項`<form runat=server>`標記呈現，讓它們被放在標記外部顯示錯誤訊息之前，可以呼叫這個方法。 控制項的回傳或取決於已註冊的指令碼區塊應該呼叫這個方法的覆寫中<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>方法。</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> 具有不同的方式轉譯伺服器表單項目頁面，可以覆寫這個方法會擲回例外狀況在不同情況下。       如果不放在伺服器控制項的回傳或用戶端指令碼將無法運作<xref:System.Web.UI.HtmlControls.HtmlForm>伺服器控制項 (`form runat=&quot;server&quot;>`) 標記。</xref:System.Web.UI.HtmlControls.HtmlForm> 這些控制項可以呼叫這個方法，提供明確的錯誤訊息時不放在呈現時<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。</xref:System.Web.UI.HtmlControls.HtmlForm>       當您開發自訂的伺服器控制項時，通常會呼叫這個方法，當您覆寫`Render`任何種類的輸入標記的方法。 這是非常重要，如果輸入的控制項呼叫<xref:System.Web.UI.Page.GetPostBackEventReference%2A>，或如果發出用戶端指令碼。</xref:System.Web.UI.Page.GetPostBackEventReference%2A> 複合伺服器控制項不需要進行這個呼叫。"
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ASP.NET 伺服器控制項所需的<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>控制項。"
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "指定的伺服器控制項並未包含開頭和結尾標記之間<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>在執行階段的伺服器控制項。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "若要驗證的控制項是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定檢視狀態的加密模式。"
  remarks: "無法在程式碼中設定 ViewStateEncryptionMode 屬性。 它只能設定在指示詞或< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> 指示詞覆寫中設定的值設定在組態檔中的所有值。       指示詞中設定這個屬性的語法如下所示︰ ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ```組態檔中設定這個屬性的語法如下所示︰ ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ```自訂控制項開發人員可能會想要儲存檢視狀態，其控制項中的潛在的敏感資料前先檢查程式碼中的此屬性的值。            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "其中一個<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref>值。 預設值是<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>。"
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定的值不是成員的<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref>列舉型別。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "只在或頁面之前，可以設定 ViewStateEncryptionMode 屬性<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>頁面生命週期中階段。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指派給個別使用者在目前頁面相關聯的檢視狀態變數的識別項。"
  remarks: "ViewStateUserKey 屬性設定，可協助您避免在您的應用程式，惡意使用者攻擊。 這樣可讓您指派給個別使用者的檢視狀態變數的識別項，使其無法使用此變數產生攻擊。 如需有關網站的攻擊，以及您可以如何協助防止它們的詳細資訊，請參閱[需要利用的 ASP.NET 內建功能擊退 Web 攻擊](http://go.microsoft.com/fwlink/?LinkId=163557)。       您可以為任何字串值，設定這個屬性，例如使用者的已驗證的名稱或<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>      > [!NOTE] > 您必須將此屬性期間`Page_Init`網頁處理的階段。 設定這個屬性期間`Page_Load`階段會擲回的例外狀況。"
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "個別使用者的識別項。"
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ViewStateUserKey 屬性太晚存取頁面處理期間。"
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得或設定值，指出是否<xref href=&quot;System.Web.UI.Page&quot;></xref>物件呈現。"
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Web.UI.Page&quot;></xref>轉譯; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
