### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler
  id: HttpCapabilitiesSectionHandler
  children:
  - System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  - System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: HttpCapabilitiesSectionHandler
  nameWithType: HttpCapabilitiesSectionHandler
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler
  type: Class
  summary: "它可以協助您在讀取<xref uid=&quot;langword_csharp_&lt;browserCaps&gt;&quot; name=&quot;&lt;browserCaps&gt;&quot; href=&quot;&quot;></xref>區段的組態檔和建立的執行個體<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;></xref>類別，其中包含用戶端瀏覽器的功能資訊。"
  remarks: "HttpCapabilitiesSectionHandler 類別和對應`<browserCaps>`組態區段在.NET Framework 2.0 版中已被取代。 管理的瀏覽器功能的慣用的方法是透過瀏覽器定義檔案會編譯以供<xref:System.Web.Configuration.BrowserCapabilitiesFactory>類別。</xref:System.Web.Configuration.BrowserCapabilitiesFactory> 這兩個組態方法的目標是要產生的<xref:System.Web.HttpBrowserCapabilities>類別以存取從<xref:System.Web.HttpRequest.Browser%2A>屬性<xref:System.Web.HttpRequest>類別</xref:System.Web.HttpRequest>的</xref:System.Web.HttpRequest.Browser%2A></xref:System.Web.HttpBrowserCapabilities>執行個體       可以使用來儲存瀏覽器功能的瀏覽器定義檔案提供替代方案的優點。 它可提升的效能，因為瀏覽器定義資訊會從 XML 組態檔中剖析並編譯成事先類別。 瀏覽器定義檔案也會更輕鬆地維護:-定義為階層式，並因此需要較少的規則運算式，以判斷瀏覽器功能。      -定義可以組織在多個檔案，使其更容易管理。      -可以在任何層級，於 Machine.config 層級或特定應用程式層級定義的定義。 這樣就不需要複製完整的定義，以覆寫特定瀏覽器的功能。"
  syntax:
    content: 'public class HttpCapabilitiesSectionHandler : System.Configuration.IConfigurationSectionHandler'
  inheritance:
  - System.Object
  implements:
  - System.Configuration.IConfigurationSectionHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  langs:
  - csharp
  name: HttpCapabilitiesSectionHandler()
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Web.Configuration.HttpCapabilitiesSectionHandler&quot;></xref>類別。"
  syntax:
    content: public HttpCapabilitiesSectionHandler ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "建立的執行個體<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;></xref>類別，其中包含用戶端瀏覽器的功能資訊。"
  remarks: "此類別衍生其瀏覽器的定義資料從`<browserCaps>`組態區段。 .NET Framework 2.0 版中，此區段已被取代。"
  syntax:
    content: public object Create (object parent, object configurationContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "父設定節點。"
    - id: configurationContext
      type: System.Object
      description: "設定目前的設定檔的內容。"
    - id: section
      type: System.Xml.XmlNode
      description: "組態檔包含之資訊的區段。"
    return:
      type: System.Object
      description: "執行個體<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> ，其中包含用戶端瀏覽器的功能資訊。"
  overload: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: HttpCapabilitiesSectionHandler()
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler()
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: HttpCapabilitiesSectionHandler
  nameWithType: HttpCapabilitiesSectionHandler.HttpCapabilitiesSectionHandler
- uid: System.Web.Configuration.HttpCapabilitiesSectionHandler.Create*
  parent: System.Web.Configuration.HttpCapabilitiesSectionHandler
  isExternal: false
  name: Create
  nameWithType: HttpCapabilitiesSectionHandler.Create
