### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableCollection
  id: DataTableCollection
  children:
  - System.Data.DataTableCollection.Add
  - System.Data.DataTableCollection.Add(System.Data.DataTable)
  - System.Data.DataTableCollection.Add(System.String)
  - System.Data.DataTableCollection.Add(System.String,System.String)
  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  - System.Data.DataTableCollection.Clear
  - System.Data.DataTableCollection.CollectionChanged
  - System.Data.DataTableCollection.CollectionChanging
  - System.Data.DataTableCollection.Contains(System.String)
  - System.Data.DataTableCollection.Contains(System.String,System.String)
  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  - System.Data.DataTableCollection.IndexOf(System.String)
  - System.Data.DataTableCollection.IndexOf(System.String,System.String)
  - System.Data.DataTableCollection.Item(System.Int32)
  - System.Data.DataTableCollection.Item(System.String)
  - System.Data.DataTableCollection.Item(System.String,System.String)
  - System.Data.DataTableCollection.List
  - System.Data.DataTableCollection.Remove(System.Data.DataTable)
  - System.Data.DataTableCollection.Remove(System.String)
  - System.Data.DataTableCollection.Remove(System.String,System.String)
  - System.Data.DataTableCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
  type: Class
  summary: "代表資料表的集合<xref href=&quot;System.Data.DataSet&quot;> </xref>。"
  remarks: "DataTableCollection 包含的所有<xref:System.Data.DataTable>物件的特定<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> 若要存取的 DataTableCollection <xref:System.Data.DataSet>，使用<xref:System.Data.DataSet.Tables%2A>屬性。</xref:System.Data.DataSet.Tables%2A> </xref:System.Data.DataSet>       DataTableCollection 使用例如方法<xref:System.Data.DataTableCollection.Add%2A>， <xref:System.Data.DataTableCollection.Clear%2A>，和<xref:System.Data.DataTableCollection.Remove%2A>管理集合中的項目。</xref:System.Data.DataTableCollection.Remove%2A> </xref:System.Data.DataTableCollection.Clear%2A> </xref:System.Data.DataTableCollection.Add%2A>       使用<xref:System.Data.DataTableCollection.Contains%2A>方法來判斷集合是否為特定資料表 （索引或名稱所指定）。</xref:System.Data.DataTableCollection.Contains%2A>       若要從一個資料表瀏覽至另一個，使用<xref:System.Data.DataTable.ChildRelations%2A>或<xref:System.Data.DataTable.ParentRelations%2A>屬性<xref:System.Data.DataTable>存取其集合<xref:System.Data.DataRelation>物件。</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataTable.ChildRelations%2A> 您也可以使用<xref:System.Data.DataSet.Relations%2A>來瀏覽的父子式關聯性的屬性`DataTables`依特定<xref:System.Data.DataSet>集合。</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>"
  example:
  - "The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \n  \n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add
  id: Add
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "建立新<xref href=&quot;System.Data.DataTable&quot;></xref>物件使用的預設名稱，並將它加入至集合。"
  remarks: "因為未指定名稱，`DataTable`使用預設名稱，相對於其加法順序所建立。 預設名稱是&quot;Table1&quot;。       <xref:System.Data.DataTableCollection.CollectionChanged>成功會將資料表加入至集合時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "新建立<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  overload: System.Data.DataTableCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  id: Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "將指定<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>至集合。"
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>成功會將資料表加入至集合時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]"
  syntax:
    content: public void Add (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref>来加入物件。"
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定資料表的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料表已經隸屬於這個集合，或屬於另一個集合。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中的資料表具有相同的名稱。 比較不區分大小寫。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "建立<xref href=&quot;System.Data.DataTable&quot;></xref>物件使用指定的名稱，並將它加入至集合。"
  remarks: "如果任一個`null`或空字串 (&quot;&quot;) 會傳遞中，預設名稱提供新建立`DataTable`。 這個名稱根據 （&quot;Table1&quot;、&quot;Table2&quot;等等），已加入資料表的順序。       <xref:System.Data.DataTableCollection.CollectionChanged>如果資料表已成功加入至集合，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "提供給建立的名稱<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
    return:
      type: System.Data.DataTable
      description: "新建立<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中的資料表具有相同的名稱。 （比較不區分大小寫）。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "建立<xref href=&quot;System.Data.DataTable&quot;></xref>物件使用指定的名稱，並將它加入至集合。"
  remarks: "如果任一個`null`或空字串 (&quot;&quot;) 會傳遞中，預設名稱提供新建立`DataTable`。 這個名稱根據 （&quot;Table1&quot;、&quot;Table2&quot;等等），已加入資料表的順序。       <xref:System.Data.DataTableCollection.CollectionChanged>如果資料表已成功加入至集合，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "提供給建立的名稱<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
    - id: tableNamespace
      type: System.String
      description: "要授與建立的命名空間<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
    return:
      type: System.Data.DataTable
      description: "新建立<xref href=&quot;System.Data.DataTable&quot;> </xref>。"
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "集合中的資料表具有相同的名稱。 （比較不區分大小寫）。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  id: AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定的項目複製<xref href=&quot;System.Data.DataTable&quot;></xref>陣列至集合結尾。"
  remarks: ''
  example:
  - "The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.DataTable[] tables);
    parameters:
    - id: tables
      type: System.Data.DataTable[]
      description: "陣列<xref href=&quot;System.Data.DataTable&quot;></xref>来加入至集合的物件。"
  overload: System.Data.DataTableCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  id: CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "確認是否指定<xref href=&quot;System.Data.DataTable&quot;></xref>可以從集合中移除物件。"
  remarks: ''
  example:
  - "The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref>集合中要執行檢查。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以移除資料表;否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Clear
  id: Clear
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "清除所有的集合<xref href=&quot;System.Data.DataTable&quot;></xref>物件。"
  remarks: "若要移除特定`DataTable`從集合中，使用<xref:System.Data.DataTableCollection.Remove%2A>方法。</xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \n  \n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataTableCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "之後，就會發生<xref href=&quot;System.Data.DataTableCollection&quot;></xref>變更因為<xref href=&quot;System.Data.DataTable&quot;></xref>新增或移除物件。"
  remarks: '如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanging
  id: CollectionChanging
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "發生時<xref href=&quot;System.Data.DataTableCollection&quot;></xref>變更因為<xref href=&quot;System.Data.DataTable&quot;></xref>新增或移除物件。"
  remarks: '如需處理事件的詳細資訊，請參閱[NIB︰ 使用事件](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)。'
  example:
  - "The following example demonstrates how to use the CollectionChanging event.  \n  \n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指出是否<xref href=&quot;System.Data.DataTable&quot;></xref>集合中存在具有指定名稱的物件。"
  remarks: "指定的名稱<xref:System.Data.DataTable>物件使用<xref:System.Data.DataTable.TableName%2A>屬性。</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> 如果您將加入<xref:System.Data.DataTable>至包含集合<xref:System.Data.DataTableCollection.Add%2A>方法，傳遞任何引數，資料表有一個預設名稱，根據 （&quot;Table1&quot;、&quot;Table2&quot;等等），已加入的資料表的順序。</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>       若要取得之索引的<xref:System.Data.DataTable>，使用<xref:System.Data.DataTableCollection.IndexOf%2A>方法。</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>      > [!NOTE] > 傳回`false`當兩個或多個資料表具有相同名稱但不同的命名空間。 如果沒有任何模稜兩可比對一個資料表的資料表名稱時，呼叫就會失敗。"
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>尋找。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料表存在，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得值，指出是否<xref href=&quot;System.Data.DataTable&quot;></xref>物件集合中存在具有指定名稱和資料表命名空間。"
  remarks: "指定的名稱<xref:System.Data.DataTable>物件使用<xref:System.Data.DataTable.TableName%2A>屬性。</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> 如果您將加入<xref:System.Data.DataTable>至包含集合<xref:System.Data.DataTableCollection.Add%2A>方法，傳遞任何引數，資料表有一個預設名稱，根據 （&quot;Table1&quot;、&quot;Table2&quot;等等），已加入的資料表的順序。</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>      > [!NOTE] > 傳回`false`當兩個或多個資料表具有相同名稱但不同的命名空間。 如果沒有任何模稜兩可比對一個資料表的資料表名稱時，呼叫就會失敗。       若要取得之索引的<xref:System.Data.DataTable>，使用<xref:System.Data.DataTableCollection.IndexOf%2A>方法。</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]"
  syntax:
    content: public bool Contains (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>尋找。"
    - id: tableNamespace
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>命名空間中呈現的外觀。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果指定的資料表存在，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  id: CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "目前的所有項目複製<xref href=&quot;System.Data.DataTableCollection&quot;></xref>到一維<xref:System.Array>、 指定的目的陣列索引處開始。</xref:System.Array>"
  remarks: "在衍生類別可以覆寫這個方法。"
  syntax:
    content: public void CopyTo (System.Data.DataTable[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataTable[]
      description: "一維<xref:System.Array>複製目前<xref href=&quot;System.Data.DataTableCollection&quot;></xref>物件的項目。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "目的地<xref:System.Array>要開始複製的索引。</xref:System.Array>"
  overload: System.Data.DataTableCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  id: IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定的索引<xref href=&quot;System.Data.DataTable&quot;></xref>物件。"
  remarks: "若要判斷給定資料表的確切索引使用 IndexOf 方法。       在呼叫前 IndexOf，您可以測試是否存在 （索引或名稱所指定） 的資料表使用<xref:System.Data.DataTableCollection.Contains%2A>方法。</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]"
  syntax:
    content: public int IndexOf (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref>搜尋。"
    return:
      type: System.Int32
      description: "此資料表，則為-1，如果在集合中找不到資料表的以零為起始的索引。"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得集合中索引<xref href=&quot;System.Data.DataTable&quot;></xref>具有指定名稱的物件。"
  remarks: "指定的名稱`DataTable`物件使用<xref:System.Data.DataTable.TableName%2A>屬性。</xref:System.Data.DataTable.TableName%2A>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "名稱<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>来尋找的物件。"
    return:
      type: System.Int32
      description: "以零為起始的索引<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>與指定的名稱，則為-1 的資料表不存在集合中。       <div class=&quot;alert NOTE&quot;>    會傳回-1，當兩個或多個資料表具有相同名稱但不同的命名空間。 如果沒有任何模稜兩可比對一個資料表的資料表名稱時，呼叫就會失敗。      </div>"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得指定之集合中索引<xref href=&quot;System.Data.DataTable&quot;></xref>物件。"
  remarks: "指定的名稱<xref:System.Data.DataTable>物件使用<xref:System.Data.DataTable.TableName%2A>屬性。</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName, string tableNamespace);
    parameters:
    - id: tableName
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>来尋找的物件。"
    - id: tableNamespace
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>命名空間中呈現的外觀。"
    return:
      type: System.Int32
      description: "以零為起始的索引<xref href=&quot;System.Data.DataTable&quot;></xref>與指定的名稱，則為-1 的資料表不存在集合中。"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得<xref href=&quot;System.Data.DataTable&quot;></xref>指定索引處的物件。"
  remarks: "使用<xref:System.Data.DataTableCollection.Contains%2A>方法來判斷具有特定索引的資料表是否存在。</xref:System.Data.DataTableCollection.Contains%2A>       如果您有一個資料表，但不是其索引的名稱，使用<xref:System.Data.DataTableCollection.IndexOf%2A>方法傳回的索引。</xref:System.Data.DataTableCollection.IndexOf%2A>"
  example:
  - "The following example retrieves a <xref:System.Data.DataTable> by its index.  \n  \n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "以零為起始的索引<xref href=&quot;System.Data.DataTable&quot;></xref>尋找。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref>具有指定的索引; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataTable&quot;></xref>不存在。"
  overload: System.Data.DataTableCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "索引值大於集合中的項目數。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得<xref href=&quot;System.Data.DataTable&quot;></xref>具有指定名稱的物件。"
  remarks: "如果<xref:System.Data.DataTable>名稱存在，並符合大小寫的搜尋字串，它會傳回。</xref:System.Data.DataTable> 否則不會執行不區分大小寫的搜尋，而且如果<xref:System.Data.DataTable>找到名稱符合這項搜尋，它會傳回。</xref:System.Data.DataTable>       使用<xref:System.Data.DataTableCollection.Contains%2A>方法，以判斷是否有特定的名稱或索引的資料表。</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>尋找。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>具有指定之名稱; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataTable&quot;></xref>不存在。"
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得<xref href=&quot;System.Data.DataTable&quot;></xref>具有指定的命名空間中指定之名稱的物件。"
  syntax:
    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>尋找。"
    - id: tableNamespace
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>命名空間中呈現的外觀。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>具有指定之名稱; 否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Data.DataTable&quot;></xref>不存在。"
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.List
  id: List
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "即將加入。"
  overload: System.Data.DataTableCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  id: Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "移除指定<xref href=&quot;System.Data.DataTable&quot;></xref>集合中的物件。"
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>成功移除資料表時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>       若要判斷給定的資料表是否存在，而且可以移除叫用移除之前，請使用<xref:System.Data.DataTableCollection.Contains%2A>和<xref:System.Data.DataTableCollection.CanRemove%2A>方法。</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref>移除。"
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定資料表的值<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "資料表不屬於此集合。       -或者-資料表關聯性的一部分。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "移除<xref href=&quot;System.Data.DataTable&quot;></xref>物件與集合中指定的名稱。"
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>成功移除資料表時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>       若要判斷給定的資料表是否存在，而且可以叫用之前移除<xref:System.Data.DataTableCollection.Remove%2A>，使用<xref:System.Data.DataTableCollection.Contains%2A>和<xref:System.Data.DataTableCollection.CanRemove%2A>方法。</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>若要移除的物件。"
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "集合中沒有具有指定名稱的資料表。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "移除<xref href=&quot;System.Data.DataTable&quot;></xref>物件與集合中指定的名稱。"
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>成功移除資料表時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>       若要判斷給定的資料表是否存在，而且可以叫用之前移除<xref:System.Data.DataTableCollection.Remove%2A>，使用<xref:System.Data.DataTableCollection.Contains%2A>和<xref:System.Data.DataTableCollection.CanRemove%2A>方法。</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]"
  syntax:
    content: public void Remove (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>若要移除的物件。"
    - id: tableNamespace
      type: System.String
      description: "名稱<xref href=&quot;System.Data.DataTable&quot;></xref>命名空間中呈現的外觀。"
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "集合中沒有具有指定名稱的資料表。"
  platform:
  - net462
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "移除<xref href=&quot;System.Data.DataTable&quot;></xref>從集合指定索引處的物件。"
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>成功移除資料表時，就會發生事件。</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "索引<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref>移除。"
  overload: System.Data.DataTableCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "集合中指定索引處沒有資料表。"
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableCollection.Add
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
- uid: System.Data.DataTableCollection.Add(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableCollection.Clear
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
- uid: System.Data.DataTableCollection.CollectionChanged
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataTableCollection.CollectionChanging
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
- uid: System.Data.DataTableCollection.Contains(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
- uid: System.Data.DataTableCollection.Item(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
- uid: System.Data.DataTableCollection.Item(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
- uid: System.Data.DataTableCollection.List
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
- uid: System.Data.DataTableCollection.Remove(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
- uid: System.Data.DataTableCollection.Add*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add
  nameWithType: DataTableCollection.Add
- uid: System.Data.DataTableCollection.AddRange*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableCollection.AddRange
- uid: System.Data.DataTableCollection.CanRemove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataTableCollection.CanRemove
- uid: System.Data.DataTableCollection.Clear*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableCollection.Clear
- uid: System.Data.DataTableCollection.Contains*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableCollection.Contains
- uid: System.Data.DataTableCollection.CopyTo*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableCollection.CopyTo
- uid: System.Data.DataTableCollection.IndexOf*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableCollection.IndexOf
- uid: System.Data.DataTableCollection.Item*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item
  nameWithType: DataTableCollection.Item
- uid: System.Data.DataTableCollection.List*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
- uid: System.Data.DataTableCollection.Remove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableCollection.Remove
- uid: System.Data.DataTableCollection.RemoveAt*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableCollection.RemoveAt
