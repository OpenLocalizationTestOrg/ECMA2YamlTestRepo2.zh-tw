### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "可做為 Web 組件控制項集合，管理所有 Web 組件控制項、 功能和網頁發生的事件中心的類別。"
  remarks: "WebPartManager 控制項做為中樞或控制項的中央 Web 組件的應用程式。 必須是--，且只有一-WebPartManager 上每個頁面，使用 Web 組件控制項的控制項執行個體。 大部分的網頁組件的應用程式方面，WebPartManager 控制項只適用於已驗證的使用者。 此外，它的功能適用於幾乎已完全位於繼承自<xref:System.Web.UI.WebControls.WebParts.WebZone>類別</xref:System.Web.UI.WebControls.WebParts.WebZone>的 Web 組件區域內的伺服器控制項 這些區域之外的頁面上的伺服器控制項可以有很少的 Web 組件功能或與 WebPartManager 控制項互動。       為 Web 組件功能頁面上的中樞，WebPartManager 控制項執行下表中所述的工作種類。      |工作分類 |控制項的功能 |  |-------------------|---------------------------|  |追蹤 Web 組件控制項 |會追蹤的許多不同種類的可提供 Web 組件功能，包括<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項、 連線、 區域和其他項目頁面上的控制項。 |  |加入和移除 Web 組件控制項 |提供方法來加入、 刪除和關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>頁面上的控制項。 |  |管理連接 |建立控制項之間的連接，並且會監視連線，以及新增和移除它們的處理程序。 |  |個人化控制項和網頁 |可讓使用者在頁面上，將控制項移至不同的位置，並啟動外觀、 屬性和控制項的行為的使用者可以編輯的檢視。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 會維護每個頁面上的特定使用者個人化設定。 |  |不同的網頁檢視之間切換 |之間切換不同的特殊檢視的頁面上，以便使用者可以執行特定工作，例如變更頁面配置或編輯控制項。 |  |引發 Web 組件生命週期事件 |定義引發並可讓開發人員處理生命週期事件 Web 組件的控制項，例如當控制項所加入、 移動、 已連線，或已刪除。 |  |啟用匯入和匯出的控制項 |匯出包含<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項的屬性狀態的 XML 資料流，並可讓使用者匯入為了方便起見，個人化在其他網頁或網站中的複雜控制項中的檔案。 |      WebPartManager 類別有大量的屬性。</xref:System.Web.UI.WebControls.WebParts.WebPart> 與 WebPartManager 角色追蹤其他控制項的一致，它有一些參考 Web 組件控制項或其他特殊的 Web 組件物件的集合的屬性。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>屬性是所有集合 WebPartManager 控制項用於其追蹤和其他管理工作。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       屬性的另一個群組包含可自訂 Web 組件的應用程式中發生的特定案例中套用的警告。 這些包括<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>，而<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       WebPartManager 類別會覆寫其基底的繼承屬性，許多 Web 伺服器控制項所使用的部分。 這些包括<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       最後，還有一組屬性可用來存取應用程式的目前狀態。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>屬性會指出目前的頁面是英吋的顯示模式</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>屬性會指出控制項是否可呈現用戶端指令碼，這是在其中使用者可能會有不同的功能的瀏覽器或已關閉。 指令碼的情況下相關</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>的 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>屬性可用於參考包含數個重要的 Web 組件方法所使用的擴充性的情況下呼叫公用程式類別。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> 隱藏呼叫這些方法在個別的類別 (<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>類別)，WebPartManager 類別擁有應用程式開發介面簡化了。</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>屬性提供個人化物件會儲存使用者的個人化設定，並將保存到永久儲存區資料的存取權。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>屬性可指出哪些<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項在頁面上的目前選取的使用者或應用程式。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>屬性會指出是否在自訂的個人化資料<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項已變更。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       WebPartManager 控制項包含五個內建的顯示模式或網頁的檢視。 開發人員可以擴充此功能，建立自訂的顯示模式，藉由延伸型別，例如<xref:System.Web.UI.WebControls.WebParts.WebZone>類別或<xref:System.Web.UI.WebControls.WebParts.ToolZone>類別。</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> 使用者可以將頁面切換至不同的顯示模式，，前提是適當對應至指定的顯示模式的控制項類型會出現在頁面上。      > [!NOTE] > 可以擴充此功能，讓使用者可以切換成自訂的顯示模式，而不需要對應的區域在頁面上。 不過，預設行為是顯示模式會對應到區域。       WebPartManager 類別中的公用欄位來表示的標準的顯示模式。 下表摘要說明欄位，以及它們參考的顯示模式。 目前的顯示模式的頁面上，如先前所述，固定會參考在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>屬性，並可在特定的頁面上，指定的區域出現在頁面上，類型的顯示模式集合包含在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      |欄位 |顯示模式的詳細資料 |  |-----------|--------------------------|  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|一般使用者檢視的網頁。預設值和最常見的顯示模式。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|檢視使用者可以重新排列或刪除控制項，以變更頁面配置。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|變成可見的。 編輯的使用者介面 (UI) 的檢視使用者可以編輯的外觀、 內容和一般瀏覽模式中會顯示控制項的行為。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|變成可見的; 在目錄 UI 的檢視使用者可以將控制項加入頁面從可用的控制項的類別目錄。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|變成可見的; 連接 UI 的檢視使用者連接、 管理或中斷連接控制項之間的連接。 |      WebPartManager 控制項也會包含在 Web 組件頁面和控制項的生命週期中不可或缺的事件數目。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> 這些事件提供精確以程式設計方式控制 Web 組件控制項的行為。 大部分的方法與直接相關<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (或放在其他伺服器或使用者控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域，讓它們可以表現<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項)。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> 不過，一些事件相關之頁面或頁面上的連接的狀態。 下表列出可用的事件，並摘要說明其用途。      > [!NOTE] > 下表中的所有情況下，「 控制項 」 這個字是指<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項或任何伺服器控制項位於區域，且會包裝與<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>在執行階段物件。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      |事件 |描述 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|控制項會加入至頁面，以便確認它已獲授權之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|在頁面上的所有連接已經都啟動之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|啟用頁面上的所有連接處理程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|目前顯示模式的頁面已變更之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|變更頁面的顯示模式的程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|已取消選取的控制項之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|取消選取的控制項的處理程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|將控制項加入至區域後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|將控制項加入至區域的程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|發生於控制項已關閉 （從頁面移除） 之後。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|關閉控制項的處理程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|動態控制項 （一個以程式設計方式建立或新增從類別目錄） 的執行個體已永久刪除之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|刪除動態控制項的處理程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|發生於控制項移動其區域內，或另一個區域之後。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|移動控制項的處理程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|選取以參與連線的兩個控制項已建立連接之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|連接兩個控制項的程序之前發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|連線已經中斷連接的兩個控制項之後，就會發生。 |  |<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|中斷連接兩個控制項的程序之前發生。 |      WebPartManager 控制有許多方法來管理 Web 組件頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 大型的一組方法，未列在此處，為的方法名稱的形式在*EventName*。 這些方法通常引發其相關聯的事件，並且在提供的型別<xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>的處理常式事件 大部分的這些方法會覆寫的開發人員從 WebPartManager 類別繼承。 此外，網頁開發人員可以使用這些方法相關聯的事件提供自訂的處理常式。 例如，如果是<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>網頁開發人員可以加入事件，`OnWebPartAdded`屬性`<asp:webpartmanager>`的標記網頁上，然後將指派的自訂方法的屬性名稱以提供自訂事件處理中的項目。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> 屬性對應於<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>方法和事件處理最多的 Web 組件事件和其相關聯的方法可處理的這個基本模式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       此外，WebPartManager 控制項有特定的管理工作的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (做為伺服器或使用者控制項和<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項)。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       另一組方法，被專門用於連接。 This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       最後，某些 WebPartManager 方法焦點放在個人化功能。 These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       如需有關其他 WebPartManager 方法的存取透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>屬性，請參閱文件<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>類別。</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>類別。"
  remarks: "WebPartManager 建構函式會初始化所使用的數個重要變數<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 一項指派會直接影響所有的 Web 組件頁面是預設頁面的顯示模式設定為瀏覽模式的事實 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>)。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "讓成為使用中的 Web 網頁上目前非使用中的所有連線。"
  remarks: "每個要求頁面，以啟動之間的現有連接上呼叫 ActivateConnections 方法<xref:System.Web.UI.WebControls.WebParts.WebPart>和位於其他伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> 在某些情況下，如果沒有衝突的連接中啟動，此方法接著執行個體呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>方法來中止有問題的連線。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> 在中斷連線程序期間<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>就會引發事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> 通常開發人員可以取消此事件，在案例中，但這是衝突的連接，即無法取消，因為其中<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項需要解決衝突，才能完成此程序的啟動連線。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "提供標準的程式設計方法，來加入<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>網頁的控制項。"
  remarks: "使用 AddWebPart 方法同時加入新的動態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制頁面上，並重新開啟先前已關閉頁面的靜態或動態控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 若要加入新控制項呼叫方法時，確實建立一份中參考的控制項`webPart`參數。 複本的控制項，產生新的識別碼，所以開發人員應該參考<xref:System.Web.UI.WebControls.WebParts.WebPart>從要取得新的識別碼值的方法傳回的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 當方法呼叫來重新開啟先前已關閉的控制項時，它會傳回所參考之控制項的直接參考`webPart`參數。      > [!IMPORTANT] > 您應該一律使用 AddWebPart 方法，而非<xref:System.Web.UI.ControlCollection.Add%2A>方法所參考的控制項集合的<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>屬性，將<xref:System.Web.UI.WebControls.WebParts.WebPart>到頁面上，以程式設計方式控制，因為使用<xref:System.Web.UI.ControlCollection.Add%2A>方法會擲回的例外狀況。</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> 若要加入的控制項不是<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (換句話說，將會包裝與伺服器控制項<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項在執行階段)，您應該先呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>方法來建立控制項，並接著呼叫 AddWebPart 方法來加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 如需示範這種方法，請參閱 < 範例 > 一節。"
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> （或伺服器或使用者控制項） 加入至 Web 網頁或網頁上開啟。"
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> ，`webPart`新增至。"
    - id: zoneIndex
      type: System.Int32
      description: "整數，代表的序數位置，`webPart`佔用`zone`、 相對於其他控制項`zone`。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>已加入至頁面的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "值<code> zoneIndex </code>小於零。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "發生時<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>方法呼叫以判斷是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項可以加入至頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "AuthorizeWebPart 事件會發生<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項新增至網頁。</xref:System.Web.UI.WebControls.WebParts.WebPart> 有一些常見的案例，其中加入一個控制項的頁面。 如需這些的完整說明，請參閱 < 備註 > 一節<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> 當控制項加入時，必須檢查以查看是否其<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性已設定且，若是如此，是否在控制項已獲授權加入至頁面。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       開發人員可以建立 AuthorizeWebPart 事件，以提供篩選控制項的事件處理常式。 如果控制項的<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性值不符合事件處理常式程式碼中的條件，控制項不會加入至頁面。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得集合的<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;></xref>物件可供用來建立 Web 組件伺服器控制項之間的連接。"
  remarks: "這個屬性會使用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>方法來建立集合。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> 根據預設，它會從應用程式組態檔讀取可用的轉換程式。"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> ，其中包含一組<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;></xref>物件。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "啟動程序的連接兩個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "BeginWebPartConnecting 方法的存在，因此形成控制項之間的連接的程序可以透過不同的階段，讓開發人員在連線程序的更多控制權。 此方法會執行一組初始的檢查，確保`webPart`處於其中一個連線可以合法形成的狀態。 如果`webPart`通過所有檢查時，它會接著設為目前選取的控制項 (請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>屬性)，而且連接的程序可以繼續。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "正在建立連接控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在頁面上目前的顯示模式不是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "啟動程序的編輯<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "BeginWebPartEditing 方法的存在，因此編輯控制項的程序可以透過不同的階段，讓開發人員更充分掌控程序。 此方法會執行一組初始的檢查，確保`webPart`處於的狀態，進行編輯。 如果`webPart`通過所有檢查時，它會接著設為目前選取的控制項 (請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>屬性)，可以繼續編輯程序。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "要編輯的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "在頁面上目前的顯示模式不是<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "表示頁面，其中包含 Web 組件控制項的預設顯示模式。 此欄位為唯讀。"
  remarks: "BrowseDisplayMode 欄位參考自訂<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>建立和所包含的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 因為這是靜態的物件，您可以參考它直接透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，而不需要的控制項執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       當包含 Web 組件的頁面控制項第一次載入時，則為 BrowseDisplayMode （瀏覽模式） 預設。 當使用者只需如同在一般的網頁瀏覽時，頁面會保留在瀏覽模式中。 如果使用者想要個人化的頁面配置、 控制項、 外觀或行為，它們必須將網頁切換成一種特殊的顯示模式可透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "檢查<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>會參與來判斷它們是否能夠連接，當消費者和提供者的控制項有相容的介面和連接的控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;></xref>不需要物件。"
  remarks: "這個方法用來連接`provider`和`consumer`時這兩個控制項具有相容的連接點類型，以便<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>不需要物件。</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 您可能想要使用這個方法來確認您可以在呼叫之前已連接兩個控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>建立的程式設計連線。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       這個多載會使用相同的實作，做為<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>方法多載，唯一的例外狀況，是這個多載不需要轉換程式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "控制項提供資料給`consumer`連接控制項時。"
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> ，可讓`provider`參與連線。"
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "接收資料的控制項`provider`連接控制項時。"
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> ，可做為回呼方法，因此，`consumer`連接可參與。"
    return:
      type: System.Boolean
      description: "布林值，指出是否<code> provider </code>和<code> consumer </code>可以連線。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "檢查<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項將會參與的連接，以判斷它們是否能夠連接，並使用<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;></xref>物件來建立不相容的消費者和提供者之間的連線。"
  remarks: "這個方法用來連接`provider`和`consumer`當兩個控制項有不相容的連接點類型，以便<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>需要物件時。</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 您可能想要使用這個方法來確認您可以在呼叫之前已連接兩個控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>建立的程式設計連線。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       這個多載會使用相同的實作，做為<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>方法多載，唯一的例外狀況，是這個多載都需要轉換程式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "控制項提供資料給`consumer`連接控制項時。"
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> ，可做為回呼方法，因此，`provider`連接可參與。"
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "接收資料的控制項`provider`連接控制項時。"
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> ，可做為回呼方法，因此，`consumer`連接可參與。"
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> ，可讓不相容的`provider`和`consumer`連接。"
    return:
      type: System.Boolean
      description: "布林值，指出是否<code> provider </code>和<code> consumer </code>可用以構成的連接。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "代表用於從類別目錄的控制項加入網頁伺服器控制項的顯示模式。 此欄位為唯讀。"
  remarks: "CatalogDisplayMode 欄位參考自訂<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>建立和所包含的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 因為這是靜態的物件，您可以參考它直接透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，而不需要的控制項執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       當使用者想要將控制項加入頁面時，如果伺服器控制項的類別目錄功能時，它們可以將頁面切換至 CatalogDisplayMode （目錄模式），並出現類別目錄的使用者介面 (UI)。 Web 組件類別目錄的 UI 由提供<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域控制項。</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 開發人員加入網頁中的這個區域，在設計階段，並再將伺服器控制項新增至區域，以便使用者可以在執行階段將這些控制項加入他們的網頁。 開發人員加入這些控制項之後，目錄模式會變成在頁面上支援的顯示模式，因為必要的控制項有啟用目錄的模式。       當使用者切換目錄模式、 區域和所有就會變得可見，加入伺服器控制項的頁面，而且使用者可以從類別目錄 頁面上，以新增或移除控制項的頁面中選取控制項。 控制項加入至頁面之後，會顯示一般瀏覽模式中，而在更新頁面。"
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "會檢查提出要求，以及值的瀏覽器的功能<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>屬性，來判斷是否要呈現用戶端指令碼。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "布林值，指出是否要呈現用戶端指令碼。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定當使用者關閉做為提供者在連接中其他控制項的控制項時顯示警告。"
  remarks: "當使用者關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，通常會顯示任何訊息。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如需關閉控制項的意義的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       不過，當控制項已連線到另一個控制項，並做為資料到其他控制項的提供者，預設的警告訊息會顯示，當使用者嘗試關閉控制項。 訊息會告知使用者，提供者控制即將關閉，這表示可控制連接到此提供者取用者將不再有任何要取用的資料。 CloseProviderWarning 屬性可讓開發人員自訂顯示給使用者的警告訊息。       當使用者關閉時，如果網頁開發人員會指派給這個屬性空白或 null 字串值，會顯示任何警告訊息方塊<xref:System.Web.UI.WebControls.WebParts.WebPart>是提供者的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "字串，包含警告訊息。 預設值是由.NET Framework 所提供的特定文化特性的訊息。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "關閉<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制方式，它不會呈現在網頁上，但可以重新開啟。"
  remarks: "CloseWebPart 方法中移除<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他伺服器控制項，讓它不會呈現在網頁上，原本包含它。</xref:System.Web.UI.WebControls.WebParts.WebPart> 已關閉的控制項加入至<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>物件，它會維護已關閉的控制項的參考，而且可讓要還原至頁面的控制項。</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項仍然會出現在所參考的集合<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       在關閉控制項是不同於刪除它。 已關閉的控制項屬性仍然可還原至 頁面上，但已刪除的控制項執行個體永久移除，絕對無法還原。 無論<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項 （在網頁標記中宣告） 的靜態或動態 （加入至頁面，以程式設計方式或由使用者從 Web 組件類別目錄），關閉並重新開啟頁面上。</xref:System.Web.UI.WebControls.WebParts.WebPart>       一般而言，使用者就可以關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>按一下其動詞命令功能表並選取 關閉的動詞命令的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 控制項也可以透過直接呼叫 CloseWebPart 方法，並將其傳遞的參考關閉`webPart`。       在網頁上其中<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項已關閉，如果開發人員宣告`<asp:catalogzone>`項目，並在其中加入`<asp:pagecatalogpart>`項目，它會提供簡單的使用者介面 (UI) 頁面還原已關閉的控制項，在執行階段的使用者。</xref:System.Web.UI.WebControls.WebParts.WebPart> 使用者可以將頁面切換成類別目錄的顯示模式，並已關閉的控制項將出現在頁面目錄內。 使用者可以選取 已關閉的控制項，並將它們加入至網頁上的任意位置想，和選取的控制項會還原至頁面，然後正常地呈現。       當呼叫 CloseWebPart 方法時，會引發多個事件︰ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>（如果有多個控制項），和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>（如果沒有連接的控制項）。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> 通常開發人員可以取消這些事件，但在某些情況下就不可能取消這些服務。 如需詳細資訊，請參閱文件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>，和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>或伺服器控制項，在關閉<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "代表用來顯示特殊的使用者介面 (UI) 的顯示模式，供使用者管理之間的連線<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。 此欄位為唯讀。"
  remarks: "ConnectDisplayMode 欄位參考自訂<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>建立和所包含的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 因為這是靜態的物件，您可以參考它直接透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，而不需要的控制項執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       當使用者想要管理之間的連接<xref:System.Web.UI.WebControls.WebParts.WebPart>控制在網頁上，如果<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>區域已經宣告在頁面上，它們可以將頁面切換成 ConnectDisplayMode 模式。</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> 連接的顯示模式顯示特殊的 UI 來管理連接，其中包含連接或中斷控制項，並編輯現有連線的詳細資料的能力。       如果您想要提供使用者管理連接與 Web 組件控制項集合所提供的 UI 功能，您必須宣告`<asp:connectionszone>`在網頁標記中的項目。 不同於其他類型的項目<xref:System.Web.UI.WebControls.WebParts.WebZone>區域，您不需要將這個項目內的任何其他標記新增; 只要宣告項目本身。</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "在網頁上取得的所有目前的連接集合的參考。"
  remarks: "此連接屬性會提供存取目前的頁面上連接的資料集的方法。 集合本身是唯讀的且開發人員想要管理特定的連接，從集合應該使用<xref:System.Web.UI.WebControls.WebParts.WebPartManager>例如<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> ，其中包含一組<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;></xref>物件。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "發生於之後所有頁面上的目前 Web 組件連接不只連線，同時也已開始共用消費者和提供者參與的每個連線的控制項之間的資料。"
  remarks: "在連線的生命週期，在頁面完成載入程序之後，就會發生此事件。 它也會發生之後<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>事件，表示只有該<xref:System.Web.UI.WebControls.WebParts.WebPart>或特定的連接中的伺服器控制項已成功連接。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> 萬一 ConnectionsActivated 方法有多個頁面上的連接，表示所有在網頁上的有效 Web 組件連線現在是使用中，以及是否可以共用資料。 了解所有連接都使用中，開發人員可以執行任意數目的工作，包括通知使用者狀態的所有連線時，通知處理和顯示來自提供者中，資料等等的消費者控制項。       此事件相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>方法，這個方法會引發事件，而且可讓開發人員建立自訂事件處理常式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       網頁開發人員可以建立自訂事件處理常式加入`OnConnectionsActivated`屬性`<asp:webpartmanager>`項目頁面上，然後將自訂的方法名稱指派給屬性。"
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "啟用所有在網頁上建立的 Web 組件連接處理程序期間發生。"
  remarks: "在連線的生命週期，會發生此事件一頁之前完成載入程序，因為<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>方法呼叫。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> 不同於<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>事件，這牽涉到特定連線之間<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> 當頁面上，所有可能的連線已連接，而且即將啟動時，就會發生 ConnectionsActivating 事件。       ConnectionsActivating 事件相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>方法，這會引發事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> 控制項開發人員想要擴充的類型可以加入至頁面的連線無法覆寫受保護<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>方法，並啟用其他類型的連線。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       網頁開發人員可以建立自訂事件處理常式加入`OnConnectionsActivating`屬性`<asp:webpartmanager>`項目頁面上，然後將自訂的方法名稱指派給屬性。"
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "建立兩個連接<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>控制使用只參考這些控制項，而且其指定<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;></xref>物件。"
  remarks: "這個多載用來連接控制項，其連接點完全相容，它們可以連接不使用時<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件。</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 呼叫這個方法的多載時，它只會傳遞至另一個多載版本的方法，呼叫，並傳遞`null`參數需要<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件。</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       當您嘗試以程式設計方式連接兩個控制項時，您可以使用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>條件檢查，以判斷是否可以直接連線控制項中的方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>角色的書面資料之間的控制連接控制項。"
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "做為回呼方法的連線方法。 在 Web 組件控制項集合中實作時，這是中的公用方法`provider`標記<xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;></xref>中繼資料屬性。"
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控制項已接收資料的角色`provider`，然後處理或顯示它。"
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "方法，以連接`providerConnectionPoint`接收的資料連接。 在 Web 組件控制項集合中實作時，這是中的公用方法`consumer`標記<xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;></xref>中繼資料屬性。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> ，其中包含提供者和消費者連接所需要的各種資訊。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>控制項集合的動態集合是唯讀的。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "建立兩個連接<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>控制使用的控制項，其指定的參考<xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;></xref>物件，和<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;></xref>物件。"
  remarks: "這個多載用來連接其連接點不相容時的控制項。 不相容的問題發生時`consumer`實作不同的介面比`provider`做為其連接點。 轉換程式會將資料轉換成可以辨識的型別`consumer`。"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>有另一個連接控制項的書面資料的角色。"
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "中的公用方法`provider`標記<xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;></xref>中繼資料屬性，而且可以當做連接的回呼方法。"
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>有接收資料的角色`provider`或`transformer`，然後處理或顯示它。"
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "中的公用方法`consumer`標記<xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;></xref>中繼資料屬性，則會與連接`providerConnectionPoint`接收的資料連接。"
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> ，可讓兩個控制項，藉由轉換中的資料之間的連線`provider`的格式，`consumer`可以處理。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> ，其中包含提供者，取用者和轉換程式所需的連接的資訊。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "已在啟動連接<xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得所有集合<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>，伺服器或使用者控制項中所包含的<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>網頁上區域以及受<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "控制項屬性未參考所參考的其他控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制，例如各種區域控制項，<xref:System.Web.UI.WebControls.WebParts.EditorPart>或<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項和其他人。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       這個屬性使用 Web 組件控制項集合，並在大部分的開發情況下它並不適用於從您的程式碼呼叫。 基於這個理由，雖然屬性是公用的它是隱藏的 IntelliSense。 開發人員想要存取的集合<xref:System.Web.UI.WebControls.WebParts.WebPart>或管理的其他伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項應該使用其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> ，其中包含由受管理的所有控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Web 組件控制項設定為建立一份使用<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項，以將控制項加入至 Web 網頁。"
  remarks: "您無法直接從程式碼呼叫 CopyWebPart 方法。 這個方法在內部呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，加入新的動態的程序的一部分<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項的頁面。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 動態控制項加入至頁面以程式設計方式或透過 Web 組件的使用者介面 (UI)，例如將控制項加入從控制項，而不是直接在網頁標記中宣告的靜態控制項的類別目錄的使用者。      > [!NOTE] > 方法可以在衍生類別中被覆寫，如果開發人員想要啟用方法，以處理其他控制項複製案例。 如需詳細資訊，請參閱注意事項繼承者注意事項 > 一節。       新的動態控制項加入時，如果它是<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，CopyWebPart 方法會傳回控制項的新執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如果要加入的控制項是其他類型的伺服器控制項 （例如使用者控制項、 自訂控制項或 ASP.NET 控制項），控制項將會有已包裝與<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>由 Web 組件控制項集合的物件。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 當 CopyWebPart 方法遇到的<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項，它會傳回<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>包裝在它的子控制項的新執行個體控制項</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>的新執行個體</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       當 CopyWebPart 方法會建立傳回控制項的新副本時，它也會重設所有屬性的值設為預設值。 請注意，是否您想保留可個人化屬性的值，並讓它們複製到新的控制項執行個體，您應該呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>方法也。</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> 最後一個步驟執行的方法是呼叫 CopyWebPart<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>方法，以取得新的控制項識別碼。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > 方法取得新複製的控制項的識別碼，因為您不應依賴參考原始 id 加入至頁面的動態控制項 相反地，您應該參考之方法所傳回的控制項的新執行個體。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>或要複製的伺服器控制項。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>来加入至頁面。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "建立一組網站的組態檔中指定的轉換程式，然後將它們加入轉換程式所參考的集合<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "轉換網站的組態檔中指定的集合。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "傳回所管理的所有控制項的集合<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>網頁上的控制項。 這個類別無法被繼承。"
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>組成受所有各種不同的網頁組件控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "建立 Web 組件的應用程式的所有可能的顯示模式的集合。"
  remarks: "這個方法會建立所有可能的顯示模式，不只是支援特定的頁面上的顯示模式清單。 如需有關支援的顯示模式的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       根據預設，Web 組件控制項集合會建立下列設定中的顯示模式，以使用 Web 組件頁面上:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>-<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>開發人員可以建立自訂的顯示模式，不論有無隨附的自訂衍生自的區域<xref:System.Web.UI.WebControls.WebParts.WebZone>或<xref:System.Web.UI.WebControls.WebParts.ToolZone>類別。</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> 若要建立自訂的顯示模式，您必須繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>類別，並將您的顯示模式為支援的模式下，在頁面上，您必須繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別並覆寫 CreateDisplayModes 方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       當您新增的顯示模式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>方法，您應該以新增您想要顯示的任何使用者介面 (UI) 控制項的順序 (例如<xref:System.Web.UI.WebControls.ListBox>控制項)，提供給使用者的可能顯示模式在頁面上。</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> ，其中包含所有支援的顯示模式。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得唯一的值，以做為動態連接的識別碼。"
  remarks: "CreateDynamicConnectionID 方法產生的 GUID 值，並將它轉換為字串做為連接的唯一識別碼。 每次建立動態的連接時，會呼叫方法。"
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "字串，包含連接的唯一識別碼。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "產生的唯一識別碼動態<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "當<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項會加入至網頁，則其可以是 （亦即在網頁標記中宣告控制項） 的靜態或動態 （亦即會以程式設計方式加入）。</xref:System.Web.UI.WebControls.WebParts.WebPart> 在任何案例中，<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項建立新的動態控制項，可將加入至頁面上，它會呼叫這個方法，以產生唯一識別碼。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       此方法，讓開發人員可以覆寫它如果他們想要提供自訂實作產生識別碼是虛擬"
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "<xref:System.Type>正在產生 ID 的控制項。</xref:System.Type>"
    return:
      type: System.String
      description: "字串，包含控制項的唯一識別碼。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "會建立特殊的控制項是插入到頁面上，對於使用者，當嘗試載入或建立動態顯示<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項因某些原因而失敗。"
  remarks: "CreateErrorWebPart 方法呼叫時的 Web 組件控制項集合嘗試載入或建立的動態執行個體<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項及其原因而失敗。</xref:System.Web.UI.WebControls.WebParts.WebPart> 方法會建立<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>物件，指派給它，錯誤訊息，並傳回它。</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>取代失敗，此控制項插入控制項和其錯誤訊息會顯示在頁面上。</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       您無法直接從程式碼呼叫 CreateErrorWebPart 方法。 不過，您可以繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別和擴充方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 如需詳細資訊，請參閱繼承者注意事項 > 一節的資訊。       使用者可以使用<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>控制在網頁中很像它們一般<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> 若要移除的錯誤訊息，他們可以關閉控制項，即可關閉動詞命令，此時將控制項加入至<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>物件，像任何其他已關閉的控制項。</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 如果使用者刪除<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>控制，無法載入伺服器控制項也會從頁面刪除。</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "失敗控制項的識別碼字串。 如果<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>會牽涉到在失敗識別碼是其子伺服器控制項的 ID。"
    - id: originalTypeName
      type: System.String
      description: "字串名稱<xref:System.Type>的失敗的控制。</xref:System.Type> 如果<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>會牽涉到在失敗時，型別名稱是其子伺服器控制項的類型。"
    - id: originalPath
      type: System.String
      description: "字串，包含使用者控制項的路徑，如果<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> ，其中包含子系失敗涉及使用者控制項。"
    - id: genericWebPartID
      type: System.String
      description: "傳回的識別碼字串<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>，如果該類型的控制項陷入無法載入或建立的控制項。"
    - id: errorMessage
      type: System.String
      description: "字串，包含要顯示在頁面上的錯誤訊息。"
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref>插入來取代無法載入或建立的控制項的頁面。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "傳回包含目前網頁的使用者的個人化資料的個人化物件。"
  remarks: "CreatePersonalization 方法會傳回包含和管理目前頁面的使用者個人化設定的物件。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項管理此物件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref>包含使用者的個人化資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "包裝不是伺服器控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>用來控制<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>物件，以便控制項可以有 Web 組件功能。"
  remarks: "CreateWebPart 方法是啟用的不是伺服器控制項的主要機制<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項與相同的功能上採取<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，因此完全參與 Web 組件的應用程式。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 使用此方法，開發人員大幅展開他們可以使用 Web 組件的應用程式中的伺服器控制項的數目，因為幾乎所有類型的伺服器控制項-可以使用標準 ASP.NET 控制項、 使用者控制項，以及自訂控制項。       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項也會使用這個方法在兩個其他情況下將伺服器控制項提供<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 當使用者將伺服器控制項加入頁面使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制，如果匯入的控制項不是<xref:System.Web.UI.WebControls.WebParts.WebPart>CreateWebPart 方法呼叫控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 此外，當伺服器控制項宣告中的持續性格式<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域在網頁上，方法針對不是任何控制項呼叫 CreateWebPart<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       當您將伺服器控制項加入區域以程式設計的方式時，一般的方法是使用 CreateWebPart 方法來包裝的控制項的<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件，然後再呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>方法，以將控制項加入的所有集合<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項在頁面上，正由<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "不是伺服器控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>包裝<code> control </code> ，並讓它做為 true <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定當使用者刪除控制項時，向使用者顯示的自訂警告訊息。"
  remarks: "當使用者刪除<xref:System.Web.UI.WebControls.WebParts.WebPart>控制時，通常會顯示預設的警告訊息。</xref:System.Web.UI.WebControls.WebParts.WebPart> 它會警告使用者，在刪除控制項的這個執行個體時，會永久刪除。 網頁開發人員可能會提供一種方式，將控制項的新執行個體加入至頁面的使用者 (例如的類別目錄<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，或透過一些程式設計的方式)，但是永久移除已刪除的控制項的目前執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如有需要，會顯示警告對話方塊中包含要取消刪除動作，使用者 按鈕。       DeleteWarning 屬性可讓開發人員設定顯示給使用者的警告訊息。       如果網頁開發人員會指派為空字串 (&quot;&quot;) 會顯示於此屬性沒有警告訊息 對話方塊的值，當使用者刪除<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > DeleteWarning 屬性不會顯示在靜態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項和伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 靜態控制項是伺服器控制項中已宣告<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>網頁標記中的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 這類控制項都是靜態的因為它們無法刪除，如此一來，刪除警告訊息永遠不會顯示在此情況下。 靜態控制項可以關閉的使用者，但已關閉的控制項加入至頁面目錄，在其中它可以加入至網頁的使用者，而永遠無法復原刪除的控制項。"
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "包含警告訊息的文字字串。 預設值是當地語系化的警告訊息。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "永久移除的動態執行個體<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>從網頁上的控制項。"
  remarks: "DeleteWebPart 方法永久移除所代表的控制項`webPart`頁中的參數。 不同於已關閉的控制項，其新增到<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項，並可以再加入頁面上，刪除的控制項執行個體可以永遠不會加入至網頁。</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > 由 Web 組件控制項實作設定，可讓使用者刪除動態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制取決於使用者和控制項加入至頁面已個人化範圍。</xref:System.Web.UI.WebControls.WebParts.WebPart> 如果控制項已加入共用的範圍頁面時 （所具有的權限的使用者），然後控制項無法刪除由個別使用者頁面時使用者領域中。       只有動態控制項，才能刪除。 動態控制項已加入至頁面，以程式設計方式或從目錄中加入控制項的使用者。 靜態控制項加入至以宣告方式中的標記或持續性格式的頁面。 因為永遠出現在標記中的宣告式標記，靜態控制項可以永遠不會刪除，但可以關閉並重新開啟。"
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "要刪除的伺服器控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "表示用來變更網頁包含 Web 組件控制項的版面配置的顯示模式。 此欄位為唯讀。"
  remarks: "DesignDisplayMode 欄位參考自訂<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>建立和所包含的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 因為這是靜態的物件，您可以參考它直接透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，而不需要的控制項執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       當包含 Web 組件的頁面控制項第一次載入時，它就會處於<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>（瀏覽模式） 的預設值。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> 當使用者想要變更頁面的版面配置將控制項移到不同的區域，或在目前的區域內時，他們必須先將頁面切換至 DesignDisplayMode （設計模式）。 在設計模式中，使用者介面 (UI) 的各種不同的區域出現，而且使用者可以拖曳控制項，以變更版面配置。"
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "移除<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或控制也就是正在執行的伺服器已關閉或刪除從參與任何連接。"
  remarks: "DisconnectWebPart 方法會在內部呼叫時控制項在頁面上關閉，或從頁面刪除設定的 Web 組件控制項。 在這類案例中，被呼叫方法來移除任何連線涉及為取用者或提供者。 如果從任何連線中移除控制項，這個方法也會呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>方法來中止所在的任何連接`webPart`牽涉到。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       當呼叫 DisconnectWebPart 方法時，會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> 通常這個事件可以取消，但在兩個情況下即無法取消。 其中一種情況發生在要求期間 頁面上，當<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>方法呼叫。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> 如果沒有現有連接的衝突，DisconnectWebPart 方法會被叫用以關閉其中一個衝突的連接，而且在這個執行個體<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件無法取消，因為必須解決衝突。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       在另一個案例，就會發生時<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項目前連接關閉或刪除。</xref:System.Web.UI.WebControls.WebParts.WebPart> 在此情況下，因為控制項正在移除頁面中，終止，因此依設計不可能取消其連線需求<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>中斷結束連接的程序的事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>要中斷的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "執行中斷連接 Web 網頁的伺服器控制項的程序。"
  remarks: "DisconnectWebParts 方法會執行完整的程序的結束之間的連線<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項，當您將傳遞`connection`參數。</xref:System.Web.UI.WebControls.WebParts.WebPart>       這個方法用來中斷連接控制項，當您將`<asp:connectionszone>`網頁上，以管理連線時，提供使用者介面 (UI) 中的項目。 當頁面處於連接的顯示模式 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>)，且目前的連線存在，使用者可以按一下按鈕，以呼叫 DisconnectWebParts 方法以結束連接。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       您也可以呼叫 DisconnectWebParts 方法直接從程式碼中，如果您想要中斷連接控制項，以程式設計的方式，而不需要新增`<asp:connectionszone>`至頁面的項目。"
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> ，代表伺服器控制項之間的連接。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>不包含在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>或<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定包含 Web 組件控制項的網頁的作用中顯示模式。"
  remarks: "包含 Web 組件控制項的頁面一律是其中幾個可能的顯示模式。 如需有關顯示模式的詳細資訊，請參閱[Web 組件頁面顯示模式](~/add/includes/ajax-current-ext-md.md)。       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別會建立網頁的顯示模式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 使用基底<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>類別<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項建立可以用在包含 Web 組件控制項的頁面的數個標準顯示模式物件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 這些標準顯示模式中有描述<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>類別概觀。</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項也會管理使用 Web 組件控制項之網頁的顯示模式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 使用 DisplayMode 屬性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項在頁面上保留目前的顯示模式的參考。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 您也可以使用 DisplayMode 屬性將頁面切換至不同的顯示模式。 如需在使用 Web 組件控制項的網頁變更顯示模式的範例，請參閱[逐步解說︰ 變更 Web 組件頁面上顯示的模式](~/add/includes/ajax-current-ext-md.md)。       管理顯示模式，一部分<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項也會提供事件和顯示模式，例如相關的事件處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>方法和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 這些方法會提供一個機制，自訂網頁的行為，以及加入自訂的顯示模式。"
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> ，決定頁面的顯示模式。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref>物件指派給屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "目前的顯示模式 Web 組件頁面已變更之後發生。"
  remarks: "顯示模式是 Web 組件的應用程式中不可或缺的一部分。 當使用者切換至不同的顯示模式，在網頁上時，網頁通常會非常不同的外觀，根據新的顯示模式的用途。 顯示模式已變更之後，您可能想要讓特定變更在使用者介面 (UI)，例如隱藏或顯示特定控制項，變更所選取的 UI 元素的外觀，並以此類推。      > [!NOTE] > 上的顯示模式的詳細資訊，請參閱[Web 組件頁面顯示模式](~/add/includes/ajax-current-ext-md.md)。 如需有關如何使用事件的詳細資訊，請參閱[How to︰ 使用 Web Form 應用程式中的事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "發生於使用者按一下開始的程序變更為不同的顯示模式在網頁上的動詞命令之後。"
  remarks: "顯示模式是 Web 組件的應用程式中不可或缺的一部分。 當使用者切換至不同的顯示模式，在網頁上時，網頁通常會非常不同的外觀，根據新的顯示模式的用途。 使用者起始的動詞命令，即可變更至新的顯示模式程序之後，您可能想要變更某些使用者介面 (UI) 中使用<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>屬性來判斷新的顯示模式是什麼，並再據以變更各種 UI 項目。</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> 若要這樣做的實用方式是覆寫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>自訂 UI 的方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > 上的顯示模式的詳細資訊，請參閱[Web 組件頁面顯示模式](~/add/includes/ajax-current-ext-md.md)。 如需有關如何使用事件的詳細資訊，請參閱[How to︰ 使用 Web Form 應用程式中的事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得唯讀集合的所有相關聯的顯示模式<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "所有相關聯的顯示模式中，相較於 DisplayModes 屬性參考<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>屬性，即在參考只會使用 （支援） 目前頁面上的顯示模式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       兩個提供的顯示模式中，瀏覽與設計中，一律支援在頁面上。 頁面具有區域所需的特定顯示模式運作的對應型別時，才會支援其他三種顯示模式、 編輯、 目錄及連線。 例如，如果您的頁面不包含<xref:System.Web.UI.WebControls.WebParts.EditorZone>區域，編輯顯示模式將會出現在 DisplayModes 屬性所參考的集合，但不是會出現在所參考的集合<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> ，其中包含一組<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;></xref>物件相關聯<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得目前網頁存在的所有動態連接的集合。"
  remarks: "動態的連接都是以程式設計的方式，而非以靜態方式建立的連接。 藉由在 Web Form 網頁標記中宣告它們可以建立靜態連接。 以程式設計的方式，或由使用者建立連接，使用連接的使用者介面 (UI) 的格式動態連接。       DynamicConnections 集合中，雖然它是唯讀的您無法變更其內容，但是提供以程式設計方式存取每個動態連接物件。      > [!NOTE] > 來執行一般作業，例如連線或中斷連線<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項開發人員應該使用的公用方法上<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，例如<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>，而不需要嘗試直接修改 DynamicConnections 集合中的連接物件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> ，其中包含所有頁面上的動態連接的參考。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "表示使用者可以編輯和修改伺服器控制項的顯示模式。 此欄位為唯讀。"
  remarks: "EditDisplayMode 欄位參考自訂<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>建立和所包含的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 因為這是靜態的物件，您可以參考它直接透過<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，而不需要的控制項執行個體。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       當包含 Web 組件的頁面控制項第一次載入時，它就會處於<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>（瀏覽模式） 的預設值。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> 當使用者想要編輯或修改伺服器控制項時，他們必須先將頁面切換至 EditDisplayMode （編輯模式）。 第二，他們都必須選取特定的伺服器控制項，以編輯，請按一下該控制項的標頭中的動詞命令功能表上的編輯動詞命令。 控制項處於編輯模式之後，編輯的使用者介面 (UI) 會出現編輯選取的控制項。       若要啟用編輯模式，在頁面上的，頁面必須至少包含一個<xref:System.Web.UI.WebControls.WebParts.EditorZone>區域，其中包含一或多個提供編輯控制項，例如<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>控制項或自訂的編輯控制項。</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定值，這個值會判斷是否啟用用戶端指令碼在網頁上包含<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "EnableClientScript 屬性可讓開發人員若要停用用戶端指令碼。 您可能想要停用用戶端指令碼，基於安全性目的，或確保所有頁面的使用者會都有類似的使用者經驗，即使它們使用不同的瀏覽器。       您可以停用用戶端指令碼加入`EnableClientScript`屬性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>在網頁上，如下列宣告式的程式碼行所示的項目︰ `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />`此外，開發人員能夠排除這個屬性透過繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別及設定預設值給`false`。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Web 組件控制項集合會使用用戶端指令碼來提供一些用戶端使用者介面 (UI) 和個人化功能。 如果您停用用戶端指令碼、 Web 組件控制項還能運作，但會停用某些功能。 將控制項拖曳到不同區域的能力已停用，以及呈現下拉式動詞命令功能表中控制項的標題列 （動詞命令會顯示為控制項的標題列中的連結） 中的動詞命令的能力。"
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "布林值，指出是否在頁面上，可以執行用戶端指令碼。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出在網頁上會啟用要使用的佈景主題。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Control 覆寫基底<xref:System.Web.UI.Control.EnableTheming%2A>屬性，以確保一律會傳回值的`true`。</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 這是因為 Web 組件控制項集合需要呈現 Web 組件的佈景主題的使用控制項的子控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，形成網頁使用者介面 (UI)。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 例如，佈景主題以用來呈現不同的區域，和位於區域，其中包括各種類型的控制項組件的控制項 (繼承自控制項<xref:System.Web.UI.WebControls.WebParts.Part>類別)，使用者控制項、 ASP.NET 伺服器控制項和自訂的伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.Part>       雖然覆寫的 EnableTheming 屬性會實作為其基底屬性根據讀/寫屬性，您就無法設定屬性，因為設計一律會傳回值為`true`。 如果您嘗試設定屬性，<xref:System.NotSupportedException>擲回例外狀況。</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "布林值，指出是否啟用佈景主題。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "嘗試設定屬性值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "完成連接的程序<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>為其他控制項的控制項。"
  remarks: "EndWebPartConnecting 方法完成連接的程序<xref:System.Web.UI.WebControls.WebParts.WebPart>為其他控制項的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 它是對應項目來<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       EndWebPartConnecting 方法可確保所參考的個人化物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>屬性是可修改，而這是必要的因為建立連接是本身的個人化的類型。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> 方法接著確定<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>物件不是`null`，最後會呼叫和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "所參考的控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "完成編輯程序<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "EndWebPartEditing 方法完成編輯程序<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 它是對應項目來<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       EndWebPartEditing 方法可確保所參考的個人化物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>屬性是可修改，而這是必要的因為編輯控制項是需要個人化變更的程序。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> 方法接著確定<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>物件不是`null`，以便在目前選取<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可能會變更，而且它會呼叫最後<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "所參考的控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>屬性是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定當使用者嘗試匯出從機密的狀態資料時會顯示警告訊息的文字<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "當使用者嘗試將敏感的狀態資料從匯出<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，告訴他們正在匯出敏感性資料，並有機會取消匯出在訊息方塊中，使用者如果任何要匯出的資料來自已標示為機密的原始程式碼中的成員時，顯示一則警告訊息。</xref:System.Web.UI.WebControls.WebParts.WebPart> 開發人員可以藉由設定項目將標示為機密的特定成員的資料`isSensitive`參數`[Personalizable]`屬性`true`成員上。 如需有關這個屬性和參數的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>類別。</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > 當您使用 Web 組件的匯出功能時，敏感性資料可能可以匯出到未經授權的使用者。 如需有關如何防範這項威脅的詳細資訊，請參閱[保護 Web 組件頁面](~/add/includes/ajax-current-ext-md.md)。       每當使用者嘗試匯出時，會顯示預設訊息。 不過，將此值指派給 ExportSensitiveDataWarning 屬性，您可以提供自訂的警告訊息。"
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "字串，包含警告訊息。 預設的訊息是由.NET Framework 所提供的特定文化特性值。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "建立包含的伺服器控制項的狀態和屬性資料的 XML 描述檔案。"
  remarks: "ExportWebPart 方法組合的各種狀態及屬性資料是從`webPart`成 XML 檔案。 資料包括控制項本身，包括其組件、 狀態資料和屬性資料的相關資訊。 起始匯出的使用者可以將 XML 檔案儲存至磁碟，本機電腦或網路上。 其他使用者可以描述檔案匯入到不同的網頁或網站，並套用至不同的執行個體的狀態和屬性資料`webPart`。 這提供快速且方便的機制，來共用及重複使用的伺服器控制項，其設定的使用者，它也提供方法來控制的外觀和行為的匯出和匯入控制項開發人員。       屬性上的`webPart`預設不會匯出。 若要啟用匯出的屬性，您必須將它與標記`[Personalizable]`的原始程式碼中的屬性。 您也可以選擇性地將標示成可匯出的屬性，為包含機密資料，藉由設定`isSensitive`參數`[Personalizable]`屬性`true`。 根據預設，`isSensitive`是`false`。 開發人員可以將參數設定為`true`表示資料是敏感性資訊。       若要啟用`webPart`開發人員設定要匯出其<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性值設為  <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>（包括所有可個人化和機密屬性），或<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>，匯出機密屬性以外的所有內容。</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > 允許使用者將資料從控制項，匯出和匯入資料到其他控制項，需要一些安全性風險。 開發人員應使用來保護機密資料，上面所討論的方法，而且如果他們想要避免完全公開資料的風險，則不應啟用匯出上`webPart`完全。 如需 Web 組件的安全性問題的詳細資訊，請參閱[保護 Web 組件頁面](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "匯出資料的控制項。"
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>從匯出的資料寫入`webPart`XML 描述檔案。</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "若要防止焦點曾經上設定覆寫<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制，因為它有沒有使用者介面 (UI)。"
  remarks: "焦點方法會覆寫基底<xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>方法，並擲回例外狀況，如果呼叫端呼叫的方法。</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> 因為<xref:System.Web.UI.WebControls.WebParts.WebPartManager>、 控制項沒有 ui 而且永遠不會對使用者顯示其永遠不會讓焦點設在本身。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼叫端嘗試呼叫焦點方法，不支援沒有 ui 控制項中。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "擷取集合<xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;></xref>物件可做為從伺服器的連接點，也就是控制做為 Web 組件連接中取用者。"
  remarks: "Web 組件連接一定牽涉到兩個控制項，其中一個做為資料提供者，另一個做為資料的取用者。 每個控制項都必須有一或多個定義為連接點的方法。 在取用者控制項，其連線點會<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 擷取的消費者連接點是建立 Web 組件連接的必要步驟。       取用者永遠必須至少一個連接點，若要能夠建立連接。 GetConsumerConnectionPoints 方法會檢查取用者控制項，並擷取其所有的連接點的集合。 如果<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項沒有的連接點，方法會傳回空集合。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "做為取用者在連接之伺服器控制項。"
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> ，其中包含所有取用者的連接點。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "擷取目前的執行個體的參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>頁面上的控制項。"
  remarks: "GetCurrentWebPartManager 方法很有用的內容中您要擷取目前參考<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 這會在其中發生的常見案例是如果您要撰寫的自訂控制項，哪些的識別碼在開發期間不知道<xref:System.Web.UI.WebControls.WebParts.WebPartManager>其頁面上的控制項將會是。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > GetCurrentWebPartManager 方法是靜態的因此您可以呼叫它直接而不需要的執行個體<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       控制項集合，例如 Web 組件中的某些控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，具有<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>可以擷取目前參考的屬性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> 因此，當使用這類控制項，您應該使用這個屬性來擷取的參照。       如果您在撰寫程式碼在您知道<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，例如撰寫程式碼內嵌在網頁，它是最簡單且最有效率的直接參考<xref:System.Web.UI.WebControls.WebParts.WebPartManager>使用其識別碼的控制項</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager>ID 的內容中"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "包含的執行個體的網頁<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>。"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>參考目前的執行個體 頁面上的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得字串，包含的值<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>屬性<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "取得的導出的值<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>屬性`webPart`。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 當開發人員不指派值給<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，這個方法會產生為標題顯示的值。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 未命名控制項的導出的值為字串，加上數字，指出控制項的順序，在目前區域中的數字所組成。"
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "控制項的方法會傳回<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>值"
    return:
      type: System.String
      description: "字串，包含導出的值<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>如<code> webPart </code>。</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>不在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>集合。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得相對虛擬路徑和查詢字串所要求的一部分，當使用者嘗試匯出<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "GetExportUrl 方法所傳回的值是包含控制項的頁面加上附加的查詢字串值構成匯出要求提交給伺服器的伺服器位置的相對虛擬路徑。 GetExportUrl 方法將字串編碼然後才允許送出，以防止惡意指令碼攻擊的要求。      > [!NOTE] > 如需保護 Web 組件的應用程式的詳細資訊，請參閱[保護 Web 組件頁面](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>正在匯出。"
    return:
      type: System.String
      description: "包含相對虛擬路徑和查詢字串的字串一起形成匯出控制項要求。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得執行個體的參考<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>包含伺服器控制項的控制項。"
  remarks: "一般情況下，有兩種類別的控制項開發人員置於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>參與 Web 組件的應用程式的區域︰<xref:System.Web.UI.WebControls.WebParts.WebPart>繼承的控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別和其他伺服器控制項，可以是標準 ASP.NET 控制項、 自訂控制項或使用者控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 當任何這些控制項置於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>花費之功能區域，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> A<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項有本質上這項功能，但其他伺服器控制項的類型不相符。</xref:System.Web.UI.WebControls.WebParts.WebPart> 若要讓其他伺服器控制項做為<xref:System.Web.UI.WebControls.WebParts.WebPart>控制它們被放在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域，ASP.NET 會將它們包裝與<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> 因為<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項直接繼承自<xref:System.Web.UI.WebControls.WebParts.WebPart>類別，它會提供它的子控制項，則為 true 的 Web 組件功能。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       通常在執行階段，網頁開發人員可能會想要取得的參考<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>包含其中一個區域中的伺服器控制項的控制項。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> GetGenericWebPart 方法可讓他們能夠擷取的參照<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "伺服器控制項中已有<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>和包裝為的子控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;></xref>在執行階段。"
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>包裝<code> control </code>做為子控制項。 方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果<code> control </code>並未包含在<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "擷取集合<xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;></xref>物件可做為從伺服器的連接點，也就是控制做為 Web 組件連接提供者。"
  remarks: "Web 組件連接一定牽涉到兩個控制項，其中一個做為資料提供者，另一個做為資料的取用者。 每個控制項都必須有一或多個定義為連接點的方法。 如果提供者的控制項，其連接點系統會<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>物件。</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       提供者必須永遠有至少一個連接點，若要能夠建立連接。 GetProviderConnectionPoints 方法會檢查提供者控制項，並擷取其所有的連接點的集合。 擷取提供者連接點是建立 Web 組件連接的必要步驟。"
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "伺服器控制項做為連接提供者。"
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> ，其中包含提供者中的所有連線點。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "匯入包含狀態和屬性資料的 XML 描述檔案<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項，然後套用至控制項的資料。"
  remarks: "ImportWebPart 方法匯入所建立的 XML 描述檔案<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>伺服器控制項的方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> 它不是實際的伺服器控制項所匯入，而只包含有關控制項的狀態和屬性資料的描述檔案。 控制項和 description 檔案中參考組件必須已經是使用者嘗試匯入描述檔案伺服器上可用的。       若要啟用匯入一個控制項，開發人員必須將<xref:System.Web.UI.WebControls.WebParts.CatalogZone>匯入將會啟用的頁面上的控制項。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> 區域內<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>必須加入控制項。</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 這個控制項提供檔案對話方塊，可讓使用者瀏覽並尋找要匯入的說明檔案。       使用者尋找說明檔案，並開始匯入之後，描述檔案會讀取 ImportWebPart 方法。 如果沒有任何錯誤，而且如果找到的組件和控制，要將伺服器控制項加入至內目錄<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及指定 description 檔案中的各種屬性和狀態資料套用至控制項。</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 使用者可以選取控制項，並將它加入至頁面。      > [!IMPORTANT] > 像<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>方法，ImportWebPart 方法有一些潛在安全性風險。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> 因為它牽涉到將資料匯入的網站，惡意使用者可以嘗試將不正確的資料或甚至是指令碼插入 description 檔案匯入。 然後在頁面上，或在資料庫中，可能會顯示不正確的資料或插入的指令碼無法執行。 如需匯入描述檔案，以及避免發生這些風險的方式與相關聯的潛在風險的概觀，請參閱[保護 Web 組件頁面](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>從正在匯入的 XML 描述檔案讀取的狀態和屬性的資料。</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "A<xref:System.String>匯入期間遇到錯誤時顯示給使用者。</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (或伺服器控制項包裝<xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> ，因此視為<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) 匯入的 XML 描述檔案中所參考。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;></xref>類別，用來結合，並將一組中的實際實作的方法<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>類別，但大部分都是用於控制項開發人員。"
  remarks: "內部屬性會公開成一組呼叫 Api<xref:System.Web.UI.WebControls.WebParts.WebPartManager>大部分用於擴充性的情況下的方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       使用這些內部方法的設計的方式是利用內部項目屬性來存取它們。 屬性已受到保護，因為您只可以存取它並呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>類別繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>的執行個體內方法      > [!NOTE] > 中的 IntelliSense 無法看見此屬性[!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]。 不過，在衍生<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，您仍然可以存取的屬性和其不同的成員。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>，透過此<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>可以參考已分成各種方法<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "執行會判斷是否授權控制項加入至頁面的初始步驟。"
  remarks: "IsAuthorized 方法是呼叫要檢查的授權設定的 Web 組件控制項的初始方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 它可接受`webPart`做為參數，並開始才是最終決定控制項是否會加入至網頁的處理序。 直接呼叫這個方法從程式碼時，您必須判斷是否授權指定的控制項。       這個方法會決定控制項是否會繼承的初始工作執行<xref:System.Web.UI.WebControls.WebParts.WebPart>類別或<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制，而且如果是這樣，何種類型的子控制項，它包含。</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 若要完成工作的授權，它會呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>方法多載。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>或正在檢查授權的其他伺服器控制項。"
    return:
      type: System.Boolean
      description: "布林值，指出是否<code> webPart </code>可以加入至頁面。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "執行會判斷是否授權控制項加入至頁面的最後一個步驟。"
  remarks: "IsAuthorized 多載方法會判斷是否授權控制項加入至頁面的最後一個步驟執行。 此方法可確保`type`是有效的類型，而`path`正在檢查的控制項是一個使用者控制項時，才會有值。 然後它會呼叫的重大<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>方法，這會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>授權檢查的控制項。</xref:System.Type>"
    - id: path
      type: System.String
      description: "獲得授權，如果控制項是一個使用者控制項的控制項的原始程式檔在應用程式相對路徑。"
    - id: authorizationFilter
      type: System.String
      description: "任意字串值，指派給<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>屬性<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>用來授權是否可以將控制項加入頁面的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "正在檢查的授權控制項是否為共用的控制項，也就是說，它許多或所有應用程式的使用者可以看見和其<xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>屬性值設定為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "布林值，指出是否授權控制項加入至頁面。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出是否已建立個人化變更會影響所控制的頁面層級個人化詳細資料<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項 IsCustomPersonalizationStateDirty 屬性在內部用來追蹤是否有任何它所管理的資料已變更的頁面層級個人化。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 個人化資料變更時的使用者執行各種不同的個人化動作，在頁面層級，例如加入或移除<xref:System.Web.UI.WebControls.WebParts.WebPart>連線或中斷連線的控制項，變更頁面的版面配置，藉由移動控制項和其他動作的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > 使用者也可以執行控制層級，這表示它們進行個人化變更，到特定控制項，在個人化和所做的變更只影響該控制項。 範例會編輯控制項，並變更其標題文字或它的背景色彩。 控制層級個人化不會影響所追蹤的頁面層級個人化資料<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，因此 IsCustomPersonalizationStateDirty 屬性值不會變更為`true`控制層級個人化就會發生。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       雖然方法受到保護，而且呼叫端，無法直接存取<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>直接的呼叫端，才能存取內容，並傳回這個屬性的值。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "布林值，指出是否已建立個人化變更。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "載入控制已儲存來自先前頁面要求，而且必須還原在後續要求的狀態資料。"
  remarks: "方法會很有幫助還原應在頁面的回傳保存的屬性資料 LoadControlState 即使<xref:System.Web.UI.Control.EnableViewState%2A>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "包含要載入的永續性的狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>不是有效<xref:System.Web.UI.PageStatePersister.ControlState*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "已傳遞至自訂的個人化資料儲存<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>要稍後在初始化過程中使用的個人化物件的控制。"
  remarks: "LoadCustomPersonalizationState 方法提供儲存的狀態資料的形式<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>物件。</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> 將 Web 組件控制項載入個人化資料，以及執行其他初始設定工作，最終會使用此資料。      > [!NOTE] > 的一連串方法開始時呼叫這個方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>方法一開始會要求相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>要個人化資料提供給物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       您無法直接從您的程式碼呼叫此方法。 您可以不過，直接呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>方法，而其本身呼叫 LoadCustomPersonalizationState 方法，並傳回個人化資料。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> ，其中包含要載入的狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得<xref href=&quot;System.Security.PermissionSet&quot;></xref>僅允許的物件<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>權限和<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  remarks: "<xref:System.Security.PermissionSet>這個屬性所傳回的物件用於匯入期間類型還原序列化。</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "A <xref href=&quot;System.Security.PermissionSet&quot;> </xref>物件，僅允許<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>權限和<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得<xref href=&quot;System.Security.PermissionSet&quot;></xref>僅允許的物件<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>權限和<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  remarks: "<xref:System.Security.PermissionSet>匯入所有項目除了輸入還原序列化期間使用這個屬性所傳回的物件。</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "取得<xref href=&quot;System.Security.PermissionSet&quot;></xref>僅允許的物件<xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;></xref>權限和<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>權限。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "移動<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項從某個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域，或在相同區域內的新位置。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項使用 MoveWebPart 方法來移動`webPart`到新位置位於相同區域中，或在不同的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 您可以直接從程式碼，呼叫這個方法，它也會叫用時，使用者將控制項移到新位置，使用 Web 組件的使用者介面 (UI) 中的各種選項。       之前必須符合一些條件`webPart`可以移動，和其中大部分以本主題中的例外狀況 > 一節中所列的項目。 如果`webPart`並未包含在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域不能將它移到區域的開始。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       下列動作順序已符合這些條件之後，就會移動`webPart`: 1。  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>方法會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`移除從其目前的區域 （如有必要），並加入至其新的區域或其目前區域中的新位置。      3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>方法會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  `zoneIndex`的每個<xref:System.Web.UI.WebControls.WebParts.WebPart>來源和目的地的區域中的控制項重設為反映已移動的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>或移動其他伺服器控制項。"
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "目標<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>的`webPart`正在移動。"
    - id: zoneIndex
      type: System.Int32
      description: "整數，指出索引`webPart`內其他控制項的相對位置`zone`。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>小於零。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;></xref>事件，並叫用事件處理常式，如果有的話。"
  remarks: "OnAuthorizeWebPart 方法由呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法，當<xref:System.Web.UI.WebControls.WebParts.WebPart>授權，以加入至頁面選取控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> 當呼叫 OnAuthorizeWebPart 方法時，會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>事件和事件處理常式方法時，它會叫用處理常式。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       授權程序<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項是一個重要的 Web 組件功能。</xref:System.Web.UI.WebControls.WebParts.WebPart> 每個<xref:System.Web.UI.WebControls.WebParts.WebPart>或加入至依區域的伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項將會執行授權程序，以判斷是否可以加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> 根據預設，Web 組件控制項集合不提供任何篩選準則，以避免將控制項加入至區域。 但控制項集合並提供所需的開發人員建立自己的篩選條件的機制。 藉由使用這些機制，您可以建立自訂的篩選案例。 比方說，您可以建立篩選，以便使用者是系統管理員角色中，如果特定的控制項，會加入至區域時轉譯頁面時，如果使用者是使用者角色中，將不會加入這些控制項。       篩選控制項授權程序期間的機制是<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>和 OnAuthorizeWebPart 方法和<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       若要建立篩選的案例，有本質上這兩個工作。 首先，您指派字串<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>每個屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>您想要篩選的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 這些字串值可以是任意的但應該包含您想要篩選的準則。 例如，如果您要指定的控制項来新增至區域的只有當系統管理員使用者檢視頁面上，則您可能會指定的字串值`admin`屬性。 您無法使用 ASP.NET 角色功能，然後將您的站台的所有使用者都加入至不同的角色，例如系統管理員、 管理員和使用者。 當網頁載入時，您篩選程式碼會檢查使用者的角色，請比較檢查，在控制項上的授權篩選值，且使用者是系統管理員角色中的 （例如），而您必須設定控制項的<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>值設定為`admin`，無法加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       建立篩選案例的第二個步驟是撰寫程式碼來檢查<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>屬性值上<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，並判斷是否要在加入其區域之前，授權的每個控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 有兩種方式來放置這個篩選程式碼的位置。 第一個選項是針對網頁開發人員慣用的選項。 您可以建立方法以處理<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>直接在網頁伺服器指令碼，或程式碼分隔檔案中的事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 與事件關聯您的方法，藉由新增`OnAuthorizeWebPart`屬性的標記<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項在頁面中，如下列範例的標記程式碼所示。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```所有您的自訂方法需要為每個 check<xref:System.Web.UI.WebControls.WebParts.WebPart>控制篩選準則，然後根據結果，布林值指派給<xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>屬性<xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>物件，表示是否<xref:System.Web.UI.WebControls.WebParts.WebPart>加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> 範例 > 一節中的程式碼會示範如何執行這項操作。       放置您篩選程式碼的第二個選項是繼承自<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別，並覆寫方法來檢查篩選條件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 您可以覆寫以執行此兩種方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>方法或 OnAuthorizeWebPart 方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> 雖然可行哪一種方法，在大部分情況下最好是覆寫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法，因為它會提供您更大以程式設計方式控制整個授權程序，而 OnAuthorizeWebPart 方法會執行一個特定的工作，也就是引發事件和處理常式的核取。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> 在自訂程式碼範例<xref:System.Web.UI.WebControls.WebParts.WebPartManager>類別會覆寫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>方法多載。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;></xref>事件，表示載入網頁和其控制項，並開始共享資料已啟用頁面上的連接。"
  remarks: "OnConnectionsActivated 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>頁面完成載入程序之後的事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> 此方法會提供加入事件處理常式的方式。       網頁開發人員可以加入，將自訂事件處理常式`OnConnectionsActivated`屬性`<asp:webpartmanager>`項目 頁面上，然後將自訂的方法名稱指派給屬性。"
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;></xref>事件，表示已載入的網頁和控制項，並啟動連線的程序開始。"
  remarks: "OnConnectionsActivating 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>事件，開發人員提供一種機制，以程式設計方式自訂 啟用連線處理程序。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       網頁開發人員可以加入，將自訂事件處理常式`OnConnectionsActivating`屬性`<asp:webpartmanager>`項目 頁面上，然後將自訂的方法名稱指派給屬性。"
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;></xref>事件，表示<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項已完成從一種顯示模式切換到另一個網頁上的處理程序。"
  remarks: "OnDisplayModeChanged 方法，其基底中的形成只會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref>包含事件資料相關聯的已變更的顯示模式。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;></xref>事件，表示<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項正在從一種顯示模式切換到另一個網頁上。"
  remarks: "OnDisplayModeChanging 方法，其基底中的形成只會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "<xref:System.EventArgs>包含變更的顯示模式與相關聯的事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.Control.Init&quot;></xref>事件，這是第一個事件中<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項生命週期。"
  remarks: "OnInit 方法呼叫基底方法時，這會引發<xref:System.Web.UI.Control.Init>控制項，然後再執行數個預備步驟的詳細資訊，例如確保只有一個執行個體的事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制在頁面上，並載入個人化資料。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "是另一個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>頁面上的控制項"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref>事件，就會發生之前<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>呈現在網頁上的控制項。"
  remarks: "OnPreRender 方法呼叫基底方法時，這會引發<xref:System.Web.UI.Control.PreRender>控制項，然後暫存器的事件數個頁面，其中包含 Web 組件所需的用戶端指令碼控制項。</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;></xref>事件之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項選取可能是新或已清除其選取範圍。"
  remarks: "OnSelectedWebPartChanged 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>事件，通常是在開發人員可能會想要變更的使用者介面 (UI) 外觀的時間點。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> 例如，當新<xref:System.Web.UI.WebControls.WebParts.WebPart>選取控制項，Web 組件控制項設定變更新選取的控制項的呈現。</xref:System.Web.UI.WebControls.WebParts.WebPart> 會清除控制項的選取範圍之後，轉譯會恢復正常。       使用者選取特定之後<xref:System.Web.UI.WebControls.WebParts.WebPart>編輯控制項，呼叫 OnSelectedWebPartChanged 方法。</xref:System.Web.UI.WebControls.WebParts.WebPart> 當使用者完成編輯控制項，並關閉它，以控制選取範圍已清除結果時，會再次呼叫 OnSelectedWebPartChanged 方法。"
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;></xref>變更它的程序期間發生的事件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>目前選取控制項。"
  remarks: "OnSelectedWebPartChanging 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>變更它的程序期間發生的事件<xref:System.Web.UI.WebControls.WebParts.WebPart>目前選取控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項會使用這個方法和相關聯的事件，以提供取消處理程序在其中變更所選的控制項的機會。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 方法內的呼叫，例如<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>方法，並也在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>方法，以提供方法來取消處理程序。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> 如果使用者按一下 [取消]&5;d; 上的動詞命令正在編輯的控制項，不會再選取控制項，並編輯的任何變更不會儲存，因為 OnSelectedWebPartChanging 方法讓您能夠取消編輯變更。      > [!NOTE] > 同樣的方法的開頭和結尾連接的程序期間呼叫該方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項為其他控制項，以便取消該程序。</xref:System.Web.UI.WebControls.WebParts.WebPart>       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>事件加`OnSelectedWebPartChanging`屬性`<asp:webpartmanager>`宣告式網頁標記中，並將指派給屬性的自訂方法的名稱中的項目。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發基底<xref href=&quot;System.Web.UI.Control.Unload&quot;></xref>事件並移除<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>從網頁上的執行個體。"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "移除控制項相關聯的事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;></xref>事件之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項加入頁面。"
  remarks: "新增的程序期間會呼叫 OnWebPartAdded 方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (或加入至其他伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域) 的頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>事件加`OnWebPartAdded`屬性`asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;></xref>新增的程序期間發生的事件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項 （或伺服器或使用者控制項） 至<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "OnWebPartAdding 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>表示控制項正在加入事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> 此方法也會提供取消加入程序的選項。 如果控制項已成功新增，<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartAdding`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;></xref>事件來表示已從頁面移除控制項。"
  remarks: "OnWebPartClosed 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>事件，表示<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 （或其他伺服器或使用者控制項） 已成功關閉頁面上。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       若要關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制是指從頁面移除，而不轉譯時，也將它放在特殊持有物件稱為頁面類別目錄。</xref:System.Web.UI.WebControls.WebParts.WebPart> 頁面目錄中，對應至<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項，維護參考至已關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>每一頁的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 如果<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>宣告內的頁面上的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZone>區域，使用者可以將頁面切換成類別目錄的顯示模式，並將任何先前已關閉的控制項加入至網頁。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       OnWebPartClosed 方法提供開發人員建立的自訂處理常式的機會<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> 網頁開發人員可以加入，將自訂事件處理常式`OnWebPartClosed`屬性`<asp:webpartmanager>`項目 頁面上，然後將自訂的方法名稱指派給屬性。 開發人員可能會在這個方法中執行的一個有用工作用來顯示關閉的控制項取代的預留位置，完成與工具提示，告知使用者如何將控制項加入至網頁。"
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;></xref>的程序期間發生的事件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或正在從頁面中移除的伺服器控制項。"
  remarks: "OnWebPartClosing 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>事件，代表控制項正在關閉或移除頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> 此方法也會提供取消關閉處理序的選項。 如果控制項已成功移除頁面上，從<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartClosinging`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;></xref>事件之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項永久刪除從頁面。"
  remarks: "刪除的程序期間會呼叫 OnWebPartDeleted 方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (或加入至其他伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域) 頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>事件加`OnWebPartDeleted`屬性`asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;></xref>事件，這表示動態<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項 (或包含在伺服器或使用者控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域) 正在刪除。"
  remarks: "只有動態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以被刪除，並刪除控制項時，控制項執行個體從頁面時，會永久移除，且無法還原。</xref:System.Web.UI.WebControls.WebParts.WebPart> 動態<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項是以程式設計的方式，加入或從 Web 組件類別目錄中，而不是靜態控制項中宣告的 Web 網頁的標記。</xref:System.Web.UI.WebControls.WebParts.WebPart>       OnWebPartDeleting 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>表示控制項會永久刪除從其區域事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> 此方法也會提供取消刪除的程序的機會。 如果控制項已成功刪除頁面上，從<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartDeleting`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;></xref>事件之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>網頁上控制項移至不同的位置。"
  remarks: "OnWebPartMoved 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>事件的結尾處<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>方法，可確保移動控制項的處理程序會完成之前的任何程式碼在事件處理常式的執行,。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>控制項移其目前的區域中，或另一個區域，而不論是否移動是以程式設計方式或由使用者拖曳控制項時引發事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>事件加`OnWebPartMoved`屬性`asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;></xref>事件，這表示<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或中的伺服器或使用者控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域正在移動。"
  remarks: "OnWebPartMoving 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>事件發生時<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他伺服器控制項正在移動其區域內，或另一個區域。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> 此方法也會提供取消移動程序的機會。 如果順利完成移動，<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartMoving`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;></xref>之間建立連接之後，就會發生的事件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  remarks: "OnWebPartsConnected 方法就會引發對應的事件的結尾處<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法，可確保連接兩個控制項所需的步驟都完成之後，事件處理常式中的任何程式碼執行之前。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       此方法會提供以程式設計方式控制建立連接的程序和相關聯的事件是一個方便的點要更新的使用者介面 (UI)，或告知使用者已建立連線。       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>事件加`OnWebPartsConnected`屬性`asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;></xref>建立兩個連接的程序期間發生的事件<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或所包含的伺服器或使用者控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "OnWebPartsConnecting 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>事件，當兩個控制項嘗試建立連接時，就會發生此事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> 此方法提供有機會取消正在嘗試連接。 如果連接成功，<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartsConnecting`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;></xref>事件之間的連線之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項已結束。"
  remarks: "OnWebPartsDisconnected 方法就會引發對應的事件的結尾處<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>方法，執行 結束連接兩個控制項的處理。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       此方法提供結束連接的程序以程式設計方式控制，讓開發人員可以通知使用者，變更使用者介面 (UI)，或對應用程式進行其他變更。       網頁開發人員可以建立的自訂處理常式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>事件加`OnWebPartsDisconnected`屬性`asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "引發<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;></xref>事件，表示有兩個<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或中的伺服器或使用者控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域的結束連接的程序。"
  remarks: "OnWebPartsDisconnecting 方法就會引發<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>事件，這兩個控制項都結束連接時，就會發生。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> 此方法會提供取消中斷連線程序的機會。 如果成功移除連接，<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>事件會依循。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       網頁開發人員可以提供的自訂處理常式相關聯的事件加`OnWebPartsDisconnecting`屬性`<asp:webpartmanager>`等網頁，然後將自訂的方法名稱指派給屬性的項目。"
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得物件，包含網頁的個人化資料的參考。"
  remarks: "個人化屬性可用來存取<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>逐頁檢視相關聯的物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> 您可以使用這個屬性，存取個人化物件的各種不同的成員。 例如，您可以使用<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>方法切換網頁的個人化範圍從共用的使用者領域，反之亦然。</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> 是否在哪一個提供者用於個人化資料，以及其他的頁面上，甚至啟用個人化，您也可以找出目前個人化範圍的頁面。       請注意，個人化屬性所參考的資料只會追蹤的頁面層級個人化資料<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控制項特定個人化資料，例如可個人化屬性的值<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，不是個人化屬性的一部分。</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > 多個 Web 組件個人化的詳細資訊，請參閱[Web 組件個人化概觀](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref>包含個人化資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "可讓<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>發出用戶端指令碼用於不同的個人化功能，例如拖曳控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>在網頁中的控制項。"
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "若要避免覆寫<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>呈現任何內容的控制項。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ，接收控制項內容的寫入頁面。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "儲存狀態資料<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制，因此可以在未來的要求，包含控制項的網頁上還原資料。"
  remarks: "方法會將儲存狀態資料的屬性應保存在頁面回傳 SaveControlState 即使<xref:System.Web.UI.Control.EnableViewState%2A>屬性設定為`false`。</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>包含控制項的儲存狀態資料。</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "儲存自訂的個人化狀態資料所維護<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制，以便可以重新載入此資料，只要重新載入頁面。"
  remarks: "SaveCustomPersonalizationState 方法很重要進行個人化的因為它可讓個人化的使用者設定儲存為未來的瀏覽器工作階段，並瀏覽至頁面。 方法會將儲存自訂的個人化狀態資料，其中包含項目，如下所示︰ 動態<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項的頁面加入或刪除頁面; 已移動頁面的控制項和動態的連接，建立或刪除。</xref:System.Web.UI.WebControls.WebParts.WebPart>       您無法直接從您的程式碼呼叫此方法。 不過，您可以呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>方法，而其本身呼叫此方法來儲存個人化資料。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> ，其中包含要載入的狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或目前未選取進行編輯或建立連接與另一個控制項的其他伺服器控制項。"
  remarks: "SelectedWebPart 屬性傳回的參考<xref:System.Web.UI.WebControls.WebParts.WebPart>或目前未選取進行編輯或建立連接與另一個控制項的其他伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項提供數種有用的方法和事件的處理程序的選取控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>只選取控制項之後，但進行任何變更之前，就會發生事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> 若要執行某些控制項上的動作之後加以選取，請覆寫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> 比方說，您可能想要變更的控制項選取但未變更，以視覺化方式強調選取的控制項的外觀。       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>之後已變更選取的控制項，就會發生事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> 若要變更後執行某些控制項上的動作，請覆寫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>編輯或建立連接的目前選取的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "其中一個選取範圍之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項已變更，並移至另一個網頁上的控制項。"
  remarks: "此事件可用於搭配<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>方法，以變更選取的控制項的使用者介面 (UI)。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> 比方說，如果使用者切換到設計模式的頁面 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>)，然後選取<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項目的，是將它拖曳到新位置，通常會藉由變更框線的色彩，例如變更的呈現方式選取的控制項，或背景時選取它。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > 上取用事件的詳細資訊，請參閱[How to︰ 使用 Web Form 應用程式中的事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "變更其中的程序期間發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項目前選取網頁上。"
  remarks: "此事件可用於搭配<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> 網頁開發人員可以建立程式碼中的事件處理常式加`OnSelectedWebPartChanging`屬性`<asp:webpartmanager>` 頁面上，並將屬性的值設定為自訂的方法名稱中的項目即將處理此事件。       開始或結束連接控制項之間，以及當開始和結束的編輯控制項的程序期間，會引發這個事件。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       一般來說，SelectedWebPartChanging 事件引發時的直接結果的變更所選的控制項的使用者動作，可以取消事件。 不過，是無法取消事件中的案例。 如果<xref:System.Web.UI.WebControls.WebParts.WebPartZone>就在刪除控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>它所包含的控制項必須全部關閉，否則它們會被遺棄。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 在此情況下<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項、 不使用者，而且它必須決定目前選取的控制項，以及何時變更選取範圍沒有任何中斷的機會，讓它能完成清除所有控制項的程序。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 因此，根據設計 SelectedWebPartChanging 方法無法在此案例中取消。 相關事件可取消，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "設定旗標，表示該自訂個人化資料，以<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項已變更。"
  remarks: "SetPersonalizationDirty 方法設定旗標，最終導致 Web 組件控制項設定為將更新的個人化資料儲存中的 個人化元件。 如需詳細資訊，可能會導致個人化資料所追蹤的變更之案例<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       SetPersonalizationDirty 方法無法直接從您的程式碼呼叫，並無法覆寫，因為它供內部 Web 組件控制項設定為 Web 組件個人化功能的一部分。"
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "設定<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>等於目前選取的屬性值<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "開始或結束編輯所指定之控制項的處理程序期間會呼叫 SetSelectedWebPart 方法`webPart`參數，且開頭或結尾包含連線的`webPart`。       編輯和連接處理程序的開頭`webPart`是已選取要編輯，或輸入連接的控制。       編輯和連接處理程序的結尾`null`傳遞給 SetSelectedWebPart 方法，會導致取消選取目前選取的控制項。"
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>或已選取的伺服器控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得或設定為空字串 (&quot;&quot;)，因此沒有面板可以套用至<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "SkinID 屬性會覆寫繼承<xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>屬性可防止<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，這是不可見的控制項，從使用面板。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> 屬性的實作可防止面板指派由一律會傳回空字串從`get`存取子，並一律在嘗試設定中的值是否擲回例外狀況`set`存取子。"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "空字串，可防止<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>毋需指派給它的外觀的控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "嘗試設定屬性值。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得所有集合的參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;></xref>網頁上會定義為靜態連接的物件。"
  remarks: "StaticConnections 屬性供<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項來追蹤和管理頁面上的所有靜態連接。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 靜態連接，相較於動態的連接，不必每次在呈現的頁面加入至網頁。       這個屬性所參考的集合包含所有存在的頁面，是否會在建立以程式設計方式或使用指定的靜態連接`<asp:webpartconnection>`在網頁標記中的項目。"
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref>包含頁面上的所有靜態連接。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得所有在特定的 Web 網頁可用的顯示模式的唯讀集合。"
  remarks: "SupportedDisplayModes 屬性包含僅會在頁面上，指定區域在頁面上出現的控制項種類實際可用的顯示模式。      > [!NOTE] > 顯示模式可以停用，而且停用的顯示模式時，不加入至 SupportedDisplayModes 集合中，即使對應支援顯示模式的區域類型存在於頁面上。       一律支援瀏覽模式和設計模式。 可以改變的顯示模式是編輯、 目錄和連接模式。 每一種顯示模式都與特定類型的<xref:System.Web.UI.WebControls.WebParts.ToolZone>控制項。</xref:System.Web.UI.WebControls.WebParts.ToolZone> 它是特別具型別的區域 SupportedDisplayModes 屬性所參考的集合會以特定顯示模式會導致在網頁上存在。 例如，如果網頁包含<xref:System.Web.UI.WebControls.WebParts.EditorZone>而非區域<xref:System.Web.UI.WebControls.WebParts.CatalogZone>區域，然後編輯顯示模式是其中一個支援的模式，在該頁面上，但是不支援類別目錄的顯示模式。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > SupportedDisplayModes 屬性不同於<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>屬性，即在參考集合，其中包含所有目前可用的顯示模式<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，即使不是支援的特定頁面。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> ，其中包含一組<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;></xref>特定網頁上可用的物件。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，指出自訂個人化狀態資料是否已受<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項變更網頁上。"
  remarks: "IPersonalizable.IsDirty 屬性可讓呼叫端若要判斷是否個人化狀態由管理的資料<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項已變更。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 當使用者個人化頁面層級的詳細資訊，例如藉由變更頁面配置、 建立或刪除連接，並由加入或刪除控制項，管理個人化資料<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制的變更。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 這是受保護的值傳回呼叫端傳遞方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>屬性，無法直接存取的呼叫端。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > IPersonalizable.IsDirty 屬性不會指出是否可個人化的屬性值或個別的屬性會影響個別的外觀<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，已經變更。</xref:System.Web.UI.WebControls.WebParts.WebPart> 控制層級個人化個別追蹤每個控制項。 IPersonalizable.IsDirty 屬性只會指出是否個人化資料，在頁面層級且受<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項已變更。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       下列清單將描述一些常見的執行個體的個人化，可能導致 IPersonalizable.IsDirty 屬性以傳回值為`true`，這表示，<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項有某些變更個人化資料:-關閉靜態<xref:System.Web.UI.WebControls.WebParts.WebPart>頁面上，控制項 （或伺服器或使用者控制項）。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -還原為已關閉的靜態<xref:System.Web.UI.WebControls.WebParts.WebPart>回到頁面從頁面類別目錄的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      移動任何控制項在其區域內，或另一個區域。      -將控制項加入從目錄<xref:System.Web.UI.WebControls.WebParts.WebPart>或伺服器控制項，或以程式設計方式加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>      -建立兩個連接<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，以程式設計方式或使用連接的使用者介面 (UI)。</xref:System.Web.UI.WebControls.WebParts.WebPart>      -刪除兩個連接<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，以程式設計方式或使用連接 UI。</xref:System.Web.UI.WebControls.WebParts.WebPart>       若要存取這個屬性值，您必須轉換<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項執行個體<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>介面; 您可以再讀取<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>屬性值。</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "布林值，指出是否已變更個人化狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "傳回之前儲存自訂的個人化狀態資料載入到需要<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "這個方法是實作<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>方法，它提供的 Web 組件控制項設定為直接存取受保護的方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> 呼叫這個方法時，它會儲存自訂的個人化的資料受<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項，而且先前儲存在永久的資料存放區初始化程序中稍後使用。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > 在大部分情況下，頁面和控制項的開發人員程式碼不必呼叫這個方法，因為主要是由 Web 組件控制項設定為擷取個人化資料的機制。"
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> ，其中包含要載入的狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "儲存自訂的個人化狀態資料受<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項。"
  remarks: "IPersonalizable.Save 方法是實作<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>方法，它提供的 Web 組件控制項設定為直接存取受保護的方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> 呼叫這個方法時，它會將儲存所管理的所有個人化的資料<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Web 組件的應用程式設定的永久資料儲存區的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > 在大部分情況下，頁面和控制項的開發人員程式碼不必呼叫這個方法，因為主要是由 Web 組件控制項設定為儲存個人化資料的機制。"
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> ，其中包含要儲存的狀態資料。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "適用於個人化狀態資料至<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>控制項，並呼叫基底的方法，可啟用追蹤變更控制項的檢視狀態資料。"
  remarks: "檢視狀態資料變更會儲存在<xref:System.Web.UI.StateBag>物件，並可透過控制項的存取<xref:System.Web.UI.Control.ViewState%2A>屬性。</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得值，可讓顯示的子控制項。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Control 覆寫基底<xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>屬性一律會傳回值為`true`的 Visible 屬性。</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 即使<xref:System.Web.UI.WebControls.WebParts.WebPartManager>看不到控制項本身，Visible 屬性必須設為`true`使其所有子控制項都都預設為可見。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       如果您嘗試設定 Visible 屬性的值，則一律會產生錯誤因為<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項已覆寫基底屬性行為，並防止任何值指派給屬性。</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       這個屬性不是在視覺化設計工具，可繫結，但可在執行階段繫結。 如需詳細資訊，請參閱<xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "布林值，指出是否<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>會顯示控制項和其子控制項。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "您嘗試將值指派給屬性。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "發生於之後動態<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或其他伺服器控制項加入<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域，表示已成功加入控制項。"
  remarks: "WebPartAdded 事件可用於指出動態控制項 （以程式設計的方式，加入，而不是在網頁標記中所宣告的控制項） 已成功新增至區域。 搭配<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>方法，這個事件提供開發人員一種方式更新使用者介面 (UI) 或否則通知使用者已成功加入控制項。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "新增動態的程序期間發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或其他伺服器控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "引發 WebPartAdding 事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>開始新增控制項至區域的程序之後的方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> 此事件會提供完成之前取消此程序的機會。 如果成功加入程序，此事件後面接著<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       網頁開發人員可以提供事件的自訂處理常式加`OnWebPartAdding`屬性`<asp:webpartmanager>`項目 頁面上，指定給該屬性的自訂方法名稱。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "發生時<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項 （或伺服器或使用者控制項） 會從頁面移除。"
  remarks: "WebPartClosed 事件指出，控制項已成功關閉，依使用者或以程式設計的方式。 若要關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制是指從頁面移除，而不轉譯時，也將它放在特殊持有物件稱為頁面類別目錄。</xref:System.Web.UI.WebControls.WebParts.WebPart> 頁面目錄中，對應至<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項，維護參考至已關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>每一頁的控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 如果<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>宣告內的頁面上的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZone>區域，使用者可以將頁面切換至目錄的顯示模式，並將任何先前已關閉的控制項加入至頁面。</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       WebPartClosed 事件是<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>方法，可同時引發事件並提供它的處理常式</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>相關聯       網頁開發人員可以加入，將自訂事件處理常式`OnWebPartClosed`屬性`<asp:webpartmanager>`項目 頁面上，然後將自訂的方法名稱指派給屬性。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "移除的程序期間發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>從頁面控制項 （或伺服器或使用者控制項）。"
  remarks: "引發 WebPartClosing 事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>方法時<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項正在關閉控制。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> 如果成功移除控制項，此事件後面接著<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       網頁開發人員可以提供自訂事件處理常式加入`OnWebPartClosed`屬性`asp:webpartmanager>`項目 頁面上，指定給該屬性的自訂方法名稱。       一般來說，WebPartClosing 事件引發時的直接結果的使用者關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，可以取消事件。</xref:System.Web.UI.WebControls.WebParts.WebPart> 不過，是無法取消事件中的案例。 如果<xref:System.Web.UI.WebControls.WebParts.WebPartZone>就在刪除控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>它所包含的控制項必須全部關閉，否則它們會被遺棄。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 在此情況下<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，不是使用者。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 與時機<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項正在呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>方法，關閉每個控制項，而且 WebPartClosing 事件引發時，事件無法取消 （符合設計），因為<xref:System.Web.UI.WebControls.WebParts.WebPartManager>必須完成清除所有區域控制項的工作。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或其他伺服器控制項從中<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "WebPartDeleted 事件可用於指出動態控制項 （以程式設計的方式，加入，而不是在網頁標記中所宣告的控制項） 已成功刪除從區域。 搭配<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>方法，這個事件會提供一種方式，來更新使用者介面 (UI) 或否則通知使用者已成功刪除控制項的開發人員。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "永久刪除的動態執行個體的程序期間發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或從其他伺服器控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "引發 WebPartDeleting 事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>方法，刪除動態控制項 （一個以程式設計方式或透過 Web 組件的使用者介面的使用者已加入） 的過程。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> 事件會提供完成之前取消此程序的機會。 如果順利完成刪除程序，此事件後面接著<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       網頁開發人員可以提供事件的自訂處理常式加`OnWebPartDeleting`屬性`<asp:webpartmanager>`項目 頁面上，指定給該屬性的自訂方法名稱。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或網頁伺服器控制項移至不同的位置。"
  remarks: "（在網頁標記中宣告） 的靜態和動態控制項適用於此事件。 相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> 移動完成之後，就會引發事件，因為開發人員可以包含提供給使用者、 驗證或執行其他動作的相關通知的事件處理常式。 若要加入事件處理常式，您可以加入`OnWebPartMoved`屬性`<asp:webpartmanager>`元素在頁面上，並指派給屬性的自訂方法的名稱。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "移動的程序期間發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或包含在其他伺服器控制項<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  remarks: "WebPartMoving 引發時<xref:System.Web.UI.WebControls.WebParts.WebPart>或它自己的區域內，或另一個區域，移動其他伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> 當使用者拖曳控制項，及以程式設計方式移動時，也可能會發生。       引發 WebPartMoving 事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>方法，這個方法，並提供完成之前取消移動程序的機會。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> 如果已完成的移動，並放在新位置的控制項，此事件後面是<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       網頁開發人員可以建立自訂事件處理常式加入`OnWebPartMoving`屬性`<asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得所有參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項所追蹤<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref>網頁上的控制項。"
  remarks: "Web 組件屬性供<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項以追蹤所有<xref:System.Web.UI.WebControls.WebParts.WebPart>內所包含的控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>網頁的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 集合是唯讀的雖然您可以存取個別<xref:System.Web.UI.WebControls.WebParts.WebPart>以程式設計方式控制這些集合並變更透過。</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > 很可能有<xref:System.Web.UI.WebControls.WebParts.WebPart>之外的頁面上的控制項置於<xref:System.Web.UI.WebControls.WebParts.WebPartZone>區域使用，這會導致控制項沒有追蹤<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制或其 web 組件集合中所參考。</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> 不過，沒有什麼道理使用<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項區域外,，因為它然後失去其 Web 組件的功能，並做為一般的伺服器控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart>       任何類型的控制項，可放置在區域中，是否自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項、 標準的 ASP.NET 控制項、 使用者控制項或自訂伺服器控制項，可用來當做<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項在執行階段。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 控制項時，不是<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項放入<xref:System.Web.UI.WebControls.WebParts.WebPartZone>區域，在 ASP.NET 包裝的控制項的執行階段<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件，使控制項可以如同真正<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> 因此，使用 web 組件屬性，<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制可以追蹤任何類型的伺服器控制項，不論是否衍生自<xref:System.Web.UI.WebControls.WebParts.WebPart>類別。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> ，其中包含一組參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "之間建立特定的連接之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項 （或伺服器或使用者控制項）。"
  remarks: "WebPartsConnected 事件相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> 此事件很有用，因為您知道連接完成之後，您可能想要通知使用者的事實，或甚至變更頁面的使用者介面 (UI)。 例如，您可能想要顯示特定圖形影像，表示成功連接兩個控制項，或顯示簡短訊息，然後將頁面顯示模式變更回瀏覽模式。       網頁開發人員可以關聯的自訂事件處理常式與此事件加入`OnWebPartsConnected`屬性`<asp:webpartmanager>`項目頁面上，指定給該屬性的自訂方法名稱。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "之間建立連接的程序期間，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>控制項 (或伺服器或使用者控制項置於<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域)。"
  remarks: "WebPartsConnecting 引發由<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>方法，以及它會通知已開始連線程序 （例如，使用者已選取的控制項並按一下連接的動詞命令），但尚未完成。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> 這個事件會提供完成之前取消連線的機會。 如果已成功完成連線，此事件後面接著<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       網頁開發人員可以加入，將自訂事件處理常式`OnWebPartsConnecting`屬性`<asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "兩個連線之後，就會發生<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項已終止。"
  remarks: "WebPartsDisconnected 事件相關聯<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> 此事件很有用，因為您知道連接終止之後，您可能想要通知使用者、 在程式碼中，執行某些清除動作，或在使用者介面 (UI) 中進行其他變更。       網頁開發人員可以關聯的自訂事件處理常式與此事件加入`OnWebPartsDisConnected`屬性`<asp:webpartmanager>`項目頁面上，指定給該屬性的自訂方法名稱。"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "結束連接的程序期間，就會發生之間先前連線<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>或伺服器控制項。"
  remarks: "引發 WebPartsDisconnecting 事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>方法，並發出訊號事實使用者已按一下中斷連線動詞或<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>否則呼叫方法。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> 這個事件會提供取消處理程序完成之前結束連接的機會。 如果連接就會順利結束，此事件後面接著<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       網頁開發人員可以加入，將自訂事件處理常式`OnWebPartsDisconnecting`屬性`<asp:webpartmanager>`項目，並將自訂的方法名稱指派給屬性。       一般來說，WebPartsDisconnecting 事件引發時結束連接的使用者動作的結果，可以取消事件。 不過，有幾個案例中不能取消事件。 第一個案例是，如果<xref:System.Web.UI.WebControls.WebParts.WebPartZone>就在刪除控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>它所包含的控制項必須全部關閉，否則它們會被遺棄。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 在此情況下<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制關閉<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項、 不使用者，和它也必須能夠終止的任何連接控制項沒有任何可能發生的中斷連線，讓它能完成清除已完成並關閉所有控制項的程序。</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 因此，根據設計 WebPartsDisconnecting 方法無法在此案例中取消。 相關事件可取消，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       無法取消 WebPartsDisconnecting 事件中的第二個案例時，<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>呼叫方法時 （這稱為期間每個要求頁面時，例如），並沒有某種類型的頁面上的現有連線中的衝突。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> 比方說，可能是使用者連線到控制項 y 的控制項 x，但共用的使用者控制項來控制 z，x 連接和控制 x 尚不允許建立多個連接。 在此情況下，個別使用者的連線設定的優先順序，而<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項解決衝突，藉由呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>方法和結束之間的連線 x 和 z 特定的使用者。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 因為這個中斷連線基本解決衝突時，根據設計 WebPartsDisconnecting 無法取消事件在此案例中。       無法取消 WebPartsDisconnecting 方法中的第三個狀況，就是<xref:System.Web.UI.WebControls.WebParts.WebPart>或目前連接的伺服器控制項刪除或已關閉。</xref:System.Web.UI.WebControls.WebParts.WebPart> 因為控制項一定會從網頁中移除，所以邏輯上也来移除其連線。 因此，當<xref:System.Web.UI.WebControls.WebParts.WebPartManager>會叫用控制項<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>方法，接著引發 WebPartsDisconnecting 事件時，根據設計沒有不可能取消事件。</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得所有集合的參考<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>網頁上的區域。"
  remarks: "使用區域屬性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項以追蹤<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>網頁上的區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 請注意屬性並未參考所有類型的區域。它會參考衍生自的區域<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>類別，包括<xref:System.Web.UI.WebControls.WebParts.WebPartZone>區域。</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       雖然屬性所參考的集合是唯讀，但您可以使用它來存取集合中的個別物件和程式設計方式使用它們。"
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref>參考一組<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;></xref>區域。"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
