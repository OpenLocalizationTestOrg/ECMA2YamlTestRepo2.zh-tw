### YamlMime:ManagedReference
items:
- uid: System.Windows.Duration
  id: Duration
  children:
  - System.Windows.Duration.#ctor(System.TimeSpan)
  - System.Windows.Duration.Add(System.Windows.Duration)
  - System.Windows.Duration.Automatic
  - System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.Equals(System.Object)
  - System.Windows.Duration.Equals(System.Windows.Duration)
  - System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.Forever
  - System.Windows.Duration.GetHashCode
  - System.Windows.Duration.HasTimeSpan
  - System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_Implicit(System.TimeSpan)
  - System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  - System.Windows.Duration.Plus(System.Windows.Duration)
  - System.Windows.Duration.Subtract(System.Windows.Duration)
  - System.Windows.Duration.TimeSpan
  - System.Windows.Duration.ToString
  langs:
  - csharp
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
  type: Struct
  summary: "代表持續時間的時間<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>為作用中。"
  remarks: "<a name=\"xamlAttributeUsage_Duration\"></a>   \n## XAML Attribute Usage  \n \\<*object* *property*=\"[*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]\"/>  \n  \n \\- or -  \n  \n \\<*object* *property*=\"[*days*.]*hours*:*minutes*\"/>  \n  \n \\- or -  \n  \n \\<*object* *property*=\"<xref:System.Windows.Duration.Automatic%2A>\"/>  \n  \n \\- or -  \n  \n \\<*object* *property*=\"<xref:System.Windows.Duration.Forever%2A>\"/>  \n  \n<a name=\"xamlValues_MinWidth\"></a>   \n## XAML Values  \n *days*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value greater than or equal to 0 that describes the number of days spanned by this duration.  \n  \n *hours*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 23 that represents the number of hours spanned by this duration.  \n  \n *minutes*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of minutes spanned by this duration.  \n  \n *seconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of seconds spanned by this duration  \n  \n *fractionalSeconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value consisting of 1 to 7 digits that represents fractional seconds."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))]

      public struct Duration
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.Duration.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Duration(TimeSpan)
  nameWithType: Duration.Duration(TimeSpan)
  fullName: System.Windows.Duration.Duration(TimeSpan)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>及所提供的結構<xref:System.TimeSpan>值。</xref:System.TimeSpan>"
  syntax:
    content: public Duration (TimeSpan timeSpan);
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: "代表這個持續時間的初始時間間隔。"
  overload: System.Windows.Duration.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "發生時<code> timeSpan </code>會初始化為負數的值。"
  platform:
  - net462
- uid: System.Windows.Duration.Add(System.Windows.Duration)
  id: Add(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Add(Duration)
  nameWithType: Duration.Add(Duration)
  fullName: System.Windows.Duration.Add(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "將指定的執行個體的值加入<xref href=&quot;System.Windows.Duration&quot;></xref>至目前的執行個體的值。"
  syntax:
    content: public System.Windows.Duration Add (System.Windows.Duration duration);
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>加上目前的執行個體的值表示`duration`。"
    return:
      type: System.Windows.Duration
      description: "如果兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>有執行個體的值， <xref href=&quot;System.Windows.Duration&quot;> </xref>表示組合的值。 否則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Automatic
  id: Automatic
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Automatic
  nameWithType: Duration.Automatic
  fullName: System.Windows.Duration.Automatic
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得<xref href=&quot;System.Windows.Duration&quot;></xref>自動判斷的值。"
  remarks: "<a name=&quot;xamlAttributeUsage_Automatic&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Automatic&quot; />   ``` <a name=&quot;xamlValues_Automatic&quot;> </a> # # XAML 值*屬性*屬性，可以接受<xref:System.Windows.Duration>值。</xref:System.Windows.Duration>      "
  syntax:
    content: public static System.Windows.Duration Automatic { get; }
    return:
      type: System.Windows.Duration
      description: "A <xref href=&quot;System.Windows.Duration&quot;> </xref>初始化為自動值。"
  overload: System.Windows.Duration.Automatic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)
  id: Compare(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Compare(Duration,Duration)
  nameWithType: Duration.Compare(Duration,Duration)
  fullName: System.Windows.Duration.Compare(Duration,Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "其中一個比較<xref href=&quot;System.Windows.Duration&quot;></xref>到另一個值。"
  remarks: "<xref:System.Windows.Duration>執行個體的屬性值與<xref:System.Windows.Duration.Automatic%2A>是具有下列傳回值的特殊案例。</xref:System.Windows.Duration.Automatic%2A></xref:System.Windows.Duration>      -如果`t1`為 [自動] 並`t2`是不是，則傳回-1。      -如果`t1`為 [自動] 並`t2`也會自動進行，就會傳回 0。      -如果`t1`不會自動和`t2`是自動執行，則傳回 1。"
  syntax:
    content: public static int Compare (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Int32
      description: "如果<code> t1 </code>是小於<code> t2 </code>，負數值，代表的差異。 If <code>t1</code> is equal to <code>t2</code>, zero. 如果<code> t1 </code>大於<code> t2 </code>，正值表示差異。"
  overload: System.Windows.Duration.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Duration.Equals(Object)
  fullName: System.Windows.Duration.Equals(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "判斷指定的物件是否等於執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "檢查相等的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>值是否等於目前的執行個體的持續時間。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Equals(System.Windows.Duration)
  id: Equals(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Equals(Duration)
  nameWithType: Duration.Equals(Duration)
  fullName: System.Windows.Duration.Equals(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "決定指定<xref href=&quot;System.Windows.Duration&quot;></xref>等於這個執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  syntax:
    content: public bool Equals (System.Windows.Duration duration);
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>檢查是否相等。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<code> duration </code>是否等於目前的執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  id: Equals(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Equals(Duration,Duration)
  nameWithType: Duration.Equals(Duration,Duration)
  fullName: System.Windows.Duration.Equals(Duration,Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "判斷兩個的<xref href=&quot;System.Windows.Duration&quot;></xref>相等。"
  syntax:
    content: public static bool Equals (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>t1</code> is equal to <code>t2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Duration.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Forever
  id: Forever
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Forever
  nameWithType: Duration.Forever
  fullName: System.Windows.Duration.Forever
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得<xref href=&quot;System.Windows.Duration&quot;></xref>表示無限間隔的值。"
  remarks: "<a name=&quot;xamlAttributeUsage_Forever&quot;></a># # XAML 屬性使用方式```   <object property=&quot;Forever&quot; />   ``` <a name=&quot;xamlValues_Forever&quot;> </a> # # XAML 值*屬性*屬性，可以接受<xref:System.Windows.Duration>值。</xref:System.Windows.Duration>      "
  syntax:
    content: public static System.Windows.Duration Forever { get; }
    return:
      type: System.Windows.Duration
      description: "A <xref href=&quot;System.Windows.Duration&quot;> </xref>初始化為不限次數值。"
  overload: System.Windows.Duration.Forever*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.GetHashCode
  id: GetHashCode
  parent: System.Windows.Duration
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Duration.GetHashCode()
  fullName: System.Windows.Duration.GetHashCode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得這個執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "帶正負號的 32 位元整數雜湊碼。"
  overload: System.Windows.Duration.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.HasTimeSpan
  id: HasTimeSpan
  parent: System.Windows.Duration
  langs:
  - csharp
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
  fullName: System.Windows.Duration.HasTimeSpan
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得值，指出如果這個<xref href=&quot;System.Windows.Duration&quot;></xref>代表<xref:System.TimeSpan>值。</xref:System.TimeSpan>"
  syntax:
    content: public bool HasTimeSpan { get; }
    return:
      type: System.Boolean
      description: "如果這段期間是 true<xref:System.TimeSpan>值; 否則為 false。</xref:System.TimeSpan>"
  overload: System.Windows.Duration.HasTimeSpan*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)
  id: op_Addition(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_Addition(Duration,Duration)
  nameWithType: Duration.op_Addition(Duration,Duration)
  fullName: System.Windows.Duration.op_Addition(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "將兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>在一起。"
  syntax:
    content: public static System.Windows.Duration op_Addition (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>新增。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>新增。"
    return:
      type: System.Windows.Duration
      description: "如果兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>有<xref:System.TimeSpan>值，這個方法會傳回這兩個值的總和。</xref:System.TimeSpan> 如果任一個值設定為<> *>，該方法會傳回<> *>。 如果任一個值設定為<> *>，該方法會傳回<> *>。       如果有任一個<code> t1 </code>或<code> t2 </code>不有無任何值，這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  id: op_Equality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_Equality(Duration,Duration)
  nameWithType: Duration.op_Equality(Duration,Duration)
  fullName: System.Windows.Duration.op_Equality(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "判斷兩個的<xref href=&quot;System.Windows.Duration&quot;></xref>相等。"
  syntax:
    content: public static bool op_Equality (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>有值，而且相等，或如果兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。 否則，這個方法會傳回<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)
  id: op_GreaterThan(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_GreaterThan(Duration,Duration)
  nameWithType: Duration.op_GreaterThan(Duration,Duration)
  fullName: System.Windows.Duration.op_GreaterThan(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "決定如果有一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>是否大於另一個。"
  remarks: "<xref:System.Windows.Duration.Forever%2A>會被視為大於任何有限值。</xref:System.Windows.Duration.Forever%2A> 與任何比較<xref:System.Windows.Duration.Automatic%2A>值傳回`false`。</xref:System.Windows.Duration.Automatic%2A>"
  syntax:
    content: public static bool op_GreaterThan (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>t1</code> and <code>t2</code> have values and <code>t1</code> is greater than <code>t2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Duration.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  id: op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_GreaterThanOrEqual(Duration,Duration)
  nameWithType: Duration.op_GreaterThanOrEqual(Duration,Duration)
  fullName: System.Windows.Duration.op_GreaterThanOrEqual(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "判斷執行個體是否<xref href=&quot;System.Windows.Duration&quot;></xref>大於或等於另一個執行個體。"
  remarks: "<xref:System.Windows.Duration.Forever%2A>會被視為大於任何有限值。</xref:System.Windows.Duration.Forever%2A> 與任何比較<xref:System.Windows.Duration.Automatic%2A>值傳回`false`。</xref:System.Windows.Duration.Automatic%2A>"
  syntax:
    content: public static bool op_GreaterThanOrEqual (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>t1</code> and <code>t2</code> have values and <code>t1</code> is greater than or equal to <code>t2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Duration.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_Implicit(System.TimeSpan)
  id: op_Implicit(System.TimeSpan)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_Implicit(TimeSpan)
  nameWithType: Duration.op_Implicit(TimeSpan)
  fullName: System.Windows.Duration.op_Implicit(TimeSpan)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Duration op_Implicit (TimeSpan timeSpan);
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: "即將加入。"
    return:
      type: System.Windows.Duration
      description: "即將加入。"
  overload: System.Windows.Duration.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  id: op_Inequality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_Inequality(Duration,Duration)
  nameWithType: Duration.op_Inequality(Duration,Duration)
  fullName: System.Windows.Duration.op_Inequality(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "決定是否兩個執行個體的<xref href=&quot;System.Windows.Duration&quot;></xref>不相等。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果只有一個的<code> t1 </code>或<code> t2 </code>代表值，或如果兩者都代表不相等，否則，值<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)
  id: op_LessThan(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_LessThan(Duration,Duration)
  nameWithType: Duration.op_LessThan(Duration,Duration)
  fullName: System.Windows.Duration.op_LessThan(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "如果決定的一個執行個體的值<xref href=&quot;System.Windows.Duration&quot;></xref>小於另一個執行個體的值。"
  remarks: "<xref:System.Windows.Duration.Forever%2A>會被視為大於任何有限值。</xref:System.Windows.Duration.Forever%2A> 與任何比較<xref:System.Windows.Duration.Automatic%2A>值傳回`false`。</xref:System.Windows.Duration.Automatic%2A>"
  syntax:
    content: public static bool op_LessThan (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>t1</code> and <code>t2</code> have values and <code>t1</code> is less than <code>t2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Duration.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  id: op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_LessThanOrEqual(Duration,Duration)
  nameWithType: Duration.op_LessThanOrEqual(Duration,Duration)
  fullName: System.Windows.Duration.op_LessThanOrEqual(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "如果決定的一個執行個體的值<xref href=&quot;System.Windows.Duration&quot;></xref>小於或等於另一個執行個體的值。"
  remarks: "<xref:System.Windows.Duration.Forever%2A>會被視為大於任何有限值。</xref:System.Windows.Duration.Forever%2A> 與任何比較<xref:System.Windows.Duration.Automatic%2A>值傳回`false`。</xref:System.Windows.Duration.Automatic%2A>"
  syntax:
    content: public static bool op_LessThanOrEqual (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    - id: t2
      type: System.Windows.Duration
      description: "第二個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>比較。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>t1</code> and <code>t2</code> have values and <code>t1</code> is less than or equal to <code>t2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Duration.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  id: op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_Subtraction(Duration,Duration)
  nameWithType: Duration.op_Subtraction(Duration,Duration)
  fullName: System.Windows.Duration.op_Subtraction(Duration,Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "一個執行個體的值減去<xref href=&quot;System.Windows.Duration&quot;></xref>從另一個。"
  remarks: "下列所有的計算傳回<xref:System.Windows.Duration.Automatic%2A>。</xref:System.Windows.Duration.Automatic%2A>的值      -   <xref:System.Windows.Duration.Forever%2A> minus <xref:System.Windows.Duration.Forever%2A>.</xref:System.Windows.Duration.Forever%2A></xref:System.Windows.Duration.Forever%2A>      -   <xref:System.Windows.Duration.TimeSpan%2A> minus <xref:System.Windows.Duration.Forever%2A>.</xref:System.Windows.Duration.Forever%2A></xref:System.Windows.Duration.TimeSpan%2A>      -   <xref:System.Windows.Duration.TimeSpan%2A> minus <xref:System.Windows.Duration.Automatic%2A>.</xref:System.Windows.Duration.Automatic%2A></xref:System.Windows.Duration.TimeSpan%2A>      -   <xref:System.Windows.Duration.Forever%2A> minus <xref:System.Windows.Duration.Automatic%2A>.</xref:System.Windows.Duration.Automatic%2A></xref:System.Windows.Duration.Forever%2A>      -   <xref:System.Windows.Duration.Automatic%2A> minus <xref:System.Windows.Duration.Automatic%2A>.</xref:System.Windows.Duration.Automatic%2A></xref:System.Windows.Duration.Automatic%2A>      -   <xref:System.Windows.Duration.Automatic%2A> minus <xref:System.Windows.Duration.Forever%2A>.</xref:System.Windows.Duration.Forever%2A></xref:System.Windows.Duration.Automatic%2A>      -   <xref:System.Windows.Duration.Automatic%2A> minus <xref:System.Windows.Duration.TimeSpan%2A>.</xref:System.Windows.Duration.TimeSpan%2A></xref:System.Windows.Duration.Automatic%2A>"
  syntax:
    content: public static System.Windows.Duration op_Subtraction (System.Windows.Duration t1, System.Windows.Duration t2);
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: "第一個執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
    - id: t2
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>来減去。"
    return:
      type: System.Windows.Duration
      description: "如果兩個執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>有執行個體的值， <xref href=&quot;System.Windows.Duration&quot;> </xref>表示值的<code> t1 </code>減去<code> t2 </code>。 如果<code> t1 </code>的值為<> *> 和<code> t2 </code>的值為<> *>，這個方法會傳回<xref:System.Windows.Duration.Forever*>.</xref:System.Windows.Duration.Forever*> 否則這個方法會傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Duration.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  id: op_UnaryPlus(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: op_UnaryPlus(Duration)
  nameWithType: Duration.op_UnaryPlus(Duration)
  fullName: System.Windows.Duration.op_UnaryPlus(Duration)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "傳回指定的執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  syntax:
    content: public static System.Windows.Duration op_UnaryPlus (System.Windows.Duration duration);
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>取得。"
    return:
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  overload: System.Windows.Duration.op_UnaryPlus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Plus(System.Windows.Duration)
  id: Plus(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Plus(Duration)
  nameWithType: Duration.Plus(Duration)
  fullName: System.Windows.Duration.Plus(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "傳回指定的執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  syntax:
    content: public static System.Windows.Duration Plus (System.Windows.Duration duration);
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>取得。"
    return:
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;> </xref>。"
  overload: System.Windows.Duration.Plus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.Subtract(System.Windows.Duration)
  id: Subtract(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  name: Subtract(Duration)
  nameWithType: Duration.Subtract(Duration)
  fullName: System.Windows.Duration.Subtract(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "將指定的執行個體的值減去<xref href=&quot;System.Windows.Duration&quot;></xref>從這個執行個體。"
  syntax:
    content: public System.Windows.Duration Subtract (System.Windows.Duration duration);
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: "執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>来減去目前的執行個體。"
    return:
      type: System.Windows.Duration
      description: "新執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>其值是這個執行個體的值減去結果<code> duration </code>。"
  overload: System.Windows.Duration.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Duration.TimeSpan
  id: TimeSpan
  parent: System.Windows.Duration
  langs:
  - csharp
  name: TimeSpan
  nameWithType: Duration.TimeSpan
  fullName: System.Windows.Duration.TimeSpan
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得<xref:System.TimeSpan>值<xref href=&quot;System.Windows.Duration&quot;></xref>代表。</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan TimeSpan { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>值<xref href=&quot;System.Windows.Duration&quot;></xref>代表。</xref:System.TimeSpan>"
  overload: System.Windows.Duration.TimeSpan*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Occurs if <xref href=&quot;System.Windows.Duration&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Duration.ToString
  id: ToString
  parent: System.Windows.Duration
  langs:
  - csharp
  name: ToString()
  nameWithType: Duration.ToString()
  fullName: System.Windows.Duration.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "將轉換的執行個體<xref href=&quot;System.Windows.Duration&quot;></xref>至<xref:System.String>表示法。</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>的這個執行個體表示<xref href=&quot;System.Windows.Duration&quot;> </xref>。</xref:System.String>"
  overload: System.Windows.Duration.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Duration.#ctor(System.TimeSpan)
  parent: System.Windows.Duration
  isExternal: false
  name: Duration(TimeSpan)
  nameWithType: Duration.Duration(TimeSpan)
  fullName: System.Windows.Duration.Duration(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Duration.Add(System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Add(Duration)
  nameWithType: Duration.Add(Duration)
  fullName: System.Windows.Duration.Add(Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Duration.Automatic
  parent: System.Windows.Duration
  isExternal: false
  name: Automatic
  nameWithType: Duration.Automatic
  fullName: System.Windows.Duration.Automatic
- uid: System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Compare(Duration,Duration)
  nameWithType: Duration.Compare(Duration,Duration)
  fullName: System.Windows.Duration.Compare(Duration,Duration)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Duration.Equals(System.Object)
  parent: System.Windows.Duration
  isExternal: false
  name: Equals(Object)
  nameWithType: Duration.Equals(Object)
  fullName: System.Windows.Duration.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Duration.Equals(System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Equals(Duration)
  nameWithType: Duration.Equals(Duration)
  fullName: System.Windows.Duration.Equals(Duration)
- uid: System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Equals(Duration,Duration)
  nameWithType: Duration.Equals(Duration,Duration)
  fullName: System.Windows.Duration.Equals(Duration,Duration)
- uid: System.Windows.Duration.Forever
  parent: System.Windows.Duration
  isExternal: false
  name: Forever
  nameWithType: Duration.Forever
  fullName: System.Windows.Duration.Forever
- uid: System.Windows.Duration.GetHashCode
  parent: System.Windows.Duration
  isExternal: false
  name: GetHashCode()
  nameWithType: Duration.GetHashCode()
  fullName: System.Windows.Duration.GetHashCode()
- uid: System.Windows.Duration.HasTimeSpan
  parent: System.Windows.Duration
  isExternal: false
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
  fullName: System.Windows.Duration.HasTimeSpan
- uid: System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_Addition(Duration,Duration)
  nameWithType: Duration.op_Addition(Duration,Duration)
  fullName: System.Windows.Duration.op_Addition(Duration,Duration)
- uid: System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_Equality(Duration,Duration)
  nameWithType: Duration.op_Equality(Duration,Duration)
  fullName: System.Windows.Duration.op_Equality(Duration,Duration)
- uid: System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_GreaterThan(Duration,Duration)
  nameWithType: Duration.op_GreaterThan(Duration,Duration)
  fullName: System.Windows.Duration.op_GreaterThan(Duration,Duration)
- uid: System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_GreaterThanOrEqual(Duration,Duration)
  nameWithType: Duration.op_GreaterThanOrEqual(Duration,Duration)
  fullName: System.Windows.Duration.op_GreaterThanOrEqual(Duration,Duration)
- uid: System.Windows.Duration.op_Implicit(System.TimeSpan)
  parent: System.Windows.Duration
  isExternal: false
  name: op_Implicit(TimeSpan)
  nameWithType: Duration.op_Implicit(TimeSpan)
  fullName: System.Windows.Duration.op_Implicit(TimeSpan)
- uid: System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_Inequality(Duration,Duration)
  nameWithType: Duration.op_Inequality(Duration,Duration)
  fullName: System.Windows.Duration.op_Inequality(Duration,Duration)
- uid: System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_LessThan(Duration,Duration)
  nameWithType: Duration.op_LessThan(Duration,Duration)
  fullName: System.Windows.Duration.op_LessThan(Duration,Duration)
- uid: System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_LessThanOrEqual(Duration,Duration)
  nameWithType: Duration.op_LessThanOrEqual(Duration,Duration)
  fullName: System.Windows.Duration.op_LessThanOrEqual(Duration,Duration)
- uid: System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_Subtraction(Duration,Duration)
  nameWithType: Duration.op_Subtraction(Duration,Duration)
  fullName: System.Windows.Duration.op_Subtraction(Duration,Duration)
- uid: System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: op_UnaryPlus(Duration)
  nameWithType: Duration.op_UnaryPlus(Duration)
  fullName: System.Windows.Duration.op_UnaryPlus(Duration)
- uid: System.Windows.Duration.Plus(System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Plus(Duration)
  nameWithType: Duration.Plus(Duration)
  fullName: System.Windows.Duration.Plus(Duration)
- uid: System.Windows.Duration.Subtract(System.Windows.Duration)
  parent: System.Windows.Duration
  isExternal: false
  name: Subtract(Duration)
  nameWithType: Duration.Subtract(Duration)
  fullName: System.Windows.Duration.Subtract(Duration)
- uid: System.Windows.Duration.TimeSpan
  parent: System.Windows.Duration
  isExternal: false
  name: TimeSpan
  nameWithType: Duration.TimeSpan
  fullName: System.Windows.Duration.TimeSpan
- uid: System.Windows.Duration.ToString
  parent: System.Windows.Duration
  isExternal: false
  name: ToString()
  nameWithType: Duration.ToString()
  fullName: System.Windows.Duration.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Duration.#ctor*
  parent: System.Windows.Duration
  isExternal: false
  name: Duration
  nameWithType: Duration.Duration
- uid: System.Windows.Duration.Add*
  parent: System.Windows.Duration
  isExternal: false
  name: Add
  nameWithType: Duration.Add
- uid: System.Windows.Duration.Automatic*
  parent: System.Windows.Duration
  isExternal: false
  name: Automatic
  nameWithType: Duration.Automatic
- uid: System.Windows.Duration.Compare*
  parent: System.Windows.Duration
  isExternal: false
  name: Compare
  nameWithType: Duration.Compare
- uid: System.Windows.Duration.Equals*
  parent: System.Windows.Duration
  isExternal: false
  name: Equals
  nameWithType: Duration.Equals
- uid: System.Windows.Duration.Forever*
  parent: System.Windows.Duration
  isExternal: false
  name: Forever
  nameWithType: Duration.Forever
- uid: System.Windows.Duration.GetHashCode*
  parent: System.Windows.Duration
  isExternal: false
  name: GetHashCode
  nameWithType: Duration.GetHashCode
- uid: System.Windows.Duration.HasTimeSpan*
  parent: System.Windows.Duration
  isExternal: false
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
- uid: System.Windows.Duration.op_Addition*
  parent: System.Windows.Duration
  isExternal: false
  name: op_Addition
  nameWithType: Duration.op_Addition
- uid: System.Windows.Duration.op_Equality*
  parent: System.Windows.Duration
  isExternal: false
  name: op_Equality
  nameWithType: Duration.op_Equality
- uid: System.Windows.Duration.op_GreaterThan*
  parent: System.Windows.Duration
  isExternal: false
  name: op_GreaterThan
  nameWithType: Duration.op_GreaterThan
- uid: System.Windows.Duration.op_GreaterThanOrEqual*
  parent: System.Windows.Duration
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: Duration.op_GreaterThanOrEqual
- uid: System.Windows.Duration.op_Implicit*
  parent: System.Windows.Duration
  isExternal: false
  name: op_Implicit
  nameWithType: Duration.op_Implicit
- uid: System.Windows.Duration.op_Inequality*
  parent: System.Windows.Duration
  isExternal: false
  name: op_Inequality
  nameWithType: Duration.op_Inequality
- uid: System.Windows.Duration.op_LessThan*
  parent: System.Windows.Duration
  isExternal: false
  name: op_LessThan
  nameWithType: Duration.op_LessThan
- uid: System.Windows.Duration.op_LessThanOrEqual*
  parent: System.Windows.Duration
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: Duration.op_LessThanOrEqual
- uid: System.Windows.Duration.op_Subtraction*
  parent: System.Windows.Duration
  isExternal: false
  name: op_Subtraction
  nameWithType: Duration.op_Subtraction
- uid: System.Windows.Duration.op_UnaryPlus*
  parent: System.Windows.Duration
  isExternal: false
  name: op_UnaryPlus
  nameWithType: Duration.op_UnaryPlus
- uid: System.Windows.Duration.Plus*
  parent: System.Windows.Duration
  isExternal: false
  name: Plus
  nameWithType: Duration.Plus
- uid: System.Windows.Duration.Subtract*
  parent: System.Windows.Duration
  isExternal: false
  name: Subtract
  nameWithType: Duration.Subtract
- uid: System.Windows.Duration.TimeSpan*
  parent: System.Windows.Duration
  isExternal: false
  name: TimeSpan
  nameWithType: Duration.TimeSpan
- uid: System.Windows.Duration.ToString*
  parent: System.Windows.Duration
  isExternal: false
  name: ToString
  nameWithType: Duration.ToString
