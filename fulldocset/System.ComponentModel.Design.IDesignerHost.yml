### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerHost
  id: IDesignerHost
  children:
  - System.ComponentModel.Design.IDesignerHost.Activate
  - System.ComponentModel.Design.IDesignerHost.Activated
  - System.ComponentModel.Design.IDesignerHost.Container
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  - System.ComponentModel.Design.IDesignerHost.Deactivated
  - System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  - System.ComponentModel.Design.IDesignerHost.InTransaction
  - System.ComponentModel.Design.IDesignerHost.LoadComplete
  - System.ComponentModel.Design.IDesignerHost.Loading
  - System.ComponentModel.Design.IDesignerHost.RootComponent
  - System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  - System.ComponentModel.Design.IDesignerHost.TransactionClosed
  - System.ComponentModel.Design.IDesignerHost.TransactionClosing
  - System.ComponentModel.Design.IDesignerHost.TransactionDescription
  - System.ComponentModel.Design.IDesignerHost.TransactionOpened
  - System.ComponentModel.Design.IDesignerHost.TransactionOpening
  langs:
  - csharp
  name: IDesignerHost
  nameWithType: IDesignerHost
  fullName: System.ComponentModel.Design.IDesignerHost
  type: Interface
  summary: "提供管理設計工具的交易和元件的介面。"
  remarks: "指定為可搭配.NET Framework 的表單設計工具架構提供支援給設計工具異動元件管理的介面。       .NET Framework 不提供此介面的實作。 介面是由支援設計工具的開發工具實作。"
  example:
  - "The following example code demonstrates how to obtain the IDesignerHost service interface from a designer or sited component.  \n  \n [!code-cs[DesignerHostAcquisition#1](~/add/codesnippet/csharp/t-system.componentmodel._54_1.cs)]\n [!code-cpp[DesignerHostAcquisition#1](~/add/codesnippet/cpp/t-system.componentmodel._54_1.cpp)]\n [!code-vb[DesignerHostAcquisition#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_1.vb)]  \n  \n The following example code demonstrates using the IDesignerHost interface to list project components.  \n  \n [!code-cs[IDesignerHostExample#1](~/add/codesnippet/csharp/t-system.componentmodel._54_2.cs)]\n [!code-cpp[IDesignerHostExample#1](~/add/codesnippet/cpp/t-system.componentmodel._54_2.cpp)]\n [!code-vb[IDesignerHostExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  id: Activate
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "啟動此主機裝載的設計工具。"
  remarks: "設計工具應該啟動，才能顯示其使用者介面。"
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.ComponentModel.Design.IDesignerHost.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  id: Activated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "當啟動這個設計工具時發生。"
  remarks: "設計工具就會顯示之前啟動。"
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Container
  id: Container
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得此設計工具主應用程式的容器。"
  remarks: "這<xref:System.ComponentModel.IContainer>包含目前的設計模式文件的元件。</xref:System.ComponentModel.IContainer> 您可以列出或透過<xref:System.ComponentModel.IContainer.Components%2A>此<xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>的成員</xref:System.ComponentModel.IContainer.Components%2A>存取目前的設計模式文件的元件"
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>為此主控件。"
  overload: System.ComponentModel.Design.IDesignerHost.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  id: CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "建立指定類型的元件，並將它加入至設計文件。"
  remarks: "如果型別無法解析成該物件會實作<xref:System.ComponentModel.IComponent>，擲回例外狀況。</xref:System.ComponentModel.IComponent>       這個方法不會指定元件的名稱。 方法會建立元件，並將它加入至設計工具的容器。"
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass);
    parameters:
    - id: componentClass
      type: System.Type
      description: "若要建立元件的類型。"
    return:
      type: System.ComponentModel.IComponent
      description: "新建立的元件。"
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  id: CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "建立元件的名稱，與指定的型別，並將它加入至設計文件。"
  remarks: "如果型別無法解析成該物件會實作<xref:System.ComponentModel.IComponent>，擲回例外狀況。</xref:System.ComponentModel.IComponent>       這個方法會建立元件，並將它加入至設計工具的容器。"
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);
    parameters:
    - id: componentClass
      type: System.Type
      description: "若要建立元件的類型。"
    - id: name
      type: System.String
      description: "元件名稱。"
    return:
      type: System.ComponentModel.IComponent
      description: "新建立的元件。"
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  id: CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "建立<xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>其可封裝以改善效能並啟用 復原和取消復原的支援功能的事件順序。"
  remarks: "這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>，可以用來封裝一系列的作業。</xref:System.ComponentModel.Design.DesignerTransaction> 設計工具交易可以改善效能、 減少重繪閃動因多個更新作業，在程序並啟用要復原的大部分作業。       長時間作業牽涉到多個元件可以引發許多事件。 這些事件可能會造成副作用，例如閃爍或效能降低。 當多個元件上一次作業或單一元件上設定多個屬性時，您可以執行這些變更在交易內改善效能。 某些作業處理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，並執行工作時，才在交易進行中。</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 如需有關如何使用交易的詳細資訊，請參閱<xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>文件"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "新執行個體<xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>。 當您完成您的交易中的步驟時，您應該呼叫<xref:System.ComponentModel.Design.DesignerTransaction.Commit*>此物件上。</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  id: CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "建立<xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>其可封裝事件順序來改善效能並啟用 復原和取消復原的支援功能，使用指定的異動描述。"
  remarks: "這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>，可以用來封裝一系列的作業。</xref:System.ComponentModel.Design.DesignerTransaction> 設計工具交易可以改善效能、 減少重繪閃動因多個更新作業，在程序並啟用要復原的大部分作業。       長時間作業牽涉到多個元件可以引發許多事件。 這些事件可能會造成副作用，例如閃爍或效能降低。 當多個元件上一次作業或單一元件上設定多個屬性時，您可以執行這些變更在交易內改善效能。 某些作業處理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，並執行工作時，才在交易進行中。</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 如需有關如何使用交易的詳細資訊，請參閱<xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>文件"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "標題或新建立的異動描述。"
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "A new <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>. 當您已完成的步驟，您的交易中時，您應該呼叫<xref:System.ComponentModel.Design.DesignerTransaction.Commit*>此物件上。</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  id: Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "停用這個設計工具時，就會發生。"
  remarks: "它不會再顯示之前，會停用設計工具。"
  syntax:
    content: public event EventHandler Deactivated;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  id: DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "終結指定的元件，並從設計工具的容器中移除它。"
  syntax:
    content: public void DestroyComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "要終結的元件。"
  overload: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  id: GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得包含指定的元件的設計工具執行個體。"
  syntax:
    content: public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>擷取的設計工具。"
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "<xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref>，或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果沒有指定元件的設計工具。"
  overload: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得指定的完整型別名稱的執行個體。"
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "要載入的型別名稱。"
    return:
      type: System.Type
      description: "指定的型別名稱的型別物件或<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>如果找不到型別。"
  overload: System.ComponentModel.Design.IDesignerHost.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  id: InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得值，指出設計工具主應用程式目前是否在交易中。"
  syntax:
    content: public bool InTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果交易正在進行中，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.IDesignerHost.InTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  id: LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "這個設計工具完成載入其文件時，就會發生。"
  remarks: "設計工具完成載入其文件之後，就會發生此事件。"
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  id: Loading
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得值，指出設計工具主應用程式目前是否正在載入文件。"
  syntax:
    content: public bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果設計工具主應用程式目前正在載入文件;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.Design.IDesignerHost.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  id: RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得做為根元件，用於在目前的設計的基底類別的執行個體。"
  remarks: "這個基底類別通常是<xref:System.Windows.Forms.Form>或<xref:System.Windows.Forms.UserControl>執行個體; 它會定義為其使用者的衍生的類別會擴充的類別。</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.IComponent RootComponent { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "根元件類別的執行個體。"
  overload: System.ComponentModel.Design.IDesignerHost.RootComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  id: RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得正在設計的類別的完整限定的名稱。"
  syntax:
    content: public string RootComponentClassName { get; }
    return:
      type: System.String
      description: "元件的基底類別的完整的名稱。"
  overload: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  id: TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新增 TransactionClosed 事件的事件處理常式。"
  remarks: "關閉交易之後，就會發生此事件。       有時候，交易可以變更多個值。 交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。 這些方法會延遲處理，直到異動關閉之後。"
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  id: TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新增 TransactionClosing 事件的事件處理常式。"
  remarks: "交易完成之前，就會發生此事件。       有時候，交易可以變更多個值。 交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。 這些方法會延遲處理，直到異動關閉之後。"
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  id: TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "取得目前的交易描述。"
  remarks: "描述是上次<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>使用指定的描述"
  syntax:
    content: public string TransactionDescription { get; }
    return:
      type: System.String
      description: "目前交易的描述。"
  overload: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  id: TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新增 TransactionOpened 事件的事件處理常式。"
  remarks: "當交易開始時，就會發生此事件。       有時候，交易可以變更多個值。 交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。 這些方法會延遲處理，直到異動關閉之後。"
  syntax:
    content: public event EventHandler TransactionOpened;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  id: TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新增 TransactionOpening 事件的事件處理常式。"
  remarks: "若要開始交易時，就會發生此事件。       這個方法可讓設計工具主應用程式用戶端之前，其他處理常式會收到通知，交易已開始執行作業。 指定的處理常式會呼叫只有當第一次呼叫<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>進行。</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 後續的呼叫不會產生此事件，直到所有的交易物件已經處置。"
  syntax:
    content: public event EventHandler TransactionOpening;
    return:
      type: System.EventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.IDesignerHost.Container
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
- uid: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransactionCloseEventHandler
  nameWithType: DesignerTransactionCloseEventHandler
  fullName: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
- uid: System.ComponentModel.Design.IDesignerHost.Activate*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate
  nameWithType: IDesignerHost.Activate
- uid: System.ComponentModel.Design.IDesignerHost.Container*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent
  nameWithType: IDesignerHost.CreateComponent
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction
  nameWithType: IDesignerHost.CreateTransaction
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent
  nameWithType: IDesignerHost.DestroyComponent
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner
  nameWithType: IDesignerHost.GetDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType
  nameWithType: IDesignerHost.GetType
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
- uid: System.ComponentModel.Design.IDesignerHost.Loading*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
