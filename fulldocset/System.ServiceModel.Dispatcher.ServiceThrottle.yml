### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  id: ServiceThrottle
  children:
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
  type: Class
  summary: "控制服務以最佳化可用性和效能的輸送量。"
  remarks: "您可以使用 ServiceThrottle 來調整服務的效能特性。 最簡單的方式是使用服務設定 ServiceThrottle <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>，尤其是從應用程式組態檔。</xref:System.ServiceModel.Description.ServiceThrottlingBehavior>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A>屬性會指定中的所有發送器物件上主動處理的訊息數目上限<xref:System.ServiceModel.ServiceHost>物件。</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A>屬性指定的最大數目<xref:System.ServiceModel.InstanceContext>服務中的物件。</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A>       <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A>屬性會指定工作階段數目上限<xref:System.ServiceModel.ServiceHost>可以接受。</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A>      > [!NOTE] > 追蹤時，要寫入的第一個呼叫， <xref:System.ServiceModel.InstanceContext>，或工作階段佇列排入 waitlist。</xref:System.ServiceModel.InstanceContext> 第一個追蹤會寫入成為警告。"
  example:
  - "The following code example shows the typical use of the ServiceThrottle by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class ServiceThrottle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  id: MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得或設定中的所有發送器物件上主動處理的訊息數目上限<xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref>。"
  remarks: "MaxConcurrentCalls 屬性指定的所有發送器物件上主動處理的訊息數目上限<xref:System.ServiceModel.ServiceHost>物件。</xref:System.ServiceModel.ServiceHost> 每個通道可以有一個暫止的訊息，不會針對直到 MaxConcurrentCalls 的值計算[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]開始處理它。      > [!NOTE] > 每當超過這個屬性的值時，就會寫入追蹤。"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentCalls { get; set; }
    return:
      type: System.Int32
      description: "在服務中的作用中訊息數目上限。 預設值為 16 * 處理器的電腦中的數量。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  id: MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得或設定一次可以執行的服務物件的數目上限。"
  remarks: "MaxConcurrentInstances 屬性指定的最大數目<xref:System.ServiceModel.InstanceContext>服務中的物件。</xref:System.ServiceModel.InstanceContext> 請務必記住 MaxConcurrentInstances 屬性之間的關聯性和<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>屬性。</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>是<xref:System.ServiceModel.InstanceContextMode>產生的值是工作階段總數。</xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>是<xref:System.ServiceModel.InstanceContextMode>，產生的值是同時呼叫數目。</xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 如果訊息抵達時的最大數目<xref:System.ServiceModel.InstanceContext>物件已經存在，會保留該訊息，直到<xref:System.ServiceModel.InstanceContext>物件關閉。</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>      > [!NOTE] > 每當超過這個屬性的值時，就會寫入追蹤。 第一個追蹤會寫入成為警告。"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentInstances { get; set; }
    return:
      type: System.Int32
      description: "最大數目<xref:System.ServiceModel.InstanceContext>一次的服務中的物件。</xref:System.ServiceModel.InstanceContext> 預設值是同時呼叫上限加上最大並行工作階段。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  id: MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得或設定值，這個值會指定工作階段數目上限<xref href=&quot;System.ServiceModel.ServiceHost&quot;></xref>物件可以接受一次。"
  remarks: "MaxConcurrentSessions 屬性指定的通道數目上限<xref:System.ServiceModel.ServiceHost>可以接受。</xref:System.ServiceModel.ServiceHost> 每個接聽程式物件只能有一個暫止通道，不會針對直到 MaxConcurrentSessions 值計算[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]接受通道並開始處理訊息。 這個屬性是在最有用的工作階段所運用的案例。      > [!NOTE] > 每當超過這個屬性的值時，就會寫入追蹤。 第一個追蹤會寫入成為警告。       如需工作階段的詳細資訊，請參閱[Sessions<](~/add/includes/ajax-current-ext-md.md)。       一般而言，這個屬性會設定使用<xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName>屬性。</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentSessions { get; set; }
    return:
      type: System.Int32
      description: "服務主機接受工作階段數目上限。 預設值為 100 * 處理器的電腦中的數量。"
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
