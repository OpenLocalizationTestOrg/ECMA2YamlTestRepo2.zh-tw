### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.RelatedEnd
  id: RelatedEnd
  children:
  - System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  - System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.RelatedEnd.Load
  - System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  langs:
  - csharp
  name: RelatedEnd
  nameWithType: RelatedEnd
  fullName: System.Data.Objects.DataClasses.RelatedEnd
  type: Class
  summary: "代表基底類別會實作相關端的通用功能。"
  remarks: "RelatedEnd 是基底類別的<xref:System.Data.Objects.DataClasses.EntityCollection%601>類別和<xref:System.Data.Objects.DataClasses.EntityReference%601>類別。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       RelatedEnd 類別實作之間共用的功能<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>類別。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       這個類別不打算直接用於程式碼。"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd
  inheritance:
  - System.Object
  implements:
  - System.Data.Objects.DataClasses.IRelatedEnd
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  id: AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "發生於至相關端進行變更。"
  remarks: "AssociationChanged 引發此事件會透過下列方法:- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName>-<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName>事件可能會隱藏在大量作業時，例如`Load`， <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A>，和<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>。</xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "傳回<xref:System.Collections.IEnumerator>相關物件的集合中逐一。</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>相關物件的集合中逐一。</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得值，指出是否已載入所有相關的物件。"
  remarks: "呼叫<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法將 IsLoaded 旗標設定為`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       呼叫<xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>設 IsLoaded `false`。</xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>       <xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>可能也會載入如果相關的端包含在查詢路徑中。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> 如需有關範圍的詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       `Load`方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>IsLoaded 是否在資料來源載入相關的物件`true`。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       物件卸離時，IsLoaded 旗標已從`false`至`true`。       若要保證在進行處理之前是完全載入相關的端中，您應該檢查是否 IsLoaded `false`。 如果 IsLoaded `false`，您應該呼叫<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>"
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果相關的端包含從資料庫的所有相關的物件否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "當在衍生類別中覆寫時，相關的物件或載入物件使用預設合併選項相關端。"
  remarks: "預設合併選項為<xref:System.Data.Objects.MergeOption>追蹤的物件或<xref:System.Data.Objects.MergeOption>物件不會追蹤在<xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>時</xref:System.Data.Objects.MergeOption></xref:System.Data.Objects.MergeOption> 若要指定合併選項以外<xref:System.Data.Objects.MergeOption>，呼叫`Load`方法<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>採用特定<xref:System.Data.Objects.MergeOption>參數。</xref:System.Data.Objects.MergeOption> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.MergeOption>       呼叫負載方法集合<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>旗標設為`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       Load 方法將相關的物件載入資料來源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>是`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "當來源物件已擷取透過<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>查詢和<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>不<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>或已經載入相關的物件。       -或-當來源物件未附加至<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。       -或-當正在追蹤的來源物件，但處於<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>狀態或<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>用負載是<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。"
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "在衍生類別中覆寫，請從相關端，使用指定的合併選項載入物件。"
  remarks: "同時<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>覆寫此方法以載入相關的物件。</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> `Load`呼叫可從相關端的導覽屬性所公開，明確載入相關的物件。 如需詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)。       呼叫<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>方法會設定<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>旗標設為`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       Load 方法將相關的物件載入資料來源是否<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>是`true`。</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       預設合併選項為<xref:System.Data.Objects.MergeOption>追蹤的物件或<xref:System.Data.Objects.MergeOption>物件不會追蹤在<xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>時</xref:System.Data.Objects.MergeOption></xref:System.Data.Objects.MergeOption>"
  syntax:
    content: public abstract void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>合併至現有的物件時所要使用&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "當來源物件已擷取透過<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>查詢和<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>不<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>或已經載入相關的物件。       -或-當來源物件未附加至<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>。       -或-當正在追蹤的來源物件，但處於<xref href=&quot;System.Data.EntityState&quot;></xref>或<xref href=&quot;System.Data.EntityState&quot;></xref>狀態或<xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>用於<xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>是<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>。</xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>"
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "在內部用來還原序列化實體物件連同<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;></xref>執行個體。"
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "序列化資料流。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得這個相關的端所參與之關聯性的名稱。"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "此關聯性的名稱<xref href=&quot;System.Data.Objects.DataClasses.RelatedEnd&quot;></xref>參與。 此關聯性名稱不符合命名空間。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得相關端的中繼資料的參考。"
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;> </xref>物件，其中包含的關聯性端點中繼資料。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得位於關聯性來源端的角色名稱。"
  remarks: "角色名稱由指定`Role`屬性`End`概念模型中定義此關聯性的關聯中的項目。 如需詳細資訊，請參閱[關聯元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>之角色名稱。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "將物件加入至相關端。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.Objects.DataClasses.RelatedEnd>執行個體轉換成<xref:System.Data.Objects.DataClasses.IRelatedEnd>介面。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Add 方法只被為了與舊版.NET Framework 的相容。"
  syntax:
    content: void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要加入至集合的物件。 這個物件必須實作<xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;></xref>介面。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "將物件加入至相關端。"
  remarks: "如果來源實體物件附加至快取中，所有已連線的端點會加入至物件快取，然後及其對應的關聯性也會加入至<xref:System.Data.Objects.ObjectStateManager>。</xref:System.Data.Objects.ObjectStateManager> <xref:System.Data.Objects.DataClasses.RelatedEnd>也固定的關聯性。</xref:System.Data.Objects.DataClasses.RelatedEnd>"
  syntax:
    content: void IRelatedEnd.Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "若要加入至相關端的實體執行個體。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "附加物件位於相關端。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.Objects.DataClasses.RelatedEnd>執行個體轉換成<xref:System.Data.Objects.DataClasses.IRelatedEnd>介面。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Attach 方法只被為了與舊版.NET Framework 的相容。"
  syntax:
    content: void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "要附加的物件。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "附加至相關端的物件。"
  remarks: "如果相關的端中已經有連接到它的某些項目，要與新的實體合併現有的實體。 新的實體不會被視為是一組完整的相關的實體物件。       來源實體物件和所有傳入的實體物件必須在<xref:System.Data.EntityState>或<xref:System.Data.EntityState>狀態。</xref:System.Data.EntityState> </xref:System.Data.EntityState> 只有在狀態管理員已經在追蹤關聯性執行個體時，才允許刪除的項目。"
  syntax:
    content: void IRelatedEnd.Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "若要附加至相關端的實體執行個體。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  id: System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "傳回<xref:System.Collections.IEnumerable>它代表屬於相關端的物件。</xref:System.Collections.IEnumerable>"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.Objects.DataClasses.RelatedEnd>執行個體轉換成<xref:System.Data.Objects.DataClasses.IRelatedEnd>介面。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       <xref:System.Data.Objects.DataClasses.EntityCollection%601>並<xref:System.Data.Objects.DataClasses.EntityReference%601>同時覆寫以傳回<xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> IRelatedEnd.CreateSourceQuery</xref:System.Data.Objects.DataClasses.EntityReference%601></xref:System.Data.Objects.DataClasses.EntityCollection%601> 此查詢中，當它執行時，會傳回相同的一組物件屬於相關端。"
  syntax:
    content: System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>它代表屬於相關端的物件。</xref:System.Collections.IEnumerable>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "從位於相關端的集合中移除物件。"
  remarks: "這個成員是明確介面成員實作。 它可用時，才<xref:System.Data.Objects.DataClasses.RelatedEnd>執行個體轉換成<xref:System.Data.Objects.DataClasses.IRelatedEnd>介面。</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Remove 方法只被為了與舊版.NET Framework 的相容。"
  syntax:
    content: bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "若要從集合中移除實體執行個體。"
    return:
      type: System.Boolean
      description: "值，指出是否已移除的物件。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "如果物件屬於相關端的可從相關端中移除物件。"
  remarks: "如果來源實體物件附加至快取中，關聯性標示為刪除。"
  syntax:
    content: bool IRelatedEnd.Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "若要從相關端中移除實體執行個體。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果成功移除實體。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "取得位於關聯性目標端的角色名稱。"
  remarks: "角色名稱由指定`Role`屬性`End`概念模型中定義此關聯性的關聯中的項目。 如需詳細資訊，請參閱[關聯元素 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)。"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>之角色名稱。</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: RelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load
  nameWithType: RelatedEnd.Load
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized
  nameWithType: RelatedEnd.OnDeserialized
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
