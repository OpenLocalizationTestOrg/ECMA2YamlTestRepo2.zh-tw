### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ProvidePropertyAttribute
  id: ProvidePropertyAttribute
  children:
  - System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)
  - System.ComponentModel.ProvidePropertyAttribute.GetHashCode
  - System.ComponentModel.ProvidePropertyAttribute.PropertyName
  - System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName
  - System.ComponentModel.ProvidePropertyAttribute.TypeId
  langs:
  - csharp
  name: ProvidePropertyAttribute
  nameWithType: ProvidePropertyAttribute
  fullName: System.ComponentModel.ProvidePropertyAttribute
  type: Class
  summary: "指定的屬性名稱的實作者<xref href=&quot;System.ComponentModel.IExtenderProvider&quot;></xref>提供其他元件。 這個類別無法被繼承。"
  remarks: "When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide. The marked class must implement <xref:System.ComponentModel.IExtenderProvider>. As a result, the new property can be used by other components in a container.  \n  \n Within the marked class, you must implement `Get` \\<name> and `Set` \\<name> methods. For example, if you mark a class with [ProvideProperty(\"PropertyName\")], you must implement `GetPropertyName` and `SetPropertyName` methods. To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method.  \n  \n For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example marks `MyClass` with a ProvidePropertyAttribute that tells the compiler to create a property called `MyProperty` from the `GetMyProperty` and `SetMyProperty` methods.  \n  \n [!code-cs[Classic ProvidePropertyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._132_1.cs)]\n [!code-cpp[Classic ProvidePropertyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._132_1.cpp)]\n [!code-vb[Classic ProvidePropertyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._132_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)]

      public sealed class ProvidePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: ProvidePropertyAttribute(String,String)
  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String,String)
  fullName: System.ComponentModel.ProvidePropertyAttribute.ProvidePropertyAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.ProvidePropertyAttribute&quot;></xref>類別具有名稱的屬性以及其收件者的類型。"
  syntax:
    content: public ProvidePropertyAttribute (string propertyName, string receiverTypeName);
    parameters:
    - id: propertyName
      type: System.String
      description: "指定型別的物件擴充屬性的名稱。"
    - id: receiverTypeName
      type: System.String
      description: "這個屬性可以擴充資料型別名稱。"
  overload: System.ComponentModel.ProvidePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: ProvidePropertyAttribute(String,Type)
  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String,Type)
  fullName: System.ComponentModel.ProvidePropertyAttribute.ProvidePropertyAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "初始化的新執行個體<xref href=&quot;System.ComponentModel.ProvidePropertyAttribute&quot;></xref>屬性和其<xref:System.Type>。</xref:System.Type>類別名稱"
  syntax:
    content: public ProvidePropertyAttribute (string propertyName, Type receiverType);
    parameters:
    - id: propertyName
      type: System.String
      description: "指定型別的物件擴充屬性的名稱。"
    - id: receiverType
      type: System.Type
      description: "<xref:System.Type>可以接收屬性之物件的資料類型。</xref:System.Type>"
  overload: System.ComponentModel.ProvidePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ProvidePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.ProvidePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回指定之物件的值是否等於目前<xref href=&quot;System.ComponentModel.ProvidePropertyAttribute&quot;> </xref>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "要測試的值相等的物件。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定之物件的值是否等於目前;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.ComponentModel.ProvidePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ProvidePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.ProvidePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "傳回這個執行個體的雜湊碼。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "目前的雜湊碼<xref href=&quot;System.ComponentModel.ProvidePropertyAttribute&quot;> </xref>。"
  overload: System.ComponentModel.ProvidePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName
  id: PropertyName
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: PropertyName
  nameWithType: ProvidePropertyAttribute.PropertyName
  fullName: System.ComponentModel.ProvidePropertyAttribute.PropertyName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得這個類別會提供屬性的名稱。"
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "這個類別會提供屬性的名稱。"
  overload: System.ComponentModel.ProvidePropertyAttribute.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName
  id: ReceiverTypeName
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: ReceiverTypeName
  nameWithType: ProvidePropertyAttribute.ReceiverTypeName
  fullName: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得這個屬性可以擴充的資料型別名稱。"
  syntax:
    content: public string ReceiverTypeName { get; }
    return:
      type: System.String
      description: "這個屬性可以擴充資料型別名稱。"
  overload: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.ProvidePropertyAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: ProvidePropertyAttribute.TypeId
  fullName: System.ComponentModel.ProvidePropertyAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得這個屬性的唯一識別碼。"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>也就是屬性的唯一識別碼。</xref:System.Object>"
  overload: System.ComponentModel.ProvidePropertyAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: ProvidePropertyAttribute(String,String)
  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String,String)
  fullName: System.ComponentModel.ProvidePropertyAttribute.ProvidePropertyAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: ProvidePropertyAttribute(String,Type)
  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String,Type)
  fullName: System.ComponentModel.ProvidePropertyAttribute.ProvidePropertyAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ProvidePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.ProvidePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ProvidePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.ProvidePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: PropertyName
  nameWithType: ProvidePropertyAttribute.PropertyName
  fullName: System.ComponentModel.ProvidePropertyAttribute.PropertyName
- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: ReceiverTypeName
  nameWithType: ProvidePropertyAttribute.ReceiverTypeName
  fullName: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName
- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: TypeId
  nameWithType: ProvidePropertyAttribute.TypeId
  fullName: System.ComponentModel.ProvidePropertyAttribute.TypeId
- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: ProvidePropertyAttribute
  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute
- uid: System.ComponentModel.ProvidePropertyAttribute.Equals*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ProvidePropertyAttribute.Equals
- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ProvidePropertyAttribute.GetHashCode
- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: PropertyName
  nameWithType: ProvidePropertyAttribute.PropertyName
- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: ReceiverTypeName
  nameWithType: ProvidePropertyAttribute.ReceiverTypeName
- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId*
  parent: System.ComponentModel.ProvidePropertyAttribute
  isExternal: false
  name: TypeId
  nameWithType: ProvidePropertyAttribute.TypeId
