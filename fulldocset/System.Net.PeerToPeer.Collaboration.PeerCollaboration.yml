### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  id: PeerCollaboration
  children:
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  langs:
  - csharp
  name: PeerCollaboration
  nameWithType: PeerCollaboration
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  type: Class
  summary: "互動具有對等共同作業基礎結構。 許多的核心共同作業案例的開始與這個類別。"
  remarks: "這個類別是靜態類別 – 它是密封、 抽象，而且沒有公用建構函式。 它用來包含和管理應用程式、 物件和對等體接受邀請給共同作業工作階段的目前狀態資訊。 根據對等電腦、 物件和應用程式，PeerCollaboration 類別會提供三個存取子中，一個用於每個集合，做為介面或點的連線能力的其他任何發生在電腦上。  這個類別無法被繼承。如果這個密封的類別指定的基底類別，會發生編譯時期錯誤。       這個類別中方法和屬性可以用來:-啟動及管理共同作業應用程式-暫存器和刪除應用程式和共同作業 （例如憑證、 圖片、 虛擬人偶，以及文字描述） 的物件-邀請對等共同作業工作階段，包括範圍等項目，而且物件其中會識別它們在網際網路上-允許對等<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>和<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A>共同作業基礎結構中，可以管理的連絡人清單或彼此發行它們的存在-利用<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A>屬性和事件來協調非同步應用程式通訊，尤其是的名稱、 目前狀態、 應用程式或其他物件中的變更。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>       「 連結-本機雲端 」、 「 子網路呼叫的對等 」，和 「 NearMe 範圍 」 都是同義字的詞彙。 「 網際網路領域 」 和 「 無伺服器的目前狀態 」 的意義相同。 網站-本機<xref:System.Net.PeerToPeer.PnrpScope>有沒有對等共同作業的命名空間中。</xref:System.Net.PeerToPeer.PnrpScope>       每個方法或屬性，這個類別中的使用需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 對等共同作業工作階段開始時，會建立此狀態。"
  syntax:
    content: public static class PeerCollaboration
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo
  id: ApplicationLaunchInfo
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: ApplicationLaunchInfo
  nameWithType: PeerCollaboration.ApplicationLaunchInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo&quot;></xref>物件，其中包含因遠端對等共同作業要求而啟動應用程式時所需的資訊。"
  remarks: "這個屬性是供共同作業感知<xref:System.Net.PeerToPeer.Collaboration.PeerApplication>以判斷是否已啟動因為從遠端對等共同作業要求啟動後的執行個體。</xref:System.Net.PeerToPeer.Collaboration.PeerApplication>  呼叫的應用程式應該檢查<xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A>和<xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A>屬性，以取得進一步的邀請要求的相關資訊。</xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A>       存取這個屬性需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo
      description: "如果啟動應用程式的邀請，因為<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo&quot;></xref>包含傳送應用程式邀請，邀請本身之對等的兩個資訊的物件會傳回，否則<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>傳回。  這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager
  id: ContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: ContactManager
  nameWithType: PeerCollaboration.ContactManager
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得包含所有的持續性存放區<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>遠端對等體的物件。"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.ContactManager
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>物件，包含遠端對等體的所有對等個體連絡人物件。 這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  id: DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: DeleteObject(PeerObject)
  nameWithType: PeerCollaboration.DeleteObject(PeerObject)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(PeerObject)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取消登錄<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>呼叫的對等相關聯。"
  remarks: "對等物件會自動取消註冊 （移除） 從對等共同作業基礎結構當物件的參考不再有效。  如果呼叫端不會維護物件的參考，它會取消註冊的對等共同作業基礎結構。  或者，物件可以手動取消註冊使用此方法。       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);
    parameters:
    - id: peerObject
      type: System.Net.PeerToPeer.Collaboration.PeerObject
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>來取消註冊。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> peerObject </code>參數不可為<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法完成 Objectcontext.deleteobject 作業。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications
  id: GetLocalRegisteredApplications
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: GetLocalRegisteredApplications()
  nameWithType: PeerCollaboration.GetLocalRegisteredApplications()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得所有<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>登錄在本機電腦的物件。"
  remarks: "呼叫端，才能登入對等共同作業基礎結構，透過<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>之前使用這個方法的方法。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>       存取這個屬性需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationCollection&quot;> </xref> ，其中包含本機電腦已註冊的所有應用程式。 如果找不到應用程式，傳回的集合大小為零 (0) 時。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "這個方法會嘗試列舉登錄到此對等的應用程式時，傳回無效的值。 請確定所有應用程式都有有效的登錄值。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  id: GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: GetLocalRegisteredApplications(PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.GetLocalRegisteredApplications(PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(PeerApplicationRegistrationType)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得所有集合的<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>物件之指定的本機電腦上已註冊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType&quot;> </xref>。"
  remarks: "呼叫端，才能登入對等共同作業基礎結構透過<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>之前使用這個方法的方法。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>       存取此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);
    parameters:
    - id: type
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType&quot;></xref>傳回指定之應用程式。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationCollection&quot;> </xref> ，其中包含指定的所有應用程式<code> type </code>註冊之本機電腦上。 如果找不到應用程式，傳回的集合大小為零 (0) 時。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> type </code>參數未設定成已知的值在<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType&quot;></xref>列舉型別。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "這個方法會嘗試列舉登錄到此對等的應用程式時，傳回無效的值。 請確定所有應用程式都有有效的登錄值。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects
  id: GetLocalSetObjects
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: GetLocalSetObjects()
  nameWithType: PeerCollaboration.GetLocalSetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得所有<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>與呼叫端的對等的執行個體註冊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>這部電腦上的基礎結構。"
  remarks: "存取這個屬性需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;> </xref>其中包含所有<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>與呼叫端的對等的執行個體註冊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>本機電腦上的基礎結構。       如果註冊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>執行個體不會在本機電腦上探索，會傳回大小為零 (0) 的集合。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "這個方法會嘗試列舉所有可用時，傳回無效的值<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>執行個體。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe
  id: GetPeersNearMe
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: GetPeersNearMe()
  nameWithType: PeerCollaboration.GetPeersNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "傳回所有的集合<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>目前登入的呼叫端的對等的網路子網路上的端點。"
  remarks: "傳回完整填入<xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection>透過此方法可要求未定登入之後根據網路拓撲和延遲的時間量。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection>       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  example:
  - "The following code example illustrates how to retrieve PeersNearMe as a PeerNearMeCollection:  \n  \n [!code-cs[NCLPNRPContacts#2](~/add/codesnippet/csharp/m-system.net.peertopeer._0_1.cs)]"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerNearMeCollection
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMeCollection&quot;> </xref> ，其中包含所有<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>目前登入 &quot;近端分享&quot; 範圍的端點。       如果子網路上探索不到對等，則會傳回大小為零 (0) 的集合。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "對等電腦無法登入 &quot;近端分享&quot; 範圍。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "這個方法會嘗試列舉所有已知近端分享端點時，傳回無效的值。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged
  id: LocalApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalApplicationChanged
  nameWithType: PeerCollaboration.LocalApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "引發的時機<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>中<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationCollection&quot;></xref>本機主機上的本機對等裝置已變更。"
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs> LocalApplicationChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName
  id: LocalEndPointName
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalEndPointName
  nameWithType: PeerCollaboration.LocalEndPointName
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得或設定名稱<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>呼叫的對等相關聯。"
  remarks: "存取這個屬性需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static string LocalEndPointName { get; set; }
    return:
      type: System.String
      description: "<xref:System.String>其中包含呼叫端的對等端點相關聯的名稱 (依現狀<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name*>屬性)。</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name*></xref:System.String> 這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法設定 LocalEndPointName。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged
  id: LocalNameChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalNameChanged
  nameWithType: PeerCollaboration.LocalNameChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "引發的時機名稱<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>本機對等電腦的本機主機上已經變更。"
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs> LocalNameChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.NameChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged
  id: LocalObjectChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalObjectChanged
  nameWithType: PeerCollaboration.LocalObjectChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>中<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;></xref>本機主機上的本機對等裝置已變更。"
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs> LocalObjectChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged
  id: LocalPresenceChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalPresenceChanged
  nameWithType: PeerCollaboration.LocalPresenceChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;> </xref>本機主機上之本機對等已變更。"
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs> LocalPresenceChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs}
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo
  id: LocalPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: LocalPresenceInfo
  nameWithType: PeerCollaboration.LocalPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得或設定呼叫的對等內是否存在<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>基礎結構。"
  remarks: "呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;> </xref> ，其中包含呼叫的已註冊的對等的目前狀態資訊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>工作階段。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;></xref>無法指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceStatus&quot;></xref>離線-無法將設定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;></xref>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  id: RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "註冊指定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>呼叫的對等共同作業工作階段。"
  remarks: "呼叫端的對等，才能登入對等共同作業基礎結構與<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>方法之前呼叫這個方法。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>       存取此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  example:
  - "The following code example illustrates how to register an application with the Collaboration infrastructure:  \n  \n [!code-cs[NCLPNRPContacts#4](~/add/codesnippet/csharp/25bfa09e-90d6-44cf-bb3a-_1.cs)]"
  syntax:
    content: public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);
    parameters:
    - id: application
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>為其註冊呼叫的對等相關聯的範圍 （全域、 本機和連結-本機） 內。"
    - id: type
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType
      description: "要執行的註冊型別。  只要呼叫端的對等體，或使用電腦的所有對等體，可能會註冊應用程式。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-<> </> *> 上的屬性<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>物件傳遞至<code> application </code>是<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;> </xref> -提供的對等應用程式執行個體具有相同的全域唯一<> *> 做為應用程式已完成登錄。  提供的識別項中可以註冊新的應用程式之前，必須取消註冊現有的註冊。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>application</code> and <code>type</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.  必須指定這兩個參數。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "型別參數未設定成已知的值在<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType&quot;></xref>列舉型別。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法完成 RegisterApplication 作業，直到呼叫者已登入的基礎結構。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  id: SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: SetObject(PeerObject)
  nameWithType: PeerCollaboration.SetObject(PeerObject)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(PeerObject)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "註冊<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>呼叫的對等相關聯。"
  remarks: "這個方法可讓物件參與的範圍的物件已登錄的遠端對等查詢。 如果先前已註冊物件，這個方法會更新註冊。 如果已註冊的物件超出範圍時，可以擷取透過<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A>方法。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A>       資料部分大小<xref:System.Net.PeerToPeer.Collaboration.PeerObject>必須小於或等於 16384 個位元組。</xref:System.Net.PeerToPeer.Collaboration.PeerObject>       存取此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);
    parameters:
    - id: peerObject
      type: System.Net.PeerToPeer.Collaboration.PeerObject
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>註冊。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "已註冊的物件"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "-   <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>cannot be <xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>      -   <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject.Id&quot;></xref> cannot be<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "SetObject 作業無法完成。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)
  id: SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: SignIn(PeerScope)
  nameWithType: PeerCollaboration.SignIn(PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(PeerScope)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "登入具有指定的共同作業基礎結構的 對等<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;> </xref>。"
  remarks: "不一定是唯一的顯示名稱。 使用者應該確認透過電子郵件、 使用顯示名稱的使用者的身分識別電話，或親自接受共同作業邀請之前。       此函式會將使用者登入共同作業基礎結構。       存取此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  example:
  - "The following code example illustrates how to sign the users into the Collaboration infrastructure.  \n  \n [!code-cs[NCLPNRPContacts#1](~/add/codesnippet/csharp/3623a8df-c46b-41ba-8f69-_1.cs)]"
  syntax:
    content: public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);
    parameters:
    - id: peerScope
      type: System.Net.PeerToPeer.Collaboration.PeerScope
      description: "對等用來加入的範圍<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>活動。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerScope</code>is set to <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> peerScope </code>參數包含無效的列舉值。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法完成登入作業。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope
  id: SignInScope
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: SignInScope
  nameWithType: PeerCollaboration.SignInScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;></xref>要呼叫的對等可以發行是否存在、 功能和物件的資訊。"
  remarks: "對等的主機或主機應用程式可能會限制或使用不同的範圍的方式區分共同作業活動的對等電腦參與。       呼叫端的對等應該檢查以判斷哪些進一步的動作，它可以成功地執行這個方法的傳回值。"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerScope
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;></xref>指定呼叫的對等體即將參與所在範圍的物件。 這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)
  id: SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: SignOut(PeerScope)
  nameWithType: PeerCollaboration.SignOut(PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(PeerScope)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "簽署指定的範圍等。"
  remarks: "這個方法是應用程式特定的作業，而且登出，可能會影響其他可能在目前執行的應用程式。 如果使用者尚未登入指定的範圍內呼叫此方法會不產生任何作用。       當使用者登出近端分享時，其已發行的資訊都會從刪除<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>端點物件集。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>  這包括<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A>和<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A>，除了任何呼叫端的對等共同作業基礎結構中註冊的物件識別。</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> 此資訊會被刪除，因為它不再提供給遠端對等電腦或對等共同作業的主機。 觀點的<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>類別，其他共用相同的信任的連絡人資訊無關; 使用<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>類別不會影響其他物件中的這項資訊永續性，例如遠端對等<xref:System.Net.PeerToPeer.Collaboration.ContactManager>物件。</xref:System.Net.PeerToPeer.Collaboration.ContactManager> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> 同樣地，刪除從對等<xref:System.Net.PeerToPeer.Collaboration.ContactManager>不會影響在共同作業應用程式; 它是否存在其他連絡人是仍然可以檢視其目前狀態和共同作業。 請</xref:System.Net.PeerToPeer.Collaboration.ContactManager>       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);
    parameters:
    - id: peerScope
      type: System.Net.PeerToPeer.Collaboration.PeerScope
      description: "限定範圍列舉所指定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> peerScope </code>參數包含無效的列舉值。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法完成登出作業。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: PeerCollaboration.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得或設定事件處理常式的回呼物件的所有事件處理常式。"
  syntax:
    content: public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "與物件<xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;></xref>實作它，要用於應用程式執行緒同步處理。       這個屬性的預設值是<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  id: UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  langs:
  - csharp
  name: UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取消登錄指定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>從<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaboration&quot;></xref>基礎結構。"
  remarks: "取消登錄<xref:System.Net.PeerToPeer.Collaboration.PeerApplication>停止呼叫的對等，從接收合作邀請的人。</xref:System.Net.PeerToPeer.Collaboration.PeerApplication>  如果先前未註冊要取消註冊應用程式，這不是任何作業。       呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 此狀態時，會建立<xref:System.Net.PeerToPeer.Collaboration.Peer>共同作業工作階段開始。</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);
    parameters:
    - id: application
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>來取消註冊為呼叫端的對等體。"
    - id: type
      type: System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType
      description: "型別解除登錄執行對呼叫等或的電腦上存在的所有對等體。"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "全域唯一<xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id*>指定的應用程式不存在，或者是空的。</xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>application</code> or <code>type</code> parameter is set to<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> type </code>參數未設定成已知的值在<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType&quot;> </xref>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "無法完成 UnregisterApplication 作業。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: ApplicationLaunchInfo
  nameWithType: PeerCollaboration.ApplicationLaunchInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplicationLaunchInfo
  nameWithType: PeerApplicationLaunchInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: ContactManager
  nameWithType: PeerCollaboration.ContactManager
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager
- uid: System.Net.PeerToPeer.Collaboration.ContactManager
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: ContactManager
  nameWithType: ContactManager
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: DeleteObject(PeerObject)
  nameWithType: PeerCollaboration.DeleteObject(PeerObject)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(PeerObject)
- uid: System.Net.PeerToPeer.Collaboration.PeerObject
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObject
  nameWithType: PeerObject
  fullName: System.Net.PeerToPeer.Collaboration.PeerObject
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetLocalRegisteredApplications()
  nameWithType: PeerCollaboration.GetLocalRegisteredApplications()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications()
- uid: System.Net.PeerToPeer.Collaboration.PeerApplicationCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplicationCollection
  nameWithType: PeerApplicationCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplicationCollection
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetLocalRegisteredApplications(PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.GetLocalRegisteredApplications(PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(PeerApplicationRegistrationType)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplicationRegistrationType
  nameWithType: PeerApplicationRegistrationType
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetLocalSetObjects()
  nameWithType: PeerCollaboration.GetLocalSetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetPeersNearMe()
  nameWithType: PeerCollaboration.GetPeersNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMeCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerNearMeCollection
  nameWithType: PeerNearMeCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMeCollection
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalApplicationChanged
  nameWithType: PeerCollaboration.LocalApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ApplicationChangedEventArgs>
  nameWithType: EventHandler<ApplicationChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
    name: ApplicationChangedEventArgs
    nameWithType: ApplicationChangedEventArgs
    fullName: ApplicationChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalEndPointName
  nameWithType: PeerCollaboration.LocalEndPointName
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalNameChanged
  nameWithType: PeerCollaboration.LocalNameChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.NameChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<NameChangedEventArgs>
  nameWithType: EventHandler<NameChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.NameChangedEventArgs
    name: NameChangedEventArgs
    nameWithType: NameChangedEventArgs
    fullName: NameChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalObjectChanged
  nameWithType: PeerCollaboration.LocalObjectChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ObjectChangedEventArgs>
  nameWithType: EventHandler<ObjectChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs
    name: ObjectChangedEventArgs
    nameWithType: ObjectChangedEventArgs
    fullName: ObjectChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalPresenceChanged
  nameWithType: PeerCollaboration.LocalPresenceChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PresenceChangedEventArgs>
  nameWithType: EventHandler<PresenceChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs
    name: PresenceChangedEventArgs
    nameWithType: PresenceChangedEventArgs
    fullName: PresenceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalPresenceInfo
  nameWithType: PeerCollaboration.LocalPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(PeerApplication,PeerApplicationRegistrationType)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SetObject(PeerObject)
  nameWithType: PeerCollaboration.SetObject(PeerObject)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(PeerObject)
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignIn(PeerScope)
  nameWithType: PeerCollaboration.SignIn(PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(PeerScope)
- uid: System.Net.PeerToPeer.Collaboration.PeerScope
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerScope
  nameWithType: PeerScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerScope
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignInScope
  nameWithType: PeerCollaboration.SignInScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignOut(PeerScope)
  nameWithType: PeerCollaboration.SignOut(PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(PeerScope)
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SynchronizingObject
  nameWithType: PeerCollaboration.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
  nameWithType: PeerCollaboration.UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(PeerApplication,PeerApplicationRegistrationType)
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: ApplicationLaunchInfo
  nameWithType: PeerCollaboration.ApplicationLaunchInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: ContactManager
  nameWithType: PeerCollaboration.ContactManager
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: DeleteObject
  nameWithType: PeerCollaboration.DeleteObject
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetLocalRegisteredApplications
  nameWithType: PeerCollaboration.GetLocalRegisteredApplications
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetLocalSetObjects
  nameWithType: PeerCollaboration.GetLocalSetObjects
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: GetPeersNearMe
  nameWithType: PeerCollaboration.GetPeersNearMe
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalEndPointName
  nameWithType: PeerCollaboration.LocalEndPointName
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: LocalPresenceInfo
  nameWithType: PeerCollaboration.LocalPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: RegisterApplication
  nameWithType: PeerCollaboration.RegisterApplication
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SetObject
  nameWithType: PeerCollaboration.SetObject
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignIn
  nameWithType: PeerCollaboration.SignIn
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignInScope
  nameWithType: PeerCollaboration.SignInScope
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SignOut
  nameWithType: PeerCollaboration.SignOut
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: SynchronizingObject
  nameWithType: PeerCollaboration.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaboration
  isExternal: false
  name: UnregisterApplication
  nameWithType: PeerCollaboration.UnregisterApplication
