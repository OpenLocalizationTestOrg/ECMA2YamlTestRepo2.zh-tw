### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServicedComponent
  id: ServicedComponent
  children:
  - System.EnterpriseServices.ServicedComponent.#ctor
  - System.EnterpriseServices.ServicedComponent.Activate
  - System.EnterpriseServices.ServicedComponent.CanBePooled
  - System.EnterpriseServices.ServicedComponent.Construct(System.String)
  - System.EnterpriseServices.ServicedComponent.Deactivate
  - System.EnterpriseServices.ServicedComponent.Dispose
  - System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  - System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  langs:
  - csharp
  name: ServicedComponent
  nameWithType: ServicedComponent
  fullName: System.EnterpriseServices.ServicedComponent
  type: Class
  summary: "表示使用 COM + 服務的所有類別的基底類別。"
  remarks: "某些狀況下，衍生自 COM + 應用程式中執行的 ServicedComponent 的類別可能會停止回應。 這個問題被因活動死結。 活動可以在多執行緒應用程式上發生死結，因為非同步清除的元件參考。 若要解決這個問題，請呼叫<xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>方法，當您完成使用物件衍生自 ServicedComponent。</xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> 如需詳細資訊，請參閱[http://support.microsoft.com/default.aspx?scid=kb;en-us;327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443)。      > [!NOTE] > 用戶端程式碼必須呼叫`Dispose`上 serviced 元件，以確保正常運作。"
  example:
  - "The following code example demonstrates how to expose a class as a configured COM component.  \n  \n [!code-cpp[EnterpriseServices_Basic#1](~/add/codesnippet/cpp/t-system.enterpriseservi_3_1.cpp)]\n [!code-cs[EnterpriseServices_Basic#1](~/add/codesnippet/csharp/t-system.enterpriseservi_3_1.cs)]  \n  \n To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library. These three steps are accomplished by the following three commands.  \n  \n```  \nsn -k Calculator.snk  \ncsc /t:library Calculator.cs  \nregsvcs Calculator.dll  \n```"
  syntax:
    content: 'public abstract class ServicedComponent : ContextBoundObject, IDisposable, System.EnterpriseServices.IRemoteDispatch, System.EnterpriseServices.IServicedComponentInfo'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ContextBoundObject
  implements:
  - System.EnterpriseServices.IRemoteDispatch
  - System.EnterpriseServices.IServicedComponentInfo
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: ServicedComponent()
  nameWithType: ServicedComponent.ServicedComponent()
  fullName: System.EnterpriseServices.ServicedComponent.ServicedComponent()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "初始化的新執行個體<xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;></xref>類別。"
  remarks: "在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。"
  syntax:
    content: public ServicedComponent ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Activate
  id: Activate
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Activate()
  nameWithType: ServicedComponent.Activate()
  fullName: System.EnterpriseServices.ServicedComponent.Activate()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "建立或從集區配置物件時，請呼叫由基礎結構。 覆寫此方法將自訂的初始化程式碼新增到物件。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#3](~/add/codesnippet/cpp/m-system.enterpriseservi_15_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#3](~/add/codesnippet/csharp/m-system.enterpriseservi_15_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_15_1.vb)]"
  syntax:
    content: protected virtual void Activate ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled
  id: CanBePooled
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: CanBePooled()
  nameWithType: ServicedComponent.CanBePooled()
  fullName: System.EnterpriseServices.ServicedComponent.CanBePooled()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "基礎結構會呼叫這個方法，該物件會放回集區。 覆寫此方法以票選是否物件放回集區。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#5](~/add/codesnippet/cpp/m-system.enterpriseservi_19_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#5](~/add/codesnippet/csharp/m-system.enterpriseservi_19_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#5](~/add/codesnippet/visualbasic/m-system.enterpriseservi_19_1.vb)]"
  syntax:
    content: protected virtual bool CanBePooled ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果可以共用服務的元件。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.EnterpriseServices.ServicedComponent.CanBePooled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Construct(System.String)
  id: Construct(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Construct(String)
  nameWithType: ServicedComponent.Construct(String)
  fullName: System.EnterpriseServices.ServicedComponent.Construct(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "呼叫基礎結構之後呼叫建構函式時，在建構函式字串中傳遞。 覆寫這個方法來建構字串值的使用。"
  syntax:
    content: protected virtual void Construct (string s);
    parameters:
    - id: s
      type: System.String
      description: "建構字串。"
  overload: System.EnterpriseServices.ServicedComponent.Construct*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Deactivate
  id: Deactivate
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Deactivate()
  nameWithType: ServicedComponent.Deactivate()
  fullName: System.EnterpriseServices.ServicedComponent.Deactivate()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "基礎結構將停用物件時呼叫。 覆寫此方法將自訂的最終處理程式碼新增到物件，在 just-in-time (JIT) 編譯的程式碼，或使用物件共用時。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#4](~/add/codesnippet/cpp/m-system.enterpriseservi_27_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#4](~/add/codesnippet/csharp/m-system.enterpriseservi_27_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#4](~/add/codesnippet/visualbasic/m-system.enterpriseservi_27_1.vb)]"
  syntax:
    content: protected virtual void Deactivate ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Deactivate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Dispose
  id: Dispose
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServicedComponent.Dispose()
  fullName: System.EnterpriseServices.ServicedComponent.Dispose()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "所使用的資源全部釋出<xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref>。"
  remarks: "終結物件，並移除相關聯的 COM + 內容。       建議您在記憶體回收行程釋放物件之前，明確釋放 COM + 物件和外部資源。 如果外部資源不足或高成本，更好的效能可藉由在不再需要時，明確釋放 COM + 資源。 明確控制會提供的 Dispose 方法。       呼叫 Dispose 允許所使用的資源<xref:System.EnterpriseServices.ServicedComponent>都重新配置用於其他用途。</xref:System.EnterpriseServices.ServicedComponent> 如需處置的詳細資訊，請參閱[清除 Unmanaged 資源上](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServicedComponent.Dispose(Boolean)
  fullName: System.EnterpriseServices.ServicedComponent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "所使用的 unmanaged 的資源釋出<xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;></xref>並選擇性釋放 managed 的資源。"
  remarks: "這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</xref:System.Object.Finalize%2A> `Dispose`叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A>叫用`Dispose`與`disposing`設`false`。</xref:System.Object.Finalize%2A>       當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.EnterpriseServices.ServicedComponent>參考。</xref:System.EnterpriseServices.ServicedComponent> 這個方法會叫用`Dispose`每個參考物件的方法。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>表示釋放 managed 和 unmanaged 資源，否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>表示只釋放 unmanaged 的資源。"
  overload: System.EnterpriseServices.ServicedComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  id: DisposeObject(System.EnterpriseServices.ServicedComponent)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: DisposeObject(ServicedComponent)
  nameWithType: ServicedComponent.DisposeObject(ServicedComponent)
  fullName: System.EnterpriseServices.ServicedComponent.DisposeObject(ServicedComponent)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "終結物件，並移除相關聯的 COM + 參考。"
  remarks: "最好是使用`Dispose`設計模式，而不是 DisposeObject。"
  syntax:
    content: public static void DisposeObject (System.EnterpriseServices.ServicedComponent sc);
    parameters:
    - id: sc
      type: System.EnterpriseServices.ServicedComponent
      description: "要處置的物件。"
  overload: System.EnterpriseServices.ServicedComponent.DisposeObject*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  id: System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "可確保，在 COM + 內容中， <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref>類別物件<xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref>位元設為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>之後遠端方法叫用。"
  remarks: "<xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A>方法未隸屬於已發行介面<xref:System.EnterpriseServices.ServicedComponent>類別，並不需要其他地方實作。</xref:System.EnterpriseServices.ServicedComponent> </xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A>"
  syntax:
    content: string IRemoteDispatch.RemoteDispatchAutoDone (string s);
    parameters:
    - id: s
      type: System.String
      description: "即將加入。"
    return:
      type: System.String
      description: "從所實作的回應物件的字串轉換<xref href=&quot;System.Runtime.Remoting.Messaging.IMethodReturnMessage&quot;></xref>介面。"
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  id: System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "無法在 COM + 內容中，確保， <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref>類別物件<xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref>位元設為<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>之後遠端方法叫用。"
  remarks: "<xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A>方法未隸屬於已發行介面<xref:System.EnterpriseServices.ServicedComponent>類別，並不需要其他地方實作。</xref:System.EnterpriseServices.ServicedComponent> </xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A>"
  syntax:
    content: string IRemoteDispatch.RemoteDispatchNotAutoDone (string s);
    parameters:
    - id: s
      type: System.String
      description: "將字串轉換成要求物件實作<xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;></xref>介面。"
    return:
      type: System.String
      description: "從所實作的回應物件的字串轉換<xref href=&quot;System.Runtime.Remoting.Messaging.IMethodReturnMessage&quot;></xref>介面。"
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  id: System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得特定資訊的相關<xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;></xref>類別執行個體。"
  remarks: "[IServicedComponentInfo.GetComponentInfo (Int32、 String\\[\\])](assetId:///M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)?qualifyHint=False&autoUpgrade=True)方法未隸屬於已發行介面<xref:System.EnterpriseServices.ServicedComponent>類別，並不需要其他地方實作。</xref:System.EnterpriseServices.ServicedComponent>"
  syntax:
    content: void IServicedComponentInfo.GetComponentInfo (ref int infoMask, out string[] infoArray);
    parameters:
    - id: infoMask
      type: System.Int32
      description: "位元遮罩，其中 0x00000001 是服務的元件的處理序識別碼的索引鍵、 0x00000002 是應用程式網域識別碼，索引鍵和 0x00000004 是服務的元件的遠端 URI 的索引鍵。"
    - id: infoArray
      type: System.String[]
      description: 'A string array that may contain any or all of the following, in order: the serviced component''s process ID, the application domain ID, and the serviced component''s remote URI.'
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ContextBoundObject
  isExternal: false
  name: System.ContextBoundObject
- uid: System.EnterpriseServices.ServicedComponent.#ctor
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: ServicedComponent()
  nameWithType: ServicedComponent.ServicedComponent()
  fullName: System.EnterpriseServices.ServicedComponent.ServicedComponent()
- uid: System.EnterpriseServices.ServicedComponent.Activate
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Activate()
  nameWithType: ServicedComponent.Activate()
  fullName: System.EnterpriseServices.ServicedComponent.Activate()
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: CanBePooled()
  nameWithType: ServicedComponent.CanBePooled()
  fullName: System.EnterpriseServices.ServicedComponent.CanBePooled()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ServicedComponent.Construct(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Construct(String)
  nameWithType: ServicedComponent.Construct(String)
  fullName: System.EnterpriseServices.ServicedComponent.Construct(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.ServicedComponent.Deactivate
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Deactivate()
  nameWithType: ServicedComponent.Deactivate()
  fullName: System.EnterpriseServices.ServicedComponent.Deactivate()
- uid: System.EnterpriseServices.ServicedComponent.Dispose
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose()
  nameWithType: ServicedComponent.Dispose()
  fullName: System.EnterpriseServices.ServicedComponent.Dispose()
- uid: System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServicedComponent.Dispose(Boolean)
  fullName: System.EnterpriseServices.ServicedComponent.Dispose(Boolean)
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: DisposeObject(ServicedComponent)
  nameWithType: ServicedComponent.DisposeObject(ServicedComponent)
  fullName: System.EnterpriseServices.ServicedComponent.DisposeObject(ServicedComponent)
- uid: System.EnterpriseServices.ServicedComponent
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponent
  nameWithType: ServicedComponent
  fullName: System.EnterpriseServices.ServicedComponent
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.ServicedComponent.#ctor*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: ServicedComponent
  nameWithType: ServicedComponent.ServicedComponent
- uid: System.EnterpriseServices.ServicedComponent.Activate*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Activate
  nameWithType: ServicedComponent.Activate
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: CanBePooled
  nameWithType: ServicedComponent.CanBePooled
- uid: System.EnterpriseServices.ServicedComponent.Construct*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Construct
  nameWithType: ServicedComponent.Construct
- uid: System.EnterpriseServices.ServicedComponent.Deactivate*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Deactivate
  nameWithType: ServicedComponent.Deactivate
- uid: System.EnterpriseServices.ServicedComponent.Dispose*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose
  nameWithType: ServicedComponent.Dispose
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: DisposeObject
  nameWithType: ServicedComponent.DisposeObject
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo
