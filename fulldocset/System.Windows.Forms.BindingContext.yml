### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingContext
  id: BindingContext
  children:
  - System.Windows.Forms.BindingContext.#ctor
  - System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.Clear
  - System.Windows.Forms.BindingContext.ClearCore
  - System.Windows.Forms.BindingContext.CollectionChanged
  - System.Windows.Forms.BindingContext.Contains(System.Object)
  - System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  - System.Windows.Forms.BindingContext.IsReadOnly
  - System.Windows.Forms.BindingContext.Item(System.Object)
  - System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  - System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.BindingContext.Remove(System.Object)
  - System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  langs:
  - csharp
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
  type: Class
  summary: "管理的集合<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>繼承自任何物件的物件<xref href=&quot;System.Windows.Forms.Control&quot;></xref>類別。"
  remarks: "每個 Windows Form 有至少一個其他物件，可管理<xref:System.Windows.Forms.BindingManagerBase>表單的物件。</xref:System.Windows.Forms.BindingManagerBase> 因為<xref:System.Windows.Forms.BindingManagerBase>類別是抽象的<xref:System.Windows.Forms.BindingContext.Item%2A><xref:System.Windows.Forms.CurrencyManager>或<xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager></xref:System.Windows.Forms.CurrencyManager>是屬性</xref:System.Windows.Forms.BindingContext.Item%2A>的傳回型別</xref:System.Windows.Forms.BindingManagerBase> 如果資料來源是一個物件，可傳回的單一屬性 （而不是物件的清單），<xref:System.Type>為<xref:System.Windows.Forms.PropertyManager>。</xref:System.Windows.Forms.PropertyManager> </xref:System.Type> 例如，如果您指定<xref:System.Windows.Forms.TextBox>做為資料來源，<xref:System.Windows.Forms.PropertyManager>傳回。</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.TextBox> 另一方面，如果資料來源物件，用於實作<xref:System.Collections.IList>或<xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.CurrencyManager>傳回。</xref:System.Windows.Forms.CurrencyManager> </xref:System.ComponentModel.IBindingList> </xref:System.Collections.IList>       在 Windows Form 上每個資料來源，沒有單一<xref:System.Windows.Forms.CurrencyManager>或<xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> 因為可能會有多個 Windows Form 相關聯的資料來源，Bindingparameters 可讓您擷取任何特定<xref:System.Windows.Forms.CurrencyManager>與資料來源相關聯。</xref:System.Windows.Forms.CurrencyManager>      > [!NOTE] > 時使用<xref:System.Windows.Forms.BindingContext.Item%2A>Bindingparameters 建立新屬性，<xref:System.Windows.Forms.BindingManagerBase>如果不存在。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A> 這可能會導致一些混淆，因為傳回的物件可能不會管理清單 （或任何清單），您想。 若要避免傳回無效的<xref:System.Windows.Forms.BindingManagerBase>，使用<xref:System.Windows.Forms.BindingContext.Contains%2A>方法來判斷所需的<xref:System.Windows.Forms.BindingManagerBase>已經存在。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A> </xref:System.Windows.Forms.BindingManagerBase>       如果您使用容器控制項，例如<xref:System.Windows.Forms.GroupBox>， <xref:System.Windows.Forms.Panel>，或<xref:System.Windows.Forms.TabControl>，包含資料繫結控制項，您可以建立只該容器控制項及其子控制項的 Bindingparameters。</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.GroupBox> 然後，您的表單中的每個部分可受自己<xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> 請參閱<xref:System.Windows.Forms.BindingContext.%23ctor%2A>建構函式，如需有關建立多個<xref:System.Windows.Forms.BindingManagerBase>相同的資料來源的物件。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.%23ctor%2A>       如果您將加入<xref:System.Windows.Forms.TextBox>控制項加入表單，並將它繫結至資料集中資料表的資料行與該表單的其他通訊控制項。</xref:System.Windows.Forms.TextBox> 其他，反過來特定<xref:System.Windows.Forms.CurrencyManager>針對該資料關聯。</xref:System.Windows.Forms.CurrencyManager> 如果您查詢`Position`屬性<xref:System.Windows.Forms.CurrencyManager>，它會報告目前的記錄，該繫結<xref:System.Windows.Forms.TextBox>控制項。</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.CurrencyManager> 在下列程式碼範例中，<xref:System.Windows.Forms.TextBox>控制項繫結至`FirstName`資料行`Customers`資料表`dataSet1`透過表單上的其他資料集。</xref:System.Windows.Forms.TextBox>      ```vb#   TextBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;)      ```      ```c#   textBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);      ```      ```cpp   textBox1->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);   ```您可以新增第二個<xref:System.Windows.Forms.TextBox>控制項 (`TextBox2`) 加入表單並繫結至`LastName`資料行`Customers`資料表中相同的資料集。</xref:System.Windows.Forms.TextBox> Bindingparameters 所知的第一個繫結 (`TextBox1`至`Customers.FirstName`)，因此它會使用相同<xref:System.Windows.Forms.CurrencyManager>，因為這兩個文字方塊中會繫結至相同的資料集 (`DataSet1`)。</xref:System.Windows.Forms.CurrencyManager>      ```vb#   TextBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;)      ```      ```c#   textBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);      ```      ```cpp   textBox2->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);   ```如果您將繫結`TextBox2`Bindingparameters 建立及管理第二個<xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager>不同資料集，       請務必保持一致，有關如何設定<xref:System.Windows.Forms.ListControl.DataSource%2A>和<xref:System.Windows.Forms.ListControl.DisplayMember%2A>屬性; 否則 Bindingparameters 會建立多個貨幣管理員相同的資料集，會導致錯誤。</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DataSource%2A> 下列程式碼範例示範幾個方式可設定屬性和其相關聯的其他物件。 您可以設定使用下列方法，其中的屬性，只要您是在整個程式碼一致。      ```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = &quot;Customers.FirstName&quot;   Me.BindingContext(dataSet1, &quot;Customers&quot;).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = &quot;Customers.FirstName&quot;;   this.BindingContext[dataSet1, &quot;Customers&quot;].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = &quot;Customers.FirstName&quot;;   this->BindingContext->get_Item(dataSet1, &quot;Customers&quot;)->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = &quot;FirstName&quot;   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = &quot;FirstName&quot;;   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = &quot;FirstName&quot;;   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE]> 透過<xref:System.Windows.Forms.BindingSource>.</xref:System.Windows.Forms.BindingSource>繫結大部分的 Windows Form 應用程式 <xref:System.Windows.Forms.BindingSource>元件封裝<xref:System.Windows.Forms.CurrencyManager>公開<xref:System.Windows.Forms.CurrencyManager>程式設計介面。</xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingSource> 當使用<xref:System.Windows.Forms.BindingSource>繫結，您應該使用所公開的成員<xref:System.Windows.Forms.BindingSource>操作 [貨幣] (也就是`Position`)，而不用透過 Bindingparameters。</xref:System.Windows.Forms.BindingSource> </xref:System.Windows.Forms.BindingSource>"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources. The BindingContext is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_7_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_7_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      public class BindingContext : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "初始化的新執行個體<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>類別。"
  remarks: "如果您想要有多個<xref:System.Windows.Forms.BindingManagerBase>執行個體相同的資料來源，建立新的<xref:System.Windows.Forms.BindingContext>和將其設為<xref:System.Windows.Forms.Control.BindingContext%2A>繼承自<xref:System.Windows.Forms.Control>類別</xref:System.Windows.Forms.Control>物件的屬性</xref:System.Windows.Forms.Control.BindingContext%2A></xref:System.Windows.Forms.BindingContext></xref:System.Windows.Forms.BindingManagerBase> 例如，如果您有兩個<xref:System.Windows.Forms.BindingManagerBase>物件 (從兩個不同<xref:System.Windows.Forms.BindingContext>物件)，您可以設定<xref:System.Windows.Forms.BindingManagerBase.Position%2A>的每個屬性<xref:System.Windows.Forms.BindingManagerBase>為不同的值。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingManagerBase.Position%2A> </xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.BindingManagerBase> 這會導致資料繫結控制項以顯示相同的資料來源中的不同值的每一組。"
  example:
  - "The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control. `GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class). The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member. The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.  \n  \n [!code-cs[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_17_1.cs)]\n [!code-cpp[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_17_1.cpp)]\n [!code-vb[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_17_1.vb)]"
  syntax:
    content: public BindingContext ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  id: Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新增<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>至集合的特定資料來源相關聯。"
  syntax:
    content: protected void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>聯<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。</xref:System.Object>"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  id: AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新增<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>至集合的特定資料來源相關聯。"
  syntax:
    content: protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "與相關聯的物件<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataSource</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>listManager</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Clear
  id: Clear
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除集合的任何<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>物件。"
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.ClearCore
  id: ClearCore
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "清除集合。"
  syntax:
    content: protected virtual void ClearCore ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.ClearCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "一律引發<xref:System.NotImplementedException>時處理。</xref:System.NotImplementedException>"
  remarks: "CollectionChanged 事件已經過時，一定會引發<xref:System.NotImplementedException>時處理。</xref:System.NotImplementedException> 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "即將加入。"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "在所有情況下，就會發生。"
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出是否<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>包含<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源相關聯。"
  remarks: "請參閱<xref:System.Windows.Forms.Binding>的可能資料來源與建立控制項與資料來源之間的繫結的相關資訊的類別清單。</xref:System.Windows.Forms.Binding>       請參閱<xref:System.Windows.Forms.BindingContext.Item%2A>屬性有關傳回<xref:System.Windows.Forms.BindingManagerBase>使用資料來源。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the Contains method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form. The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.  \n  \n [!code-vb[Classic BindingContext.Contains Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_9_1.vb)]\n [!code-cs[Classic BindingContext.Contains Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_9_1.cs)]\n [!code-cpp[Classic BindingContext.Contains Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_9_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>，代表資料來源。</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>包含指定<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  id: Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出是否<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>包含<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源和資料成員相關聯。"
  remarks: "請參閱<xref:System.Windows.Forms.Binding>類別，如需可能資料來源的清單，以及如需建立控制項與資料來源之間的繫結資訊。</xref:System.Windows.Forms.Binding>       請參閱<xref:System.Windows.Forms.BindingContext.Item%2A>屬性有關傳回<xref:System.Windows.Forms.BindingManagerBase>使用資料來源和資料成員。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.  \n  \n [!code-cs[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_18_1.cs)]\n [!code-vb[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_18_1.vb)]\n [!code-cpp[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_18_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource, string dataMember);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>，代表資料來源。</xref:System.Object>"
    - id: dataMember
      type: System.String
      description: "若要在特定解決所需的資訊<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>包含指定<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>，否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出集合是否唯讀。"
  remarks: "這個屬性衍生自<xref:System.Collections.ICollection>，就會覆寫永遠傳回`false`。</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合是唯讀的。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源相關聯。"
  remarks: "使用此多載，如果<xref:System.Windows.Forms.BindingManagerBase>您想要不需要導覽路徑。</xref:System.Windows.Forms.BindingManagerBase> 例如，如果<xref:System.Windows.Forms.BindingManagerBase>管理一組<xref:System.Windows.Forms.Binding>物件使用<xref:System.Collections.ArrayList>或<xref:System.Data.DataTable>為<xref:System.Windows.Forms.Binding.DataSource%2A>，任何的導覽路徑為必要項。</xref:System.Windows.Forms.Binding.DataSource%2A> </xref:System.Data.DataTable> </xref:System.Collections.ArrayList> </xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase>      > [!NOTE] > 項目屬性一律會傳回<xref:System.Windows.Forms.BindingManagerBase>，而且永遠不傳回`null`。</xref:System.Windows.Forms.BindingManagerBase>       請參閱<xref:System.Windows.Forms.Binding>類別，如需可能資料來源的清單，以及如需建立控制項與資料來源之間的繫結資訊。</xref:System.Windows.Forms.Binding>"
  example:
  - "The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic BindingContext.this Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_30_1.cs)]\n [!code-cpp[Classic BindingContext.this Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_30_1.cpp)]\n [!code-vb[Classic BindingContext.this Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_30_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "具有特定相關聯的資料來源<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "A <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定的資料來源。"
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  id: Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源和資料成員相關聯。"
  remarks: "使用此多載時<xref:System.Windows.Forms.BindingManagerBase>管理一組<xref:System.Windows.Forms.Binding>資料來源包含多個物件的物件。</xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase> 例如，<xref:System.Data.DataSet>只能包含數個<xref:System.Data.DataTable>所連結的物件<xref:System.Data.DataRelation>物件。</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataSet> 在這種情況下，瀏覽路徑，才能啟用此選項<xref:System.Windows.Forms.BindingContext>以傳回正確<xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext>      > [!NOTE] > 項目屬性一律會傳回<xref:System.Windows.Forms.BindingManagerBase>，當`dataMember`參數才有效。</xref:System.Windows.Forms.BindingManagerBase> 它永遠不會傳回`null`。       請參閱<xref:System.Windows.Forms.Binding>類別，如需可能資料來源的清單，以及如需建立控制項與資料來源之間的繫結資訊。</xref:System.Windows.Forms.Binding>       如果想要的<xref:System.Windows.Forms.BindingManagerBase>管理清單中，瀏覽路徑必須也會以清單結尾。</xref:System.Windows.Forms.BindingManagerBase> 例如，下列 C# 程式碼會將繫結<xref:System.Windows.Forms.TextBox>訂購日期的 orders 資料表中的控制項。</xref:System.Windows.Forms.TextBox> 導覽路徑中包含<xref:System.Data.DataTable.TableName%2A>、 <xref:System.Data.DataRelation.RelationName%2A>，和<xref:System.Data.DataColumn.ColumnName%2A>。</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> 不過，<xref:System.Windows.Forms.BindingManagerBase>必須使用只抓取<xref:System.Data.DataTable.TableName%2A>和<xref:System.Data.DataRelation.RelationName%2A>（這會解析為清單）。</xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> </xref:System.Windows.Forms.BindingManagerBase>      ```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (&quot;Text&quot;, dataSet1, &quot;Customers.custToOrders.OrderDate&quot;);   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, &quot;Customers.custToOrders&quot;];   ```在傳回的<xref:System.Windows.Forms.BindingManagerBase>，您應該使用相同的資料來源做為<xref:System.Windows.Forms.Binding>和修改導覽路徑。</xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase>       使用<xref:System.Windows.Forms.BindingContext.Contains%2A>方法來判斷所需<xref:System.Windows.Forms.BindingManagerBase>已經存在。</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A>"
  example:
  - "The following code example demonstrates how to use the Item to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding. It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/p-system.windows.forms.b_17_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/p-system.windows.forms.b_17_1.cs)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "具有特定相關聯的資料來源<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
    - id: dataMember
      type: System.String
      description: "包含會解析為特定的資訊的導覽路徑<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>。"
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>針對所指定的資料來源和資料成員。"
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "指定<code> dataMember </code>不存在於資料來源。"
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "引發<xref href=&quot;System.Windows.Forms.BindingContext.CollectionChanged&quot;></xref>事件。"
  remarks: "引發事件會透過委派事件處理常式叫用。 如需詳細資訊，請參閱[處理和引發事件](~/add/includes/ajax-current-ext-md.md)。       OnCollectionChanged 方法也允許衍生的類別處理事件，而不用附加委派。 這是處理衍生類別中的事件的慣用的技巧。"
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>包含事件資料。"
  overload: System.Windows.Forms.BindingContext.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "刪除<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源相關聯。"
  syntax:
    content: protected void Remove (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "資料來源相關聯<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>移除。"
  overload: System.Windows.Forms.BindingContext.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  id: RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移除<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>與指定的資料來源相關聯。"
  syntax:
    content: protected virtual void RemoveCore (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "資料來源相關聯<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>移除。"
  overload: System.Windows.Forms.BindingContext.RemoveCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "將集合的元素複製到指定的陣列，集合的索引處開始。"
  remarks: ''
  example:
  - >-
    [!code-cs[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/csharp/030fb284-4e33-401e-88b7-_1.cs)]
     [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/cpp/030fb284-4e33-401e-88b7-_1.cpp)]
     [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/visualbasic/030fb284-4e33-401e-88b7-_1.vb)]
  syntax:
    content: void ICollection.CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "<xref:System.Array>複製到。</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "若要開始複製集合的索引。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得總數<xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref>物件管理<xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>。"
  remarks: ''
  example:
  - "The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/visualbasic/24e4ccaa-040d-4b41-b443-_1.vb)]\n [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/cpp/24e4ccaa-040d-4b41-b443-_1.cpp)]\n [!code-cs[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/csharp/24e4ccaa-040d-4b41-b443-_1.cs)]"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "所管理的資料來源數目<xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得值，指出集合是否為同步。"
  remarks: "這個屬性衍生自<xref:System.Collections.ICollection>，就會覆寫永遠傳回`false`。</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果集合具備執行緒安全。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得要用於同步處理 （安全執行緒） 的物件。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "這個屬性衍生自<xref:System.Collections.ICollection>，就會覆寫永遠傳回<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.ICollection>"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得集合的列舉值。"
  remarks: "<xref:System.Collections.IEnumerator>方法可讓您逐一查看集合受<xref:System.Windows.Forms.BindingContext>.</xref:System.Windows.Forms.BindingContext> IEnumerable.GetEnumerator 所傳回</xref:System.Collections.IEnumerator>的"
  example:
  - "The following code example uses the IEnumerable.GetEnumerator method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-cs[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/csharp/dec1c1ce-5dab-481d-86dd-_1.cs)]\n [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/cpp/dec1c1ce-5dab-481d-86dd-_1.cpp)]\n [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/visualbasic/dec1c1ce-5dab-481d-86dd-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>集合。</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  id: UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "將<xref href=&quot;System.Windows.Forms.Binding&quot;></xref>與新<xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>。"
  remarks: "這個方法是更新的元件，可實作的繫結<xref:System.Windows.Forms.IBindableComponent>，當其<xref:System.Windows.Forms.BindingContext>變更。</xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.IBindableComponent>"
  syntax:
    content: public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);
    parameters:
    - id: newBindingContext
      type: System.Windows.Forms.BindingContext
      description: "新<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>關聯<xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>。"
    - id: binding
      type: System.Windows.Forms.Binding
      description: "<xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>與新<xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>。"
  overload: System.Windows.Forms.BindingContext.UpdateBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.BindingContext.#ctor
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingManagerBase
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerBase
  nameWithType: BindingManagerBase
  fullName: System.Windows.Forms.BindingManagerBase
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingContext.Clear
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
- uid: System.Windows.Forms.BindingContext.ClearCore
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Binding
  parent: System.Windows.Forms
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Forms.Binding
- uid: System.Windows.Forms.BindingContext.#ctor*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext.BindingContext
- uid: System.Windows.Forms.BindingContext.Add*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add
  nameWithType: BindingContext.Add
- uid: System.Windows.Forms.BindingContext.AddCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore
  nameWithType: BindingContext.AddCore
- uid: System.Windows.Forms.BindingContext.Clear*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear
  nameWithType: BindingContext.Clear
- uid: System.Windows.Forms.BindingContext.ClearCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore
  nameWithType: BindingContext.ClearCore
- uid: System.Windows.Forms.BindingContext.Contains*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains
  nameWithType: BindingContext.Contains
- uid: System.Windows.Forms.BindingContext.IsReadOnly*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item
  nameWithType: BindingContext.Item
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged
  nameWithType: BindingContext.OnCollectionChanged
- uid: System.Windows.Forms.BindingContext.Remove*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove
  nameWithType: BindingContext.Remove
- uid: System.Windows.Forms.BindingContext.RemoveCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore
  nameWithType: BindingContext.RemoveCore
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding
  nameWithType: BindingContext.UpdateBinding
