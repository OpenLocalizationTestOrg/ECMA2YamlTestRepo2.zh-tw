### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationConverterBase
  id: ConfigurationConverterBase
  children:
  - System.Configuration.ConfigurationConverterBase.#ctor
  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  langs:
  - csharp
  name: ConfigurationConverterBase
  nameWithType: ConfigurationConverterBase
  fullName: System.Configuration.ConfigurationConverterBase
  type: Class
  summary: "設定轉換器類型的基底類別。"
  remarks: "ConfigurationConverterBase 是轉換器組態類型的基底類別。 以下是將字串轉換的類型，但找到組態檔中，與相關的強型別屬性。"
  example:
  - "The following code examples show how to derive from the ConfigurationConverterBase class to create a custom <xref:System.TimeSpan> converter type. Also, the examples show how to use this type in a custom section.  \n  \n The following code example shows how to create a custom <xref:System.TimeSpan> converter type from the ConfigurationConverterBase class.  \n  \n [!code-vb[System.Configuration.TimeSpanMinutesConverter#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_1.vb)]\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#1](~/add/codesnippet/csharp/t-system.configuration.c_16_1.cs)]  \n  \n The following code example shows how to define a custom section that uses the previous custom <xref:System.TimeSpan> converter.  \n  \n [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#1](~/add/codesnippet/csharp/t-system.configuration.c_16_2.cs)]\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_2.vb)]  \n  \n The following code example shows how to create and modify a configuration file using the previous custom section.  \n  \n [!code-vb[System.Configuration.ConfigurationConverterBase#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_3.vb)]\n [!code-cs[System.Configuration.ConfigurationConverterBase#1](~/add/codesnippet/csharp/t-system.configuration.c_16_3.cs)]  \n  \n The following is a configuration excerpt as used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"CustomSection\"   \n      type=\"Samples.AspNet.CustomSection,   \n      ConfigurationConverters,   \n      Version=1.0.0.0, Culture=neutral,   \n      PublicKeyToken=null\"   \n      allowDefinition=\"Everywhere\"   \n      allowExeDefinition=\"MachineToApplication\"   \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  <CustomSection fileName=\"default.txt\" maxIdleTime=\"90\" />  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class ConfigurationConverterBase : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Configuration.ConfigurationConverterBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationConverterBase
  langs:
  - csharp
  name: ConfigurationConverterBase()
  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase()
  fullName: System.Configuration.ConfigurationConverterBase.ConfigurationConverterBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "初始化的新執行個體<xref href=&quot;System.Configuration.ConfigurationConverterBase&quot;></xref>類別。"
  remarks: "因為您通常使用系統提供的轉換器類型時，的才需要 ConfigurationConverterBase 建構函式時，您必須建立您自己的轉換類型。"
  syntax:
    content: protected ConfigurationConverterBase ();
    parameters: []
  overload: System.Configuration.ConfigurationConverterBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Configuration.ConfigurationConverterBase
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Configuration.ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "決定是否允許轉換。"
  remarks: "CanConvertFrom 方法會判斷是否可以強型別屬性，以取得組態檔中所使用的值字串上執行的轉換。"
  example:
  - "The following example code shows how to override the CanConvertFrom method to create a custom <xref:System.TimeSpan> converter type. Also, the example shows how to use this type in a custom section.  \n  \n [!code-vb[System.Configuration.TimeSpanMinutesConverter#3](~/add/codesnippet/visualbasic/27fca184-0b30-4d07-aa35-_1.vb)]\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#3](~/add/codesnippet/csharp/27fca184-0b30-4d07-aa35-_1.cs)]"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>用於類型轉換的物件。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>要轉換的來源。</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允許轉換，則否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationConverterBase.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Configuration.ConfigurationConverterBase
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Configuration.ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "決定是否允許轉換。"
  remarks: "<xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A>方法可判斷組態檔中所含的字串是否可以轉換成相關的強型別屬性。</xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A>"
  example:
  - "The following example code shows how to override the <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> method to create a custom <xref:System.TimeSpan> converter type. Also, the example shows how to use this type in a custom section.  \n  \n [!code-vb[System.Configuration.TimeSpanMinutesConverter#2](~/add/codesnippet/visualbasic/67ef9904-b052-4e8b-90db-_1.vb)]\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#2](~/add/codesnippet/csharp/67ef9904-b052-4e8b-90db-_1.cs)]"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>用於類型轉換的物件。"
    - id: type
      type: System.Type
      description: "要轉換的類型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果允許轉換，則否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Configuration.ConfigurationConverterBase.CanConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Configuration.ConfigurationConverterBase.#ctor
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: ConfigurationConverterBase()
  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase()
  fullName: System.Configuration.ConfigurationConverterBase.ConfigurationConverterBase()
- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Configuration.ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Configuration.ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Configuration.ConfigurationConverterBase.#ctor*
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: ConfigurationConverterBase
  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase
- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom*
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: CanConvertFrom
  nameWithType: ConfigurationConverterBase.CanConvertFrom
- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo*
  parent: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: CanConvertTo
  nameWithType: ConfigurationConverterBase.CanConvertTo
