### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "表示顯示為資料繫結控制項中文字的欄位。"
  remarks: "資料繫結控制項用 BoundField 類別 (例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 以文字顯示欄位的值。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> BoundField 物件是根據使用它的資料繫結控制項的顯示方式。 例如，<xref:System.Web.UI.WebControls.GridView>控制項會顯示 BoundField 物件做為資料行，而<xref:System.Web.UI.WebControls.DetailsView>控制項顯示為一個資料列。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       若要指定 BoundField 物件中所顯示的欄位，設定<xref:System.Web.UI.WebControls.BoundField.DataField%2A>屬性欄位的名稱。</xref:System.Web.UI.WebControls.BoundField.DataField%2A> 欄位的值可以是 HTML 編碼顯示藉由設定之前<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 您也可以設定欄位的值套用自訂格式字串<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 當<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>屬性是`true`，自訂格式字串中使用編碼的字串欄位的值。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 根據預設，格式化字串會套用至欄位值，只有在資料繫結控制項處於唯讀模式時。 若要將格式字串套用至資料繫結控制項處於編輯模式時顯示的值，設定<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 如果欄位的值是 null，您可以藉由設定顯示自訂標題<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> BoundField 物件也會自動將轉換空字串 (&quot;&quot;) 藉由設定欄位值為 null 值<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       您可以隱藏 BoundField 中的物件資料繫結控制項，藉由設定<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 若要防止在編輯模式中修改欄位的值，將<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 在資料繫結會控制該插入記錄的支援 (例如<xref:System.Web.UI.WebControls.DetailsView>控制項)，您可以藉由設定隱藏 BoundField 物件<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> 這通常是當您想要隱藏在插入模式下自動產生索引鍵欄位。       您可以自訂 BoundField 物件的頁首和頁尾區段。 若要在頁首或頁尾區段中顯示標題，請設定<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>屬性，分別。</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 而不是顯示在標頭區段的文字，您可以藉由設定顯示影像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>屬性。</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 標頭區段可能會隱藏在 BoundField 物件藉由設定<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>屬性`false`。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > 某些資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>控制項) 即可顯示或隱藏只控制項的整個標頭區段。</xref:System.Web.UI.WebControls.GridView> 不支援這些資料繫結控制項<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>個別的繫結欄位的屬性。</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 若要顯示或隱藏在資料繫結控制項的整個標頭區段 （如果有的話），請使用控制項的`ShowHeader`屬性。       您也可以自訂 BoundField 物件 （例如字型色彩、 背景色彩等等） 的外觀，藉由設定欄位的不同部分的樣式屬性。 下表列出不同的樣式屬性。      |樣式屬性 |描述 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|BoundField 物件的子系 Web 伺服器控制項的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|BoundField 物件的頁尾區段的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|BoundField 物件的標頭區段的樣式設定。 |  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|資料中的項目 BoundField 物件的樣式設定。 |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化的新執行個體<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>類別。"
  remarks: "使用這個建構函式來初始化<xref:System.Web.UI.WebControls.BoundField>類別</xref:System.Web.UI.WebControls.BoundField>的新執行個體 將欄位加入至動態建立的資料繫結控制項時，通常會使用這個建構函式。       若要以動態方式加入<xref:System.Web.UI.WebControls.BoundField>物件資料繫結控制項，請建立新<xref:System.Web.UI.WebControls.BoundField>物件、 設定其屬性，並將其加入資料繫結控制項的欄位集合。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> 例如，如果您使用<xref:System.Web.UI.WebControls.GridView>控制項，加入<xref:System.Web.UI.WebControls.BoundField>物件<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 以動態方式，您就可以將欄位加入資料繫結控制項，不過強烈建議的欄位以靜態方式宣告，然後顯示或隱藏，視需要。 以靜態方式宣告所有欄位可都減少的父資料繫結控制項的檢視狀態的大小。"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出所指定的格式化字串是否<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>屬性套用至欄位值時，其中包含資料繫結控制項<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件是處於編輯模式。</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "資料繫結控制項 (例如<xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.FormView>，和<xref:System.Web.UI.WebControls.GridView>) 可讓使用者讀取、 編輯或將記錄插入的不同的顯示模式。</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> 依預設，格式化字串會指定由<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>屬性套用至欄位值的資料繫結控制項處於唯讀模式時，才。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 若要將格式字串套用至資料繫結控制項處於編輯模式時顯示的值，將 ApplyFormatInEditMode 屬性設定為`true`。      > [!NOTE] > A<xref:System.Web.UI.WebControls.BoundField>物件不會自動移除設定格式化的資料來源中更新的欄位時。</xref:System.Web.UI.WebControls.BoundField> 如果您不想格式儲存的值的一部分，您必須移除的格式以程式設計的方式。"
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要套用格式化字串至欄位值處於編輯模式。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否將空字串值 (&quot;&quot;) 自動轉換為 null 值的資料來源中更新資料欄位時。"
  remarks: "有時候使用者可能會為欄位值，更新或插入資料錄時輸入空字串。 若要指定是否為空字串值會自動轉換為 null 的資料來源中更新資料欄位時，使用 ConvertEmptyStringToNull 屬性。      > [!NOTE] > 根據預設，<xref:System.Web.UI.WebControls.BoundField>物件顯示 null 值為空字串。</xref:System.Web.UI.WebControls.BoundField> 若要顯示不同的值，設定<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要自動將空字串值轉換成 null 值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將目前的屬性複製<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>到指定的物件<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>物件。"
  remarks: "CopyProperties 方法是 helper 方法，供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法來複製目前的內容<xref:System.Web.UI.WebControls.BoundField>物件<xref:System.Web.UI.WebControls.DataControlField>方法所建立的物件。</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>來複製目前的內容<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>至。"
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "建立空<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "CreateField 方法是 helper 方法，供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>方法來建立空白<xref:System.Web.UI.WebControls.BoundField>要複製目前的內容物件<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定要繫結至資料欄位的名稱<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "使用指定的繫結至資料欄位名稱的 DataField 屬性<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> 指定之欄位的值都會顯示在<xref:System.Web.UI.WebControls.BoundField>物件做為文字。</xref:System.Web.UI.WebControls.BoundField> 您可以選擇性地藉由設定格式化顯示的文字<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > 欄位的值為 null，如果空字串 (&quot;&quot;) 會顯示預設值。 若要指定替代的標題，請設定<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "要繫結至資料欄位的名稱<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定指定的欄位值的顯示格式的字串。"
  remarks: "使用 DataFormatString 屬性來指定自訂的顯示格式的值會顯示在<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> 如果未設定 DataFormatString 屬性，該欄位的值會顯示不含任何特殊格式。      > [!NOTE] > 中之前的版本 ASP.NET 3.5，您必須設定<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>屬性`false`才能設定格式的欄位沒有字串資料類型。</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 否則，欄位值會轉換成字串預設轉換方法所套用的格式字串，會儲存在 DataFormatString 屬性之前。       根據預設，格式字串套用至該欄位值，其中包含資料繫結控制項時，才<xref:System.Web.UI.WebControls.BoundField>物件處於唯讀模式。</xref:System.Web.UI.WebControls.BoundField> 若要將格式字串套用至欄位值，在編輯模式中，設定<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       格式字串可以是任何常值字串，而且通常包含該欄位值的預留位置。 例如，在格式化字串`Item Value: {0}`，當字串出現在欄位的值替換為 {0} 預留位置<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> 格式化字串的其餘部分會顯示為常值文字。       如果格式化的字串不包含預留位置，只格式化字串本身包含在最後顯示的文字 （從資料來源欄位的值就不會包含）。 如果預留位置括在大括號，如上述範例所示為 0 （零），則欄位值的預設方法被轉換成字串。 您可以指定應如何格式化的欄位值的字串附加為零。 例如，將預留位置`{0:C}`數值欄位會指定，欄位的值應轉換成貨幣格式。       藉由套用格式<xref:System.String.Format%2A>方法。</xref:System.String.Format%2A> 後面的左大括號的數字是該方法所使用之語法的一部分，並指出預留位置應該使用哪一個的一系列的值。 因為每個資料格中只能有一個欄位的值，後面的左大括號的數字只可以設定為 0。       下表列出標準格式字元的數值欄位。 這些格式的字元不區分大小寫，除了`X`，其中顯示在指定的情況下的十六進位字元。 若要指定您想要顯示多少的有效位數或小數位數，您可以將數字附加至大部分的格式字元。      > [!NOTE] > 在大部分情況下，格式取決於伺服器的文化特性設定。 範例包括文化特性設定的`en-US`。      |格式化字元 |描述 |範例 |  |----------------------|-----------------|-------------|  |`C` or `c`|以貨幣格式顯示數值。 您可以指定的小數位數。 |格式︰`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 格式︰`{0:C3}`<br /><br /> 123.456-> $123.456 |  |`D` or `d`|顯示十進位格式的整數值。 您可以指定的位數。 （雖然型別稱為 「 小 」，數字會格式化為整數。） |格式︰`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 格式︰`{0:D6}`<br /><br /> 1234-> 001234 |  |`E` or `e`|以科學記號 （指數） 格式顯示數值。 您可以指定的小數位數。 |格式︰`{0:E}`<br /><br /> -> 1.052033E + 003 1052.0329112756<br /><br /> 格式︰`{0:E2}`<br /><br /> -1052.0329112756->-1.05 e +&003; |  |`F` or `f`|固定格式來顯示數值。 您可以指定的小數位數。 |格式︰`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 格式︰`{0:F3}`<br /><br /> 1234.567-> 1234.567 |  |`G` or `g`|數值會一般格式顯示 （最精簡的固定點和科學標記法）。 您可以指定有效位數的數目。 |格式︰`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 格式︰`{0:G2}`<br /><br /> -120->-123.456 |  |`N` or `n`|（包括群組分隔符號和選擇性負號） 的數字格式顯示數值。 您可以指定的小數位數。 |格式︰`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 格式︰`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |  |`P` or `p`|以百分比格式顯示數值。 您可以指定的小數位數。 |格式︰`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 格式︰`{0:P1}`<br /><br /> 50.0%->.5 | |`R` or `r`|顯示<xref:System.Single>、 <xref:System.Double>，或`BigInteger`反覆存取格式中的值。 |Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |  |`X` or `x`|以十六進位格式顯示整數值。 您可以指定的位數。 |格式︰`{0:X}`<br /><br /> 255-> FF<br /><br /> 格式︰`{0:x4}`<br /><br /> 255-> 00ff |      如需詳細資訊，以及顯示其他文化特性值的格式設定的範例，請參閱[標準數值格式字串](~/add/includes/ajax-current-ext-md.md)。 您也可以建立自訂數值格式字串。 如需詳細資訊，請參閱[自訂數值格式字串](~/add/includes/ajax-current-ext-md.md)。       下表列出的格式字元<xref:System.DateTime>欄位。</xref:System.DateTime> 大部分的這些格式規格會導致不同的輸出，根據文化特性設定而定。 範例為用於<xref:System.DateTime>值為 2009 年 6 月 15 日下午 1:45:30 的文化特性設定`en-US`。</xref:System.DateTime>      |格式化字元 |描述 |範例 |  |----------------------|-----------------|-------------|  |`d`|簡短日期模式。 |格式︰`{0:d}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15 日 |  |`D`|完整日期模式。 |格式︰`{0:D}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15 日，星期一 |  |`f`|完整日期/時間模式 （簡短時間）。 |格式︰`{0:f}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15，星期一下午 1:45 |  |`F`|完整日期/時間模式 （完整時間）。 |格式︰`{0:F}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15，星期一下午 1:45:30 |  |`g`|一般日期/時間模式 （簡短時間）。 |格式︰`{0:g}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15 日下午 1:45 |  |`G`|一般日期/時間模式 （完整時間）。 |格式︰`{0:G}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15 日下午 1:45:30 |  |`M` or `m`|月/日模式。 |格式︰`{0:M}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 15 年 6 月 |  |`O` or `o`|來回日期/時間模式。 |格式︰`{0:o}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009年-06-15T13:45:30.0900000 |  |`R` or `r`|RFC1123 模式 （如需資訊，請參閱<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>）。 |格式︰ `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 6 月 15 日，Mon 20:45:30 GMT |  |`s`|可排序日期/時間模式。 |格式︰`{0:s}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009年-06-15T13:45:30 |  |`t`|簡短時間模式。 |格式︰`{0:t}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 1:45 PM |  |`T`|完整時間模式。 |格式︰`{0:T}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 下午 1:45:30 |  |`u`|國際可排序日期/時間模式。 |格式︰`{0:u}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009年-06-15 20:45:30Z |  |`U`|國際完整日期/時間模式。 |格式︰`{0:U}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 15，星期一下午 8:45:30 |  |`Y` or `y`|年月模式。 |格式︰`{0:Y}`<br /><br /> 2009 年 6 月 15 日下午 1:45:30-> 2009 年 6 月 |      如需詳細資訊，以及顯示其他文化特性值的格式設定的範例，請參閱[標準日期和時間格式字串](~/add/includes/ajax-current-ext-md.md)。 您也可以建立自訂日期和時間格式字串。 如需詳細資訊，請參閱[自訂日期和時間格式字串](~/add/includes/ajax-current-ext-md.md)。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "指定的欄位值的顯示格式的格式化字串。 預設為空字串 (&quot;&quot;)，表示未將特殊格式未套用至該欄位值。"
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "填滿指定&lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;物件指定的值填入<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>物件。"
  remarks: "ExtractValuesFromCell 方法可作為便利的方式來擷取欄位的值從指定<xref:System.Web.UI.WebControls.TableCell>物件存放至<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] > 主要由控制項開發人員使用這個方法。       這個方法沒有傳回值。 相反地，將欄位值傳回透過傳<xref:System.Collections.IDictionary?displayProperty=fullName>物件傳入的`dictionary`參數。</xref:System.Collections.IDictionary?displayProperty=fullName> 在呼叫方法之後，逐一查看<xref:System.Collections.IDictionary?displayProperty=fullName>物件來存取的欄位值。</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > 如果<xref:System.Web.UI.WebControls.TableCell>物件包含唯讀欄位，則必須傳入`true`如`includeReadOnly`參數來包含這些值。</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;用來儲存指定的儲存格的值。"
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ，其中包含要擷取的值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要包含值的唯讀欄位。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將指定的欄位值中的資料格的格式化<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "FormatDataValue 方法是 helper 方法，用來轉換指定的格式欄位值<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>屬性。</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 如果欄位值是 null，值<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>會傳回屬性。</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] > 主要由控制項開發人員使用這個方法。"
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "要格式化的欄位值。"
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要編碼的值;否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.String
      description: "欄位值轉換成<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>所指定的格式"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取欄位的值轉譯時所使用的值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>設計工具中的物件。"
  remarks: "GetDesignTimeValue 方法是 helper 方法，用來判斷何值轉譯時，顯示欄位<xref:System.Web.UI.WebControls.BoundField>設計工具中的物件。</xref:System.Web.UI.WebControls.BoundField> 如果無法擷取實際資料從資料來源，在設計階段，改為顯示這個方法所傳回的值。      > [!NOTE] > 主要由控制項開發人員使用這個方法。"
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "要顯示欄位的值為設計工具中的值。"
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "擷取的繫結至欄位值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "GetValue 方法是 helper 方法用來決定欄位的值。 如果<xref:System.Web.UI.WebControls.BoundField>從設計工具中顯示物件，而且無法在設計階段決定的欄位值，傳回的值<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>方法會傳回而不是實際的欄位值。</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] > 主要由控制項開發人員使用這個方法。"
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "欄位值的容器。"
    return:
      type: System.Object
      description: "欄位的值繫結至<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定顯示控制項的標頭中的文字。"
  remarks: "使用 HeaderText 屬性來識別資料控制項中的欄位易記名稱。 HeaderText 屬性的最常見的應用程式會提供有意義的資料行名稱中的資料繫結欄位<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.DetailsView>控制項。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "資料控制項之標頭中顯示的文字。 預設值為空字串 (&quot;&quot;)。"
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出欄位值是否為 HTML 編碼才能顯示在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果欄位值經過 HTML 編碼，才能讓它們顯示在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件; 否則<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否文字，是由套用<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>屬性<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>值應該是 HTML 編碼顯示時。</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果文字應該是 HTML 編碼。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "Initialize 方法會呼叫資料控制項與其<xref:System.Web.UI.WebControls.BoundField>物件與其相關聯執行基本物件初始化的欄位之前的欄位加到資料列集合, 的執行個體。</xref:System.Web.UI.WebControls.BoundField> 資料控制項，例如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>呼叫<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>方法在其`CreateChildControls`方法，這類其他方法之前`CreateRow`呼叫以建立特定的資料列與資料。</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       呼叫這個方法，當您撰寫自訂資料繫結控制項所使用的<xref:System.Web.UI.WebControls.TableCell>物件來執行基本的初始設定<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> 實作這個方法，如果您<xref:System.Web.UI.WebControls.BoundField>-衍生型別需要的任何物件初始設定之前它所擴展,<xref:System.Web.UI.WebControls.TableCell>物件與資料或控制項中<xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>方法。</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果支援排序。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    - id: control
      type: System.Web.UI.Control
      description: "資料控制項擁有<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>在所有情況下。"
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到指定的資料列狀態的物件。"
  remarks: "實作 InitializeCell 方法<xref:System.Web.UI.WebControls.BoundField>-衍生型別加入文字和控制項加入<xref:System.Web.UI.WebControls.TableCell>利用資料表來顯示使用者介面 (UI) 控制項的物件。</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> 這些資料控制項建立完整的資料表結構的資料列逐列當控制項的`CreateChildControls`方法呼叫。 InitializeCell 方法由呼叫`InitializeRow`資料控制項，例如<xref:System.Web.UI.WebControls.DetailsView>和<xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>方法       呼叫這個方法，當您撰寫自訂資料繫結控制項所使用的<xref:System.Web.UI.WebControls.TableCell>物件初始化的資料格的資料或控制項的資料表結構。</xref:System.Web.UI.WebControls.TableCell> 實作這個方法，當您撰寫<xref:System.Web.UI.WebControls.BoundField>-衍生之類別的</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>初始化。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref>值。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
    - id: rowIndex
      type: System.Int32
      description: "資料列的以零為起始的索引。"
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初始化指定<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref>到指定的資料列狀態的物件。"
  remarks: "InitializeDataCell 方法是 helper 方法，用來初始化中的資料格<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>初始化。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "其中一個<xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref>值。"
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "還原先前儲存的檢視狀態資訊，此欄位。"
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "表示要還原的控制項狀態。"
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定欄位的值為 null 時顯示的欄位標題。"
  remarks: "有時欄位的值會在資料來源中儲存為 null。 您可以指定自訂標題顯示的設定 NullDisplayText 屬性有 null 值的欄位。 如果未設定這個屬性，null 的欄位值顯示為空字串 (&quot;&quot;)。 時記錄是正在更新或插入資料繫結控制項中，如果使用者輸入值所指定欄位在資料繫結控制項中，這個屬性 （而不是空字串），值會自動轉換為 null 的資料來源中。      > [!NOTE] > 將空字串欄位值為 null 值，設定<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>屬性`true`。</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "欄位的值為 null 時顯示的欄位標題。 預設為空字串 (&quot;&quot;)，表示這個屬性未設定。"
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "將繫結至欄位的值<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "<xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>方法是 helper 方法，用來繫結中的對應資料格的資料來源中的欄位值<xref:System.Web.UI.WebControls.BoundField>物件。</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "事件來源。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>包含事件資料。</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "控制項要繫結的欄位值不是<xref href=&quot;System.Web.UI.WebControls.TextBox&quot;></xref>或<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，指出是否可以在編輯模式下修改欄位的值。"
  remarks: "若要避免中顯示的值使用 ReadOnly 屬性<xref:System.Web.UI.WebControls.BoundField>物件遭到修改。</xref:System.Web.UI.WebControls.BoundField> 當資料繫結控制項處於編輯模式時，則是唯讀的欄位會顯示為純文字，不含任何編輯控制項。      > [!NOTE] > ReadOnly 屬性僅適用於編輯模式。 若要防止欄位出現在插入模式下，使用<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>屬性。</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>若要防止欄位的值中編輯模式中，修改否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。 預設值是<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得值，指出是否支援 HTML 編碼的<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>物件。"
  remarks: "SupportsHtmlEncode 屬性是協助程式屬性所使用之<xref:System.Web.UI.WebControls.BoundField>類別和衍生的類別，以判斷是否支援 HTML 編碼的類別。</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "一律傳回<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> HTML 編碼，來支援<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "代表&quot;this&quot;運算式。"
  remarks: "這個欄位用來指出<xref:System.Web.UI.WebControls.BoundField>物件應該繫結的目標資料來源本身，而不是資料來源的欄位。</xref:System.Web.UI.WebControls.BoundField> 在此情況下，物件的`ToString`欄位中，將會顯示值。       主要由控制項開發人員使用此欄位。"
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "即將加入。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得或設定值，決定控制項是否會或未驗證用戶端輸入。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "決定控制項是否在或未驗證用戶端輸入值。 預設值是<xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>。"
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "判斷控制項是否包含在<xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>支援回呼的物件。"
  remarks: "ValidateSupportsCallback 方法是 helper 方法，用來判斷控制項是否包含在<xref:System.Web.UI.WebControls.BoundField>物件支援回呼。</xref:System.Web.UI.WebControls.BoundField> 這個方法已經作為空方法 （不包含任何程式碼的方法），表示支援回呼實作。      > [!NOTE] > 主要由控制項開發人員使用這個方法。"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
