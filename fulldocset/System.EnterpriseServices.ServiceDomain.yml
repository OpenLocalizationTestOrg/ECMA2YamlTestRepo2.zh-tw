### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServiceDomain
  id: ServiceDomain
  children:
  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.ServiceDomain.Leave
  langs:
  - csharp
  name: ServiceDomain
  nameWithType: ServiceDomain
  fullName: System.EnterpriseServices.ServiceDomain
  type: Class
  summary: "可讓程式碼片段所識別<> *> 和<> *> 它自己的內容中執行，就好像在內容中建立的物件呼叫方法的行為。 這個類別無法被繼承。"
  remarks: "<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>方法會用於成對圍繞接著可以使用 COM + 服務的程式碼。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 程式碼之間呼叫括住<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>會在它自己的內容中執行，而且行為表現就好像在內容中建立的物件呼叫的方法。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>配對可以巢狀。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 會決定使用者必須確認呼叫配對的平衡，讓<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>符合<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</xref:System.EnterpriseServices.ServiceDomain.Enter%2A>先前呼叫</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>的每個呼叫"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ServiceDomain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  id: Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "建立所指定的內容<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>物件，並將其發送至內容堆疊變成目前的內容。"
  remarks: "輸入第一次建立設定為所指定的內容<xref:System.EnterpriseServices.ServiceConfig>物件傳遞為`cfg`參數。</xref:System.EnterpriseServices.ServiceConfig> 如同方法呼叫已經發生，則會觸發用戶端和伺服器端的原則。 新的內容再推入至內容堆疊，並成為目前的內容。 由於其有效率的設計並沒有執行緒封送處理與此有關，因為使用 Enter 和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>牽涉到大幅減少額外負荷相較於對等的方法呼叫。</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "A <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> ，其中包含要在括住的程式碼內使用服務的組態資訊。"
  overload: System.EnterpriseServices.ServiceDomain.Enter*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>不支援目前的平台。"
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Leave
  id: Leave
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "觸發伺服器，然後用戶端原則，如同方法呼叫所傳回。 然後從內容堆疊和執行時的內容推出目前內容<xref:System.EnterpriseServices.ServiceDomain.Enter*>呼叫會變成目前的內容。</xref:System.EnterpriseServices.ServiceDomain.Enter*>"
  syntax:
    content: public static System.EnterpriseServices.TransactionStatus Leave ();
    parameters: []
    return:
      type: System.EnterpriseServices.TransactionStatus
      description: "其中一個<xref href=&quot;System.EnterpriseServices.TransactionStatus&quot;></xref>值。"
  overload: System.EnterpriseServices.ServiceDomain.Leave*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>不支援目前的平台。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.ServiceDomain.Leave
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
- uid: System.EnterpriseServices.TransactionStatus
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.EnterpriseServices.TransactionStatus
- uid: System.EnterpriseServices.ServiceDomain.Enter*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter
  nameWithType: ServiceDomain.Enter
- uid: System.EnterpriseServices.ServiceDomain.Leave*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave
  nameWithType: ServiceDomain.Leave
