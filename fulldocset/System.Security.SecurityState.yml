### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityState
  id: SecurityState
  children:
  - System.Security.SecurityState.#ctor
  - System.Security.SecurityState.EnsureState
  - System.Security.SecurityState.IsStateAvailable
  langs:
  - csharp
  name: SecurityState
  nameWithType: SecurityState
  fullName: System.Security.SecurityState
  type: Class
  summary: "提供基底類別的要求中的動作的安全性狀態<xref href=&quot;System.AppDomainManager&quot;></xref>物件。"
  remarks: "您必須繼承自這個類別提供類別，其中包含此屬性，指定要執行安全性敏感動作。 從衍生類別具現化 SecurityState 物件傳遞至<xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>方法來判斷主機是否允許執行該動作。</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> 預設實作<xref:System.AppDomainManager.CheckSecuritySettings%2A>方法一律會傳回`false`。</xref:System.AppDomainManager.CheckSecuritySettings%2A>  必須覆寫方法，來偵測所允許的動作。       例如，如果您想要存取網路攝影機程式庫程式碼中的，您會建立`WebcamSecurityState`物件並呼叫<xref:System.Security.SecurityState.EnsureState%2A>方法來判斷主機是否可讓 Web 相機的存取權，如下列範例所示。</xref:System.Security.SecurityState.EnsureState%2A>  (您可以找到的程式碼`WebcamSecurityState`< 範例 > 一節。)    ```   WebcamSecurityState securityState = new WebcamSecurityState(&quot;Safe access to Webcam&quot;, WebcamSecurityOptions.SafeAccess);   try   {      securityState.EnsureState();      // Allocate memory.      }   catch (ApplicationException e)   {       // Handle any exception that is thrown.       System.Diagnostics.Debug.WriteLine(e.Message);   }   ```若要處理呼叫<xref:System.AppDomainManager>必須察覺的`WebcamSecurityState`的覆寫透過<xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>方法，如下列範例所示。</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> </xref:System.AppDomainManager>      ```   [SecurityCritical]   public override bool CheckSecuritySettings(System.Security.SecurityState securityState)   {      switch (securityState.ToString())      {         case &quot;WebcamSecurityState&quot;:         {             if ((securityState as WebcamSecurityState).Options == WebcamSecurityOptions.SafeAccess)                 return PromptUser((securityState as WebcamSecurityState).Description);              return false;         }      }         return false;   }   private bool PromptUser(string text)   {      // Replace the OpenFileDialog with a custom user prompt.      OpenFileDialog o = new OpenFileDialog();      o.Title = text;      if (o.ShowDialog() == DialogResult.OK)         return true;      else         return false;   }      ```"
  example:
  - "The following example shows how to override the SecurityState class.  \n  \n```  \n[SecurityCritical]  \npublic enum WebcamSecurityOptions  \n    {  \n        SafeAccess,  \n        FullAccess  \n    }  \n[SecurityCritical]  \npublic class WebcamSecurityState : SecurityState  \n{  \n    public WebcamSecurityState(string description, WebcamSecurityOptions options)  \n    {  \n        Options = options;  \n        Description = description;  \n    }  \n    public WebcamSecurityOptions Options { get; set; }  \n    public string Description { get; set; }  \n    public override void EnsureState()  \n    {  \n       if (!IsStateAvailable())  \n           throw new ApplicationException(\"WebcamSecurityState not available\");  \n    }  \n }  \n  \n```"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SecurityState
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityState.#ctor
  id: '#ctor'
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "初始化的新執行個體<xref href=&quot;System.Security.SecurityState&quot;></xref>類別。"
  syntax:
    content: protected SecurityState ();
    parameters: []
  overload: System.Security.SecurityState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.EnsureState
  id: EnsureState
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "在衍生類別中覆寫，可確保所表示的狀態<xref href=&quot;System.Security.SecurityState&quot;></xref>在主機上使用。"
  remarks: "這個方法的實作應該類似下列的範例。      ```   public override void EnsureState()   {       if (!IsStateAvailable())             throw new ApplicationException(&quot;WebcamSecurityState not available&quot;);   }      ```"
  syntax:
    content: public abstract void EnsureState ();
    parameters: []
  overload: System.Security.SecurityState.EnsureState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.IsStateAvailable
  id: IsStateAvailable
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "取得值，指出是否針對這項實作狀態<xref href=&quot;System.Security.SecurityState&quot;></xref>類別是在目前主機上使用。"
  remarks: "IsStateAvailable 呼叫<xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>方法，以判斷是否在主機上使用這個類別所表示的狀態。</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>       請參閱<xref:System.Security.SecurityState>類別的實作範例<xref:System.AppDomainManager.CheckSecuritySettings%2A>方法。</xref:System.AppDomainManager.CheckSecuritySettings%2A> </xref:System.Security.SecurityState>"
  syntax:
    content: public bool IsStateAvailable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果狀態為可用。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Security.SecurityState.IsStateAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityState.#ctor
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
- uid: System.Security.SecurityState.EnsureState
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
- uid: System.Security.SecurityState.IsStateAvailable
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityState.#ctor*
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState
  nameWithType: SecurityState.SecurityState
- uid: System.Security.SecurityState.EnsureState*
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState
  nameWithType: SecurityState.EnsureState
- uid: System.Security.SecurityState.IsStateAvailable*
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable
  nameWithType: SecurityState.IsStateAvailable
