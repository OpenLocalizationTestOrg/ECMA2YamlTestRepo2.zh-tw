### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "代表存取控制和稽核安全性管道。"
  remarks: "PipeSecurity 類別指定管道和如何稽核嘗試存取的存取權限。  這個類別會表示為一組規則的存取和稽核 」 權限。 每個存取規則由<xref:System.IO.Pipes.PipeAccessRule>物件，而每個稽核規則由<xref:System.IO.Pipes.PipeAuditRule>物件。</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       PipeSecurity 類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。 在此系統中，每個管道有判別存取控制清單 (DACL)，以控制存取管道和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。  <xref:System.IO.Pipes.PipeAccessRule>和<xref:System.IO.Pipes.PipeAuditRule>類別是由 Dacl 與 Sacl 組成存取控制項目 (Ace) 的抽象概念。</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       PipeSecurity 類別隱藏許多細節，Dacl 的 Sacl。您不必擔心 ACE 排序或 null 的 DACL。       使用 PipeSecurity 類別來擷取、 新增或變更代表 DACL 和 SACL 的管道的存取規則。       保存新的或變更存取或稽核規則至管道，請使用<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>方法。</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>方法。</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>類別。"
  remarks: "這個建構函式會建立空<xref:System.IO.Pipes.PipeSecurity>不以現有的管道為基礎的物件。</xref:System.IO.Pipes.PipeSecurity> 您可以填入具有存取控制資訊的物件，並將它套用至管道。       您可以新增存取或稽核規則<xref:System.IO.Pipes.PipeSecurity>物件使用<xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>方法。</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> </xref:System.IO.Pipes.PipeSecurity> 您可以移除存取權或稽核規則使用<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法。</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>       保存新的或變更存取或稽核規則至管道，請使用<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>方法。</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>方法。</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得<xref:System.Type>目前相關聯之安全物件的<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。</xref:System.Type>"
  remarks: "類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>屬性，並傳回它們以表示的存取權限的類型。</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "目前與相關聯之安全物件的型別<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.AccessRule&quot;></xref>類別，以指定的值。"
  remarks: "若要建立存取控制規則的建議的方式是使用<xref:System.IO.Pipes.PipeAccessRule>類別</xref:System.IO.Pipes.PipeAccessRule>的建構函式"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "若要套用存取規則的識別。 它必須是可以轉換成物件<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>物件。"
    - id: accessMask
      type: System.Int32
      description: "此規則的存取遮罩。 存取遮罩是 32 位元集合的匿名位元，其意義由個別的積分器"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個規則繼承自父容器。否則為 false。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定存取規則的繼承屬性。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定是否自動傳播繼承的存取規則。 如果忽略傳播旗標`inheritanceFlags`設<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "指定有效的存取控制類型。"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>這個方法會建立的物件。"
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code><code>inheritanceFlags</code>， <code>propagationFlags</code>，或<code>type</code>指定無效的值。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或-<code>accessMask</code>為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>既不是類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>也具有型別，例如<xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>，可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得<xref:System.Type>物件與目前之存取規則相關聯的<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。</xref:System.Type>"
  remarks: "類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>屬性，並傳回它們以表示的存取權限的類型。</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "目前的存取規則相關聯的物件型別<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "將存取規則新增至判別存取控制清單 (DACL) 與目前相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: 'AddAccessRule 方法會將新的規則加入至<xref:System.IO.Pipes.PipeSecurity>物件包含的規則清單。如果指定的規則已存在的存取控制清單 (ACL)，請 AddAccessRule 方法仍會加入規則，有一個例外狀況︰<xref:System.IO.Pipes.PipeAccessRule>使用建立的物件<xref:System.Security.AccessControl.AccessControlType>值會取代使用建立的物件<xref:System.Security.AccessControl.AccessControlType>值。</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.IO.Pipes.PipeSecurity>'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "要加入的存取規則。"
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新增至系統存取控制清單 (SACL) 與目前相關聯的稽核規則<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "方法會將新的稽核規則的清單加入 AddAuditRule 規則<xref:System.IO.Pipes.PipeSecurity>物件包含。</xref:System.IO.Pipes.PipeSecurity>       如果稽核規則已經存在指定的規則，AddAuditRule 方法仍會將規則。"
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "要加入的稽核規則。"
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初始化的新執行個體<xref href=&quot;System.Security.AccessControl.AuditRule&quot;></xref>類別，以指定的值。"
  remarks: "若要建立的稽核規則的建議的方式是使用<xref:System.IO.Pipes.PipeAuditRule>類別</xref:System.IO.Pipes.PipeAuditRule>的建構函式"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "若要套用存取規則的識別。 它必須是可以轉換成物件<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>物件。"
    - id: accessMask
      type: System.Int32
      description: "此規則的存取遮罩。 存取遮罩是 32 位元集合的匿名位元，其意義由個別的積分器"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果這個規則繼承自父容器。否則為 false。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>值，指定存取規則的繼承屬性。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref>值，指定是否自動傳播繼承的存取規則。 如果忽略傳播旗標`inheritanceFlags`設<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "其中一個<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref>值，指定有效的存取控制類型。"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>這個方法會建立的物件。"
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -或- <code> accessMask </code>屬性為零。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>屬性的型別既不是<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>也具有型別，例如<xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>，可以轉換為類型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得<xref:System.Type>物件與目前之稽核規則相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。</xref:System.Type>"
  remarks: "類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>屬性，並傳回它們以表示的存取權限的類型。</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "與目前之稽核規則相關聯的物件型別<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "目前與相關聯的安全性描述元的指定的區段儲存<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>到永久儲存體的物件。"
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "安全性實體的控制代碼物件的目前<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件相關聯。"
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "目前與相關聯的安全性描述元的指定的區段儲存<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>到永久儲存體的物件。"
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "物件的安全性實體名稱目前<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件相關聯。"
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除從判別存取控制清單 (DACL) 與目前相關聯的存取規則<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "RemoveAccessRule 方法中移除所有符合<xref:System.Security.AccessControl.AccessControlType>存取規則或比對所有<xref:System.Security.AccessControl.AccessControlType>從目前的存取規則<xref:System.IO.Pipes.PipeSecurity>物件。</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> 例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType>存取使用者的規則，藉由傳遞<xref:System.IO.Pipes.PipeAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.IO.Pipes.PipeAccessRights>值和使用者帳戶。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> RemoveAccessRule 方法則會移除任何指定的拒絕規則<xref:System.IO.Pipes.PipeAccessRights>值或<xref:System.IO.Pipes.PipeAccessRights>值。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "要移除的存取規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果作業成功。否則， <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除指定的存取規則的判別存取控制清單 (DACL) 與目前相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除所有符合<xref:System.Security.AccessControl.AccessControlType>存取規則或比對所有<xref:System.Security.AccessControl.AccessControlType>從目前的存取規則<xref:System.IO.Pipes.PipeSecurity>物件。</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType>存取使用者的規則，藉由傳遞<xref:System.IO.Pipes.PipeAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.IO.Pipes.PipeAccessRights>值和使用者帳戶。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除任何指定的拒絕規則<xref:System.IO.Pipes.PipeAccessRights>值或<xref:System.IO.Pipes.PipeAccessRights>值。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "要移除的存取規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除從系統存取控制清單 (SACL) 與目前相關聯的稽核規則<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "RemoveAuditRule 方法中移除所有符合<xref:System.Security.AccessControl.AccessControlType>稽核規則或比對所有<xref:System.Security.AccessControl.AccessControlType>稽核規則從目前<xref:System.IO.Pipes.PipeSecurity>物件。</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType>稽核規則的使用者藉由傳遞<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值，<xref:System.Security.AccessControl.AuditFlags>值和使用者帳戶。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，則 RemoveAuditRule 方法會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags>值或<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "要移除的稽核規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>如果稽核規則已移除;否則，<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除具有相同的安全性識別碼所指定的稽核規則從系統存取控制清單 (SACL) 與目前相關聯的所有稽核規則<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "RemoveAuditRuleAll 方法中移除指定之使用者的所有稽核規則。  它會忽略中的所有值<xref:System.IO.Pipes.PipeAuditRule>物件以外的使用者帳戶。</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "要移除的稽核規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除指定的稽核規則從系統存取控制清單 (SACL) 與目前相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "RemoveAuditRuleSpecific 方法中移除指定的比對<xref:System.Security.AccessControl.AccessControlType>稽核規則，或指定的比對<xref:System.Security.AccessControl.AccessControlType>從目前的稽核規則<xref:System.IO.Pipes.PipeSecurity>物件。</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  例如，您可以使用這個方法，若要移除指定<xref:System.Security.AccessControl.AccessControlType>藉由傳遞使用者的稽核規則<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType>值<xref:System.Security.AccessControl.AuditFlags>值和使用者帳戶。</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  當您這樣做時，RemoveAuditRuleSpecific 方法移除僅拒絕規則，以指定<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>  它不會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags>值。</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "要移除的稽核規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "移除所有存取規則的判別存取控制清單 (DACL) 與目前相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件，並將指定的存取規則。"
  remarks: "ResetAccessRule 方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則`rule`參數。  例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights>值和 ResetAccessRule 方法尋找相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則就會覆寫。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  如果此 ResetAccessRule 方法會尋找完全相同的 ACL 規則指定<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則也會覆寫。</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "要加入的存取規則。"
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "設定存取規則的判別存取控制清單 (DACL) 與目前相關聯<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "SetAccessRule 方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則<xref:System.IO.Pipes.PipeAccessRights>值`rule`參數。</xref:System.IO.Pipes.PipeAccessRights>  例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights>值和 SetAccessRule 方法尋找相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則就會覆寫。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  如果此 SetAccessRule 方法會尋找完全相同的 ACL 規則指定<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則就不會覆寫。</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "要設定的規則。"
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "在系統存取控制清單 (SACL) 相關聯的目前設定的稽核規則<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>物件。"
  remarks: "SetAuditRule 方法新增指定的稽核規則，或覆寫比對任何相同的稽核規則<xref:System.IO.Pipes.PipeAccessRights>值`rule`參數。</xref:System.IO.Pipes.PipeAccessRights>  例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights>值和 SetAuditRule 方法會尋找指定的完全相同的稽核規則<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則就會覆寫。</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  如果 SetAuditRule 方法所找到的相同的稽核規則指定<xref:System.IO.Pipes.PipeAccessRights>值完全相同的規則就不會覆寫。</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "要設定的規則。"
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
